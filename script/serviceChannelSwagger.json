{"swagger":"2.0","info":{"version":"3","title":"ServiceChannel API - v.3","description":"The ServiceChannel API is a RESTful and stateless API. It accepts standard HTTP verbs and supports OAuth 2.0 for authorizing requests.\r\n    Our API returns common HTTP status codes as well as JSON encapsulated data.\r\n    See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/) for the intro to ServiceChannel API.<br>\r\n    <h3>Authentication and Authorization</h3>You should have a ServiceChannel account, register your application, and obtain `access_token` to integrate with our API.\r\n    See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/) for more information.\r\n    To use this API playground, click **Authorize** and sign in to ServiceChannel.<br>\r\n    <h3>Environment</h3> All calls in this API Reference point to the **SB2 environment**.\r\n    See [Environments](https://developer.servicechannel.com/basics/general/environments/) for more information.<br>\r\n    <h3>API Version</h3>The current stable version of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix that should be present.\r\n    When you omit the version prefix, calls point to the minimum supported version of the API.\r\n    We recommend you to always specify the API version to avoid possible errors."},"host":"sb2api.servicechannel.com/v3","schemes":["https"],"paths":{"/adapter/workorders":{"post":{"tags":["Adapter"],"summary":"Create a new work order","operationId":"POSTv3_adapter_workorders","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"message","in":"body","description":"Message envelope containing a body and describes an event type and the body version.\r\n            Expects EventType WorkOrderCreated","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/adapter/updateworkorders":{"post":{"tags":["Adapter"],"summary":"Update work order","operationId":"POSTv3_adapter_updateworkorders","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"message","in":"body","description":"Message envelope containing a body and describes an event type and the body version\r\n            <br />Expect the Object of type **ServiceChannel.Notifications.Objects.WorkOrder** for the following EventType values:\r\n             • **WorkOrderStatusChanged**.\r\n             • **RefrigerantWasUsedChanged**.\r\n             • **WorkOrderCertifiedTechnicianAssigned**.\r\n             • **WorkOrderAttachmentAdded**.\r\n             • **WorkOrderTradeChanged**.\r\n             • **WorkOrderIssueChoiceChanged**.\r\n             • **WorkOrderNteChanged**.\r\n             • **WorkOrderScheduledDateChanged**.\r\n             • **WorkOrderPriorityChanged**.\r\n             • **WorkOrderCategoryChanged**.\r\n             • **WorkOrderDescriptionChanged**.\r\n             • **WorkOrderAssetAttached**.\r\n             • **WorkOrderAssetDetached**.\r\n             • **WorkOrderAssetValidated**.\r\n             • **WorkOrderRootCauseCodeUpdated**.\r\n             • **WorkOrderResolutionCodeUpdated**.\r\n             • **WorkOrderResolutionCreated**.\r\n             • **WorkOrderResolutionUpdated**.\r\n             • **WorkOrderLabelAdded**.\r\n             • **WorkOrderLabelDeleted**.\r\n             • **WorkOrderNoteAdded**.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/adapter/checkInOutworkorders":{"post":{"tags":["Adapter"],"summary":"CheckIn/checkOut of work order","operationId":"POSTv3_adapter_checkInOutworkorders","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"message","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrderCheckInOut]"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/adapter/providerAssignments":{"post":{"tags":["Adapter"],"summary":"Assign provider","operationId":"POSTv3_adapter_providerAssignments","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"message","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.ProviderTradeAssignmentNotificationObject"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/adapter/updatelocationnotes":{"post":{"tags":["Adapter"],"summary":"Update location notes","operationId":"POSTv3_adapter_updatelocationnotes","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"message","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.LocationNote.LocationNotesNotificationObject"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/adapter/UpdateProposalStatus":{"post":{"tags":["Adapter"],"summary":"Update proposal status","operationId":"POSTv3_adapter_UpdateProposalStatus","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"message","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.LocationNote.ProposalNotificationObject"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Broker.Models.Processing.ProposalResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/locations/{locationId}/businesshours":{"get":{"tags":["AfterHours"],"summary":"Retrieve Business Hours","description":"Returns opening and closing hours from Monday to Sunday for the specified location.","operationId":"GETv3_locations_{locationId}_businesshours","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Unique identifier of the subscriber’s location you want to retrieve business hours for.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Business hours are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AfterHours.BusinessHoursApiResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            601 — Location is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"},"post":{"tags":["AfterHours"],"summary":"Update business hours","description":"Modifies the existing business hours for the specified location.\r\n            <br />Send this request [GET /locations/{locationId}/businesshours](https://developer.servicechannel.com/swagger/ui/index?version=3#/AfterHours/GETv3_locations__locationId__businesshours) to get the location business hours.\r\n            <br />Learn [how to manage business hours](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/683409418/Managing+Business+Hours+and+Holidays+for+a+Location) in ServiceChannel University.\r\n            <br />**Example Request**\r\n            \r\n                POST / locations/{locationId}/businesshours\r\n                {\r\n                  \"businessHours\": [\r\n                    {\r\n                      \"DayOfWeek\": \"Monday\",\r\n                      \"OpenTime\": \"10:15 AM\",\r\n                      \"CloseTime\": \"06:00 PM\",\r\n                      \"ClosedAllDay\": false\r\n                    }\r\n                }","operationId":"POSTv3_locations_{locationId}_businesshours","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Unique identifier of the subscriber’s location you want to change business hours for.","required":true,"type":"integer","format":"int32"},{"name":"businessHoursModel","in":"body","description":"Request model to update business hours.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AfterHours.UpdateLocationBusinessHoursApiModelRequest"}}],"responses":{"200":{"description":"Business hours are updated for the specified location."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            <br/> 613 — Incorrect format of the Open Time or Close Time. Valid format: HH:mm or hh:mm tt (for example, 23:59 or 11:59 PM).\r\n            <br/> 614 — Business Hours should not overlap between days of the week\r\n            <br/> 615 — Incorrect format of the day of the week. Valid values: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday.\r\n            <br/> 616 — Duplicate 'Day of the Week' value;\r\n            <br/> 617 — Business Hours are not set for the location. For the initial setup, configure Business Hours for each day of the week.\r\n            <br/> 618 — Open Time or Close Time cannot be empty for a specific day of the week\r\n            <br/> 628 — Incorrect format of the `Close All Day` value. Valid values: true, false.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            <br/> 504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            <br/> 601 — Location is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/locations/{locationId}/holidays":{"get":{"tags":["AfterHours"],"summary":"Retrieve location holidays","description":"Returns the details of each holiday for the specified location.","operationId":"GETv3_locations_{locationId}_holidays","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Unique identifier of the subscriber’s location you want to retrieve holidays for.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Location holidays are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AfterHours.HolidaysApiResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            <br/> 601 — Location is not found;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            <br/> 504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"},"post":{"tags":["AfterHours"],"summary":"Add a holiday","description":"Adds a holiday to the specified location. \r\n            <br />Send this request [GET /locations/{locationId}/holidays](https://developer.servicechannel.com/swagger/ui/index?version=3#/AfterHours/GETv3_locations__locationId__holidays) to get the location holidays.\r\n            <br />Learn [how to manage holidays for a location](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/683409418/Managing+Business+Hours+and+Holidays+for+a+Location) in ServiceChannel University.\r\n            <br />**Example Request**\r\n            \r\n                POST /locations/{locationId}/holidays\r\n                {\r\n                 \"HolidayName\": \"Happy Weekend\",\r\n                 \"OpenTime\": \"10:00 AM\",\r\n                 \"CloseTime\": \"06:00 PM\",\r\n                 \"ClosedAllDay\": false,\r\n                 \"Frequency\": \"Yearly\",\r\n                 \"StartDate\": \"2021-07-03T00:10:00.308Z\",\r\n                 \"RepeatEvery\": \"1\",\r\n                 \"RepeatBy\": \"DayOfWeek\",\r\n                 \"RepeatOnDays\": [\r\n                   \"Saturday\", \"Sunday\"\r\n                 ],\r\n                 \"RepeatOnMonths\": [\r\n                   “June”, \"July\", \"August\"\r\n                 ]\r\n                }","operationId":"POSTv3_locations_{locationId}_holidays","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Unique identifier of the subscriber’s location you want to add or update holidays for.","required":true,"type":"integer","format":"int32"},{"name":"holidayModel","in":"body","description":"Request to add a holiday to the specified location.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AfterHours.AddHolidayApiModelRequest"}}],"responses":{"200":{"description":"The holiday is added to the specified location.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AfterHours.HolidayIdsApiResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            <br/> 616 — Duplicate 'Day of the Week' value\r\n            <br/> 619 — Incorrect format of the `Repeat by status` value. Valid values: DayOfWeek, DayOfMonth.\r\n            <br/> 620 — List of days cannot be empty when submitting the `Weekly` frequency\r\n            <br/> 621 — List of months cannot be empty when submitting the `Yearly` frequency\r\n            <br/> 622 — Incorrect month format. Valid values: January, February, March, April, May, June, July, August, September, October, November, December.\r\n            <br/> 623 — The `Holiday Name` value cannot be empty. The maximum length is 100 characters.\r\n            <br/> 624 — Incorrect format of the 'Repeat every' value. The value should be a number between 1 and 60.\r\n            <br/> 625 — The same month is specified twice in the 'Month' value\r\n            <br/> 626 — Incorrect format of the frequency. Valid values: Weekly, Monthly, Yearly, Singular.\r\n            <br/> 627 — Start date cannot be an empty value\r\n            <br/> 628 — Incorrect format of the `Close All Day` value. Valid values: true, false.\r\n            <br/> 3502 — The holiday name is already in use. Please suggest another name.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            <br/> 504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            <br/> 601 — Location is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            <br/>501 — Object reference not set to an instance of an object;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"},"delete":{"tags":["AfterHours"],"summary":"Delete a holiday","description":"Permanently removes a holiday from the specified location.","operationId":"DELETEv3_locations_{locationId}_holidays?holidayName={holidayName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Unique identifier of the location to delete a holiday from.","required":true,"type":"integer","format":"int32"},{"name":"holidayName","in":"query","description":"The name of the holiday you want to remove.","required":true,"type":"string"}],"responses":{"200":{"description":"ID of the deleted holiday is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AfterHours.HolidayIdsApiResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            <br/> 601 — Location is not found\r\n            <br/> 623 — The `Holiday Name` value cannot be empty. The maximum length is 100 characters.\r\n            <br/> 629 — The holiday doesn't exist at the location","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            <br/> 504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            <br/> 601 — Location is not found\r\n            <br/> 601 — Invalid Location Id","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/alp/user/{userId}/data":{"get":{"tags":["Alp"],"summary":"User data","description":"Returns user data from cache if presents or from db if cache doesn't contain user data.","operationId":"GETv3_alp_user_{userId}_data","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userId","in":"path","description":"Numeric id of user.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Landing.UserLandingData"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters."},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            <br/> 501 - AlpCacheKeyFormat is empty or undefined in configuration;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/alp/subscriber/{subscriberId}/preference":{"post":{"tags":["Alp"],"operationId":"POSTv3_alp_subscriber_{subscriberId}_preference","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Landing.UpdateSubscriberLandingPreferenceRequest"}},{"name":"subscriberId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/announcements":{"get":{"tags":["Announcements"],"operationId":"GETv3_announcements","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Announcements.GetUserAnnouncementsResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - User info should not be null;\r\n            <br/>ProviderId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/announcements/{messageId}":{"put":{"tags":["Announcements"],"operationId":"PUTv3_announcements_{messageId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"messageId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"default":false,"type":"boolean"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - User info should not be null;\r\n            <br/>ProviderId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/ApplicationAccess":{"get":{"tags":["ApplicationAccess"],"summary":"Returns application access object","operationId":"GETv3_ApplicationAccess","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/assets/{assetId}":{"get":{"tags":["Assets"],"summary":"Get an asset","description":"Returns the details of the specified asset for the current subscriber.<br />\r\n            Send the [GET/ assets/locations/{locationId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/Assets/GETv3_assets_locations__locationId__trade__trade_) request to retrieve assets for a particular location.","operationId":"GETv3_assets_{assetId}?locationId={locationId}&storeId={storeId}&tagId={tagId}&trackingNumber={trackingNumber}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetId","in":"path","description":"Unique numeric asset identifier you want to get information of.","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"query","description":"Unique numeric location identifier. Should be paired with the `tagId` parameter to work correctly.","required":false,"type":"integer","format":"int32"},{"name":"storeId","in":"query","description":"Alphanumeric location identifier in the client’s system. Should be paired with the `tagId` parameter to work correctly.","required":false,"type":"string"},{"name":"tagId","in":"query","description":"Alphanumeric asset identifier assigned by the client. Should be paired with either `locationId` or `storeId` to work correctly.","required":false,"type":"string"},{"name":"trackingNumber","in":"query","description":"Unique ID of the work order. Use the parameter to get asset validation attributes: `AssetValidated`, `ValidationRequired`.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The details of the requested asset are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The request URI is incorrect, or the resource does not exist.\r\n            <br/>Error codes:\r\n            502 — Asset is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/AssociateAssetCode":{"post":{"tags":["Assets"],"summary":"Associate Asset Code","operationId":"POSTv3_assets_AssociateAssetCode","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Equipments.AssociateAssetRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/assets/searchassets":{"post":{"tags":["Assets"],"summary":"Search Assets","operationId":"POSTv3_assets_searchassets","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Equipments.SearchAssetRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/assets/assetsforreplacement":{"post":{"tags":["Assets"],"summary":"Get Assets For Replacement","operationId":"POSTv3_assets_assetsforreplacement","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.GetAssetsForReplacementRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/assets/assetcomponents":{"post":{"tags":["Assets"],"summary":"Get circuits and components","description":"Retrieves all circuits and components added to the specified parent assets.\r\n            <br />Learn more about [updating assets on work orders](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1484194012/Updating+Assets+on+Work+Orders) in ServiceChannel University.","operationId":"POSTv3_assets_assetcomponents","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request to get circuits and components for the specified parent assets.\r\n            <br />Request parameters:\r\n             • **ParentIds**. Add one or several asset IDs you want to get circuits and components for.\r\n             • **OnlyRefrigerantTrackingAssets**. Enter `true` to retrieve only circuits and components that contain refrigerant and F-gases.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Equipments.AssetComponentsRequest"}}],"responses":{"200":{"description":"The circuits and components for the specified parent assets are in the response."},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 — Object reference is not set to an instance of an object","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/getfilteredassets":{"post":{"tags":["Assets"],"summary":"Get Filtered Assets","operationId":"POSTv3_assets_getfilteredassets","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/assets/getfilteredassetsV1":{"post":{"tags":["Assets"],"summary":"Get Filtered Assets V1","operationId":"POSTv3_assets_getfilteredassetsV1?providerId={providerId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"The request to perform action with.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest"}},{"name":"providerId","in":"query","description":"The provider identifier. Required for sub-contractor request. [Required Special permissions]","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/assets/getfilteredassetleaks":{"post":{"tags":["Assets"],"summary":"Ge tFiltered Asset Leaks","operationId":"POSTv3_assets_getfilteredassetleaks","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/assets/getwoassettracking":{"post":{"tags":["Assets"],"summary":"Get Wo Asset Tracking","operationId":"POSTv3_assets_getwoassettracking?woId={woId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"woId","in":"query","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/assets/locations/{locationId}":{"get":{"tags":["Assets"],"summary":"Get assets","description":"Returns a list of assets with all details for the specified location. Enter the `trade` parameter to make your request more specific.\r\n             <br />\r\n             You can use the [GET/assets/{assetId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/Assets/GETv3_assets__assetId__locationId__locationId__storeId__storeId__tagId__tagId__trackingNumber__trackingNumber_) method to get the details of a particular asset.","operationId":"GETv3_assets_locations_{locationId}?trade={trade}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Unique numeric identifier of the location you want to retrieve assets details of.","required":true,"type":"integer","format":"int32"},{"name":"trade","in":"query","description":"Trade of an asset type the asset is assigned to, for example, *CARPENTRY* or *PLUMBING*.","required":false,"type":"string"}],"responses":{"200":{"description":"The assets for the specified location are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetsInfoResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The request URI is incorrect, or the resource does not exist.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/locationAssetsTree":{"post":{"tags":["Assets"],"operationId":"POSTv3_assets_locationAssetsTree?locationId={locationId}&trade={trade}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"trade","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetsResponseTreeNode"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — User info should not be null;\r\n            SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/getassetwohistory":{"post":{"tags":["Assets"],"summary":"Get Assets WorkOrders","description":"This method allows to get WorkOrder objects by Asset Ids.<br />","operationId":"POSTv3_assets_getassetwohistory?workOrdersCount={workOrdersCount}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetIds","in":"body","description":"","required":true,"schema":{"type":"array","items":{"format":"int32","type":"integer"}}},{"name":"workOrdersCount","in":"query","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"}}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — User info should not be null;\r\n            SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets":{"put":{"tags":["Assets"],"summary":"Update an asset","description":"Modifies the details of an existing asset.","operationId":"PUTv3_assets","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetRequest","in":"body","description":"Request model to update an asset.\r\n            <br />The following parameters are required in the request:\r\n             • **Id**: Unique numeric identification number of an asset you want to update.\r\n             • **Tag**: Alphanumeric asset identifier assigned by the client, aka **Tag ID**.\r\n             • **Manufacturer**: Company brand that produces an asset and exists in the system.\r\n             • **StoreId**: Alphanumeric identifier of the existing location.\r\n             • **Trade**: The line of work an asset is used for. For example, *ELECTRICAL*, *CARPENTRY*, *CCTV*.\r\n             • **Type**: Type of an asset. For example, *Refrigerator*, *Computer Monitor*.\r\n            <br />***Note***. The `Tag` and `Location` parameters should remain unchanged.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UpdateAssetRequest"}}],"responses":{"200":{"description":"The ID of the updated asset is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — No asset to update\r\n            502 — Asset is not found\r\n            503 — Unknown Brand name\r\n            503 — Request is empty or null\r\n            503 — Do not have rights for editing Asset\r\n            503 — Unknown Equipment type\r\n            503 — 'Uses Refrigerant' attribute can not be changed\r\n            503 — Asset location can not be changed: There are active PM services for this asset.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br>Error codes:\r\n            501 — Object reference is not set to an instance of an object.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"502":{"description":"The server, while acting as a gateway or proxy, received an invalid response from the upstream server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Assets"],"summary":"Add an asset","description":"Creates a new asset for the existing asset type. Since you need to specify which type an asset will belong to, you can:\r\n            <br /> • use the [GET /AssetTypes](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/GETv3_AssetTypes) method to get a list of asset types of the current provider.\r\n            <br /> • create a new asset type by sending the [POST /AssetTypes](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/POSTv3_AssetTypes) request.\r\n            <br />You can learn more about [adding and editing assets](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/573178120/Adding+and+Editing+Assets) in ServiceChannel University.","operationId":"POSTv3_assets","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetRequest","in":"body","description":"Request to create a new asset.\r\n            <br />Required parameters:\r\n            <br /> • **Tag** (aka **Tag ID**). Create an alphanumeric identifier for your asset, for example, AD-3421\r\n            <br /> • **Manufacturer**. Enter the brand name that exists in the system.\r\n            <br /> • **StoreId**. Specify the alphanumeric identifier of the existing location.\r\n            <br /> • **Trade**. Define the line of work an asset is used for, for example, *Electrical*, *Plumbing*, *Carpentry*.\r\n            <br /> • **Type**. Enter the type of an asset, for example, *Refrigerator*, *Computer Monitor*.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AddAssetRequest"}}],"responses":{"201":{"description":"The created asset ID is in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — Unknown Brand name\r\n            503 — Asset Tag ID is empty\r\n            503 — Request is empty or null\r\n            503 — No Store ID in the request\r\n            503 — Trade not found \r\n            503 — Unknown Equipment type\r\n            503 — Unknown Store ID\r\n            503 — Other Trade in Asset Type","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/AddUpdateAsset":{"post":{"tags":["Assets"],"summary":"Add Update Asset","operationId":"POSTv3_assets_AddUpdateAsset","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AddUpdateAssetRequest"}}],"responses":{"200":{"description":"The ID of the updated asset is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — No asset to update\r\n            502 — Asset is not found\r\n            503 — Unknown Brand name\r\n            503 — Request is empty or null\r\n            503 — Do not have rights for editing Asset\r\n            503 — Unknown Equipment type\r\n            503 — 'Uses Refrigerant' attribute can not be changed\r\n            503 — Asset location can not be changed: There are active PM services for this asset.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br>Error codes:\r\n            501 — Object reference is not set to an instance of an object.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"502":{"description":"The server, while acting as a gateway or proxy, received an invalid response from the upstream server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/assets/Activation":{"post":{"tags":["Assets"],"summary":"Activates or deactivates an asset depending on passed parameter.","operationId":"POSTv3_assets_Activation","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"A set of values to indicate asset and action.\r\n            IsActive \"true\" means that asset must be activated.\r\n            IsActive \"false\" means that asset must be inactivated.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Equipments.ActivateAssetRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Forbidden - the data could not be processed by security reasons.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/assets/workorders/{workorderId}/attach":{"put":{"tags":["Assets"],"summary":"Attach an asset","description":"Assigns the specified asset to a particular work order. You can attach multiple assets to one work order by sending several requests.\r\n            <br />***Note***: A work order and an asset you want to attach should belong to the same trade and location.\r\n            <br />***Note***: Assets added do not replace existing assets.\r\n            <br />Refer to ServiceChannel University to learn more about [updating assets on work orders](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1484194012/Updating+Assets+on+Work+Orders).","operationId":"PUTv3_assets_workorders_{workorderId}_attach","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Unique numeric identifier of the work order you want to assign an asset to. To retrieve IDs of work orders, use the [GET /workorders](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/GETv3_workorders_locationId__locationId__storeId__storeId_) method.","required":true,"type":"integer","format":"int32"},{"name":"attachAssetRequest","in":"body","description":"Request to assign the specified asset","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AttachAssetRequest"}}],"responses":{"200":{"description":"The ID of the asset attached to the work order is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — Asset is not found or Asset Location/Trade does not correspond to WO Location/Trade\r\n            502 — Work order is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes:\r\n            100 — Current Asset has already been assigned to the work order RecId: workorderId\r\n            100 — Work Order either has connection with a leak record or is a Leak Inspection.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 — Object reference is not set to an instance of an object","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/workorders/attachassets":{"put":{"tags":["Assets"],"summary":"Add assets","description":"Assigns several assets to the specified work order at a time. The *MultipleAssetsPerWorkOrder* FF should be enabled for the method to work properly.\r\n            <br />***Note***: Assets added before will remain attached to the work order along with the new ones.","operationId":"PUTv3_assets_workorders_attachassets","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request to add one or several assets to a particular work order.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest"}}],"responses":{"200":{"description":"The specified assets are attached to the work order.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — Asset is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/workorders/setupassets":{"put":{"tags":["Assets"],"summary":"Add and replace assets","description":"Assigns several assets to the specified work order at a time. The *MultipleAssetsPerWorkOrder* FF should be enabled for the method to work properly.\r\n            <br />***Note***. Existing assets will be replaced with the new ones.","operationId":"PUTv3_assets_workorders_setupassets","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request to add one or several assets to a particular work order.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest"}}],"responses":{"200":{"description":"The specified assets are attached to the work order.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — Asset is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/workrequest/setup":{"put":{"tags":["Assets"],"summary":"Setup assets to the work request","description":"*In limited availability phase.*\r\n            <br />Setup Assets to Work Request.","operationId":"PUTv3_assets_workrequest_setup","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"The work request identity and assets ids.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetsWorkRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            502 — Asset is not found;\r\n            Invalid Work Request Identifier;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/workrequest/remove":{"post":{"tags":["Assets"],"summary":"Remove specified assets from specified work request","description":"*In limited availability phase.*\r\n            <br />Remove Assets from Work Request.","operationId":"POSTv3_assets_workrequest_remove","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"The work request identity and assets ids.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.RemoveAssetsWorkRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — Request Data should not be null;\r\n            User info should not be null;            \r\n            Asset identity is absent;\r\n            Work Request identity is absent;\r\n            502 — No asset to update;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/workrequest/{workRequestId}":{"get":{"tags":["Assets"],"summary":"Setup assets to the specified work order","description":"*In limited availability phase.*\r\n            <br />Setup Assets to Work Order.","operationId":"GETv3_assets_workrequest_{workRequestId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — Request Data should not be null;\r\n            User info should not be null;            \r\n            Asset identity is absent;\r\n            Work Request identity is absent;\r\n            502 — No asset to update;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/workorders/removeassets":{"post":{"tags":["Assets"],"summary":"Remove specified assets from specified work order","description":"Remove Assets from Work Order.","operationId":"POSTv3_assets_workorders_removeassets","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"The work order identity and assets ids.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.RemoveAssetsFromWORequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — Request Data should not be null;\r\n            User info should not be null;\r\n            Asset identity is absent;\r\n            Work Order identity is absent;\r\n            502 — No asset to update;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/workorders/{workorderId}/detach":{"put":{"tags":["Assets"],"summary":"Remove assets","description":"Removes all assets assigned to the specified work order.","operationId":"PUTv3_assets_workorders_{workorderId}_detach","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Unique numeric identifier of the work order you want to remove assets from. To retrieve IDs of work orders, use the [GET /workorders](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/GETv3_workorders_locationId__locationId__storeId__storeId_) method.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The assets are successfully removed from the specified work order.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — Work order is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/{assetid}/assetwohistory":{"get":{"tags":["Assets"],"summary":"Get asset workorder history","operationId":"GETv3_assets_{assetid}_assetwohistory","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetid","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Equipments.AssetWorkHistory"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — User info should not be null;\r\n            SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/Brands":{"get":{"tags":["Assets"],"summary":"Get Brands","operationId":"GETv3_assets_Brands","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.Manufacturer"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — User info should not be null;\r\n            SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/v2/Brands":{"get":{"tags":["Assets"],"summary":"Get Brands (ver.2)","operationId":"GETv3_assets_v2_Brands?keyword={keyword}&startIndex={startIndex}&pageSize={pageSize}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"keyword","in":"query","description":"","required":false,"type":"string"},{"name":"startIndex","in":"query","description":"","required":false,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.ManufacturersResponce"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — User info should not be null;\r\n            SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/{brandName}/AddBrand":{"post":{"tags":["Assets"],"summary":"Add Brand","operationId":"POSTv3_assets_{brandName}_AddBrand","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"brandName","in":"path","description":"","required":true,"type":"string"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"format":"int32","type":"integer"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — User info should not be null;\r\n            SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/assetrepairstatus":{"get":{"tags":["Assets"],"summary":"Get Asset Repair Status By AssetId","operationId":"GETv3_assets_assetrepairstatus?assetId={assetId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetId","in":"query","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"enum":["InUse","OutForRepair","ReplacementRecommended","Repaired"],"type":"string"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — User info should not be null;\r\n            SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/assetstatushistory":{"get":{"tags":["Assets"],"summary":"Get Asset Status History By AssetId","operationId":"GETv3_assets_assetstatushistory?assetId={assetId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetId","in":"query","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetStatusHistoryResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — User info should not be null;\r\n            SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/updateassetrepairstatus":{"put":{"tags":["Assets"],"summary":"Update Asset Repair Status By AssetId","operationId":"PUTv3_assets_updateassetrepairstatus","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UpdateAssetRepairStatusRequest"}}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"default":false,"type":"boolean"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — User info should not be null;\r\n            SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/RecordScannedAsset":{"post":{"tags":["Assets"],"summary":"Records an audit record for the asset tag that was scanned","operationId":"POSTv3_assets_RecordScannedAsset","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"auditRequest","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord"}}],"responses":{"200":{"description":"Request succeeded","schema":{"default":false,"type":"boolean"}},"400":{"description":"Request did NOT succeed and the error information is in the response","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/HasAssetBeenValidated":{"post":{"tags":["Assets"],"summary":"Determines if the specified asset has had its tag validated or not","operationId":"POSTv3_assets_HasAssetBeenValidated","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"auditRequest","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord"}}],"responses":{"200":{"description":"Request succeeded","schema":{"default":false,"type":"boolean"}},"400":{"description":"Request did NOT succeed and the error information is in the response","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/GetAssetValidationInformation":{"post":{"tags":["Assets"],"summary":"Returns asset tag validation information for the specified list of assets","operationId":"POSTv3_assets_GetAssetValidationInformation","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"auditRequests","in":"body","description":"","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord"}}}],"responses":{"200":{"description":"Request succeeded","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord"}}},"400":{"description":"Request did NOT succeed and the error information is in the response","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/{subscriberId}/ValidationRules":{"get":{"tags":["Assets"],"summary":"Gets the asset tag validation settings for the specified subscriber.","operationId":"GETv3_assets_{subscriberId}_ValidationRules","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and response contains asset tag validation exception information","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Administration.AssetRules.AssetTagging"}},"400":{"description":"Request did NOT succeed and response contains error information","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/UnableToValidateReasons":{"get":{"tags":["Assets"],"summary":"Gets list of unable to validate reasons.","operationId":"GETv3_assets_UnableToValidateReasons","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Request succeeded and response contains list of unable to validate reasons","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReason"}},"400":{"description":"Request did NOT succeed and response contains error information","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Assets"],"summary":"Creates wo_UnableToValidateAssetHistory.","operationId":"POSTv3_assets_UnableToValidateReasons","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"model","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UnableToValidateAssetReasonRequest"}}],"responses":{"200":{"description":"Request succeeded","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UnableToValidateAssetReasonRequest"}},"400":{"description":"Request did NOT succeed and response contains error information","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/UnableToScanReasons":{"get":{"tags":["Assets"],"summary":"Gets list of unable to scan reasons.","operationId":"GETv3_assets_UnableToScanReasons?subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"Subscriber unique indentifier","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and response contains list of unable to scan reasons","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReason"}},"400":{"description":"Request did NOT succeed and response contains error information","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Assets"],"summary":"Creates wo_UnableToScanAssetHistory.","operationId":"POSTv3_assets_UnableToScanReasons","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"model","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UnableToScanAssetReasonRequest"}}],"responses":{"200":{"description":"Request succeeded","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UnableToScanAssetReasonRequest"}},"400":{"description":"Request did NOT succeed and response contains error information","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/UnableToAddReasons":{"get":{"tags":["Assets"],"summary":"Gets list of unable to add reasons.","operationId":"GETv3_assets_UnableToAddReasons","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Request succeeded and response contains list of unable to add reasons","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToAddReason"}},"400":{"description":"Request did NOT succeed and response contains error information","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Assets"],"summary":"Creates wo_UnableToAddAssetHistory.","operationId":"POSTv3_assets_UnableToAddReasons","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"model","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UnableToAddAssetReasonRequest"}}],"responses":{"200":{"description":"Request succeeded","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UnableToAddAssetReasonRequest"}},"400":{"description":"Request did NOT succeed and response contains error information","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/UnableToScanReasonsNotAttachedAsset":{"get":{"tags":["Assets"],"summary":"Gets list of unable to scan reasons not attached assets.","operationId":"GETv3_assets_UnableToScanReasonsNotAttachedAsset","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Request succeeded and response contains list of unable to scan reasons not attached assets","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReasonsNotAttachedAsset"}},"400":{"description":"Request did NOT succeed and response contains error information","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/UnableToValidateReasonsNotAttachedAsset":{"get":{"tags":["Assets"],"summary":"Gets list of unable to validate reasons not attached assets.","operationId":"GETv3_assets_UnableToValidateReasonsNotAttachedAsset","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Request succeeded and response contains list of unable to validate reasons not attached assets","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReasonsNotAttachedAsset"}},"400":{"description":"Request did NOT succeed and response contains error information","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/ValidationRulesForMultipleSubscribers":{"post":{"tags":["Assets"],"summary":"Gets the asset tag validation settings for multiple subscribers.","operationId":"POSTv3_assets_ValidationRulesForMultipleSubscribers","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"request","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Core.InternalRequests.Administration.GetAssetTagValidationRequest"}}],"responses":{"200":{"description":"Request succeeded and response contains asset tag validation exception information","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Administration.AssetRules.AssetTagging"}},"400":{"description":"Request did NOT succeed and response contains error information","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/GetAssetValidationHistoryByTrackingNumber":{"post":{"tags":["Assets"],"summary":"Returns asset tag validation information for the specified assets and the work order","operationId":"POSTv3_assets_GetAssetValidationHistoryByTrackingNumber","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetValidationHistoryRequestInternal"}}],"responses":{"200":{"description":"Request succeeded","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord"}}},"400":{"description":"Request did NOT succeed and the error information is in the response","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/updateAssetLocation":{"put":{"tags":["Assets"],"summary":"Update asset location","description":"Updates asset location","operationId":"PUTv3_assets_updateAssetLocation?assetId={assetId}&locationId={locationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetId","in":"query","description":"Asset update id","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"query","description":"New location id","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — Request Data should not be null;\r\n            User info should not be null;\r\n            SubscriberId is null;\r\n            Asset ID is absent;\r\n            502 — No asset or location to update;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/{trackingNumber}/IsValidationRequired":{"get":{"tags":["Assets"],"summary":"Get Scan Method","operationId":"GETv3_assets_{trackingNumber}_IsValidationRequired","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"trackingNumber","in":"path","description":"Tracking Number","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — Request Data should not be null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/getPrimaryAttachmentsForAssetList":{"post":{"tags":["Assets"],"summary":"Get primary attachments for asset list","description":"Adds new asset. Returns list of attachments for successful request.","operationId":"POSTv3_assets_getPrimaryAttachmentsForAssetList","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"listOfAssetIds","in":"body","description":"","required":true,"schema":{"type":"array","items":{"format":"int32","type":"integer"}}}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetPrimaryAttachment"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — Request Data should not be null.\r\n            User info should not be null.\r\n            SubscriberId is null.\r\n            Unknown Asset type;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/getPrimaryAttachmentsForAssetList_v1":{"post":{"tags":["Assets"],"summary":"Get primary attachments for asset list","description":"Adds new asset. Returns list of attachments for successful request.","operationId":"POSTv3_assets_getPrimaryAttachmentsForAssetList_v1","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetAttachmentsRequest","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest"}}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetPrimaryAttachment"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — Request Data should not be null.\r\n            User info should not be null.\r\n            SubscriberId is null.\r\n            Unknown Asset type;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/{tradeId}/getAssetTypeGroupsByTradeId":{"get":{"tags":["Assets"],"summary":"Get asset type groups by tradeId","description":"Adds tradeId. Returns list of assetTypeGroup for successful request.","operationId":"GETv3_assets_{tradeId}_getAssetTypeGroupsByTradeId","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"tradeId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — Request Data should not be null.\r\n            User info should not be null.\r\n            SubscriberId is null.\r\n            Unknown Asset type;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/GetAssetTypeGroupsByAssetsIds":{"post":{"tags":["Assets"],"summary":"Get asset type groups by assetsIds","description":"Adds assetsids. Returns list of assetTypeGroup for successful request.","operationId":"POSTv3_assets_GetAssetTypeGroupsByAssetsIds","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AssetTypes.GetAssetTypeGroupsRequest"}}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"object","additionalProperties":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — Request Data should not be null.\r\n            User info should not be null.\r\n            SubscriberId is null.\r\n            Unknown Asset type;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/searchassetsByGroupId":{"post":{"tags":["Assets"],"summary":"Get list of assets grouped by AsseTypeGroupID","operationId":"POSTv3_assets_searchassetsByGroupId","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Equipments.SearchAssetsByGroupIDRequest"}}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetsGroupedByCategoriesResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — User info should not be null;\r\n            SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/CanUserEditAsset":{"get":{"tags":["Assets"],"summary":"Getting permission for edit asset","operationId":"GETv3_assets_CanUserEditAsset?assetTypeId={assetTypeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetTypeId","in":"query","description":"","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/assets/CanCreateAsset/{assetTypeId}":{"get":{"tags":["Assets"],"summary":"Getting permission for provider for create new asset","operationId":"GETv3_assets_CanCreateAsset_{assetTypeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetTypeId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Providers"}},"/assets/CanProviderCreateAssetForTrade/{tradeId}":{"get":{"tags":["Assets"],"summary":"Getting permission for provider for create new asset","operationId":"GETv3_assets_CanProviderCreateAssetForTrade_{tradeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"tradeId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Providers"}},"/assets/AssetMeterReadings/{assetId}":{"get":{"tags":["Assets"],"summary":"Get asset readings","description":"Returns asset meter readings details of the specified asset for the current subscriber.\r\n            <br />Send the [PUT /assets/AssetMeterReadings](https://developer.servicechannel.com/swagger/ui/index?version=3#/Assets/PUTv3_assets_AssetMeterReading) request to edit a particular asset meter reading.\r\n            <br />Refer to ServiceChannel University to learn more about [asset meter readings](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/834469973/Asset+Meter+Reading).","operationId":"GETv3_assets_AssetMeterReadings_{assetId}?lastMeterReadingValuesOnly={lastMeterReadingValuesOnly}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetId","in":"path","description":"Unique numeric asset identifier you want to retrieve asset meter readings for.","required":true,"type":"integer","format":"int32"},{"name":"lastMeterReadingValuesOnly","in":"query","description":"When it is true the response should contain one last AssetMeterReading entry for each AssetTypeMeter.","required":false,"type":"boolean","default":false}],"responses":{"200":{"description":"The asset meter readings details are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The resource you are looking for has been removed, had its name changed, or is temporarily unavailable. / The request URI is incorrect, or the resource does not exist.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/AssetMeterReading":{"put":{"tags":["Assets"],"summary":"Update an asset meter reading","description":"Updates information of a particular asset meter reading.","operationId":"PUTv3_assets_AssetMeterReading","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request to update the existing asset meter reading.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequest"}}],"responses":{"200":{"description":"The asset meter reading is successfully updated."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            Failed to Update Asset Meter Reading","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Assets"],"operationId":"POSTv3_assets_AssetMeterReading","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequest"}}],"responses":{"200":{"description":"The asset meter reading is successfully added."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            Failed to add asset meter reading.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/CreateAssetMeterReadingsBulk":{"post":{"tags":["Assets"],"summary":"Asset meter readings bulk create","description":"Creates asset meter readings.\r\n            <br />Learn more about [adding asset meter reading](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/988840218/Adding+Asset+s+Meter+Reading+Data) in ServiceChannel University.","operationId":"POSTv3_assets_CreateAssetMeterReadingsBulk","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request to create asset readings.","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequestItem"}}}],"responses":{"200":{"description":"The asset meter readings details are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            Failed to create asset meter readings.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The request URI is incorrect, or the resource does not exist.\r\n            <br/>Error codes:\r\n            502 — Asset is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/UpdateAssetMeterReadingsBulk":{"put":{"tags":["Assets"],"summary":"Asset meter readings bulk update","description":"Updates information about asset meter readings.","operationId":"PUTv3_assets_UpdateAssetMeterReadingsBulk","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request to update the existing asset meter readings.","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequestItem"}}}],"responses":{"200":{"description":"The asset meter readings details are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            Failed to update asset meter readings.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/AssetMeter":{"post":{"tags":["Assets"],"summary":"Add asset meters","description":"Attaches an asset meter to a certain asset by specifying a particular asset type meter.","operationId":"POSTv3_assets_AssetMeter","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request to add an asset meter to the existing asset.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AddAssetMeterRequest"}}],"responses":{"200":{"description":"The asset meter is successfully added."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            Failed to add an asset meter","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/AssetMeters":{"get":{"tags":["Assets"],"summary":"Get asset meters","description":"Returns the details of an asset meter by sending the `assetMeterId` parameter  or the details of one or several asset meters by using the `assetId` parameter.","operationId":"GETv3_assets_AssetMeters?assetMeterId={assetMeterId}&assetId={assetId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetMeterId","in":"query","description":"Unique numeric asset meter identifier you want to get the details of.","required":false,"type":"integer","format":"int32"},{"name":"assetId","in":"query","description":"Unique numeric asset identifier you want to retrieve asset meter details for.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The asset meter details are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetMeter"}}},"400":{"description":"The request was not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            AssetId and Id can't be both null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/WorkorderAreas/{subscriberId}":{"get":{"tags":["Assets"],"summary":"Get Work Orders Area list","operationId":"GETv3_assets_WorkorderAreas_{subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/System.Collections.Generic.KeyValuePair[System.Int32,System.String]"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/> Request data should not be null.\r\n            <br/> Subscriber User can obtain only own Areas","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/GetValidationStatusesForMultipleWorkOrders":{"post":{"tags":["Assets"],"summary":"Gets list of asset validation statuses for multiple work order.","operationId":"POSTv3_assets_GetValidationStatusesForMultipleWorkOrders","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.GetByIdsRequest"}}],"responses":{"200":{"description":"Request succeeded and response contains list of validation statuses","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.WorkOrderAssetsCommonValidationResponse"}},"400":{"description":"Request did NOT succeed and response contains error information","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/assets/updateAssetStatus":{"put":{"tags":["Assets"],"summary":"Update Asset Status By AssetId","operationId":"PUTv3_assets_updateAssetStatus","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UpdateAssetStatusRequest"}}],"responses":{"200":{"description":"The asset status is successfully updated.","schema":{"default":false,"type":"boolean"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — Asset ID is absent;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The request URI is incorrect, or the resource does not exist.\r\n            <br/>Error codes:\r\n            502 — Asset is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/updateAssetsStatuses":{"put":{"tags":["Assets"],"summary":"Update Assets Statuses","operationId":"PUTv3_assets_updateAssetsStatuses","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.UpdateAssetsStatusesRequest"}}],"responses":{"200":{"description":"Assets statuses is successfully updated."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            503 — Asset ID is absent;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The request URI is incorrect, or the resource does not exist.\r\n            <br/>Error codes:\r\n            502 — Asset is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/canManageAttachments":{"put":{"tags":["Assets"],"summary":"Check if provider is allowed to manage attachments","operationId":"PUTv3_assets_canManageAttachments?subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"IsAllowed value is successfully retured."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/workorders/{workOrderId}/asset-tasks/{responseId}":{"get":{"tags":["AssetTaskResponse"],"summary":"Get an asset task response.","operationId":"GETv3_workorders_{workOrderId}_asset-tasks_{responseId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Work order id","required":true,"type":"integer","format":"int32"},{"name":"responseId","in":"path","description":"Response Id","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["AssetTaskResponse"],"summary":"Update an asset task response. Automatically sets End Time.","operationId":"PUTv3_workorders_{workOrderId}_asset-tasks_{responseId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Work order id","required":true,"type":"integer","format":"int32"},{"name":"responseId","in":"path","description":"Response id","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workOrderId}/asset-tasks":{"get":{"tags":["AssetTaskResponse"],"summary":"Get asset task responses for a work order.","operationId":"GETv3_workorders_{workOrderId}_asset-tasks","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Work order id","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["AssetTaskResponse"],"summary":"Create an asset task reponse.","operationId":"POSTv3_workorders_{workOrderId}_asset-tasks","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Work order Id","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"Create request","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AssetTasks.CreateAssetTaskResponseRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workOrderId}/asset-tasks/end-all":{"put":{"tags":["AssetTaskResponse"],"summary":"End all started task responses for work order. Automatically sets End Time. Responses will be marked as 'ended by system'.","operationId":"PUTv3_workorders_{workOrderId}_asset-tasks_end-all","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Work order id","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes":{"get":{"tags":["AssetTypes"],"operationId":"GETv3_AssetTypes","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetType"}}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["AssetTypes"],"operationId":"POSTv3_AssetTypes","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"req","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AddAssetTypeRequest"}}],"responses":{"201":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AddAssetTypeResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            3100 — Asset Type Name is already in use.\r\n            3106 — Asset Type Name is Missing.\r\n            703 — Primary trade not found.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/AssetTypes/{assetTypeId}":{"get":{"tags":["AssetTypes"],"operationId":"GETv3_AssetTypes_{assetTypeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetTypeId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetType"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            502 — Asset Type not found.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["AssetTypes"],"summary":"","description":"Update Asset Type\r\n            Don't specify AdditiolanTrades if no changes in Additiolan Trades needed\r\n            Set AdditiolanTrades = [] to delete existing Additiolan Trades for asset type\r\n            If AdditiolanTrades contains records then these trades will be set as Additional Trades to asset type.","operationId":"PUTv3_AssetTypes_{assetTypeId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetTypeId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"type","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetType"}}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            3101 — Asset Type Doesn't Exist!.\r\n            3102 — Asset Type already contains assets. Refrigerant Purpose can not be changed!\r\n            703 — Trade not found.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"},"delete":{"tags":["AssetTypes"],"operationId":"DELETEv3_AssetTypes_{assetTypeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetTypeId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response."},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            502 — Asset Type not found.\r\n            3103 — Failed to delete asset type\r\n            3104 — Failed to delete asset type. Existing assets found.\r\n            3108 — Failed to delete asset type. Existing proposals found.\r\n            3105 — Cant modify asset type ParentId.\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/AssetTypes/byids":{"get":{"tags":["AssetTypes"],"operationId":"GETv3_AssetTypes_byids?ids[0]={ids[0]}&ids[1]={ids[1]}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"ids","in":"query","required":true,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetType"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes/GetAssetTypeAttributes/{assetTypeId}":{"get":{"tags":["AssetTypes"],"operationId":"GETv3_AssetTypes_GetAssetTypeAttributes_{assetTypeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetTypeId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTypeAttributeExternal"}}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            502 — Asset Type not found.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes/GetAssetTypeTrades/{assetTypeId}":{"get":{"tags":["AssetTypes"],"operationId":"GETv3_AssetTypes_GetAssetTypeTrades_{assetTypeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetTypeId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            502 — Asset Type not found.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes/GetAssetTypeGroups":{"get":{"tags":["AssetTypes"],"summary":"Get asset type groups by SubscriberId","description":"Returns a list of asset type groups for the specified subscriber.","operationId":"GETv3_AssetTypes_GetAssetTypeGroups?subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"Unique numeric identifier of the subscriber.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Asset type groups are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup"}}},"400":{"description":"The request was not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — Bad Request","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Something went wrong, and the server was unable to complete your request.\r\n            <br/>Error codes:\r\n            501 — Object reference is not set to an instance of an object","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes/GetSubscriberAssetTypeCategories":{"post":{"tags":["AssetTypes"],"summary":"Get asset categories by SubscriberId and TradeNames","description":"Returns an asset category containing asset types that belong to the specified trade for the specified subscriber.\r\n            <br />\r\n            ***Note***: `TradeNames` is an optional parameter. When you skip it, the response shows all asset categories containing asset types.","operationId":"POSTv3_AssetTypes_GetSubscriberAssetTypeCategories","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request model to retrieve a list of asset categories.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.GetSubscriberAssetCategoriesRequest"}}],"responses":{"200":{"description":"Asset categories are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Something went wrong, and the server was unable to complete your request.\r\n            <br/>Error codes:\r\n            501 — Object reference is not set to an instance of an object\r\n            501 — Value cannot be null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes/GetAssetTypeCategoriesByIds":{"post":{"tags":["AssetTypes"],"summary":"Get asset categories by Ids","description":"Returns asset categories names based on their numeric identifiers.\r\n            <br />\r\n            ***Note***: To get all asset categories, send the request without specifying any Id. Asset categories from the list may contain asset types or may be empty, as this method retrieves asset categories from the standardized list.","operationId":"POSTv3_AssetTypes_GetAssetTypeCategoriesByIds","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request model to retrieve asset categories names.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.GetByIdsRequest"}}],"responses":{"200":{"description":"Asset categories names are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Something went wrong, and the server was unable to complete your request.\r\n            <br/>Error codes:\r\n            501 — Object reference is not set to an instance of an object","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes/GetAssetTypeCategoriesByAssetIds":{"post":{"tags":["AssetTypes"],"summary":"Get asset categories by AssetIds","description":"Returns an asset category that contains the specified asset.","operationId":"POSTv3_AssetTypes_GetAssetTypeCategoriesByAssetIds","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request model to retrieve a list of asset categories.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.GetByIdsRequest"}}],"responses":{"200":{"description":"Asset categories are in the response.","schema":{"type":"object","additionalProperties":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory"}}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Something went wrong, and the server was unable to complete your request.\r\n            <br/>Error codes:\r\n            501 — Object reference not set to an instance of an object\r\n            501 — Unable to create a null constant value. Only entity types, enumeration types, or primitive types are supported in this context","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes/GetAssetTypesByLocation":{"post":{"tags":["AssetTypes"],"operationId":"POSTv3_AssetTypes_GetAssetTypesByLocation","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetTypesByLocationRequestInternal"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            502 — Asset Type not found.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes/assets/{assetGroupId}/groupattachments":{"post":{"tags":["AssetTypes"],"summary":"Add AssetTypeGroup Attachments","operationId":"POSTv3_AssetTypes_assets_{assetGroupId}_groupattachments","consumes":["multipart/form-data"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetGroupId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"file","in":"formData","description":"File to attach to AssetTypeGroup","required":true,"type":"file"}],"responses":{"200":{"description":"Created indicates that the request resulted in a new resource created before the response was sent.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AddAssetTypeGroupAttachmentResponse"}},"400":{"description":"Bad Request - the request could not be executed or was missing required parameters.\r\n            <br/>Error codes:\r\n            502 — AssetTypeGroup Not found;\r\n            503 — Bad Request;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes/AssetTypeMeters/{assetTypeId}":{"get":{"tags":["AssetTypes"],"summary":"Get asset type meters","description":"Returns a list of meters and their parameters associated with an asset type and created by the current subscriber.\r\n            <br />You can get the details for a particular level by using the [GET/AssetTypes/AssetTypeMeter/{assetTypeMeterId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/GETv3_AssetTypes_AssetTypeMeter__assetTypeMeterId_) method.\r\n            <br />Learn more about [asset meter reading](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/834469973/Asset+Meter+Reading) in ServiceChannel University.","operationId":"GETv3_AssetTypes_AssetTypeMeters_{assetTypeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetTypeId","in":"path","description":"Unique numeric identifier of the asset type you want to get information on. Send the [GET /AssetTypes](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/GETv3_AssetTypes) request to get an asset type ID.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested asset type meters are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterResponseItem"}}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The request URI is incorrect, or the resource does not exist.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes/AssetTypeMeter/{assetTypeMeterId}":{"get":{"tags":["AssetTypes"],"summary":"Get an asset type meter details","description":"Returns the details of the specified asset type meter for the current subscriber.","operationId":"GETv3_AssetTypes_AssetTypeMeter_{assetTypeMeterId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetTypeMeterId","in":"path","description":"Unique numeric identifier of the asset type meter you want to get the details of.\r\n            <br />Pass the [GET /AssetTypes/AssetTypeMeters/{assetTypeId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/GETv3_AssetTypes_AssetTypeMeters__assetTypeId_) method to acquire an ID of an asset type meter.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The asset type meter details are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterResponseItem"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The request URI is incorrect, or the resource does not exist.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes/AssetTypeMeter":{"put":{"tags":["AssetTypes"],"summary":"Update an asset type meter","description":"Modifies information of an already existing asset type meter.\r\n            <br />**Note**. All request parameters should be filled out: those you want to add or edit along with the parameters you want to leave unchanged.\r\n            <br />**Example Request**\r\n            \r\n                   PUT /AssetTypes/AssetTypeMeter\r\n                   {\r\n                       \"Id\": 16,\r\n                       \"Name\": \"Music System\",\r\n                       \"MaxValue\": \"500.00\",\r\n                       \"Notes\": ,\r\n                       \"Inactive\": false,\r\n                       \"EditOnWO\": true,\r\n                       \"AssetTypeId\": 7632,\r\n                       \"UnitOfMeasure\": 250\r\n                   }","operationId":"PUTv3_AssetTypes_AssetTypeMeter","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request to add or update the asset type meter details.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem"}}],"responses":{"200":{"description":"The asset type meter is successfully updated."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/> Failed to Update Asset Type Meter","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 — Object reference not set to an instance of an object","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["AssetTypes"],"summary":"Add an asset type meter","description":"Creates a new asset type meter for a particular asset type for the current subscriber.","operationId":"POSTv3_AssetTypes_AssetTypeMeter","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request to add an asset type meter. \r\n            <br />Pass the following parameters in the request:\r\n            <br /> • **Id** (*Required*). Enter 0 or null so that when the asset type meter is created the system can assign a unique numeric ID to it.\r\n            <br /> • **Name** (*Required*). Name of an asset type meter.\r\n            <br /> • **Notes**. Comments provided by a user who added the asset type meter.\r\n            <br /> • **Inactive**. Set the asset type meter to the active on inactive status. Valid values: *true*, *false* or 1 - true, 0 - false.\r\n            <br /> • **EditOnWO**. Define whether technicians are allowed to enter data on work orders for the asset. Valid values: *true*, *false* or 1 - true, 0 - false.\r\n            <br /> • **AssetTypeId** (*Required*). ID of an asset type to assign the meter to.\r\n            <br /> • **UnitOfMeasure** (*Required*). Unique numeric identifier of a unit of measurement in the system.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem"}}],"responses":{"200":{"description":"The asset type meter is successfully added."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/> Failed to Create Asset Type Meter","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 — Object reference not set to an instance of an object","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes/GetAssetTypesAvailableForSubscriber/{subscriberId}":{"get":{"tags":["AssetTypes"],"operationId":"GETv3_AssetTypes_GetAssetTypesAvailableForSubscriber_{subscriberId}?tradeId={tradeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"tradeId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetType"}}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            502 — Asset Types not found.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/AssetTypes/asettypes/GetAssetTypesWithCreatePermission":{"get":{"tags":["AssetTypes"],"summary":"Get Asset Types With Create Permission","operationId":"GETv3_AssetTypes_asettypes_GetAssetTypesWithCreatePermission?subscriberId={subscriberId}&tradeId={tradeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"","required":true,"type":"integer","format":"int32"},{"name":"tradeId","in":"query","description":"","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/AssetTypes/AssetTypes/AssetCategoriesByTradeId/{tradeId}":{"get":{"tags":["AssetTypes"],"summary":"Get asset categories by tradeId","description":"Returns a list of asset categories associated with the specified trade.\r\n            <br />\r\n            ***Note***:  This method retrieves asset categories from the standardized list, that is why asset categories may contain asset types and may not. To get asset categories containing asset types that belong to the certain trade, pass the [POST /AssetTypes/GetSubscriberAssetTypeCategories](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/POSTv3_AssetTypes_GetSubscriberAssetTypeCategories) method.\r\n            <br />\r\n            For more information, refer to [Adding Asset Category and Asset Types](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/2523693743/Adding+Asset+Category+and+Asset+Types) in ServiceChannel University.","operationId":"GETv3_AssetTypes_AssetTypes_AssetCategoriesByTradeId_{tradeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"tradeId","in":"path","description":"Unique numeric identifier of the trade. \r\n            Pass the [GET / AssetTypes](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/GETv3_AssetTypes) or [GET /assets/{assetId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/Assets/GETv3_assets__assetId__locationId__locationId__storeId__storeId__tagId__tagId__trackingNumber__trackingNumber_) method to retrieve `tradeId`.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Asset categories are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory"}}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The request URI is incorrect, or the resource does not exist.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Something went wrong, and the server was unable to complete your request.\r\n            <br/>Error codes:\r\n            501 — Object reference is not set to an instance of an object","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/AssetTypes/asettypes/AssetTypesForCreate":{"get":{"tags":["AssetTypes"],"summary":"Get Asset Types For Create By TradeId","operationId":"GETv3_AssetTypes_asettypes_AssetTypesForCreate?tradeId={tradeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"tradeId","in":"query","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/AssetTypes/asettypes/GetPrimaryAssetTypesAsync":{"get":{"tags":["AssetTypes"],"summary":"Get Primary Asset Types","operationId":"GETv3_AssetTypes_asettypes_GetPrimaryAssetTypesAsync","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/AssetTypes/asettypes/GetPrimaryAssetTypeBrandsAsync/{primaryAssetTypeId}":{"get":{"tags":["AssetTypes"],"summary":"Get Primary Asset Type Brands","operationId":"GETv3_AssetTypes_asettypes_GetPrimaryAssetTypeBrandsAsync_{primaryAssetTypeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"primaryAssetTypeId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/AssetTypes/asettypes/GetAssetTypeBrandsAsync/{assetTypeId}":{"get":{"tags":["AssetTypes"],"summary":"Get Asset Type Brands","operationId":"GETv3_AssetTypes_asettypes_GetAssetTypeBrandsAsync_{assetTypeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetTypeId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/workorders/{workorderId}/attachments":{"post":{"tags":["Attachments"],"summary":"Add attachments to a work order","description":"Adds attachments to the specified work order.","operationId":"POSTv3_workorders_{workorderId}_attachments?actor={actor}","consumes":["multipart/form-data"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric ID of the work order to add attachments to.","required":true,"type":"integer","format":"int32"},{"name":"actor","in":"query","required":false,"type":"string"},{"name":"AddAttachmentsRequest","in":"formData","description":"","required":false,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.AddAttachmentsRequest"},"type":"application/json"},{"name":"file","in":"formData","description":"File to attach to the work order.","required":false,"type":"file"}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 - Work Order not found;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{poNumber}/attachmentsByPoNumber":{"post":{"tags":["Attachments"],"summary":"Add attachments to a work order by PO number","operationId":"POSTv3_workorders_{poNumber}_attachmentsByPoNumber?actor={actor}","consumes":["multipart/form-data"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"poNumber","in":"path","description":"Purchase Order","required":true,"type":"string"},{"name":"actor","in":"query","description":"On whose behalf the attachment is adding","required":false,"type":"string"},{"name":"AddAttachmentsRequest","in":"formData","description":"","required":false,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.AddAttachmentsRequest"},"type":"application/json"},{"name":"file","in":"formData","description":"File to attach to the work order.","required":false,"type":"file"}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 - Work Order not found;\r\n            <br/> 503 - Only for subscribers usage;        \r\n            <br/> 920 - Purchase number cannot be empty;\r\n            <br/> 9100 - There are multiple work orders with the same PO number;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/attachmentAsBase64":{"post":{"tags":["Attachments"],"operationId":"POSTv3_workorders_attachmentAsBase64","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.AddBase64AttachmentsRequest"}}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 - Work Order not found;\r\n            <br/> 503 - Only for subscribers usage;        \r\n            <br/> 920 - Purchase number cannot be empty;\r\n            <br/> 946 - Work Order attachments size exceeded;\r\n            <br/> 9100 - There are multiple work orders with the same PO number;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/attachments/{attachmentId}/thumbnail":{"get":{"tags":["Attachments"],"operationId":"GETv3_workorders_{workorderId}_attachments_{attachmentId}_thumbnail?width={width}&height={height}&mode={mode}&imageFormat={imageFormat}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"attachmentId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"width","in":"query","required":false,"type":"integer","format":"int32"},{"name":"height","in":"query","required":false,"type":"integer","format":"int32"},{"name":"mode","in":"query","required":false,"type":"string","enum":["None","Max","Pad","Crop","Carve","Stretch"]},{"name":"imageFormat","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/notes/{noteId}/attachments":{"post":{"tags":["Attachments"],"summary":"Add Attachments to Work Order Note","description":"<para>Add Attachments to Work Order Note. Returns list of attachments Id for successful request.</para>","operationId":"POSTv3_workorders_{workorderId}_notes_{noteId}_attachments","consumes":["multipart/form-data"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"noteId","in":"path","description":"Numeric Id of the Note to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"AddAttachmentsRequest","in":"formData","description":"Optional Descriptor for file(s)","required":false,"schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.AddAttachmentRequest"}},"type":"application/json"},{"name":"file","in":"formData","description":"File to attach to note","required":true,"type":"file"}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - Validation fails;\r\n            <br/> 917 - InvalidWoIdentifier;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/rfps/{id}/attachments":{"post":{"tags":["Attachments"],"summary":"Add attchment to RFP","description":"<para>Adds attchment to RFP. Returns RFP attachment Id for successful request.</para>","operationId":"POSTv3_rfps_{id}_attachments","consumes":["multipart/form-data"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"Rfp ID to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"file","in":"formData","description":"File to attach to RFP","required":true,"type":"file"}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 501 - Failed to upload attachment;\r\n            <br/> 502 - Data not found. Returned if target Rfp is not found;\r\n            <br/> 503 - Request data is empty;\r\n            <br/>Invalid Attachment Request;\r\n            <br/>User info should not be null;\r\n            <br/>SubscriberId is null;\r\n            <br/>Cannot accept file(s) of this type;\r\n            <br/>The file that you're trying to attach has name that exceed the maximum allowable name length;\r\n            <br/>The file that you're trying to attach has length that exceed the maximum allowable length;\r\n            <br/>Empty Location or Store ID;\r\n            <br/>Empty Provider ID;\r\n            <br/>Provider is not valid;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/siteaudit/comments/{commentId}/attachments":{"get":{"tags":["Attachments"],"summary":"Returns list of attachment ids and urls.","operationId":"GETv3_siteaudit_comments_{commentId}_attachments","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"commentId","in":"path","description":"Numeric Id of the Comment which Attachment belongs to.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.AttachmentInComment"}}},"400":{"description":"Bad Request - the request could not be executed or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - validation fails;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            502 — Data not found"}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Attachments"],"summary":"Add attchment to Comment","description":"Adds attchment to Comment. If Comment is not created yet specify {commentId} = -1.","operationId":"POSTv3_siteaudit_comments_{commentId}_attachments","consumes":["multipart/form-data"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"commentId","in":"path","description":"Numeric Id of the Comment to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"file","in":"formData","description":"File to attach to Comment","required":true,"type":"file"}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 501 - Failed to upload attachment;\r\n            <br/> 502 - Data not found. Returned if target Comment is not found;\r\n            <br/> 503 - Request data is empty;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/siteaudit/comments/{commentId}/attachments/{attachmentId}":{"get":{"tags":["Attachments"],"summary":"Retrieve original attchment from Comment","operationId":"GETv3_siteaudit_comments_{commentId}_attachments_{attachmentId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"commentId","in":"path","description":"Numeric Id of the Comment which Attachment belongs to.","required":true,"type":"integer","format":"int32"},{"name":"attachmentId","in":"path","description":"Numeric Id of the Attachment to perform action with.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/siteaudit/comments/{commentId}/attachments/{attachmentId}/thumbnail":{"get":{"tags":["Attachments"],"summary":"Retrieve resized attchment from Comment","operationId":"GETv3_siteaudit_comments_{commentId}_attachments_{attachmentId}_thumbnail?width={width}&height={height}&mode={mode}&imageFormat={imageFormat}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"commentId","in":"path","description":"Numeric Id of the Comment which Attachment belongs to.","required":true,"type":"integer","format":"int32"},{"name":"attachmentId","in":"path","description":"Numeric Id of the Attachment to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"width","in":"query","description":"Width of the output file.","required":false,"type":"integer","format":"int32"},{"name":"height","in":"query","description":"Height of the output file.","required":false,"type":"integer","format":"int32"},{"name":"mode","in":"query","description":"How to resolve aspect ratio differences between the requested size and the \r\n            original image's size: Max = 1, Pad = 2, Crop = 3, Carve = 4, Stretch = 5.","required":false,"type":"string","enum":["None","Max","Pad","Crop","Carve","Stretch"]},{"name":"imageFormat","in":"query","description":"The desired image format, like 'jpg', 'gif', or 'png'. Do not specify \r\n            if you want to preserve the original format.","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/assets/{assetId}/attachments":{"get":{"tags":["Attachments"],"summary":"Get Asset Attachments","description":"","operationId":"GETv3_assets_{assetId}_attachments?providerId={providerId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetId","in":"path","description":"Asset Identifier","required":true,"type":"integer","format":"int32"},{"name":"providerId","in":"query","description":"The provider identifier. Required for sub-contractor request. [Required Special permissions]","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetAttachment"}}},"400":{"description":"Bad Request - the request could not be executed or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - User info should not be null;\r\n            <br/>SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Attachments"],"summary":"Add Attachments to Asset","operationId":"POSTv3_assets_{assetId}_attachments?isDefault={isDefault}","consumes":["multipart/form-data"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"isDefault","in":"query","required":false,"type":"boolean","default":false},{"name":"AddAttachmentsRequest","in":"formData","description":"Required Descriptor for file(s)","required":false,"schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetAttachment"}},"type":"application/json"},{"name":"file","in":"formData","description":"File to attach to workorder","required":true,"type":"file"}],"responses":{"200":{"description":"Created indicates that the request resulted in a new resource created before the response was sent.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AddAssetAttachmentResponse"}}},"400":{"description":"Bad Request - the request could not be executed or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 - Asset Not found;\r\n            < br/> 503 - Bad Request;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/{assetAttachmentId}/deleteAttachment":{"post":{"tags":["Attachments"],"summary":"Delete Asset Attachment","operationId":"POSTv3_assets_{assetAttachmentId}_deleteAttachment","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetAttachmentId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be executed or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - User info should not be null;\r\n            <br/>SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/getattachmentsbyassetids":{"post":{"tags":["Attachments"],"summary":"Get Asset Attachments","operationId":"POSTv3_assets_getattachmentsbyassetids","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetIds","in":"body","required":true,"schema":{"type":"array","items":{"format":"int32","type":"integer"}}}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetAttachment"}}}},"400":{"description":"Bad Request - the request could not be executed or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - User info should not be null;\r\n            <br/>SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/getattachmentsbyassetids_v1":{"post":{"tags":["Attachments"],"summary":"Get Asset Attachments","operationId":"POSTv3_assets_getattachmentsbyassetids_v1","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetAttachmentsRequest","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest"}}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetAttachment"}}}},"400":{"description":"Bad Request - the request could not be executed or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - User info should not be null;\r\n            <br/>SubscriberId is null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/assets/updateAssetAttachment":{"put":{"tags":["Attachments"],"summary":"Update asset attachment by id","description":"","operationId":"PUTv3_assets_updateAssetAttachment?attachmentId={attachmentId}&fileName={fileName}&description={description}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"attachmentId","in":"query","description":"Attachment identifier","required":true,"type":"integer","format":"int32"},{"name":"fileName","in":"query","description":"New file name","required":false,"type":"string"},{"name":"description","in":"query","description":"New file description(comment)","required":false,"type":"string"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - FileName or Description is required;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequest/{workRequestId}/attachments":{"get":{"tags":["Attachments"],"summary":"Get WorkRequest Attachments","description":"*In limited availability phase.*","operationId":"GETv3_workrequest_{workRequestId}_attachments","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","description":"WorkRequest Identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.Attachment"}}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Attachments"],"summary":"Add attachments to a WorkRequest","description":"*In limited availability phase.*\r\n            <br />Adds attachments to the specified WorkRequest.","operationId":"POSTv3_workrequest_{workRequestId}_attachments?actor={actor}","consumes":["multipart/form-data"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","description":"Numeric ID of the WorkRequest to add attachments to.","required":true,"type":"integer","format":"int32"},{"name":"actor","in":"query","description":"Name of the person on whose behalf you are performing the action","required":false,"type":"string"},{"name":"AddAttachmentsRequest","in":"formData","description":"","required":false,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.AddAttachmentsRequest"},"type":"application/json"},{"name":"file","in":"formData","description":"File to attach to the work request.","required":true,"type":"file"}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 - Work Request not found;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequest/{workRequestId}/notes/{noteId}/attachments":{"post":{"tags":["Attachments"],"summary":"Add Attachments to Work Request Note","description":"*In limited availability phase.*\r\n            <br />Add Attachments to Work Request Note. Returns list of attachments Id for successful request.","operationId":"POSTv3_workrequest_{workRequestId}_notes_{noteId}_attachments","consumes":["multipart/form-data"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","description":"Numeric Id of the Work Request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"noteId","in":"path","description":"Numeric Id of the Note to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"AddAttachmentsRequest","in":"formData","description":"Optional Descriptor for file(s)","required":false,"schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.AddAttachmentRequest"}},"type":"application/json"},{"name":"file","in":"formData","description":"File to attach to note","required":true,"type":"file"}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - Validation fails;\r\n            <br/> 8020 - InvalidWorkRequestIdentifier;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequest({workRequestId})/notes({noteId})/attachments":{"get":{"tags":["Attachments"],"summary":"Get WorkRequest Note Attachments","description":"*In limited availability phase.*","operationId":"GETv3_workrequest({workRequestId})_notes({noteId})_attachments","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","description":"WorkRequest Identifier","required":true,"type":"integer","format":"int32"},{"name":"noteId","in":"path","description":"Note Identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.Attachment"}}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/BatchRfp/Create":{"post":{"tags":["BatchRfp"],"summary":"CreateBatchRfpAsync","operationId":"POSTv3_BatchRfp_Create","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"batchRfpRequest","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.BatchRfp.BatchRfpRequest"}}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.BatchWorkOrder.BatchCreateRfpResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 - BatchNumber is empty;\r\n            <br/> 503 - Validation fails. Request is empty or null;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions; ","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            <br/> 501 - Timeout expired. The timeout period elapsed prior to completion of the operation or the server is not responding.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/branding/{subscriberId}":{"get":{"tags":["Branding"],"operationId":"GETv3_branding_{subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/broker/client/access/providers/{providerId}":{"get":{"tags":["Broker"],"summary":"Validates if external client has access to the specified provider","operationId":"GETv3_broker_client_access_providers_{providerId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"providerId","in":"path","description":"Provider Id","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Broker.Common.ApiModels.AccessDto"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/categories":{"get":{"tags":["Categories"],"summary":"Retrieve categories","description":"Returns a list of available work order categories for one or several subscribers. Only a parent subscriber can get categories for child subscribers.\r\n            <br />You can create a new category via the [POST /categories](https://developer.servicechannel.com/swagger/ui/index#/Categories/POSTv3_categories) method.","operationId":"GETv3_categories?subscriberIds[0]={subscriberIds[0]}&subscriberIds[1]={subscriberIds[1]}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberIds","in":"query","description":"Unique numeric ID of the subscriber you want to retrieve categories for. By default, the current subscriber ID is set.","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"The requested list of categories is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Category.CategoryResponse"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            401 — Invalid subscriber ID","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes: \r\n            100 — User has no rights to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"},"post":{"tags":["Categories"],"summary":"Create a new category","description":"Creates a new work order category within a primary category.\r\n            <br />For more information, refer to [Managing categories](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556302506/Managing+Categories) in ServiceChannel University.","operationId":"POSTv3_categories","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request to create a new category within a primary category. To get the primary category ID, use the [GET /categories/primary](https://developer.servicechannel.com/swagger/ui/index?version=3#/Categories/GETv3_categories_primary) method.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Category.AddCategoryRequest"}}],"responses":{"201":{"description":"The new category has been created.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Category.AddCategoryResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes:\r\n            100 — User has no rights to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/> Error codes:\r\n            501 — Category already exists\r\n            501 — Object reference is not set to an instance of an object","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/categories/primary":{"get":{"tags":["Categories"],"summary":"Retrieve primary categories","description":"Returns a list of available primary categories of the current subscriber.","operationId":"GETv3_categories_primary","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"The requested list of primary categories is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Category.PrimaryCategoryResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes: \r\n            100 — User has no rights to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/categories/glcodes":{"get":{"tags":["Categories"],"summary":"List categories that have a GL code mapping with a trade","description":"Returns categories that have GL codes associated with the specified trade. Learn more about [managing GL codes](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/557645834/Managing+GL+Codes) in ServiceChannel University.","operationId":"GETv3_categories_glcodes?locationId={locationId}&trade={trade}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","description":"Unique numeric identifier of the location for which you want to retrieve categories that have a GL code mapping with the trade.","required":true,"type":"integer","format":"int32"},{"name":"trade","in":"query","description":"Trade to retrieve categories with their associated GL codes for.","required":true,"type":"string"}],"responses":{"200":{"description":"Categories with GL codes for the specified trade and location are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Proposals.CategoryGLCode"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            <br/>504 — API call rejected by security permissions\r\n            <br/>601 — Location is not found\r\n            <br/>701 — Invalid trade","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/checklists/detail":{"get":{"tags":["CheckLists"],"summary":"Get standard checklists","description":"[Returns standard checklists](https://developer.servicechannel.com/guides/checklists/find-and-filter-checklists/) along with their parameters, configured questions, and answer options.\r\n            <br />You can filter checklists by:\r\n             • **Trade**. Specify either `tradeid` or `tradeName`.\r\n             • **Category**. Enter either `categoryid` or `categoryName`.\r\n             • **Location**. Provide either `locationId` or `storeId` if the feature that allows creating checklists for specific locations is enabled for a subscriber.\r\n             • **Checklist**. Pass either `checklistid` or `checkListName` to get a specific checklist, and ignore other parameters.\r\n            <br />Providers should pass `subscriberId` to retrieve checklists created by the desired subscriber.\r\n            <br />Navigate to ServiceChannel University to find out [how subscribers can configure checklists](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/655425975/Configuring+Checklists).","operationId":"GETv3_checklists_detail?tradeid={tradeid}&checklistid={checklistid}&categoryid={categoryid}&subscriberId={subscriberId}&tradeName={tradeName}&checkListName={checkListName}&categoryName={categoryName}&locationId={locationId}&storeId={storeId}&workOrderId={workOrderId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"tradeid","in":"query","description":"Trade ID. To get a list of trades with their IDs, send the [GET /odata/trades](https://developer.servicechannel.com/swagger/ui/index?version=3#/Trades/Trades_GetTrades) request.","required":false,"type":"integer","format":"int32"},{"name":"checklistid","in":"query","description":"Checklist ID.","required":false,"type":"integer","format":"int32"},{"name":"categoryid","in":"query","description":"Category ID. Subscribers can retrieve category IDs using the [GET /categories](https://developer.servicechannel.com/swagger/ui/index?version=3#/Categories/GETv3_categories_subscriberIds_0___subscriberIds_0___subscriberIds_1___subscriberIds_1__) method.","required":false,"type":"integer","format":"int32"},{"name":"subscriberId","in":"query","description":"Unique ID of the subscriber who configured checklists. Should be passed by providers.","required":false,"type":"integer","format":"int32"},{"name":"tradeName","in":"query","description":"Trade name. A trade is an area of work for which a service is performed, such as _Lighting_, _Refrigeration_, or _Plumbing_.","required":false,"type":"string"},{"name":"checkListName","in":"query","description":"Checklist name.","required":false,"type":"string"},{"name":"categoryName","in":"query","description":"Category name. A category is the overall classification of a work order, such as _Maintenance_, _Repair_, or _CAPEX_.","required":false,"type":"string"},{"name":"locationId","in":"query","description":"Unique ID of a subscriber’s location. This parameter is ignored if the feature that allows creating checklists for specific locations is disabled for a subscriber.","required":false,"type":"integer","format":"int32"},{"name":"storeId","in":"query","description":"Non-unique ID of a subscriber’s location that may appear as a store number. This parameter is ignored if the feature that allows creating checklists for specific locations is disabled for a subscriber.","required":false,"type":"string"},{"name":"workOrderId","in":"query","description":"Work Order ID","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested standard checklists are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailExtendedResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — Bad Request; Subscriber Id should be provided if the api method is called by provider\r\n            503 — A trade can be specified with only one parameter: either tradeId or tradeName\r\n            503 — A category can be specified with only one parameter: either categoryId or categoryName\r\n            503 — A checkList can be specified with only one parameter: either checkListId or checkListName\r\n            503 — A location can be specified with only one parameter: either locationId or storeId","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"The request is not allowed.\r\n            <br/>Error codes:\r\n            100 — User does not have access to work order","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/checklists/CheckListResponse":{"post":{"tags":["CheckLists"],"summary":"Submit a response to a checklist question","description":"Creates a response to the specified checklist question. Learn more about [submitting checklist responses](https://developer.servicechannel.com/guides/checklists/submit-a-checklist-response/).","operationId":"POSTv3_checklists_CheckListResponse","consumes":["multipart/form-data"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"CheckListResponseRequest","in":"formData","description":"Request to create a response to a checklist question. Retrieve checklist parameters using the [GET /checklists/detail](https://developer.servicechannel.com/swagger/ui/index?version=3#/CheckLists/GETv3_checklists_detail_tradeid__tradeid__checklistid__checklistid__categoryid__categoryid__subscriberId__subscriberId__tradeName__tradeName__checkListName__checkListName__categoryName__categoryName__locationId__locationId__storeId__storeId_) method to make sure you pass valid values.\r\n            <br />Pass the following parameters in the request:\r\n             • **CheckListQuestionId** *(Required)*: ID of the checklist question to submit a response for.\r\n             • **CheckListQuestionOptionId**: ID of the answer option configured for a checklist question of the **Selector** type.\r\n             • **ProviderId** *(Required)*: ID of the provider on whose behalf you are submitting a response.\r\n             • **TechnicianID**: ID of the technician on whose behalf you are submitting a response.\r\n             • **AuthUserId**: Single sign-on (SSO) ID of the technician on whose behalf you are submitting a response.\r\n             • **Answer**: Answer to a checklist question of the following types:\r\n              ◦ **Acknowledgement**. Valid values: `on`, `off`, `1`, `0`, `true`, `false`, `yes`, `no`.\r\n              ◦ **Text Entry**. Enter a text answer. The maximum length is 500 characters.\r\n              ◦ **Numeric Input**. Submit a number.\r\n             • **FreeTextAnswer**: Comment to an answer option with the `IsConditionalFollowUp` attribute. Answer options are configured for questions of the **Selector** type.\r\n             • **EntityId** *(Required)*: Unique ID of the work order for which you are creating a response to a checklist question.\r\n             • **Attempt** *(Required)*: Order of a technician’s on-site visit to submit a checklist response for.\r\n            <br />**Example Object for the Acknowledgement Question**\r\n            \r\n                {\r\n                  \"CheckListQuestionID\": 3834,\r\n                  \"ProviderID\": 2000090505,\r\n                  \"TechnicianID\": 270592,\r\n                  \"AuthUserId\": 141,\r\n                  \"Answer\": \"on\",\r\n                  \"EntityID\": 179826000,\r\n                  \"Attempt\": 1\r\n                }","required":false,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Core.InternalRequests.Checklists.CheckListResponseRequest"},"type":"application/json"},{"name":"file","in":"formData","description":"File to attach to the response to a checklist question. Required for questions with the `PictureFlag` parameter set to 2.","required":false,"type":"file"}],"responses":{"201":{"description":"A response to a checklist question is created. A checklist response object and an attachment object are returned.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponsesResponsePicture"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — Work order is not found\r\n            503 — Not all required parameters were specified\r\n            503 — The FreeTextAnswer is required\r\n            503 — The picture is required\r\n            503 — Checkbox responses only support next values: on, off, 1, 0, true, false, yes, no","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/checklists/{checkListResponseId}/CheckListResponse":{"put":{"tags":["CheckLists"],"summary":"Update a response to a checklist question","description":"[Updates the specified response](https://developer.servicechannel.com/guides/checklists/update-a-checklist-response/) to a checklist question.","operationId":"PUTv3_checklists_{checkListResponseId}_CheckListResponse","consumes":["multipart/form-data"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"checkListResponseId","in":"path","description":"ID of the response to a checklist question to update.\r\n            Pass the [GET /workorders/{workOrderId}/checklists-responses](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/GETv3_workorders__workOrderId__checklists_responses) request to retrieve the response ID.","required":true,"type":"integer","format":"int32"},{"name":"CheckListResponsePictureId","in":"formData","description":"ID of the file attached to the checklist response to update.\r\n            Send the [GET /workorders/{workOrderId}/checklists-responses](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/GETv3_workorders__workOrderId__checklists_responses) request, and look for the required file `Id` within `Pictures` in the response.","required":false,"type":"text"},{"name":"CheckListResponseRequest","in":"formData","description":"Request to update a response to a checklist question.\r\n            <br />Pass the following parameters in the request:\r\n             • **CheckListQuestionId** *(Required)*: ID of the checklist question to update a response for.\r\n             • **CheckListQuestionOptionId**: ID of the answer option configured for a checklist question of the **Selector** type.\r\n             • **ProviderId** *(Required)*: ID of the provider on whose behalf you are updating a response.\r\n             • **TechnicianID** *(Required)*: ID of the technician on whose behalf you are updating a response.\r\n             • **Answer**: Answer to a checklist question of the following types:\r\n              ◦ **Acknowledgement**. Valid values: `on`, `off`, `1`, `0`, `true`, `false`, `yes`, `no`.\r\n              ◦ **Text Entry**. Enter a text answer. The maximum length is 500 characters.\r\n              ◦ **Numeric Input**. Submit a number.\r\n             • **FreeTextAnswer**: Comment to an answer option with the `IsConditionalFollowUp` attribute. Answer options are configured for questions of the **Selector** type.\r\n             • **EntityId** *(Required)*: Unique ID of the work order for which you are updating a response to a checklist question.\r\n             • **Attempt** *(Required)*: Order of a technician’s on-site visit to update a checklist response for.\r\n            <br />**Example Object for the Acknowledgement Question**\r\n            \r\n                {\r\n                  \"CheckListQuestionID\": 3834,\r\n                  \"ProviderID\": 2000090505,\r\n                  \"TechnicianID\": 270592,\r\n                  \"Answer\": \"off\",\r\n                  \"EntityID\": 179826000,\r\n                  \"Attempt\": 1\r\n                }","required":false,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Core.InternalRequests.Checklists.CheckListResponseRequest"},"type":"application/json"},{"name":"file","in":"formData","description":"File to attach to the response to a checklist question. Required for questions with the `PictureFlag` parameter set to 2.","required":false,"type":"file"}],"responses":{"200":{"description":"The specified response to a checklist question is updated. A checklist response object and an attachment object are returned.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponsesResponsePicture"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — Work order is not found\r\n            503 — Bad request\r\n            503 — Not all required parameters were specified\r\n            503 — The FreeTextAnswer is required\r\n            503 — The picture is required\r\n            503 — Checkbox responses only support next values: on, off, 1, 0, true, false, yes, no\r\n            503 — CheckListResponsePictureId (#) is not valid for CheckListResponse","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/checklists/taskslist":{"get":{"tags":["CheckLists"],"summary":"Get checklists with asset tasks","description":"Retrieves checklists of the **Asset Task** type along with their parameters and task details. Such checklists contain asset-related tasks that a technician is prompted to complete when working on a service request.\r\n            <br />You can filter checklists by:\r\n             • **Trade**. Specify either `tradeid` or `tradeName`.\r\n             • **Category**. Enter either `categoryid` or `categoryName`.\r\n             • **Location**. Provide either `locationId` or `storeId` if the feature that allows creating checklists for specific locations is enabled for a subscriber.\r\n             • **Checklist**. Pass either `checklistid` or `checkListName` to get a specific checklist, and ignore other parameters.\r\n            <br />Providers should pass `subscriberId` to retrieve checklists created by the desired subscriber.\r\n            <br />Navigate to ServiceChannel University to find out [how subscribers can configure checklists](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/655425975/Configuring+Checklists).","operationId":"GETv3_checklists_taskslist?tradeid={tradeid}&checklistid={checklistid}&categoryid={categoryid}&subscriberId={subscriberId}&tradeName={tradeName}&checkListName={checkListName}&categoryName={categoryName}&locationId={locationId}&storeId={storeId}&providerId={providerId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"tradeid","in":"query","description":"Trade ID. To get a list of trades with their IDs, send the [GET /odata/trades](https://developer.servicechannel.com/swagger/ui/index?version=3#/Trades/Trades_GetTrades) request.","required":false,"type":"integer","format":"int32"},{"name":"checklistid","in":"query","description":"Checklist ID.","required":false,"type":"integer","format":"int32"},{"name":"categoryid","in":"query","description":"Category ID. Subscribers can retrieve category IDs using the [GET /categories](https://developer.servicechannel.com/swagger/ui/index?version=3#/Categories/GETv3_categories_subscriberIds_0___subscriberIds_0___subscriberIds_1___subscriberIds_1__) method.","required":false,"type":"integer","format":"int32"},{"name":"subscriberId","in":"query","description":"Unique ID of the subscriber who configured checklists. Should be passed by providers.","required":false,"type":"integer","format":"int32"},{"name":"tradeName","in":"query","description":"Trade name. A trade is an area of work for which a service is performed, such as _Lighting_, _Refrigeration_, or _Plumbing_.","required":false,"type":"string"},{"name":"checkListName","in":"query","description":"Checklist name.","required":false,"type":"string"},{"name":"categoryName","in":"query","description":"Category name. A category is the overall classification of a work order, such as _Maintenance_, _Repair_, or _CAPEX_.","required":false,"type":"string"},{"name":"locationId","in":"query","description":"Unique ID of a subscriber’s location. This parameter is ignored if the feature that allows creating checklists for specific locations is disabled for a subscriber.","required":false,"type":"integer","format":"int32"},{"name":"storeId","in":"query","description":"Non-unique ID of a subscriber’s location that may appear as a store number. This parameter is ignored if the feature that allows creating checklists for specific locations is disabled for a subscriber.","required":false,"type":"string"},{"name":"providerId","in":"query","description":"The provider identifier. Required for sub-contractor request. [Required Special permissions]","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested asset task checklists are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ChecklistTasks.CheckListWithTasksExtendedResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — Bad Request; Subscriber Id should be provided if the api method is called by provider\r\n            503 — A trade can be specified with only one parameter: either tradeId or tradeName\r\n            503 — A category can be specified with only one parameter: either categoryId or categoryName\r\n            503 — A checkList can be specified with only one parameter: either checkListId or checkListName\r\n            503 — A location can be specified with only one parameter: either locationId or storeId","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/checklists/types":{"get":{"tags":["CheckLists"],"summary":"Retrieve checklist types","description":"Returns the ID and type of checklists.\r\n            <br />Subscribers can create two types of checklists:\r\n             • **Standard checklist** with questions that a technician is prompted to answer when working on a service request. Send the [GET /checklists/detail](https://developer.servicechannel.com/swagger/ui/index?version=3#/CheckLists/GETv3_checklists_detail_tradeid__tradeid__checklistid__checklistid__categoryid__categoryid__subscriberId__subscriberId__tradeName__tradeName__checkListName__checkListName__categoryName__categoryName__locationId__locationId__storeId__storeId_) request to retrieve standard checklists.\r\n             • **Asset task checklist** with asset-related tasks that a technician should complete when servicing a work order. Pass [GET /checklists/taskslist](https://developer.servicechannel.com/swagger/ui/index?version=3#/CheckLists/GETv3_checklists_taskslist_tradeid__tradeid__checklistid__checklistid__categoryid__categoryid__subscriberId__subscriberId__tradeName__tradeName__checkListName__checkListName__categoryName__categoryName__locationId__locationId__storeId__storeId_) to get asset task checklists.\r\n            <br />You can filter checklists by:\r\n             • **Trade**. Specify either `tradeid` or `tradeName`.\r\n             • **Category**. Enter either `categoryid` or `categoryName`.\r\n             • **Location**. Provide either `locationId` or `storeId` if the feature that allows creating checklists for specific locations is enabled for a subscriber.\r\n             • **Checklist**. Pass either `checklistid` or `checkListName` to get a specific checklist, and ignore other parameters.\r\n            <br />Providers should pass `subscriberId` to retrieve checklists created by the desired subscriber.","operationId":"GETv3_checklists_types?tradeId={tradeId}&checklistId={checklistId}&categoryId={categoryId}&subscriberId={subscriberId}&tradeName={tradeName}&checklistName={checklistName}&categoryName={categoryName}&locationId={locationId}&storeId={storeId}&providerId={providerId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"tradeId","in":"query","description":"Trade ID. To get a list of trades with their IDs, send the [GET /odata/trades](https://developer.servicechannel.com/swagger/ui/index?version=3#/Trades/Trades_GetTrades) request.","required":false,"type":"integer","format":"int32"},{"name":"checklistId","in":"query","description":"Checklist ID.","required":false,"type":"integer","format":"int32"},{"name":"categoryId","in":"query","description":"Category ID. Subscribers can retrieve category IDs using the [GET /categories](https://developer.servicechannel.com/swagger/ui/index?version=3#/Categories/GETv3_categories_subscriberIds_0___subscriberIds_0___subscriberIds_1___subscriberIds_1__) method.","required":false,"type":"integer","format":"int32"},{"name":"subscriberId","in":"query","description":"Unique ID of the subscriber who configured checklists. Should be passed by providers.","required":false,"type":"integer","format":"int32"},{"name":"tradeName","in":"query","description":"Trade name. A trade is an area of work for which a service is performed, such as _Lighting_, _Refrigeration_, or _Plumbing_.","required":false,"type":"string"},{"name":"checklistName","in":"query","description":"Checklist name.","required":false,"type":"string"},{"name":"categoryName","in":"query","description":"Category name. A category is the overall classification of a work order, such as _Maintenance_, _Repair_, or _CAPEX_.","required":false,"type":"string"},{"name":"locationId","in":"query","description":"Unique ID of a subscriber’s location. This parameter is ignored if the feature that allows creating checklists for specific locations is disabled for a subscriber.","required":false,"type":"integer","format":"int32"},{"name":"storeId","in":"query","description":"Non-unique ID of a subscriber’s location that may appear as a store number. This parameter is ignored if the feature that allows creating checklists for specific locations is disabled for a subscriber.","required":false,"type":"string"},{"name":"providerId","in":"query","description":"The provider identifier. Required for sub-contractor request. [Required Special permissions]","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The ID and type of the requested checklists are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Checklists.CheckListTypesExtendedResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — Bad Request; Subscriber Id should be provided if the api method is called by provider\r\n            503 — A trade can be specified with only one parameter: either tradeId or tradeName\r\n            503 — A category can be specified with only one parameter: either categoryId or categoryName\r\n            503 — A checkList can be specified with only one parameter: either checkListId or checkListName\r\n            503 — A location can be specified with only one parameter: either locationId or storeId","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/contracts":{"get":{"tags":["Contracts"],"summary":"Returns provider active contracts by providerId, locationId and trade","description":"Available only for Subscriber user.","operationId":"GETv3_contracts?locationId={locationId}&locationDbId={locationDbId}&providerId={providerId}&trade={trade}&tradeId={tradeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","required":false,"type":"string"},{"name":"locationDbId","in":"query","required":false,"type":"integer","format":"int32"},{"name":"providerId","in":"query","required":false,"type":"integer","format":"int32"},{"name":"trade","in":"query","required":false,"type":"string"},{"name":"tradeId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested contracts are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Contracts.GetContractsResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — Bad Request; locationId or locationDbId should be provided\r\n            503 — Location not found\r\n            503 — Trade not found\r\n            503 — Provider not found\r\n            503 — User does not have Location access to perform this operation","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"The request is not allowed.\r\n            <br/>Error codes:\r\n            100 — Only for subscribers usage","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Contracts"],"operationId":"POSTv3_contracts","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.AssignProviderRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/contracts/retire":{"put":{"tags":["Contracts"],"summary":"Retire Provider Contract. When 'Trade' and 'StoreId' are not specified then provider is 'retired' from all subscriber's stores.","description":"Available only for Subscriber Super Admin user.","operationId":"PUTv3_contracts_retire","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.RetireProviderRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded. When 'Trade' and 'StoreId' are not specified then provider is 'retired' from all subscriber's stores.","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/ctools/workorder/{workOrderId}/assignedtechnicians":{"get":{"tags":["Ctools"],"summary":"Retrieve technicians assigned to a work order","description":"Returns technicians assigned to the specified work order.\r\n            <br />***Note:*** This method is only available to provider admins.","operationId":"GETv3_ctools_workorder_{workOrderId}_assignedtechnicians","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"The unique numeric identifier of the work order to retrieve assigned technicians for.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The technicians assigned to the specified work order are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ContractorTools.TechnicianDto"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc."},"401":{"description":"The request is not authorized."},"500":{"description":"The server was unable to complete the request due to an internal error."}},"deprecated":false,"x-access":"Any"}},"/ctools/workorder/{workOrderId}/acceptedtechnicians":{"get":{"tags":["Ctools"],"summary":"Retrieve technicians who accepted a work order","description":"Returns technicians who accepted the specified work order. Note that only Field Tech Manager (FTM) technicians can accept work orders.\r\n            <br />***Note:*** This method is only available to provider admins.","operationId":"GETv3_ctools_workorder_{workOrderId}_acceptedtechnicians","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"The unique numeric identifier of the work order for which you want to retrieve technicians who accepted it.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The technicians who accepted the specified work order are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ContractorTools.TechnicianDto"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc."},"401":{"description":"The request is not authorized."},"500":{"description":"The server was unable to complete the request due to an internal error."}},"deprecated":false,"x-access":"Any"}},"/ctools/workorder/{workOrderId}/assigntechnician":{"post":{"tags":["Ctools"],"summary":"Assign a technician to a work order","description":"Assigns a technician to the specified work order.\r\n            <br />***Note:*** This method is only available to provider admins.","operationId":"POSTv3_ctools_workorder_{workOrderId}_assigntechnician?userId={userId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"The unique numeric identifier of the work order to assign to a technician.","required":true,"type":"integer","format":"int32"},{"name":"userId","in":"query","description":"The ID of the technician in the Authentication service to assign the work order to.","required":true,"type":"integer","format":"int32"}],"responses":{"201":{"description":"The technician is successfully assigned to the specified work order."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc."},"401":{"description":"The request is not authorized."},"500":{"description":"The server was unable to complete the request due to an internal error."}},"deprecated":false,"x-access":"Any"}},"/ctools/workorder/{workOrderId}/unassigntechnician":{"delete":{"tags":["Ctools"],"summary":"Unassign a technician from a work order","description":"Unassigns a technician from the specified work order.\r\n            <br />***Note:*** This method is only available to provider admins.","operationId":"DELETEv3_ctools_workorder_{workOrderId}_unassigntechnician?userId={userId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"The unique numeric identifier of the work order to unassign a technician from.","required":true,"type":"integer","format":"int32"},{"name":"userId","in":"query","description":"The ID of the technician in the Authentication service to unassign the work order from.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The technician is successfully unassigned from the specified work order."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc."},"401":{"description":"The request is not authorized."},"500":{"description":"The server was unable to complete the request due to an internal error."}},"deprecated":false,"x-access":"Any"}},"/ctools/workorder/{workOrderId}/accept":{"put":{"tags":["Ctools"],"summary":"Accept a work order on behalf of a technician","description":"Accepts a work order on behalf of the specified technician. Only Field Tech Manager (FTM) technicians can accept work orders.\r\n            <br />Once the work order is accepted, its status changes to *In Progress/Dispatch Confirmed*.\r\n            <br />***Note:*** This method is only available to provider admins.","operationId":"PUTv3_ctools_workorder_{workOrderId}_accept?userId={userId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"The unique numeric identifier of the work order you want to accept on behalf of a technician.","required":true,"type":"integer","format":"int32"},{"name":"userId","in":"query","description":"The ID of the technician — who accepts the work order — in the Authentication service.","required":true,"type":"integer","format":"int32"}],"responses":{"201":{"description":"The work order is successfully accepted by the specified technician. The response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc."},"401":{"description":"The request is not authorized."},"500":{"description":"The server was unable to complete the request due to an internal error."}},"deprecated":false,"x-access":"Any"}},"/ctools/workorder/{workOrderId}/decline":{"put":{"tags":["Ctools"],"summary":"Decline a work order on behalf of a technician","description":"Declines a work order on behalf of the specified technician. Only Field Tech Manager (FTM) technicians can decline work orders.\r\n            <br />If additional technician permissions are enabled for your company — “Technician”, “Supervising Tech”, and “Regional Manager” — the work order declined by a technician is automatically assigned to a Supervising Tech or Regional Manager or forwarded to the next ranked provider based on the configured auto-assignment rules. If these permissions are not enabled, the work order is either forwarded to the next ranked provider or moved to the *Open/Declined* status, depending on the setup. Learn more about [automating work order assignments and setting up forwarding rules](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/640582807/Automating+Work+Order+Assignments+and+Forwarding+Work+Orders) in ServiceChannel University.\r\n            <br />***Note:*** This method is only available to provider admins.","operationId":"PUTv3_ctools_workorder_{workOrderId}_decline?userId={userId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"The unique numeric identifier of the work order you want to decline on behalf of a technician.","required":true,"type":"integer","format":"int32"},{"name":"userId","in":"query","description":"The ID of the technician — who declines the work order — in the Authentication service.","required":true,"type":"integer","format":"int32"}],"responses":{"201":{"description":"The work order is successfully declined by the specified technician. The response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc."},"401":{"description":"The request is not authorized."},"500":{"description":"The server was unable to complete the request due to an internal error."}},"deprecated":false,"x-access":"Any"}},"/ctools/workorder/{workOrderId}/rescindacceptance":{"put":{"tags":["Ctools"],"summary":"Cancel the acceptance of a work order on behalf of a technician","description":"Removes a technician as accepted on the specified work order. Note that only Field Tech Manager (FTM) technicians can accept work orders.\r\n            <br />If the technician is currently checked into the work order, the request will fail.\r\n            <br />***Note:*** This method is only available to provider admins.","operationId":"PUTv3_ctools_workorder_{workOrderId}_rescindacceptance?userId={userId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"The unique numeric identifier of the work order for which you want to cancel acceptance on behalf of a technician.","required":true,"type":"integer","format":"int32"},{"name":"userId","in":"query","description":"The ID of the technician in the Authentication service to cancel the work order acceptance for.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The technician is removed as accepted on the specified work order. The response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc."},"401":{"description":"The request is not authorized."},"500":{"description":"The server was unable to complete the request due to an internal error."}},"deprecated":false,"x-access":"Any"}},"/ctools/refrigerantcertifications":{"get":{"tags":["Ctools"],"summary":"Get refrigerant certifications","description":"Returns all refrigerant certifications for the specified provider for EPA compliance. You can also retrieve certifications for one technician only by specifying their `authUserId`.","operationId":"GETv3_ctools_refrigerantcertifications?providerId={providerId}&authUserId={authUserId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"providerId","in":"query","description":"Unique provider identifier.","required":true,"type":"integer","format":"int32"},{"name":"authUserId","in":"query","description":"Technician’s single sign-on (SSO) ID.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested refrigerant certifications are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ContractorTools.ExtendedRefrigerantCertificationDTO"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc."},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions"},"500":{"description":"The server was unable to complete the request due to an internal error."}},"deprecated":false,"x-access":"Any"}},"/currencies/currencyalphabeticcode":{"get":{"tags":["Currencies"],"summary":"Get currency alphabetic code","operationId":"GETv3_currencies_currencyalphabeticcode?currencyId={currencyId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"currencyId","in":"query","description":"Unique Currency Identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Currencies.GetAlphabeticalCodeResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — Invalid request","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/dashboardsettings/feedbacksetup/{setupId}":{"get":{"tags":["DashboardSettings"],"summary":"Get Feedback Setup","description":"Returns a Feedback Setup for Dashboard","operationId":"GETv3_dashboardsettings_feedbacksetup_{setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupId","in":"path","description":"The numeric identifier of the Dashboard Setup Id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.DashboardSettings.SetupFeedbackResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Access denied.\r\n            <br>Error codes:\r\n            1000 - The setupId does not belong to the Subscriber;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/dashboardsettings/requestsetup/{setupId}":{"get":{"tags":["DashboardSettings"],"summary":"Get Dashboard Service Request Setup","description":"Returns a Service Request Setup for Dashboard","operationId":"GETv3_dashboardsettings_requestsetup_{setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupId","in":"path","description":"The numeric identifier of the Dashboard Setup Id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Access denied.\r\n            <br>Error codes:\r\n            1000 - The setupId does not belong to the Subscriber;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/dashboardsettings/requestsetup":{"post":{"tags":["DashboardSettings"],"summary":"Get List Of Dashboard Service Request Setup","description":"Returns a List of Service Request Setup for Dashboard","operationId":"POSTv3_dashboardsettings_requestsetup","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupIds","in":"body","description":"The list of numeric identifier of the Dashboard Setup Id.","required":true,"schema":{"type":"array","items":{"format":"int32","type":"integer"}}}],"responses":{"200":{"description":"Indicates that the request succeeded","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Dashboard.Settings.SetupRequest"}}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Access denied.\r\n            <br>Error codes:\r\n            1000 - The setupId does not belong to the Subscriber;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/dashboardsettings/requestsetupconfirm/{setupId}":{"get":{"tags":["DashboardSettings"],"summary":"Get Dashboard Service Request Confirmation Setup","description":"Returns a Service Request Confirmation Setup for Dashboard","operationId":"GETv3_dashboardsettings_requestsetupconfirm_{setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupId","in":"path","description":"The numeric identifier of the Dashboard Setup Id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestConfirmResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Access denied.\r\n            <br>Error codes:\r\n            1000 - The setupId does not belong to the Subscriber;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/dashboardsettings/requestsetupconfirm":{"post":{"tags":["DashboardSettings"],"summary":"Get List Of Dashboard Service Request Confirmation Setup","description":"Returns a List of Service Request Confirmation Setup for Dashboard","operationId":"POSTv3_dashboardsettings_requestsetupconfirm","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupIds","in":"body","description":"The list of numeric identifier of the Dashboard Setup Id.","required":true,"schema":{"type":"array","items":{"format":"int32","type":"integer"}}}],"responses":{"200":{"description":"Indicates that the request succeeded","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Dashboard.Settings.SetupRequestConfirm"}}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Access denied.\r\n            <br>Error codes:\r\n            1000 - The setupId does not belong to the Subscriber;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/dashboardsettings/setupgeneral/{subscriberId}/{setupId}":{"get":{"tags":["DashboardSettings"],"summary":"Get Dashboard Setup General","description":"Returns Setup General for Dashboard","operationId":"GETv3_dashboardsettings_setupgeneral_{subscriberId}_{setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"Subscriber identifier.","required":true,"type":"integer","format":"int32"},{"name":"setupId","in":"path","description":"The identifier of the Dashboard Setup.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded","schema":{"$ref":"#/definitions/ServiceChannel.Api.Model.Dashboard.Settings.SetupGeneral"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/dashboardsettings/notesetup/{setupId}":{"get":{"tags":["DashboardSettings"],"summary":"Get Dashboard Note Setup","description":"Returns a Note Setup for Dashboard","operationId":"GETv3_dashboardsettings_notesetup_{setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupId","in":"path","description":"The numeric identifier of the Dashboard Setup Id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.DashboardSettings.SetupNoteResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Access denied.\r\n            <br>Error codes:\r\n            1000 - The setupId does not belong to the Subscriber;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/documents/GetTempLink":{"get":{"tags":["Documents"],"summary":"GET example: https://localhost:1871/api/s3?attachmentId=tests/S3Test/ef7031654d5b4259b260586300660352.txt","operationId":"GETv3_documents_GetTempLink?attachmentId={attachmentId}&overrideFileName={overrideFileName}&signature={signature}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"attachmentId","in":"query","description":"The attachment Id.","required":true,"type":"string"},{"name":"overrideFileName","in":"query","description":"The override file name.","required":false,"type":"string"},{"name":"signature","in":"query","description":"The override file name.","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/documents/GetTempLink":{"get":{"tags":["Documents"],"summary":"GET example: https://localhost:1871/api/s3?attachmentId=tests/S3Test/ef7031654d5b4259b260586300660352.txt","operationId":"GETv3_api_documents_GetTempLink?attachmentId={attachmentId}&overrideFileName={overrideFileName}&signature={signature}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"attachmentId","in":"query","description":"The attachment Id.","required":true,"type":"string"},{"name":"overrideFileName","in":"query","description":"The override file name.","required":false,"type":"string"},{"name":"signature","in":"query","description":"The override file name.","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/users/current/locations/{locationId}/subscribe":{"post":{"tags":["EmailNotifications"],"summary":"Subscribe to Email Notifications","description":"Subscribe to Email Notification.\r\n            <br /><br />Available for subscriber usage.","operationId":"POSTv3_users_current_locations_{locationId}_subscribe","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Numeric Id of the Location to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The Subscription Email Notification request.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.EmailNotificationSubscriptionRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/users/current/locations/{locationId}/email":{"get":{"tags":["EmailNotifications"],"summary":"List existing email subscriptions","description":"Returns a list of email subscriptions","operationId":"GETv3_users_current_locations_{locationId}_email","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/users/current/unsubscribe":{"delete":{"tags":["EmailNotifications"],"summary":"Unsubscribe from Email Notifications","description":"Unsubscribe from Email Notifications.\r\n            <br /><br />Available for subscriber usage.","operationId":"DELETEv3_users_current_unsubscribe","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/users/current/locations/{locationId}/unsubscribe":{"delete":{"tags":["EmailNotifications"],"summary":"Unsubscribe from Email Notifications","description":"Unsubscribe from Email Notifications.\r\n            <br /><br />Available for subscriber usage.","operationId":"DELETEv3_users_current_locations_{locationId}_unsubscribe?id={id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Numeric Id of the Location to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"id","in":"query","description":"Numeric Id of the Subscription to perform action with.","required":false,"type":"integer","format":"int32"},{"name":"notificationType","in":"query","description":"Notification type: Check In , ....","required":true,"type":"string","enum":["CheckIn","CheckOut","BadgeScanRequired"]},{"name":"languageCode","in":"query","description":"ISO 639-1 two-letter code for the language.","required":false,"type":"string"},{"name":"notificationRules.rules","in":"query","required":false,"type":"array","items":{}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/eula/agreement":{"get":{"tags":["Eula"],"summary":"Method to retrieve the EULA agreement","operationId":"GETv3_eula_agreement","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"The request succeeded and the eula agreement is returned.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Eula.EulaAgreement"}},"403":{"description":"The user doesn't have permissions to view the agreement text."},"502":{"description":"No agreement was found."}},"deprecated":false,"x-access":"Any"}},"/eula/accept":{"post":{"tags":["Eula"],"summary":"Method to accept the EULA agreement","operationId":"POSTv3_eula_accept","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"The request succeeded and the eula agreement is accepted."},"403":{"description":"The user doesn't have permissions to accept the agreement."}},"deprecated":false,"x-access":"Any"}},"/excelreports":{"get":{"tags":["ExcelReports"],"summary":"Get invoice report progress","operationId":"GETv3_excelreports?key={key}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"key","in":"query","description":"Report key","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["ExcelReports"],"summary":"The index.","operationId":"POSTv3_excelreports","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"form","in":"body","description":"The form.","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/System.Collections.Generic.KeyValuePair[System.String,System.String]"}}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/excelreports/cancel":{"get":{"tags":["ExcelReports"],"operationId":"GETv3_excelreports_cancel?key={key}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"key","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/excelreports/order/isuploaded":{"get":{"tags":["ExcelReports"],"operationId":"GETv3_excelreports_order_isuploaded?key={key}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"key","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/features/globalfeature/{featureId}":{"get":{"tags":["Feature"],"summary":"Get Feature","operationId":"GETv3_features_globalfeature_{featureId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"featureId","in":"path","description":"Feature Name","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 -  'FeatureId' feature doesn't exist;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"},"put":{"tags":["Feature"],"operationId":"PUTv3_features_globalfeature_{featureId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"featureId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"feature","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Features.SetFeatureRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/feedbacks/workorders/{workorderId}":{"post":{"tags":["Feedback"],"operationId":"POSTv3_feedbacks_workorders_{workorderId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.FeedbackRequest"}}],"responses":{"201":{"description":"Indicates that the request succeeded and that the feedback created."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br>Error codes:\r\n            <br> 503 - Request is empty or null;\r\n            <br> 904 - Invalid work order status;\r\n            <br> 2601 - Invalid feedback answer;\r\n            <br> 2602 - Invalid work order number;\r\n            <br> 2602 - Invalid subscriber;\r\n            <br> 2603 - Invalid subscriber number;\r\n            <br> 2604 - Invalid feedback score;\r\n            <br> 2605 - Unsatisfactory answer required a comment\r\n            <br> 2606 - Invalid LocationId or SetupId provided","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/feedbacks/workorders":{"get":{"tags":["Feedback"],"operationId":"GETv3_feedbacks_workorders?LocationId={LocationId}&SetupId={SetupId}&OrderByField={OrderByField}&OrderDirection={OrderDirection}&ShowMyWorkOrders={ShowMyWorkOrders}&SubscriberId={SubscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","description":"LocationId","required":false,"type":"integer","format":"int32"},{"name":"setupId","in":"query","description":"Dashboard setupId (optional)","required":false,"type":"integer","format":"int32"},{"name":"orderByField","in":"query","description":"Order by field","required":false,"type":"string","enum":["TrackingNumber","Trade","ScheduledDate","Vendor","Priority","Caller","Status","Area","ComplitionDate","FeedbackLeft"]},{"name":"orderDirection","in":"query","description":"Order direction","required":false,"type":"string","enum":["Ascending","Descending"]},{"name":"showMyWorkOrders","in":"query","description":"Activates filter by current user id","required":false,"type":"boolean","default":false},{"name":"subscriberId","in":"query","description":"Subscriber Id","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Return work orders ready for feedback.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.WorkorderFeedback"}}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/feedbacks/workorders/count":{"get":{"tags":["Feedback"],"operationId":"GETv3_feedbacks_workorders_count?locationId={locationId}&subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","required":false,"type":"integer","format":"int32"},{"name":"subscriberId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Return count of work orders ready for feedback.","schema":{"format":"int32","type":"integer"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/feedbacks/reviews":{"get":{"tags":["Feedback"],"operationId":"GETv3_feedbacks_reviews?ProviderId={ProviderId}&SearchWithin={SearchWithin}&PageSize={PageSize}&PageOffset={PageOffset}&SortBy={SortBy}&SubscriberId={SubscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"providerId","in":"query","description":"Provider Id","required":false,"type":"integer","format":"int32"},{"name":"searchWithin","in":"query","description":"Search within reviews comment","required":false,"type":"string"},{"name":"pageSize","in":"query","description":"Response page size (default 10)","required":false,"type":"integer","format":"int32"},{"name":"pageOffset","in":"query","description":"Response page offset (default 0)","required":false,"type":"integer","format":"int32"},{"name":"sortBy","in":"query","description":"Sort by field (default by Recent)","required":false,"type":"string","enum":["Recent","HighestScoreFirst","LowestScoreFirst"]},{"name":"subscriberId","in":"query","description":"Subscriber Id","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Return feedback reviews.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForProviderResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Feedback"],"operationId":"POSTv3_feedbacks_reviews","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.ReviewProviderRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the provider review created or updated.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.ReviewProviderRequest"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Indicates that the requested resource requires provider rateable feature"}},"deprecated":false,"x-access":"Any"}},"/feedbacks/reviews/info":{"get":{"tags":["Feedback"],"operationId":"GETv3_feedbacks_reviews_info?ProviderId={ProviderId}&SubscriberId={SubscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"providerId","in":"query","required":false,"type":"integer","format":"int32"},{"name":"subscriberId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Return info model about provider ratings","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/feedbacks/byWorkorders":{"get":{"tags":["Feedback"],"operationId":"GETv3_feedbacks_byWorkorders?workOrdersIds[0]={workOrdersIds[0]}&workOrdersIds[1]={workOrdersIds[1]}&subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrdersIds","in":"query","required":true,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"subscriberId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForWorkOrdersResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/GlCodes/RetrieveGlCodes":{"get":{"tags":["GlCodes"],"summary":"Retrieve Gl Codes","description":"Returns GL Codes for the authorized subscriber.\r\n            <br />You can filter the codes by `trade`, `category`, and `location`.\r\n            <br />Navigate to ServiceChannel University to find out [how to manage GL Codes](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/557645834/Managing+GL+Codes).","operationId":"GETv3_GlCodes_RetrieveGlCodes?trade={trade}&category={category}&location={location}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"trade","in":"query","description":"Trade name. A trade is an area of work for which a service is performed, such as LIGHTING, ALARMS, or ELECTRICAL. Maximum is 80 characters.","required":false,"type":"string"},{"name":"category","in":"query","description":"Category name. A category is the overall classification of a work order, such as MAINTENANCE, REPAIR, or WARRANTY. Maximum is 50 characters.","required":false,"type":"string"},{"name":"location","in":"query","description":"Store ID. The numeric identifier of the store in the client's system. Assigned by and unique per subscriber.","required":false,"type":"string"}],"responses":{"200":{"description":"The requested Gl Codes are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.GlCode.RetrieveGlCodesResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            401 — Invalid subsriber ID","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            502 — Not Found\r\n            502 — No GL Code exists for the query","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/GlCodes/GetApprovalCodes":{"get":{"tags":["GlCodes"],"summary":"Get Approval codes","description":"Gets the list of approval codes.","operationId":"GETv3_GlCodes_GetApprovalCodes?locationId={locationId}&category={category}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","description":"Location Id. Numeric id of location.","required":true,"type":"integer","format":"int32"},{"name":"category","in":"query","description":"Category name. A category is the overall classification of a work order, such as MAINTENANCE, REPAIR, or WARRANTY. Maximum is 50 characters.","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ApprovalCodes.GetApprovalCodesWithOptionsResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - Request is empty or null.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/GlCodes/CreateGlCode":{"post":{"tags":["GlCodes"],"summary":"Add a GL Code","description":"Creates a GL Code with a new trade, category, or location.\r\n            <br />Send the [GET /GlCodes/RetrieveGlCodes](https://developer.servicechannel.com/swagger/ui/index?version=3#/GlCodes/GETv3_GlCodes_RetrieveGlCodes_trade__trade__category__category__location__location_) request to get the list of GL Codes.","operationId":"POSTv3_GlCodes_CreateGlCode?glCode={glCode}&trade={trade}&category={category}&location={location}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"glCode","in":"query","description":"Numeric identifier of a GL Code.","required":true,"type":"string"},{"name":"trade","in":"query","description":"Trade name. A trade is an area of work for which a service is performed, such as LIGHTING, ALARMS, or ELECTRICAL. Maximum is 80 characters.","required":false,"type":"string"},{"name":"category","in":"query","description":"Category name. A category is the overall classification of a work order, such as MAINTENANCE, REPAIR, or WARRANTY. Maximum is 50 characters.","required":false,"type":"string"},{"name":"location","in":"query","description":"Store ID. The numeric identifier of the store in the client's system. Assigned by and unique per subscriber.","required":false,"type":"string"}],"responses":{"201":{"description":"The created GL Code ID is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            401 — Invalid subsriber ID\r\n            606 — Location is not found\r\n            704 — Invalid trade value for the subscriber\r\n            705 — Invalid category value for the subscriber\r\n            706 — GL Code already exists","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/GlCodes/UpdateGlCode":{"put":{"tags":["GlCodes"],"summary":"Update a GL Code","description":"Updates a GL Code number leaving the trade, category, and/or location of the code unchanged. You need to specify all code parameters to update it.\r\n            <br />Use the [POST /GlCodes/CreateGlCode](https://developer.servicechannel.com/swagger/ui/index?version=3#/GlCodes/POSTv3_GlCodes_CreateGlCode_glCode__glCode__trade__trade__category__category__location__location_) method to create a new GL Code.","operationId":"PUTv3_GlCodes_UpdateGlCode?glCode={glCode}&trade={trade}&category={category}&location={location}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"glCode","in":"query","description":"Numeric identifier of a GL Code.","required":true,"type":"string"},{"name":"trade","in":"query","description":"Trade name. A trade is an area of work for which a service is performed, such as LIGHTING, ALARMS, or ELECTRICAL. Maximum is 80 characters.","required":false,"type":"string"},{"name":"category","in":"query","description":"Category name. A category is the overall classification of a work order, such as MAINTENANCE, REPAIR, or WARRANTY. Maximum is 50 characters.","required":false,"type":"string"},{"name":"location","in":"query","description":"Store ID. The numeric identifier of the store in the client's system. Assigned by and unique per subscriber.","required":false,"type":"string"}],"responses":{"200":{"description":"The updated GL Code ID is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            401 — Invalid subsriber ID\r\n            606 — Location is not found\r\n            704 — Invalid trade value for the subscriber\r\n            705 — Invalid category value for the subscriber\r\n            707 — GL Code does not exist\r\n            708 — At least one field trade/category/location is required","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/GlCodes/DeleteGlCode":{"delete":{"tags":["GlCodes"],"summary":"Delete a GL Code","description":"Removes the specified GL Code from the subscriber’s system. You need to specify all code parameters to delete it.","operationId":"DELETEv3_GlCodes_DeleteGlCode?glCode={glCode}&trade={trade}&category={category}&location={location}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"glCode","in":"query","description":"Numeric identifier of a GL Code.","required":true,"type":"string"},{"name":"trade","in":"query","description":"Trade name. A trade is an area of work for which a service is performed, such as LIGHTING, ALARMS, or ELECTRICAL. Maximum is 80 characters.","required":false,"type":"string"},{"name":"category","in":"query","description":"Category name. A category is the overall classification of a work order, such as MAINTENANCE, REPAIR, or WARRANTY. Maximum is 50 characters.","required":false,"type":"string"},{"name":"location","in":"query","description":"Store ID. The numeric identifier of the store in the client's system. Assigned by and unique per subscriber.","required":false,"type":"string"}],"responses":{"200":{"description":"The deleted GL Code ID is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            401 — Invalid subsriber ID\r\n            606 — Location is not found\r\n            704 — Invalid trade value for the subscriber\r\n            705 — Invalid category value for the subscriber\r\n            707 — GL Code does not exist","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/GlCodes/GetGlCode":{"get":{"tags":["GlCodes"],"summary":"Get a GL Code","description":"Get a gl code from trade, category, location id.","operationId":"GETv3_GlCodes_GetGlCode?locationId={locationId}&trade={trade}&category={category}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","description":"Location ID. Numeric id of location.","required":true,"type":"integer","format":"int32"},{"name":"trade","in":"query","description":"Trade name. A trade is an area of work for which a service is performed, such as LIGHTING, ALARMS, or ELECTRICAL. Maximum is 80 characters.","required":true,"type":"string"},{"name":"category","in":"query","description":"Category name. A category is the overall classification of a work order, such as MAINTENANCE, REPAIR, or WARRANTY. Maximum is 50 characters.","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.GlCode.GetGlCodeResponseMessage"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - Request is empty or null.\r\n            <br/> 601 — Invalid Location id.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/{subscriberId}/invoices/{invoiceId}/approve":{"get":{"tags":["Invoices"],"operationId":"GETv3_subscribers_{subscriberId}_invoices_{invoiceId}_approve?orderId={orderId}&userId={userId}&approvalCode={approvalCode}&organizationPermissionId={organizationPermissionId}&category={category}&comment={comment}&overrideUserId={overrideUserId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"orderId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"invoiceId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"userId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"approvalCode","in":"query","required":true,"type":"string"},{"name":"organizationPermissionId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"category","in":"query","required":false,"type":"string"},{"name":"comment","in":"query","required":false,"type":"string"},{"name":"overrideUserId","in":"query","required":false,"type":"integer","format":"int32"},{"name":"subscriberId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"type":"string"}}},"deprecated":false,"x-access":"Any"}},"/invoices/{subscriberId}/InvoiceRequirements":{"get":{"tags":["Invoices"],"summary":"Retrieve general invoice settings for a subscriber","description":"Returns general invoice settings for the specified subscriber.\r\n            <br />Both subscribers and providers can use this method.\r\n             • **Subscribers** should enter their subscriber ID.\r\n             • **Providers** need to pass the ID of the subscriber they have a contract with.\r\n            <br />Subscriber users with the *Super Admin* secondary role set up general invoice parameters in **Admin** &gt; **Invoices** &gt; **General**, where they configure when invoices can be created, if providers should enter a resolution before submitting invoices, and whether any restrictions should apply to invoice numbers. Other parameters may be available if the corresponding features are turned on for the subscriber. Learn more about [configuring general invoice settings](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/557220138/General+Invoice+Configuration) in ServiceChannel University.","operationId":"GETv3_invoices_{subscriberId}_InvoiceRequirements","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"Unique numeric identifier of the subscriber to return general invoice settings for.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"General invoice settings for the specified subscriber are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceSettingsGeneral"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — The provider has no contract with the requested subscriber\r\n            503 — No access. Please check if the SubscriberId is valid","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/invoices/{subscriberId}/InvoiceRejectionReasons":{"get":{"tags":["Invoices"],"summary":"Retrieve invoice rejection reasons for a subscriber","description":"Returns invoice rejection reasons for a subscriber\r\n            <br />Both subscribers and providers can use this method.\r\n             • **Subscribers** should enter their subscriber ID.\r\n             • **Providers** need to pass the ID of the subscriber they have a contract with.","operationId":"GETv3_invoices_{subscriberId}_InvoiceRejectionReasons","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"Unique numeric identifier of the subscriber to return invoice rejection reasons for.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Invoice rejection reasons for the specified subscriber are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceRejectionReasonResponse"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — The provider has no contract with the requested subscriber\r\n            503 — No access. Please check if the SubscriberId is valid","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/invoices/{invoiceId}/reject":{"put":{"tags":["Invoices"],"summary":"Allows reject non-MLI(Multilevel Invoice Approval) invoice","description":"<para>Allows reject non-MLI(Multilevel Invoice Approval) invoice</para>","operationId":"PUTv3_invoices_{invoiceId}_reject?comments={comments}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"invoiceId","in":"path","description":"Invoice Identifier","required":true,"type":"integer","format":"int32"},{"name":"comments","in":"query","description":"Comments","required":true,"type":"string"}],"responses":{"204":{"description":"Indicates that the request succeeded"},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 - Wrong Invoice Id \r\n            <br/> 503 - MLI(Multilevel Invoice Approval) enabled","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/invoices/{invoiceId}/onhold":{"put":{"tags":["Invoices"],"summary":"Allows put invoice on hold for non-MLI(Multilevel Invoice Approval) invoice","description":"<para>Allows put invoice on hold for non-MLI(Multilevel Invoice Approval) invoice</para>","operationId":"PUTv3_invoices_{invoiceId}_onhold?comments={comments}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"invoiceId","in":"path","description":"Invoice Identifier","required":true,"type":"integer","format":"int32"},{"name":"comments","in":"query","description":"Comments","required":true,"type":"string"}],"responses":{"204":{"description":"Indicates that the request succeeded"},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 - Wrong Invoice Id \r\n            <br/> 503 - MLI(Multilevel Invoice Approval) enabled","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/invoices/{invoiceId}/approve":{"put":{"tags":["Invoices"],"summary":"Allows approve non-MLI(Multilevel Invoice Approval) invoice","description":"<para>Allows approve non-MLI(Multilevel Invoice Approval) invoice</para>","operationId":"PUTv3_invoices_{invoiceId}_approve?approvalCode={approvalCode}&comments={comments}&category={category}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"invoiceId","in":"path","description":"Invoice Identifier","required":true,"type":"integer","format":"int32"},{"name":"approvalCode","in":"query","description":"Approval Code","required":true,"type":"string"},{"name":"comments","in":"query","description":"Comments","required":true,"type":"string"},{"name":"category","in":"query","description":"Category","required":true,"type":"string"}],"responses":{"204":{"description":"Indicates that the request succeeded"},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 - Wrong Invoice Id\r\n            <br/> 503 - MLI(Multilevel Invoice Approval) enabled","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/invoices/statistics":{"get":{"tags":["Invoices"],"summary":"Retrieve statistics of all invoices","description":"Retrieves statistics of all invoices. Returns the statistics of all invoices for successful request.\r\n            <br /><br />Only for providers usage.","operationId":"GETv3_invoices_statistics?daysPeriod={daysPeriod}&approvedInThePastDaysPeriod={approvedInThePastDaysPeriod}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"daysPeriod","in":"query","description":"Period in days, last X days for which Invoices statistics was collected (30 by Default).","required":false,"type":"integer","format":"int32"},{"name":"approvedInThePastDaysPeriod","in":"query","description":"Period in days, last X days during which Invoices are approved (3 by Default).","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceStatisticsResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - Only for providers usage;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/invoices":{"post":{"tags":["Invoices"],"summary":"Add an invoice to a work order","description":"Creates an invoice in the *Open* status for the specified work order.\r\n            <br />Find out more about [creating an invoice](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/2205811424/Creating+an+Invoice) in ServiceChannel University.","operationId":"POSTv3_invoices","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request model to create an invoice for the specified work order.\r\n            <br />**Required parameters**:\r\n             • **InvoiceNumber**. Invoice number created by a user.\r\n             • **WoIdentifier**. Unique work order identifier (can be *TrackingNumber* or *WorkOrderNumber* for Contractor and *TrackingNumber* or *PurchaseNumber* for Client).\r\n            <br />If there is no need to specify any details in *Labors*, *Materials*, *Travels*, and *Others* objects, you can send the request without them. \r\n            <br />**Note**: Work Order should be in the *Completed* status to successfully create an invoice.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.CreateInvoiceRequest"}}],"responses":{"201":{"description":"The ID of the created invoice is in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — Request should not be null\r\n            601 — Location not found\r\n            607 — Empty Location State\r\n            904 — Invalid WO Status. WO must be in 'COMPLETED' status with empty extended status or 'COMPLETED' status with 'CONFIRMED' extended status\r\n            914 — Invalid 'Currency' value\r\n            917 — Invalid Tracking Number\r\n            1100 — Invalid Other Amount Description\r\n            1101 — Invalid Tax2 name\r\n            1103 — Invalid Total\r\n            1104 — Invoice Total > NTE\r\n            1105 — Invoice exists\r\n            1106 — Invoice Creation Error\r\n            1107 — Duplicate Invoice number\r\n            1108 — Total is null\r\n            1109 — Completed Date is null\r\n            1110 — Invoice Date < Completed Date\r\n            1111 — This invoice is set to auto-invoice\r\n            1112 — Electronic Signature Agreement Required\r\n            1113 — Work order not found\r\n            1114 — Wrong Work Order currency\r\n            1115 — Work order currency not found\r\n            1116 — Invoicing is disabled. Invoicing might be disabled if your company account is currently in an inactive state in Fixxbook\r\n            1117 — Invoice creation Unexpected Result\r\n            1119 — Invoice labor amount is not equals summary labor items \r\n            1120 — Invoice material amount is not equals summary material items amounts\r\n            1121 — Invoice Date is older than X day(s) from today\r\n            1122 — Invoice Date is greater than X day(s) from today\r\n            1123 — Invoice material description length overflow\r\n            1124 — Invoice material part number length overflow\r\n            1125 — Tax validation error: X\r\n            1126 — Sales Tax should be 0 - X location\r\n            1127 — Invalid Invoice Number\r\n            1135 — Locations can't have GST tax\r\n            1136 — Locations can't have tax2. Only Canadian or European Location can have the Tax2Details array. Tax2Details is only applicable for locations in countries that have some form of a value-added tax\r\n            1145 — You have an outstanding balance with ServiceChannel.  In order to invoice, please login to Fixxbook.com and update your Payment Method.  Once your payment Method is updated you will be able to invoice.;\r\n            1146 — Invoice doesn't have Taxes Breakdown\r\n            1147 — Invoice Taxes Breakdown has incorrect sum\r\n            1151 — Labor Line Items Required\r\n            1152 — Material Line Items Required\r\n            1159 — Invoice material unit type is invalid (should be from 1 to 7)\r\n            1163 — Resolution text required in Invoice Text field\r\n            1180 — Invoice Number is not correct\r\n            1194 - Invoice labor skill level is invalid (should be from 1 to 3)\r\n            1195 — Invoice labor type is invalid (should be from 1 to 3)\r\n            1196 — Invoice technician quantity is invalid (should be > 0)\r\n            1198 — The explanation of Dispute status is empty","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/invoices/{invoiceId}":{"get":{"tags":["Invoices"],"summary":"Get an invoice","description":"Returns the details of the specified invoice.","operationId":"GETv3_invoices_{invoiceId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"invoiceId","in":"path","description":"Numeric identifier of the invoice to get the details for.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The specified invoice is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.ApiGetInvoiceResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            <br/> 504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/invoices/{invoiceId}/discrepancy":{"get":{"tags":["Invoices"],"summary":"Get rates discrepancy","description":"Retrieves Invoice rates discrepancy information. Returns the labor list with rates discrepancy for the specified invoice.","operationId":"GETv3_invoices_{invoiceId}_discrepancy","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"invoiceId","in":"path","description":"Invoice identifier.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy"}}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/invoices/{invoiceId}/discrepancyExtended":{"get":{"tags":["Invoices"],"summary":"Get rates discrepancy","description":"Retrieves Invoice rates discrepancy information. Returns the labor list with rates discrepancy for the specified invoice.","operationId":"GETv3_invoices_{invoiceId}_discrepancyExtended","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"invoiceId","in":"path","description":"Invoice identifier.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceDiscrepancy"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceDiscrepancy"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/invoices/{invoiceId}/Payment":{"post":{"tags":["Invoices"],"summary":"Add a payment to an invoice","description":"Creates a payment record for the specified invoice in the *Approved* status.\r\n            <br />Send this request [GET/odata/invoices](https://developer.servicechannel.com/swagger/ui/index?version=3#/Invoices/Invoices_GetInvoices) to get the invoice ID.\r\n            <br />Learn [how subscribers can mark invoices as paid](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/621936646/Marking+Invoices+as+Paid) in ServiceChannel University.\r\n            <br />**Example Request**\r\n            \r\n                POST /invoices/{invoiceId}/Payment\r\n                {\r\n                 \"PaymentDate\": \"2021-06-10T07:40:47.881Z\",\r\n                 \"PaymentNumber\": \"25469833\",\r\n                 \"PaymentAmount\": 850\r\n                }","operationId":"POSTv3_invoices_{invoiceId}_Payment","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"invoiceId","in":"path","description":"Unique numeric identifier of the invoice to add a payment to.","required":true,"type":"integer","format":"int32"},{"name":"payment","in":"body","description":"Request to add a payment to the specified invoice.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest"}}],"responses":{"204":{"description":"A payment record is added to the specified invoice. "},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/> Error codes:\r\n            503 — Request is invalid\r\n            1178 — Invoice cannot be paid before invoice dates\r\n            1178 — Invoice has already  paid\r\n            1178 — Only approved invoices may pay\r\n            1178 — Payment amount exceeds the actual amount\r\n            1178 — Payment amount should be more than zero\r\n            1178 — Pay not allowed for this subscriber","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/> Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/> Error codes:\r\n            100 — User has no rights to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/invoices/Payments":{"post":{"tags":["Invoices"],"summary":"Add payment records to invoices","description":"Creates payment records for the invoices in the *Approved* status in bulk.\r\n             <br />**Note**: Method is available to users with the *SC Admin*, *Master Admin*, or *Invoice Admin* roles and with the *InvoiceChangeToPaid* feature flag enabled.\r\n             <br />**Example Request**\r\n             \r\n                 POST /invoices/{invoiceId}/Payment\r\n                 {\r\n                   \"Payments\": [\r\n                     {\r\n                       \"InvoiceId\": 96814318,\r\n                       \"PaymentDate\": \"2021-12-13T06:12:22.820Z\",\r\n                       \"PaymentNumber\": \"456858\",\r\n                       \"PaymentAmount\": 756\r\n                     },\r\n                     {\r\n                       \"InvoiceId\": 4988659,\r\n                       \"PaymentDate\": \"2021-12-13T06:12:22.820Z\",\r\n                       \"PaymentNumber\": \"97027818\",\r\n                       \"PaymentAmount\": 1250.55\r\n                     }  \r\n                   ]\r\n                 }","operationId":"POSTv3_invoices_Payments","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json"],"parameters":[{"name":"request","in":"body","description":"Request model to add payment records in bulk.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkRequest"}}],"responses":{"201":{"description":"The payments are successfully added.\r\n            <br/>Error codes:\r\n            503 — Request is invalid\r\n            1178 — Invoice cannot be paid before the invoice creation date\r\n            1178 — Invoice has already been paid\r\n            1178 — No invoice ID\r\n            1178 — Only approved invoices may be paid\r\n            1178 — Payment amount exceeds the actual invoice amount\r\n            1178 — Payment amount should be more than zero\r\n            1178 — Payment is not allowed for this subscriber\r\n            1178 — Payment number cannot exceed 100 characters","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — Request is empty or null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes:\r\n            100 — User has no permissions to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 — Error updating invoices payments in bulk mode","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/invoices/Workorders/{trackingNumber}/Payment":{"post":{"tags":["Invoices"],"summary":"Add a payment record to an invoice by a tracking number","description":"Creates a payment record for the invoice in the *Approved* status by specifying the tracking number of the work order the invoice was created for.\r\n            <br />Learn [how subscribers can mark invoices as paid](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/621936646/Marking+Invoices+as+Paid) in ServiceChannel University.","operationId":"POSTv3_invoices_Workorders_{trackingNumber}_Payment","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":[],"parameters":[{"name":"trackingNumber","in":"path","description":"Tracking number of the work order you want to add the invoice payment record for.","required":true,"type":"integer","format":"int32"},{"name":"payment","in":"body","description":"Invoice payment record request model.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest"}}],"responses":{"204":{"description":"The payment record is added to a particular invoice created for the specified work order. "},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/> Error codes:\r\n            503 — Request is invalid\r\n            1178 — Invoice cannot be paid before invoice dates\r\n            1178 — Invoice has already  paid\r\n            1178 — Only approved invoices may pay\r\n            1178 — Payment amount exceeds the actual amount\r\n            1178 — Payment amount should be more than zero\r\n            1178 — Pay not allowed for this subscriber\r\n            2602 — Invalid WO Tracking Number","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/> Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/> Error codes:\r\n            100 — User has no rights to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/invoices/ping/{serviceName}":{"get":{"tags":["Invoices"],"summary":"Checks state of a service for invoice.","description":"The method allow check some service for invoice for availability state.<br />Responses: 'Success' or 'Fail'.","operationId":"GETv3_invoices_ping_{serviceName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"serviceName","in":"path","description":"Service Name identifier: The value of parameter is 'TWUtilityManager' or 'TWCalculationManager'  in currently.","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded. Specified service is available.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Indicates that the request failed. Action parameter is mismatched or missed.","schema":{"$ref":"#/definitions/System.Object"}},"401":{"description":"An unauthorized request."},"503":{"description":"Indicates that the request failed. Specified service is unavailable."}},"deprecated":false,"x-access":"Any"}},"/api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist":{"get":{"tags":["IssueList"],"summary":"The get.","operationId":"GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"The subscriber id.","required":true,"type":"integer","format":"int32"},{"name":"dashboardId","in":"path","description":"The dashboard id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/subscribers/{subscriberId}/issuelists":{"get":{"tags":["IssueList"],"summary":"The post.","operationId":"GETv3_api_subscribers_{subscriberId}_issuelists?pageIndex={pageIndex}&pageSize={pageSize}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"The subscriber Id.","required":true,"type":"integer","format":"int32"},{"name":"pageIndex","in":"query","description":"The page index.","required":false,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"The page size.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["IssueList"],"summary":"The post.","operationId":"POSTv3_api_subscribers_{subscriberId}_issuelists","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"The request.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.PostIssueListRequest"}},{"name":"subscriberId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/subscribers/{subscriberId}/issuelists/history":{"get":{"tags":["IssueList"],"summary":"The get issue list history.","operationId":"GETv3_api_subscribers_{subscriberId}_issuelists_history?pageIndex={pageIndex}&pageSize={pageSize}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"The subscriber id.","required":true,"type":"integer","format":"int32"},{"name":"pageIndex","in":"query","description":"The page index.","required":false,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"The page size.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/{issueListId}":{"put":{"tags":["IssueList"],"summary":"The set issue list for dashboard.","operationId":"PUTv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_{issueListId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"The request.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.SetIssueListForDashboardRequest"}},{"name":"subscriberId","in":"path","required":true,"type":"string"},{"name":"dashboardId","in":"path","required":true,"type":"string"},{"name":"issueListId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/fields":{"get":{"tags":["IssueList"],"summary":"The get global fields.","operationId":"GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_fields","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"The subscriber id.","required":true,"type":"integer","format":"int32"},{"name":"dashboardId","in":"path","description":"The dashboard id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/issuelist/globalfields":{"get":{"tags":["IssueList"],"summary":"The get global fields. Authorized version of 'storedashboards/{dashboardId:int}/issuelist/fields'","operationId":"GETv3_issuelist_globalfields?locationId={locationId}&subscriberId={subscriberId}&setupId={setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","required":false,"type":"integer","format":"int32"},{"name":"subscriberId","in":"query","required":false,"type":"integer","format":"int32"},{"name":"setupId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/providers/current/subscribers/{subscriberId}/applicationissuelist/globalfields":{"get":{"tags":["IssueList"],"summary":"The get global fields. Authorized version of 'storedashboards/{dashboardId:int}/issuelist/fields'","operationId":"GETv3_providers_current_subscribers_{subscriberId}_applicationissuelist_globalfields?locationId={locationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"The subscriber id is required.","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"query","description":"Numeric id of location.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Providers"}},"/api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/areas/{areaId}/problemtypes":{"get":{"tags":["IssueList"],"summary":"The get problem types.","operationId":"GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_areas_{areaId}_problemtypes","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"The subscriber id.","required":true,"type":"integer","format":"int32"},{"name":"dashboardId","in":"path","description":"The dashboard id.","required":true,"type":"integer","format":"int32"},{"name":"areaId","in":"path","description":"The area id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/current/storedashboards/current/issuelist/areas/{areaId}/problemtypes":{"get":{"tags":["IssueList"],"summary":"Get Problem types","description":"List Problem types. Returns Problem types for successful request.","operationId":"GETv3_subscribers_current_storedashboards_current_issuelist_areas_{areaId}_problemtypes?locationId={locationId}&setupId={setupId}&subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"areaId","in":"path","description":"Numeric id of the Location Area.","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"query","description":"Numeric id of location.","required":false,"type":"integer","format":"int32"},{"name":"setupId","in":"query","description":"Numeric id of the Store Dashboard setup.","required":false,"type":"integer","format":"int32"},{"name":"subscriberId","in":"query","description":"Numeric id of subscriber.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n            <br/> 1001 - No issue list is available, please load it through issue list converter;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/providers/current/applicationissuelist/areas/{areaId}/problemtypes":{"get":{"tags":["IssueList"],"summary":"Get Problem types","description":"List Problem types. Returns Problem types for successful request.","operationId":"GETv3_providers_current_applicationissuelist_areas_{areaId}_problemtypes?locationId={locationId}&setupId={setupId}&subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"areaId","in":"path","description":"Numeric id of the Location Area.","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"query","description":"Numeric id of location.","required":false,"type":"integer","format":"int32"},{"name":"setupId","in":"query","description":"Numeric id of the Store Dashboard setup.","required":false,"type":"integer","format":"int32"},{"name":"subscriberId","in":"query","description":"Numeric id of subscriber.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n            <br/> 1001 - No issue list is available, please load it through issue list converter;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/issuelist/problemtypes":{"get":{"tags":["IssueList"],"summary":"Get Problem types","description":"List Problem types. Returns Problem types for successful request.","operationId":"GETv3_issuelist_problemtypes?areaId={areaId}&locationId={locationId}&setupId={setupId}&subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"areaId","in":"query","description":"Numeric id of the Location Area.","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"query","description":"Numeric id of location.","required":false,"type":"integer","format":"int32"},{"name":"setupId","in":"query","description":"Numeric id of the Store Dashboard setup.","required":false,"type":"integer","format":"int32"},{"name":"subscriberId","in":"query","description":"Numeric id of subscriber.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n            <br/> 1001 - No issue list is available, please load it through issue list converter;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/areas/{areaId}/items":{"get":{"tags":["IssueList"],"summary":"The get items filtered by area type and location.","operationId":"GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_areas_{areaId}_items?problemType={problemType}&locationId={locationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"The subsriber id.","required":true,"type":"integer","format":"int32"},{"name":"dashboardId","in":"path","description":"The dashboard id.","required":true,"type":"integer","format":"int32"},{"name":"areaId","in":"path","description":"The area Id.","required":true,"type":"integer","format":"int32"},{"name":"problemType","in":"query","description":"The problem type.","required":true,"type":"string"},{"name":"locationId","in":"query","description":"The location id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/subscribers/{subscriberId}/issuelist/headers":{"get":{"tags":["IssueList"],"operationId":"GETv3_api_subscribers_{subscriberId}_issuelist_headers","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/areas/{areaId}/problems":{"get":{"tags":["IssueList"],"summary":"The get problems filtered by area type and location.","operationId":"GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_areas_{areaId}_problems?problemType={problemType}&item={item}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"The subsriber id.","required":true,"type":"integer","format":"int32"},{"name":"dashboardId","in":"path","description":"The dashboard id.","required":true,"type":"integer","format":"int32"},{"name":"areaId","in":"path","description":"The area id.","required":true,"type":"integer","format":"int32"},{"name":"problemType","in":"query","description":"The problem type.","required":true,"type":"string"},{"name":"item","in":"query","description":"The item.","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/issuechoice":{"get":{"tags":["IssueList"],"summary":"The get issue choice.","operationId":"GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_issuechoice","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Get Issue Choice request","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceRequest"}},{"name":"subscriberId","in":"path","required":true,"type":"string"},{"name":"dashboardId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/current/storedashboards/current/issuelist/issuechoice":{"get":{"tags":["IssueList"],"operationId":"GETv3_subscribers_current_storedashboards_current_issuelist_issuechoice?problemType={problemType}&equipmentType={equipmentType}&problemCode={problemCode}&locationId={locationId}&setupId={setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"problemType","in":"query","required":true,"type":"string"},{"name":"equipmentType","in":"query","required":true,"type":"string"},{"name":"problemCode","in":"query","required":true,"type":"string"},{"name":"locationId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"setupId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/issuelist/issuechoice":{"get":{"tags":["IssueList"],"operationId":"GETv3_issuelist_issuechoice?problemType={problemType}&equipmentType={equipmentType}&problemCode={problemCode}&locationId={locationId}&setupId={setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"problemType","in":"query","required":true,"type":"string"},{"name":"equipmentType","in":"query","required":true,"type":"string"},{"name":"problemCode","in":"query","required":true,"type":"string"},{"name":"locationId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"setupId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/current/storedashboards/current/issuelist/specific/issuechoice":{"get":{"tags":["IssueList"],"summary":"Get specific issue choice","operationId":"GETv3_subscribers_current_storedashboards_current_issuelist_specific_issuechoice?SubscriberId={SubscriberId}&DashboardSetupId={DashboardSetupId}&Trade={Trade}&Priority={Priority}&Category={Category}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"dashboardSetupId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"trade","in":"query","required":true,"type":"string"},{"name":"priority","in":"query","required":true,"type":"string"},{"name":"category","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/issuechoice/fields":{"get":{"tags":["IssueList"],"summary":"The get issue choice fiels.","operationId":"GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_issuechoice_fields?problemType={problemType}&item={item}&problem={problem}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"The subscriber id.","required":true,"type":"integer","format":"int32"},{"name":"dashboardId","in":"path","description":"The dashboard id.","required":true,"type":"integer","format":"int32"},{"name":"problemType","in":"query","description":"The problem type.","required":true,"type":"string"},{"name":"item","in":"query","description":"The item.","required":true,"type":"string"},{"name":"problem","in":"query","description":"The problem.","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/current/storedashboards/current/issuelist/areas":{"get":{"tags":["IssueList"],"summary":"Get Areas","description":"List Issue Areas. Returns Issue Areas for successful request.\r\n            <br /><br />Available for subscriber usage.","operationId":"GETv3_subscribers_current_storedashboards_current_issuelist_areas?locationId={locationId}&setupId={setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","description":"selected locationId.","required":false,"type":"integer","format":"int32"},{"name":"setupId","in":"query","description":"Numeric id of the Store Dashboard setup.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1000 - Invalid setupId(dashboard) for current user;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/issuelist/areas":{"get":{"tags":["IssueList"],"summary":"Get Areas","description":"List Issue Areas. Returns Issue Areas for successful request.\r\n            <br /><br />Available for subscriber usage.","operationId":"GETv3_issuelist_areas?locationId={locationId}&setupId={setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","description":"selected locationId.","required":false,"type":"integer","format":"int32"},{"name":"setupId","in":"query","description":"Numeric id of the Store Dashboard setup.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1000 - Invalid setupId(dashboard) for current user;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/providers/current/subscribers/{subscriberId}/applicationissuelist/areas":{"get":{"tags":["IssueList"],"summary":"Get Areas","description":"List Issue Areas. Returns Issue Areas for successful request.\r\n            <br /><br />Available for provider usage.","operationId":"GETv3_providers_current_subscribers_{subscriberId}_applicationissuelist_areas?locationId={locationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"The subscriber id is required.","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"query","description":"Numeric id of location.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1000 - Invalid setupId(dashboard) for current user;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/providers/current/subscriber/{subscriberId}/location/{locationId}/applicationissuelist/problemtypes":{"get":{"tags":["IssueList"],"operationId":"GETv3_providers_current_subscriber_{subscriberId}_location_{locationId}_applicationissuelist_problemtypes","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Providers"}},"/subscribers/current/storedashboards/current/issuelist/areas/{areaId}/equipmenttypes":{"get":{"tags":["IssueList"],"summary":"Get Equipment items","description":"List equipment items.\r\n            <br /><br />Available for subscriber usage.","operationId":"GETv3_subscribers_current_storedashboards_current_issuelist_areas_{areaId}_equipmenttypes?locationId={locationId}&problemType={problemType}&setupId={setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","description":"Numeric id of the Location.","required":true,"type":"integer","format":"int32"},{"name":"areaId","in":"path","description":"Numeric id of the Location Area.","required":true,"type":"integer","format":"int32"},{"name":"problemType","in":"query","description":"Problem type.","required":true,"type":"string"},{"name":"setupId","in":"query","description":"Numeric id of the Store Dashboard setup.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n            <br/> 1001 - No issue list is available, please load it through issue list converter;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/issuelist/items":{"get":{"tags":["IssueList"],"summary":"Get Equipment items","description":"List equipment items.\r\n            <br /><br />Available for subscriber usage.","operationId":"GETv3_issuelist_items?locationId={locationId}&areaId={areaId}&problemType={problemType}&setupId={setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","description":"Numeric id of the Location.","required":true,"type":"integer","format":"int32"},{"name":"areaId","in":"query","description":"Numeric id of the Location Area.","required":true,"type":"integer","format":"int32"},{"name":"problemType","in":"query","description":"Problem type.","required":true,"type":"string"},{"name":"setupId","in":"query","description":"Numeric id of the Store Dashboard setup.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n            <br/> 1001 - No issue list is available, please load it through issue list converter;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/current/dashboard/{setupId}/issuelist/equipmenttypes":{"get":{"tags":["IssueList"],"summary":"Get Equipment items not filtered by location.","description":"List equipment items not filtered by location.\r\n            <br /><br />Available for subscriber usage.","operationId":"GETv3_subscribers_current_dashboard_{setupId}_issuelist_equipmenttypes?areaId={areaId}&problemType={problemType}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupId","in":"path","description":"Numeric id of the Store Dashboard setup.","required":true,"type":"integer","format":"int32"},{"name":"areaId","in":"query","description":"Numeric id of the Location Area.","required":true,"type":"integer","format":"int32"},{"name":"problemType","in":"query","description":"Problem type.","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n            <br/> 1001 - No issue list is available, please load it through issue list converter;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/providers/current/subscribers/{subscriberId}/applicationissuelist/items":{"get":{"tags":["IssueList"],"summary":"Get Equipment items","description":"List equipment items.\r\n            <br /><br />Available for provider usage.","operationId":"GETv3_providers_current_subscribers_{subscriberId}_applicationissuelist_items?locationId={locationId}&areaId={areaId}&problemType={problemType}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"This parameter is required.","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"query","description":"Numeric id of the Location.","required":true,"type":"integer","format":"int32"},{"name":"areaId","in":"query","description":"Numeric id of the Location Area.","required":true,"type":"integer","format":"int32"},{"name":"problemType","in":"query","description":"Problem type.","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n            <br/> 1001 - No issue list is available, please load it through issue list converter;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/subscribers/current/storedashboards/current/issuelist/areas/{areaId}/problemcodes":{"get":{"tags":["IssueList"],"summary":"Get Problem codes","description":"List problem codes.\r\n            <br /><br />Available for subscriber usage.","operationId":"GETv3_subscribers_current_storedashboards_current_issuelist_areas_{areaId}_problemcodes?problemType={problemType}&equipmentType={equipmentType}&locationId={locationId}&setupId={setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"areaId","in":"path","description":"Numeric id of the Location Area.","required":true,"type":"integer","format":"int32"},{"name":"problemType","in":"query","description":"Problem type.","required":true,"type":"string"},{"name":"equipmentType","in":"query","description":"Equipment type.","required":true,"type":"string"},{"name":"locationId","in":"query","description":"selected locationId.","required":false,"type":"integer","format":"int32"},{"name":"setupId","in":"query","description":"Numeric id of the Store Dashboard setup.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n            <br/> 1001 - No issue list is available, please load it through issue list converter;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/issuelist/problems":{"get":{"tags":["IssueList"],"summary":"Get Problem codes","description":"List problem codes.\r\n            <br /><br />Available for subscriber usage.","operationId":"GETv3_issuelist_problems?areaId={areaId}&problemType={problemType}&equipmentType={equipmentType}&locationId={locationId}&setupId={setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"areaId","in":"query","description":"Numeric id of the Location Area.","required":true,"type":"integer","format":"int32"},{"name":"problemType","in":"query","description":"Problem type.","required":true,"type":"string"},{"name":"equipmentType","in":"query","description":"Equipment type.","required":true,"type":"string"},{"name":"locationId","in":"query","description":"selected locationId.","required":false,"type":"integer","format":"int32"},{"name":"setupId","in":"query","description":"Numeric id of the Store Dashboard setup.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n            <br/> 1001 - No issue list is available, please load it through issue list converter;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/providers/current/subscribers/{subscriberId}/applicationissuelist/problems":{"get":{"tags":["IssueList"],"summary":"Get Problem codes","description":"List problem codes.\r\n            <br /><br />Available for provider usage.","operationId":"GETv3_providers_current_subscribers_{subscriberId}_applicationissuelist_problems?areaId={areaId}&problemType={problemType}&equipmentType={equipmentType}&locationId={locationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"This parametr is required.","required":true,"type":"integer","format":"int32"},{"name":"areaId","in":"query","description":"Numeric id of the Location Area.","required":true,"type":"integer","format":"int32"},{"name":"problemType","in":"query","description":"Problem type.","required":true,"type":"string"},{"name":"equipmentType","in":"query","description":"Equipment type.","required":true,"type":"string"},{"name":"locationId","in":"query","description":"Numeric id of location.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n            <br/> 1001 - No issue list is available, please load it through issue list converter;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/providers/current/applicationissuelist/issueitems":{"get":{"tags":["IssueList"],"operationId":"GETv3_providers_current_applicationissuelist_issueitems?subscriberId={subscriberId}&locationId={locationId}&areaId={areaId}&trade={trade}&problemType={problemType}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"areaId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"trade","in":"query","required":true,"type":"string"},{"name":"problemType","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Providers"}},"/subscribers/current/storedashboards/current/issuelist/field":{"get":{"tags":["IssueList"],"operationId":"GETv3_subscribers_current_storedashboards_current_issuelist_field?id={id}&setupId={setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"query","required":true,"type":"string"},{"name":"setupId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/issuelist/field":{"get":{"tags":["IssueList"],"operationId":"GETv3_issuelist_field?id={id}&setupId={setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"query","required":true,"type":"string"},{"name":"setupId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/api/subscribers/{subscriberId}/storedashboards/issuelist/items":{"get":{"tags":["IssueList"],"summary":"The get.","operationId":"GETv3_api_subscribers_{subscriberId}_storedashboards_issuelist_items?equipmentType={equipmentType}&locationId={locationId}&setupId={setupId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"The subscriber id.","required":true,"type":"integer","format":"int32"},{"name":"equipmentType","in":"query","description":"The Equipment Type.","required":true,"type":"string"},{"name":"locationId","in":"query","description":"The location id.","required":false,"type":"integer","format":"int32"},{"name":"setupId","in":"query","description":"","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/providers/current/subscribers/{subscriberId}/issuelist":{"get":{"tags":["IssueList"],"summary":"Retrieves the issue list for a FTM provider","operationId":"GETv3_providers_current_subscribers_{subscriberId}_issuelist?assetId={assetId}&locationId={locationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"assetId","in":"query","description":"Optional asset ID","required":false,"type":"integer","format":"int32"},{"name":"locationId","in":"query","description":"Optional location ID","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Providers"}},"/issuelist/issuechoiceinfo/{trackingNumber}":{"get":{"tags":["IssueList"],"summary":"The get issue choice info.","operationId":"GETv3_issuelist_issuechoiceinfo_{trackingNumber}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"trackingNumber","in":"path","description":"The Tracking Number.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/ivr/message":{"get":{"tags":["IVR"],"summary":"","operationId":"GETv3_ivr_message?MessageId={MessageId}&Language={Language}&SetupPhoneId={SetupPhoneId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"messageId","in":"query","required":true,"type":"string"},{"name":"language","in":"query","required":true,"type":"string"},{"name":"setupPhoneId","in":"query","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IVR.IvrMessageResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br>Error codes:<br> 503 - Empty tracking number;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/leakPartUseAvailableAmount":{"get":{"tags":["IVR"],"operationId":"GETv3_workorders_{workorderId}_leakPartUseAvailableAmount","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IVR.IvrBaseResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br>Error codes:<br> 503 - Empty tracking number;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/outbound/getphones":{"get":{"tags":["IVR"],"operationId":"GETv3_outbound_getphones?environment={environment}&outboundEvent={outboundEvent}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"environment","in":"query","required":true,"type":"string","enum":["Prod","Dev"]},{"name":"outboundEvent","in":"query","required":true,"type":"string","enum":["Unknown","EDR","NoDispatch","MissedETA","NoCheckout"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/languages/updateLanguageSetting":{"post":{"tags":["Languages"],"summary":"Set language for subscriber or provider","description":"Update a language setting for subscriber or provider. \r\n            <br /> ***Note***: This method is available to *Provider Directory (aka Fixxbook)* users only.","operationId":"POSTv3_languages_updateLanguageSetting","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Languages.UpdateLanguagesRequest"}}],"responses":{"200":{"description":"The language setting is updated."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc\r\n            < br /> Error codes:\r\n            101 - Invalid provider id\r\n            104 - ProviderId not found\r\n            401 — Invalid subscriber id\r\n            405 — SubscriberId not found\r\n            850 — You must set SubscriberId or ProviderId\r\n            851 — National language not found\r\n            852 — Invalid language id    \r\n            853 — LanguageId not found\r\n            854 - You should set subscriberId or providerId","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/stores":{"get":{"tags":["Locations"],"summary":"Retrieve stores","description":"Returns a list of all Locations, also called Stores, if neither of the filters is used. You can get the details for a certain store by specifying any of the following parameters: `Id`, `storeIdentifier`, `name`.\r\n            <br /> You can use either of these methods to get a list of the subscriber’s locations: [GET /locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_), [GET /stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_).\r\n            <br /> Visit ServiceChannel University to find out more about [locations and provider assignments](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556105830/Locations+Provider+Assignments).","operationId":"GETv3_stores?Id={Id}&storeIdentifier={storeIdentifier}&Name={Name}&Sort={Sort}&Page={Page}&PageSize={PageSize}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"query","description":"Unique location identifier.","required":false,"type":"integer","format":"int32"},{"name":"storeIdentifier","in":"query","description":"Alphanumeric location identifier in the client’s system. Assigned by and unique per subscriber.","required":false,"type":"string"},{"name":"name","in":"query","description":"Location name.","required":false,"type":"string"},{"name":"sort","in":"query","description":"Sort resources by the specified property in the response.","required":false,"type":"string"},{"name":"page","in":"query","description":"Results page number.","required":false,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"Number of objects on the results page. The default and maximum per page is 50.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested locations are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.GetLocationsWithTotalResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc\r\n            <br/>Error codes: \r\n            502 — Subscriber not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - API call rejected by security permissions\r\n            100 — User has no permissions to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error. \r\n            <br/>Error codes:\r\n            501 — “Location ID” is not a valid value for Int32\r\n            ","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/locations":{"get":{"tags":["Locations"],"summary":"Retrieve stores","description":"Returns a list of all Locations, also called Stores, if neither of the filters is used. You can get the details for a certain store by specifying any of the following parameters: `Id`, `storeIdentifier`, `name`.\r\n            <br /> You can use either of these methods to get a list of the subscriber’s locations: [GET /locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_), [GET /stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_).\r\n            <br /> Visit ServiceChannel University to find out more about [locations and provider assignments](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556105830/Locations+Provider+Assignments).","operationId":"GETv3_locations?Id={Id}&storeIdentifier={storeIdentifier}&Name={Name}&Sort={Sort}&Page={Page}&PageSize={PageSize}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"query","description":"Unique location identifier.","required":false,"type":"integer","format":"int32"},{"name":"storeIdentifier","in":"query","description":"Alphanumeric location identifier in the client’s system. Assigned by and unique per subscriber.","required":false,"type":"string"},{"name":"name","in":"query","description":"Location name.","required":false,"type":"string"},{"name":"sort","in":"query","description":"Sort resources by the specified property in the response.","required":false,"type":"string"},{"name":"page","in":"query","description":"Results page number.","required":false,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"Number of objects on the results page. The default and maximum per page is 50.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested locations are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.GetLocationsWithTotalResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc\r\n            <br/>Error codes: \r\n            502 — Subscriber not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - API call rejected by security permissions\r\n            100 — User has no permissions to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error. \r\n            <br/>Error codes:\r\n            501 — “Location ID” is not a valid value for Int32\r\n            ","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Locations"],"summary":"Add a location","description":"Creates a location for the authorized subscriber.\r\n            <br />**Note:** Method is available for users with the *Super Admin* or *Admin User* permissions, or the *SC Admin* role.\r\n            <br />Learn [how subscribers can create inventory locations](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1209106525/Creating+Inventory+Locations) in ServiceChannel University.\r\n            <br />**Example request**\r\n            \r\n                PUT / locations/{locationId}\r\n                {\r\n                 \"StoreId\":\"34\",\r\n                 \"Name\": \"CSR Flagship\",\r\n                 \"Latitude\": 40.736601,\r\n                 \"Longitude\": -73.991795,\r\n                 \"Distance\": null,\r\n                 \"Address1\": \"3rd Floor, Innovation Center\",\r\n                 \"Address2\": \"18 E. 16th Street\",\r\n                 \"City\": \"New York\",\r\n                 \"State\": \"NY\",\r\n                 \"StateId\": 1,\r\n                 \"Region\": \"Northeast\",\r\n                 \"District\": \"NYC/LI\",\r\n                 \"Zip\": \"10003\",\r\n                 \"Country\": \"US\",\r\n                 \"CountryId\": 1,\r\n                 \"ClosedDate\": \"\",\r\n                 \"OpenDate\": \"2021-07-03T00:10:00.308Z\",\r\n                 \"Email\": \"csrflagship@gmail.com\",\r\n                 \"Phone\": \"212-555-1212\",\r\n                 \"Contact\": \"\",\r\n                 \"FaxNumber\": \"\",\r\n                 \"LocationTypeId\": null,\r\n                 \"SquareValue\": 20.21\r\n                 \"SquareMeasure\": \"ft or foot\" or \"m or metre\"\r\n                }","operationId":"POSTv3_locations","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request to add a new location.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.CreateLocationRequest"}}],"responses":{"201":{"description":"A new location is created. The location ID is in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — Request is empty\r\n            503 — Request is empty or null\r\n            605 — Location with Store Id already exists\r\n            606 — The `StoreId` value cannot be empty. The maximum length is 50 characters.\r\n            631 — The `City` value cannot be empty. The maximum length is 50 characters.\r\n            632 — The `Zip` value cannot be empty. The maximum length is 12 characters.\r\n            633 — Latitude value should be between '-90' and '90'.\r\n            634 — Longitude value should be between '-180' and '180'.\r\n            635 — Invalid Email.\r\n            636 — The `Name` value cannot be empty. The maximum length is 100 characters.\r\n            637 — Invalid `State` format. The maximum length is 2 characters.\r\n            638 — Invalid `Address1` format. The maximum length is 500 characters.\r\n            639 — Invalid `Address2` format. The maximum length is 500 characters.\r\n            640 — The `Country` value cannot be empty. The maximum length is 20 characters.\r\n            641 — Invalid `Region` format. The maximum length is 50 characters.\r\n            642 — Invalid `District` format. The maximum length is 50 characters.\r\n            643 — Invalid `Phone` format. The maximum length is 22 characters.\r\n            644 — Invalid `Contact` format. The maximum length is 50 characters.\r\n            645 — Invalid `FaxNumber` format. The maximum length is 22 characters.\r\n            647 — Location 'state' not found.\r\n            651 — Location 'stateId' not found.\r\n            652 — Incorrect combination of 'State' and 'StateId'\r\n            1254 — Invalid square measure","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 — Object reference not set to an instance of an object","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/current/users/current/stores":{"get":{"tags":["Locations"],"summary":"Get stores","description":"Returns a list of stores with the LocationIDs and subscriber IDs, along with the location address details. The method is available to subscribers only.\r\n            <br /> To get more detailed information, use one of these methods: [GET /stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_), [GET /locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_), [GET /odata/locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/Locations_GetLocations).\r\n            <br /> Learn about updating [location details](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/708936009/Updating+Location+Details) in ServiceChannel University.","operationId":"GETv3_subscribers_current_users_current_stores","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/locations/{locationId}":{"get":{"tags":["Locations"],"summary":"Retrieve a location","description":"Returns the details for the specified location.\r\n            <br /> To receive details of several locations, use one of these methods: [GET /stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_), [GET /locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_), [GET /odata/locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/Locations_GetLocations).","operationId":"GETv3_locations_{locationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Unique numeric identifier of the location to return the details for.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The specified location details are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.LocationWithTimezoneName"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            601 — Location is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["Locations"],"summary":"Update a location","description":"Modifies information of the existing location.You can use either of the following methods to retrieve location details: [GET/stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_), [GET/locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_).\r\n            <br />***Note:*** Method is available for subscribers with the *Super Admin* permission or *SC Admin* role.\r\n            <br />Visit ServiceChannel University to find out [how subscribers can update location details](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/708936009/Updating+Location+Details).\r\n            <br />**Example request**\r\n            \r\n                PUT / locations/{locationId}\r\n                {\r\n                 \"StoreId\": \"34\",\r\n                 \"Name\": \"CSR Flagship\",\r\n                 \"Latitude\": 40.736601,\r\n                 \"Longitude\": -73.991795,\r\n                 \"Distance\": null,\r\n                 \"Address1\": \"3rd Floor, Innovation Center\",\r\n                 \"Address2\": \"18 E. 16th Street\",\r\n                 \"City\": \"New York\",\r\n                 \"State\": \"NY\",\r\n                 \"StateId\": 1,\r\n                 \"Region\": \"Northeast\",\r\n                 \"District\": \"NYC/LI\",\r\n                 \"Zip\": \"10003\",\r\n                 \"Country\": \"US\",\r\n                 \"CountryId\": 1,\r\n                 \"ClosedDate\": \"null\",\r\n                 \"OpenDate\": \"2021-07-05T07:05:04.991Z\",\r\n                 \"Email\": \"flagship@gmail.com\",\r\n                 \"Phone\": \"212-555-1212\",\r\n                 \"Contact\": \"\",\r\n                 \"FaxNumber\": \"\",\r\n                 \"LocationTypeId\": null,\r\n                 \"SquareValue\": 20.21\r\n                 \"SquareMeasure\": \"ft or foot\" or \"m or metre\"\r\n                }","operationId":"PUTv3_locations_{locationId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Unique identifier of the subscriber’s location which information you want to update.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"Request to change the location details. Leaving a parameter empty or excluding it from the request model erases the already existing data.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.UpdateLocationExRequest"}}],"responses":{"200":{"description":"The location details are updated."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            601 — Location not found\r\n            1254 — Invalid square measure","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"},"delete":{"tags":["Locations"],"summary":"Delete a location","description":"Permanently removes a location.\r\n            <br />***Note***: Method is available for users with the *Super Admin* or *Admin User* permissions, or the *SC Admin* role.","operationId":"DELETEv3_locations_{locationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Unique identifier of the subscriber’s location to delete.","required":true,"type":"integer","format":"int32"}],"responses":{"204":{"description":"The location is deleted, and the response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes: \r\n            502 — Data not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions\r\n            804 — User has no permissions to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/locations/{locationId}/notes":{"get":{"tags":["Locations"],"summary":"Retrieve location notes","description":"Returns the location notes for the specified location.","operationId":"GETv3_locations_{locationId}_notes?privateNotes={privateNotes}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Unique ID of the location you want to receive notes for.","required":true,"type":"integer","format":"int32"},{"name":"privateNotes","in":"query","description":"Should privateNotes be included. Settings from dashboardSetup by default","required":false,"type":"boolean","default":false}],"responses":{"200":{"description":"Location notes are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.LocationNote.LocationNote"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            601 — Location not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Locations"],"summary":"Add a location note","description":"Adds a location note for the specified location. If a note is already added, you can change it by sending the request, or leave the `Value` parameter empty to delete the note.\r\n            <br /> To retrieve location IDs along with the location notes, send either of these requests: [GET/stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_), [GET/locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_).\r\n            Get location notes separately for the specified location by sending the [GET/locations/{locationId}/notes](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations__locationId__notes) request.\r\n            <br />***Note***: Method is available for users with the *Super Admin* or *Admin* roles, or the *Location Admin* permission.\r\n            <br /> **Example request**\r\n            \r\n                POST /locations/{locationId}/notes\r\n                {\r\n                  \"Header\": \"Location Manager\",\r\n                  \"Value\": \"John Smith\"\r\n                }","operationId":"POSTv3_locations_{locationId}_notes","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Unique ID of the location you want to update a note for.","required":true,"type":"integer","format":"int32"},{"name":"locNoteHeader","in":"body","description":"Request to add, update or delete a location note header for a location.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeaderApiModelRequest"}}],"responses":{"200":{"description":"The note is added to the specified location."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            601 — Location is not found\r\n            1301 — Request is empty or null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes:\r\n            100 — User has no rights to perform this action\r\n            612 — The user does not have access to update a protected location note header","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            611 — The location note header does not exist on the subscriber instance","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 — Object reference not set to an instance of an object","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/locations/{storeId}/updateNotes":{"post":{"tags":["Locations"],"summary":"Add location notes","description":"Add location notes for the specified location. If a note is already added, you can change it by sending the request, or leave the `Value` parameter empty to delete the note.\r\n            <br /> ***Note***: To retrieve store IDs along with the location notes, send either of these requests: [GET/stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_), [GET/locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_).\r\n            Get location notes separately for the specified location by sending the [GET/locations/{locationId}/notes](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations__locationId__notes) request.\r\n            <br /> **Example request**\r\n            \r\n                POST /locations/{storeId}/updateNotes\r\n                {\r\n                   \"Notes\": [\r\n                       {\r\n                           \"Header\": \"Note1\",\r\n                           \"Value\": \"1\"\r\n                       },\r\n                       {\r\n                           \"Header\": \"Note2\",\r\n                           \"Value\": \"2\"\r\n                       }\r\n                   ]\r\n                }","operationId":"POSTv3_locations_{storeId}_updateNotes","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"storeId","in":"path","description":"Unique storeId of the location you want to update a note for.","required":true,"type":"string"},{"name":"locNoteHeaders","in":"body","description":"Request to add, update or delete a location note headers for a location.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeadersApiModelRequest"}}],"responses":{"200":{"description":"The note is added to the specified location."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            601 — Location is not found\r\n            1301 — Request is empty or null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes:\r\n            100 — User has no rights to perform this action\r\n            612 — The user does not have access to update a protected location note header","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            611 — The location note header does not exist on the subscriber instance","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 — Object reference not set to an instance of an object","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/locations/UnassignedContracts":{"get":{"tags":["Locations"],"summary":"Get unassigned contracts","description":"Returns subscriber’s locations with open trades that have unassigned providers.\r\n            <br /> ***Note***: Method could be outdated causing faulty results.","operationId":"GETv3_locations_UnassignedContracts","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"The requested locations are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.GetProviderAssignmentExtendedLocationsResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/locations/{locationId}/evacuationmaps":{"get":{"tags":["Locations"],"summary":"Get an evacuation plan map of a location","description":"Returns evacuation plan map attachments details for the specified location.\r\n            <br /> Visit ServiceChannel University to learn about [Location Emergency Evacuation Plan Map(s)](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/710312376/Location+Emergency+Evacuation+Plan+Map+s).","operationId":"GETv3_locations_{locationId}_evacuationmaps","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Unique numeric identifier of the location to return the details for.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Location evacuation plan maps are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.GetLocationAttachmentsResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/locations/CheckIfLocationIsOpen":{"get":{"tags":["Locations"],"summary":"Check whether the location is open or closed.","description":"Returns information on the specified location if it is open or closed now. If the `checkTime` parameter is not provided, the location is checked at the current time.\r\n            <br /> Learn about [managing business hours](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/683507788/Managing+Business+Hours) in ServiceChannel University.","operationId":"GETv3_locations_CheckIfLocationIsOpen?locationId={locationId}&checkTime={checkTime}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","description":"Unique location identifier","required":true,"type":"integer","format":"int32"},{"name":"checkTime","in":"query","description":"Date and time to check if the location is open","required":false,"type":"string","format":"date-time"}],"responses":{"200":{"description":"The location opening status is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AfterHours.CheckIfLocationIsOpenResponse"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/{subscriberId}/locationsinfo":{"get":{"tags":["Locations"],"summary":"Retrieve location information","description":"Performs search of locations based on the specified filters and returns a list of locations with all details for the specified subscriber. \r\n            <br /> ***Note***: This method is available to *Provider Directory (aka Fixxbook)* users only.","operationId":"GETv3_subscribers_{subscriberId}_locationsinfo?filterType={filterType}&searchString={searchString}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"Unique subscriber identifier.","required":true,"type":"integer","format":"int32"},{"name":"filterType","in":"query","description":"Filters a collection of resources by their type.","required":false,"type":"string","enum":["StoreId","Region","District","State","Country","County","City"]},{"name":"searchString","in":"query","description":"Returns resources based on the provided query string.","required":false,"type":"string"}],"responses":{"200":{"description":"The location details are in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/locations/GetLocationsByFilterColumns":{"post":{"tags":["Locations"],"summary":"Retrieve locations by filters","description":"Performs search of locations based on the filters specified in the request and returns a list of locations with all details for the specified subscriber.\r\n            <br /> ***Note***: This method is available to *Provider Directory (aka Fixxbook)* users only.","operationId":"POSTv3_locations_GetLocationsByFilterColumns","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationFilterColumns","in":"body","description":"Request parameters to filter the response. The `SubscriberId` parameter is required. For the rest of the parameters, except for `Page`, `CountPerPage`, several values can be added separated with a comma.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Api.Model.Locations.LocationFilterColumns"}}],"responses":{"200":{"description":"The requested locations are in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            100 — User has no rights to perform this action\r\n            502 — The server, while acting as a gateway or proxy, received an invalid response from the upstream server","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 - API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/GetFilteredLocations":{"post":{"tags":["Locations"],"summary":"Get locations by filters","description":"Returns locations based on the filters applied.","operationId":"POSTv3_GetFilteredLocations","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request parameters to filter the response. Parameters can be used separately, as a combination of several parameters, or all at once. For the `LocationIds` and `StateIds` parameters, several values can be entered separated with a comma.\r\n            <br />**Example Request**\r\n            \r\n                POST /GetFilteredLocations\r\n                {\r\n                 \"ProviderId\": 2000069665,\r\n                 \"LocationIds\": [\r\n                   2005862796, 2005901195\r\n                 ],\r\n                 \"StateIds\": [\r\n                   30, 32\r\n                 ]\r\n                }","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.GetFilteredLocationsRequest"}}],"responses":{"200":{"description":"The filtered locations are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.LocationShortModel"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes: \r\n            502 — Subscriber not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes:\r\n            100 — User has no rights to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 — Object reference not set to an instance of an object","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/locations/LocationWithNotes":{"post":{"tags":["Locations"],"summary":"Create a location with location notes","description":"Create or update a location along with location notes.\r\n            <br />**Note:** Method takes a dynamic list of parameters as input.\r\n            <br />**Example request**\r\n            \r\n                POST /locations/LocationWithNotes\r\n                {\r\n                 \"StoreId\":\"TestStore\",\r\n                 \"Name\": \"CSR Flagship\",\r\n                 \"MainAddress\": \"18 E. 16th Street\",\r\n                 \"AddlAddress\": \"3rd Floor, Innovation Center\",\r\n                 \"Latitude\": 40.736601,\r\n                 \"Longitude\": -73.991795,\r\n                 \"City\": \"New York\",\r\n                 \"State\": \"NY\",\r\n                 \"Region\": \"Northeast\",\r\n                 \"District\": \"NYC/LI\",\r\n                 \"Zip\": \"10003\",\r\n                 \"Country\": \"US\",\r\n                 \"OpenDate\": \"2021-07-03T00:10:00.308Z\",\r\n                 \"ClosedDate\": \"\",\r\n                 \"Email\": \"csrflagship@gmail.com\",\r\n                 \"Phone\": \"212-555-1212\",\r\n                 \"Contact\": \"\",\r\n                 \"FaxNumber\": \"\",\r\n                 \"YourLocationNoteHeader1\": \"Value1\",\r\n                 \"YourLocationNoteHeader2\": \"Value2\",\r\n                 \"YourLocationNoteHeaderN\": \"ValueN\"\r\n                }","operationId":"POSTv3_locations_LocationWithNotes","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationWithNotes","in":"body","description":"Request to create or update a location with location notes.","required":true,"schema":{"type":"object","additionalProperties":{"$ref":"#/definitions/System.Object"}}}],"responses":{"200":{"description":"A new location is created or an existing one is updated. The location ID is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.AddUpdateLocationResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            606 — The `StoreId` value cannot be empty. The maximum length is 50 characters.\r\n            611 — The location note header does not exist on the subscriber instance.\r\n            612 — The user does not have access to update a protected location note header.\r\n            630 — Incorrect format of the 'ParameterName'.\r\n            631 — The `City` value cannot be empty. The maximum length is 50 characters.\r\n            632 — The `Zip` value cannot be empty. The maximum length is 12 characters.\r\n            633 — Latitude value should be between '-90' and '90'.\r\n            634 — Longitude value should be between '-180' and '180'.\r\n            635 — Invalid Email.\r\n            636 — The `Name` value cannot be empty. The maximum length is 100 characters.\r\n            637 — Invalid `State` format. The maximum length is 2 characters.\r\n            638 — Invalid `AddlAddress` format. The maximum length is 500 characters.\r\n            639 — Invalid `MainAddress` format. The maximum length is 500 characters.\r\n            640 — The `Country` value cannot be empty. The maximum length is 20 characters.\r\n            641 — Invalid `Region` format. The maximum length is 50 characters.\r\n            642 — Invalid `District` format. The maximum length is 50 characters.\r\n            643 — Invalid `Phone` format. The maximum length is 22 characters.\r\n            644 — Invalid `Contact` format. The maximum length is 50 characters.\r\n            645 — Invalid `FaxNumber` format. The maximum length is 22 characters.\r\n            646 — The country doesn't exist.\r\n            647 — The state doesn't exist in the country.\r\n            648 — The city doesn't exist in the country.\r\n            650 — Invalid `Email` format. The maximum length is 200 characters.\r\n            1301 — Request is empty or null.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/providers/GetProviderLocationAssignments":{"get":{"tags":["Locations"],"summary":"Get provider location assignments","description":"Returns a list of stores with the LocationIDs and StoreIds, along with the first contract (assignment) created date and whether the location is primary or not.\r\n            <br />The method is available to providers only.","operationId":"GETv3_providers_GetProviderLocationAssignments","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"The provider location assignments are in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/providers/GetPrimaryLocationAssignmentsForProviderIds":{"get":{"tags":["Locations"],"summary":"Get provider primary location assignments by Provider Ids","operationId":"GETv3_providers_GetPrimaryLocationAssignmentsForProviderIds?providerIds[0]={providerIds[0]}&providerIds[1]={providerIds[1]}&dateFrom={dateFrom}&dateTo={dateTo}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"providerIds","in":"query","description":"An array of Provider Ids.","required":true,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"dateFrom","in":"query","description":"The start date of the time period for which you want to retrieve location assignments. The format is `YYYY-MM-DDThh:mm:ss.ssZ`.","required":true,"type":"string","format":"date-time"},{"name":"dateTo","in":"query","description":"The end date of the time period for which you want to retrieve location assignments. The format is `YYYY-MM-DDThh:mm:ss.ssZ`","required":true,"type":"string","format":"date-time"}],"responses":{"200":{"description":"The providers location assignments are in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/GetLocationsMobile":{"get":{"tags":["Locations"],"summary":"Get Locations","description":"","operationId":"GETv3_GetLocationsMobile?page={page}&pageSize={pageSize}&latitude={latitude}&longitude={longitude}&searchExpression={searchExpression}&onlyOpened={onlyOpened}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"page","in":"query","description":"Number of the current page","required":true,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"Limit to return items","required":true,"type":"integer","format":"int32"},{"name":"latitude","in":"query","description":"The latitude of the user location","required":false,"type":"number","format":"double"},{"name":"longitude","in":"query","description":"The longitude of the user location","required":false,"type":"number","format":"double"},{"name":"searchExpression","in":"query","description":"User input text","required":false,"type":"string"},{"name":"onlyOpened","in":"query","description":"Include only open locations","required":false,"type":"boolean","default":false}],"responses":{"200":{"description":"The requested locations are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.GetLocationsMobileResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            401 — User has no permissions to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error. \r\n            <br/>Error codes:\r\n            501 — Value of pageSize or page is less than 1","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/GetLocationDistricts":{"get":{"tags":["Locations"],"summary":"Get location districts","operationId":"GETv3_GetLocationDistricts?page={page}&pageSize={pageSize}&searchExpression={searchExpression}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"page","in":"query","description":"Number of the current page","required":true,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"Limit to return items","required":true,"type":"integer","format":"int32"},{"name":"searchExpression","in":"query","description":"User input text","required":false,"type":"string"}],"responses":{"200":{"description":"The requested districts are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.GetLocationDistrictsResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            401 — User has no permissions to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error. \r\n            <br/>Error codes:\r\n            501 — Value of pageSize or page is less than 1","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/locations/addressformats":{"get":{"tags":["Locations"],"summary":"Retrieve address format pattern per list of country ISO codes or per list of address types Ids","description":"Returns a list of address types (Id, Pattern).","operationId":"GETv3_locations_addressformats?c[0]={c[0]}&c[1]={c[1]}&id[0]={id[0]}&id[1]={id[1]}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"c","in":"query","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"id","in":"query","required":true,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"The requested address types with patterns are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.AddressType"}}}},"deprecated":false,"x-access":"Any"}},"/providers/GetProviderAssignmentsForLocationsAndTrades":{"post":{"tags":["Locations"],"summary":"Retrieve Provider Assignments by locations and trades","description":"Returns a list of provider assignments.\r\n            <br />The method is available to subscribers only.","operationId":"POSTv3_providers_GetProviderAssignmentsForLocationsAndTrades","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assignmentsFilter","in":"body","description":"Request parameters to filter the response (maximum number of locations: 200, maximum number of trades: 30).","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Api.Model.Locations.LocationProviderAssignmentsFilter"}}],"responses":{"200":{"description":"The requested locations are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.LocationProviderAssignmentsResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            1301 — Request is empty or null.\r\n            1302 — Too many parameters.\r\n            1303 — The list of location ids or the list of trade names is empty.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/filter":{"post":{"tags":["Locations"],"summary":"Retrieve Locations by location ids","description":"Returns a list of locations.","operationId":"POSTv3_filter","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationFilter","in":"body","description":"Request parameters to filter the response.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.GetLocationsByFilterRequest"}}],"responses":{"200":{"description":"The requested locations are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.GetApiLocationResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            655 — Location Ids List is empty or null.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/landlord-responsibilities":{"get":{"tags":["Locations"],"summary":"Get landlord responsibilities","operationId":"GETv3_landlord-responsibilities?storeId={storeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"storeId","in":"query","description":"","required":false,"type":"string"}],"responses":{"200":{"description":"The requested locations are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.GetLandlordResponsibilityResponse"}},"403":{"description":"User is not assigned to Location \r\n                <br/>Error codes:\r\n                100 — User has no permissions to perform this action.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Location is not found\r\n                <br/>Error codes:\r\n                651 — Location is not found.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"},"put":{"tags":["Locations"],"summary":"Update Landlord Responsibility","operationId":"PUTv3_landlord-responsibilities","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"apiRequest","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.UpdateLandlordResponsibilityApiRequest"}}],"responses":{"201":{"description":"The Landlord Responsibility are updated."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n                <br/>Error codes:\r\n                1301 — Request is empty or null\r\n                503 — Failed to create landlord responsibility\r\n                655 — Landlord responsibility is not found\r\n                656 — The combination of Location Trade and Category must be unique\r\n                659 — Invalid Trade name\r\n                660 — Invalid Category name\r\n                661 — Invalid Override Category name\r\n                662 — Invalid Override Priority name\r\n                663 — Lease Note can not exceed 200 characters\r\n                664 — Invalid override provider rank\r\n                665 — Invalid override NTE","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"User is not assigned to Location \r\n                <br/>Error codes:\r\n                804 — User is not assigned to Location.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Invalid Store Id\r\n                <br/>Error codes:\r\n                606 — Invalid Store Id.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"},"post":{"tags":["Locations"],"summary":"Create landlord responsibility","operationId":"POSTv3_landlord-responsibilities","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"apiRequest","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.CreateLandlordResponsibilityApiRequest"}}],"responses":{"201":{"description":"The Landlord Responsibility are created.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.LandlordResponsibilityModel"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n                <br/>Error codes:\r\n                1301 — Request is empty or null\r\n                503 — Failed to create landlord responsibility\r\n                656 — The combination of Location Trade and Category must be unique\r\n                659 — Invalid Trade Id\r\n                660 — Invalid Category Id\r\n                661 — Invalid Override Category Id\r\n                662 — Invalid Override PriorityId\r\n                663 — Lease Note can not exceed 200 characters\r\n                664 — Invalid override provider rank\r\n                665 — Invalid override NTE","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"User is not assigned to Location \r\n                <br/>Error codes:\r\n                804 — User is not assigned to Location.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Invalid Store Id\r\n                <br/>Error codes:\r\n                606 — Invalid Store Id.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/landlord-responsibilities/{responsibilityId}":{"delete":{"tags":["Locations"],"summary":"Delete Landlord Responsibility","operationId":"DELETEv3_landlord-responsibilities_{responsibilityId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"responsibilityId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The landlord responsibility is deleted."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n                <br/>Error codes:\r\n                655 — Landlord responsibility is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"User is not assigned to Location \r\n                <br/>Error codes:\r\n                804 — User is not assigned to Location.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/locations/{storeId}/attachments":{"get":{"tags":["Locations"],"summary":"Get a Location’s Attachments","description":"Returns a list of attachments.","operationId":"GETv3_locations_{storeId}_attachments","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"storeId","in":"path","description":"","required":true,"type":"string"}],"responses":{"200":{"description":"The requested attachments are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.LocationAttachment"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"User is not assigned to Location \r\n                <br/>Error codes:\r\n                804 — User is not assigned to Location.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Invalid StoreID\r\n                <br/>Error codes:\r\n                606 — Invalid StoreID.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Locations"],"summary":"Create a Location Attachment","operationId":"POSTv3_locations_{storeId}_attachments?fileDescription={fileDescription}&isEvacuationPlan={isEvacuationPlan}","consumes":["multipart/form-data"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"storeId","in":"path","description":"","required":true,"type":"string"},{"name":"fileDescription","in":"query","description":"","required":false,"type":"string"},{"name":"isEvacuationPlan","in":"query","description":"","required":false,"type":"boolean","default":false},{"name":"file","in":"formData","description":"File to attach to the location.","required":true,"type":"file"}],"responses":{"201":{"description":"Created indicates that the attachment created before the response was sent.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.LocationAttachment"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"User is not assigned to Location \r\n                <br/>Error codes:\r\n                804 — User is not assigned to Location.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Invalid StoreID\r\n                <br/>Error codes:\r\n                606 — Invalid StoreID.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/locations/{storeId}/attachments/{attachmentId}":{"delete":{"tags":["Locations"],"summary":"Delete a Location Attachment","operationId":"DELETEv3_locations_{storeId}_attachments_{attachmentId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"storeId","in":"path","description":"","required":true,"type":"string"},{"name":"attachmentId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The attachment is deleted."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"User is not assigned to Location \r\n                <br/>Error codes:\r\n                804 — User is not assigned to Location.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Invalid StoreID\r\n                <br/>Error codes:\r\n                606 — Invalid StoreID.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/locationsupply":{"get":{"tags":["LocationSupply"],"operationId":"GETv3_locationsupply?LocationId={LocationId}&TruckId={TruckId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","required":false,"type":"integer","format":"int32"},{"name":"truckId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["LocationSupply"],"operationId":"PUTv3_locationsupply?LocationId={LocationId}&TruckId={TruckId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"supplyLocations","in":"body","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.LocationSupply.Location"}}},{"name":"locationId","in":"query","required":false,"type":"integer","format":"int32"},{"name":"truckId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["LocationSupply"],"operationId":"POSTv3_locationsupply","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationSupply","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Api.Model.LocationSupply.LocationSupply"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"},"delete":{"tags":["LocationSupply"],"operationId":"DELETEv3_locationsupply?LocationId={LocationId}&TruckId={TruckId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","required":false,"type":"integer","format":"int32"},{"name":"truckId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/mliConfiguration/Levels":{"get":{"tags":["MliConfiguration"],"summary":"Get MLI levels","description":"Returns IDs and names of all MLI levels of the current subscriber.\r\n            <br />Learn more about [MLI levels configuration](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/601555312/Configuring+MLI+Levels) in ServiceChannel University.","operationId":"GETv3_mliConfiguration_Levels","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"MLI levels are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.MliConfiguration.Api.MLILevel"}}},"401":{"description":"The request is not authorized.\r\n            <br/> Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/mliConfiguration/Levels/{levelId}/Users":{"get":{"tags":["MliConfiguration"],"summary":"Get MLI level users","description":"Returns the users assigned to the specified level. The response body is empty if no user has been assigned to this level.\r\n            <br />You can use the [GET /mliConfiguration/Levels](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/GETv3_mliConfiguration_Levels) method to get the MLI levels IDs. Send the [POST /MliConfiguration/Levels/{levelId}/Users/{userId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/POSTv3_MliConfiguration_Levels__levelId__Users__userId_) request to assign users to the MLI level.","operationId":"GETv3_mliConfiguration_Levels_{levelId}_Users","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"levelId","in":"path","description":"Numeric identifier of the MLI level.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The users assigned to the specified MLI level are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.User.Api.AssignedUser"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/> Error codes:\r\n            1128 — Approval levels getting error","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/> Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/MliConfiguration/Levels/{levelId}/Users/{userId}":{"post":{"tags":["MliConfiguration"],"summary":"Add a user to an MLI level","description":"Assigns a user to an existing MLI level. Get users’ IDs by sending the [GET /users](https://developer.servicechannel.com/swagger/ui/index?version=3#/Users/GETv3_users_subscriberId__subscriberId__startIndex__startIndex__maxCount__maxCount_) request.\r\n            <br />You can assign a user to an existing location by using the [POST /MliConfiguration/Levels/{levelId}/Users/{userId}/Locations/{locationId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/POSTv3_MliConfiguration_Levels__levelId__Users__userId__Locations__locationId_) method.\r\n            <br />***Note***: Each user can be added to only one MLI level. If a user should be assigned to another MLI level, you first need to [remove this user from the MLI level](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/DELETEv3_mliConfiguration_Levels__levelId__Users__userId_) they currently belong to.","operationId":"POSTv3_MliConfiguration_Levels_{levelId}_Users_{userId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"levelId","in":"path","description":"Numeric identifier of the MLI level.","required":true,"type":"integer","format":"int32"},{"name":"userId","in":"path","description":"Unique numeric identifier of the user.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns the created user ID from table dat_Division_User."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/> Error codes:\r\n            1129 — Err: failed to assign users\r\n            1131 — Err: Approval level doesn’t exist\r\n            1149 — User has already been assigned to another level\r\n            1150 — User does not exist","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/> Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/> Error codes:\r\n            100 — User has no rights to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/mliConfiguration/Levels/{levelId}/Users/{userId}":{"delete":{"tags":["MliConfiguration"],"summary":"Remove a user from an MLI level","description":"Removes the specified user from a particular MLI level. To unassign a user from an existing location, send the [DELETE /MliConfiguration/Levels/{levelId}/Users/{userId}/Locations/{locationId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/DELETEv3_MliConfiguration_Levels__levelId__Users__userId__Locations__locationId_) request.","operationId":"DELETEv3_mliConfiguration_Levels_{levelId}_Users_{userId}","consumes":[],"produces":[],"parameters":[{"name":"levelId","in":"path","description":"Numeric identifier of the MLI level.","required":true,"type":"integer","format":"int32"},{"name":"userId","in":"path","description":"Unique numeric identifier of the user.","required":true,"type":"integer","format":"int32"}],"responses":{"204":{"description":"The specified user is successfully removed from the MLI level."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/> Error codes:\r\n            1130 — Err: Approval level doesn’t exist\r\n            1130 — User is not assigned to the level\r\n            1150 — User does not exist","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/> Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/> Error codes:\r\n            100 — User has no rights to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/MliConfiguration/Levels/{levelId}/Users/{userId}/Locations/{locationId}":{"post":{"tags":["MliConfiguration"],"summary":"Add a location to a user’s MLI level","description":"Assigns the specified location to a particular user and user’s MLI level. A location can be removed from a user by sending the [DELETE /MliConfiguration/Levels/{levelId}/Users/{userId}/Locations/{locationId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/DELETEv3_MliConfiguration_Levels__levelId__Users__userId__Locations__locationId_) request.","operationId":"POSTv3_MliConfiguration_Levels_{levelId}_Users_{userId}_Locations_{locationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"levelId","in":"path","description":"Numeric identifier of the MLI level.","required":true,"type":"integer","format":"int32"},{"name":"userId","in":"path","description":"Unique numeric identifier of the user.","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"path","description":"Unique numeric identifier of the location.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns the created location ID from table dat_Location_Division."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/> Error codes:\r\n            1128 — Err: Approval level doesn’t exist\r\n            1130 — Failed to assign the location to the user\r\n            1130 — User is not assigned to the level\r\n            1130 — Err: Failed to assign locations to the approval level\r\n            1130 — Location doesn’t exist for the current subscriber\r\n            1150 — User does not exist\r\n            1301 — Request parameters are empty","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/> Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/> Error codes:\r\n            100 — User has no rights to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"delete":{"tags":["MliConfiguration"],"summary":"Remove a location from a user’s MLI level","description":"Removes the specified location from a particular user and MLI level. To assign a location to a user and MLI level, send the [POST /MliConfiguration/Levels/{levelId}/Users/{userId}/Locations/{locationId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/POSTv3_MliConfiguration_Levels__levelId__Users__userId__Locations__locationId_) request.","operationId":"DELETEv3_MliConfiguration_Levels_{levelId}_Users_{userId}_Locations_{locationId}","consumes":[],"produces":[],"parameters":[{"name":"levelId","in":"path","description":"Numeric identifier of the MLI level.","required":true,"type":"integer","format":"int32"},{"name":"userId","in":"path","description":"Unique numeric identifier of the user.","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"path","description":"Unique numeric identifier of the location.","required":true,"type":"integer","format":"int32"}],"responses":{"204":{"description":"The specified location is successfully removed from the user’s MLI level."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/> Error codes:\r\n            1130 — Location is not assigned to the user\r\n            1130 — Approval level doesn’t exist\r\n            1130 — User is not assigned to the level\r\n            1130 — Location doesn’t exist for the current subscriber\r\n            1150 — User doesn’t exist\r\n            1301 — Request parameters are empty","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/> Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/> Error codes:\r\n            100 — User has no rights to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/monitoring/CheckStorageAvalaibility":{"get":{"tags":["Monitoring"],"summary":"This method checks the availability of files on the storage","operationId":"GETv3_monitoring_CheckStorageAvalaibility","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/negotiatedpricelists/negotiatedpricelists":{"get":{"tags":["NegotiatedPriceLists"],"summary":"Get negotiated pricelists","operationId":"GETv3_negotiatedpricelists_negotiatedpricelists?priceListName={priceListName}&providerId={providerId}&locationId={locationId}&applyDatesFilter={applyDatesFilter}&isReturnDeleted={isReturnDeleted}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"priceListName","in":"query","description":"Unique Price List Identifier","required":false,"type":"string"},{"name":"providerId","in":"query","description":"Unique Provider Identifier","required":false,"type":"integer","format":"int32"},{"name":"locationId","in":"query","description":"Unique Location Identifier","required":false,"type":"integer","format":"int32"},{"name":"applyDatesFilter","in":"query","description":"true: Current date between priceList.EffectiveDate and priceList.ExpirationDate; false: date filter is disabled","required":false,"type":"boolean","default":false},{"name":"isReturnDeleted","in":"query","description":"Return deleted items PriceList Parts and PriceList Other Charges","required":false,"type":"boolean","default":false}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.NegotiatedPriceList.NegotiatedPriceList"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            401 — Invalid subsriber ID\r\n            804 — User has no permissions to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/workorders/{workorderId}/notes":{"get":{"tags":["Notes"],"summary":"Work order Notes Collection","description":"Returns list of work order notes, sorted descending by creation date.","operationId":"GETv3_workorders_{workorderId}_notes?paging={paging}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"paging","in":"query","description":"Paging of the collection. Format of the string is: 'pageNumber:pageSize', be advised that pageNumber starts with 1 not 0 Default: \"1:10\".\r\n            To get all notes specify page size as some big number which is 100% bigger then total notes count (9999 works for all cases) and page number as 1.","required":false,"type":"string"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notes.GetNotesResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 917 - Invalid work order identifier. Returned if workorderId is &lt;= 0;\r\n            <br/> 922 - Invalid paging parameter. Returned if paging parameter doesn't correspond to valid format;\r\n            <br/> 100 - You don't have location access to perform this operation;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["Notes"],"summary":"Create a Work order Note","description":"Returns Note Id for successful request.","operationId":"POSTv3_workorders_{workorderId}_notes","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"noteRequest","in":"body","description":"The note request model.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.CreateWoNoteRequest"}}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - You don't have location access to perform this operation;\r\n            <br/> 503 - Validation fails. Invalid WorkOrder Id or Note value;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/notes/recipients":{"get":{"tags":["Notes"],"summary":"Note email recipients","description":"<para>List of email recipients, who can be added to the list of note followers</para>","operationId":"GETv3_workorders_{workorderId}_notes_recipients?showExcluded={showExcluded}&noteVisibility={noteVisibility}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"showExcluded","in":"query","description":"If set to true, returns all recipients even those that have 'exclude from note recipient' flag in their setup. False by Default.","required":false,"type":"boolean","default":false},{"name":"noteVisibility","in":"query","description":"NoteVisibility.Public is used by default","required":false,"type":"string","enum":["VisibleToEveryone","VisibleToProvider","VisibleToClient","NotVisible"]}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 917 - Invalid work order identifier. Returned if workorderId is &lt;= 0;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/notes/followers":{"post":{"tags":["Notes"],"summary":"Add Followers to Work order notes","description":"<para>Add Followers to Work order.</para>","operationId":"POSTv3_workorders_{workorderId}_notes_followers","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The request model to perform action with.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest"}}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br>Error codes:<br>503 - Request data is empty;<br>There is no followers in request;<br>Empty tracking number (workorder Id);","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"},"delete":{"tags":["Notes"],"summary":"Remove Follower from Work order notes","description":"<para>Remove Follower from Work order.</para>","operationId":"DELETEv3_workorders_{workorderId}_notes_followers?email={email}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"email","in":"query","description":"The follower email address.","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br>Error codes:<br>503 - Request data is empty;<br>There is no followers in request;<br>Empty tracking number (workorder Id);","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/NotificationSubscriptions/Http":{"get":{"tags":["NotificationSubscriptions"],"summary":"List existing subscriptions","description":"Returns a list of subscriptions for the current subscriber or provider.","operationId":"GETv3_NotificationSubscriptions_Http","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"The subscriptions are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription"}}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["NotificationSubscriptions"],"summary":"Create a subscription","description":"Creates a new subscription to the specified [event types](https://developer.servicechannel.com/guides/wh/types-of-events/). Returns a unique subscription ID for a successful request.\r\n            See [Event Objects](https://developer.servicechannel.com/guides/wh/event-objects/) for example notification objects and descriptions of their fields.\r\n            <br />**Example Request**\r\n            \r\n                POST /NotificationSubscriptions/Http\r\n                {\r\n                  \"Url\": \"https://your-company.com/webhook-target-URL\",\r\n                  \"Enabled\": true,\r\n                  \"Name\": \"Subscription to new WOs\",\r\n                  \"EventTypes\": [\r\n                    \"WorkOrderCreated\"\r\n                  ],\r\n                  \"Rules\": {\r\n                    \"Trades\": [\r\n                      \"GLASS\"\r\n                    ],\r\n                    \"Categories\": [\r\n                      \"MAINTENANCE\"\r\n                    ]\r\n                  }\r\n                }","operationId":"POSTv3_NotificationSubscriptions_Http","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"req","in":"body","description":"The subscription object that needs to be created.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.AddHttpNotificationSubscriptionRequest"}}],"responses":{"201":{"description":"The subscription is created.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.AddNotificationSubsciptionResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 - Required data missing or incorrect","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/NotificationSubscriptions/Http/{id}":{"get":{"tags":["NotificationSubscriptions"],"summary":"Get a subscription","description":"Retrieves the details of the specified subscription.","operationId":"GETv3_NotificationSubscriptions_Http_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"The unique ID of the subscription to return.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested subscription is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription"}},"400":{"description":"The requested data are not found.\r\n            <br/>Error codes:\r\n            502 - Subscription not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["NotificationSubscriptions"],"summary":"Update a subscription","description":"Updates the specified subscription by setting the values of the parameters passed.\r\n            <br />**Example Request**\r\n            \r\n                PUT /NotificationSubscriptions/Http/{id}\r\n                {\r\n                  \"Id\": 1111,\r\n                  \"Url\": \"https://your-company.com/webhook-target-URL\",\r\n                  \"Enabled\": true,\r\n                  \"Name\": \"Subscription to new WOs\",\r\n                  \"EventTypes\": [\r\n                    \"WorkOrderCreated\"\r\n                  ],\r\n                  \"Rules\": {\r\n                    \"Trades\": [\r\n                      \"GLASS\"\r\n                    ],\r\n                    \"Categories\": [\r\n                      \"MAINTENANCE\"\r\n                    ]\r\n                  }\r\n                }","operationId":"PUTv3_NotificationSubscriptions_Http_{id}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"The unique ID of the subscription to update.","required":true,"type":"integer","format":"int32"},{"name":"req","in":"body","description":"The subscription object that needs to be updated.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription"}}],"responses":{"204":{"description":"The subscription is updated, and the response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 - Subscription not found\r\n            503 - Required data missing or incorrect","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"delete":{"tags":["NotificationSubscriptions"],"summary":"Delete a subscription","description":"Permanently deletes the specified subscription. It cannot be undone.","operationId":"DELETEv3_NotificationSubscriptions_Http_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"The unique ID of the subscription to delete.","required":true,"type":"integer","format":"int32"}],"responses":{"204":{"description":"The subscription is deleted, and the response is intentionally blank."},"400":{"description":"The requested data are not found.\r\n            <br/>Error codes:\r\n            502 - Subscription not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/NotificationSubscriptions/msteams":{"get":{"tags":["NotificationSubscriptions"],"summary":"Get MSTeams Subscription","description":"Retrieves the details of the specified subscription.","operationId":"GETv3_NotificationSubscriptions_msteams?conversationId={conversationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"conversationId","in":"query","description":"Conversation Identifier.","required":true,"type":"string"}],"responses":{"200":{"description":"The requested subscription is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.MSBotNotificationSubscriptionResponse"}},"400":{"description":"The requested data are not found.\r\n            <br/>Error codes:\r\n            502 - Subscription not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/NotificationSubscriptions":{"post":{"tags":["NotificationSubscriptions"],"summary":"Subscribe to Notification","description":"Creates a new Subscription. Returns a unique subscription ID for a successful request.\r\n            See [Event Objects](https://developer.servicechannel.com/guides/wh/event-objects/) for example notification objects and descriptions of their fields.\r\n            <br />**Example Request**\r\n            \r\n                POST /NotificationSubscriptions/Subscribe\r\n                {\r\n                  \"Name\": \"New Subscription\",\r\n                  \"IsEnabled\": true,\r\n                  \"Type\": \"MSBot\",\r\n                  \"Content\": \r\n                  {\r\n                    \"ConversationId\":\"a:1aV4BNOWtTdqJhkdgsdfhsdfhsgjdfgjdrtydjyj\",\r\n                    \"TenantId\":\"1111111-1111-1111-1111-111111111111\",\r\n                    \"UserId\":\"29:1oTNViX5ByDxfsgdfgsdhgjlnkkli\",\r\n                    \"UserName\":\"First Last\",\r\n                    \"ServiceUrl\":\"https://smba.trafficmanager.net/amer/\"\r\n                  }\r\n                }","operationId":"POSTv3_NotificationSubscriptions","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"The subscription object that needs to be created.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionRequest"}}],"responses":{"201":{"description":"The subscription is created.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.AddNotificationSubsciptionResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            2105 - Operation is not allowed.\r\n            503 - Required data missing or incorrect","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/NotificationSubscriptions/{id}":{"delete":{"tags":["NotificationSubscriptions"],"summary":"UnSubscribe","description":"Permanently deletes the specified subscription. It cannot be undone.","operationId":"DELETEv3_NotificationSubscriptions_{id}?type={type}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"The unique ID of the subscription.","required":true,"type":"integer","format":"int32"},{"name":"type","in":"query","description":"type of the subscription.","required":true,"type":"string","enum":["MSTeams"]}],"responses":{"204":{"description":"The subscription is deleted, and the response is intentionally blank."},"400":{"description":"The requested data are not found.\r\n            <br/>Error codes:\r\n            2105 - Operation is not allowed.\r\n            502 - Subscription not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/NotificationSubscriptions/SigningKey":{"get":{"tags":["NotificationSubscriptions"],"summary":"Get a signing key","description":"Retrieves the current subscriber's or provider's signing key.\r\n            A signing key is used to generate event signatures. Use your key to [verify that notifications are sent by SC](https://developer.servicechannel.com/guides/wh/receive-events-and-respond/#verify-an-event).","operationId":"GETv3_NotificationSubscriptions_SigningKey","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"The signing key is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.SigningKeyResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["NotificationSubscriptions"],"summary":"Regenerate a signing key","description":"Regenerates the current subscriber's or provider's signing key. The previous signing key becomes invalid.","operationId":"PUTv3_NotificationSubscriptions_SigningKey","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"The new signing key is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.SigningKeyResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/GetProvidersExclusionList":{"get":{"tags":["NotificationSubscriptions"],"summary":"Get providers exclusion list","description":"List providers who opted out to not receive the notifications","operationId":"GETv3_GetProvidersExclusionList?emailNotificationType={emailNotificationType}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"emailNotificationType","in":"query","description":"1 - Declined WO; 2 - WO Assigned to User; 4 - ETA Missed; 5 - LNH Autocopy","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested providers are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Permission.ProvidersExclusionListResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            401 — Invalid subsriber ID\r\n            804 — User has no permissions to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/NotificationWebHooks":{"get":{"tags":["NotificationWebHooks"],"summary":"List existing webhooks","description":"Returns a list of webhooks for the current subscriber or provider.","operationId":"GETv3_NotificationWebHooks","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"The webhooks are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook"}}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["NotificationWebHooks"],"summary":"Create a webhook","description":"Creates a new webhook for the specified [event types](https://developer.servicechannel.com/guides/wh/types-of-events/). Returns a unique webhook ID for a successful request.\r\n            See [Event Objects](https://developer.servicechannel.com/guides/wh/event-objects/) for example notification objects and descriptions of their fields.\r\n            <br />***Note:*** You can create webhooks using API or via the [Service Automation Admin](https://developer.servicechannel.com/guides/wh/create-and-manage-webhooks-in-UI/).\r\n            <br />**Example Request**\r\n            \r\n                POST /NotificationWebHooks\r\n                {\r\n                  \"Subscriptions\": [\r\n                    {\r\n                      \"Name\": \"Subscription to new WOs\",\r\n                      \"EventTypes\": [\r\n                        \"WorkOrderCreated\"\r\n                      ],\r\n                      \"Rules\": {\r\n                        \"Trades\": [\r\n                          \"GLASS\"\r\n                        ],\r\n                        \"Categories\": [\r\n                          \"MAINTENANCE\"\r\n                        ],\r\n                        \"Statuses\": [\r\n                          \"COMPLETED/CONFIRMED\"\r\n                        ]\r\n                      }\r\n                    }\r\n                  ],\r\n                  \"Enabled\": true,\r\n                  \"Name\": \"New WO webhook\",\r\n                  \"Description\": \"I want to receive notifications when new WOs of GLASS trade and MAINTENANCE category are created.\",\r\n                  \"Url\": \"https://your-company.com/webhook-target-URL\"\r\n                }","operationId":"POSTv3_NotificationWebHooks","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"req","in":"body","description":"The webhook object that needs to be created.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookRequest"}}],"responses":{"201":{"description":"The webhook is created.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 - Required data missing or incorrect","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/NotificationWebHooks/{id}":{"get":{"tags":["NotificationWebHooks"],"summary":"Get a webhook","description":"Retrieves the details of the specified webhook.","operationId":"GETv3_NotificationWebHooks_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"The unique ID of the webhook to return.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested webhook is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook"}},"400":{"description":"The requested data are not found.\r\n            <br/>Error codes:\r\n            502 - Webhook not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["NotificationWebHooks"],"summary":"Update a webhook","description":"Updates the specified webhook by setting the values of the parameters passed.\r\n            <br />**Example Request**\r\n            \r\n                PUT /NotificationWebHooks/{id}\r\n                {\r\n                  \"Subscriptions\": [\r\n                    {\r\n                      \"Id\": 1111,\r\n                      \"Name\": \"Subscription to new WOs\",\r\n                      \"EventTypes\": [\r\n                        \"WorkOrderCreated\"\r\n                      ],\r\n                      \"Rules\": {\r\n                        \"Trades\": [\r\n                          \"GLASS\"\r\n                        ],\r\n                        \"Categories\": [\r\n                          \"MAINTENANCE\"\r\n                        ],\r\n                        \"Statuses\": [\r\n                          \"COMPLETED/CONFIRMED\"\r\n                        ]\r\n                      }\r\n                    }\r\n                  ],\r\n                  \"Id\": 1,\r\n                  \"Enabled\": true,\r\n                  \"Name\": \"New WO webhook\",\r\n                  \"Description\": \"I want to receive notifications when new WOs of GLASS trade and MAINTENANCE category are created.\",\r\n                  \"Url\": \"https://your-company.com/webhook-target-URL\"\r\n                }","operationId":"PUTv3_NotificationWebHooks_{id}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"The unique ID of the webhook to update.","required":true,"type":"integer","format":"int32"},{"name":"req","in":"body","description":"The webhook object that needs to be updated.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook"}}],"responses":{"204":{"description":"The webhook is updated, and the response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 - Webhook not found\r\n            503 - Required data missing or incorrect","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"delete":{"tags":["NotificationWebHooks"],"summary":"Delete a webhook","description":"Permanently deletes the specified webhook. It cannot be undone.","operationId":"DELETEv3_NotificationWebHooks_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"The unique ID of the webhook to delete.","required":true,"type":"integer","format":"int32"}],"responses":{"204":{"description":"The webhook is deleted, and the response is intentionally blank."},"400":{"description":"The requested data are not found.\r\n            <br/>Error codes:\r\n            502 - Webhook not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/workorders/send":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_api_notifications_v2_workorders_send","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/workorders/send":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_notifications_v2_workorders_send","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/workorders/note/send":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_api_notifications_v2_workorders_note_send","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/workorders/note/send":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_notifications_v2_workorders_note_send","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/workorders/ivr/send":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_api_notifications_v2_workorders_ivr_send","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/workorders/ivr/send":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_notifications_v2_workorders_ivr_send","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/workorders/resend":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_api_notifications_v2_workorders_resend","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"data","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/workorders/resend":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_notifications_v2_workorders_resend","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"data","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/workorders/notes/resend":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_api_notifications_v2_workorders_notes_resend","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"data","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/workorders/notes/resend":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_notifications_v2_workorders_notes_resend","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"data","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/workorders/ivr/resend":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_api_notifications_v2_workorders_ivr_resend","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"data","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/workorders/ivr/resend":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_notifications_v2_workorders_ivr_resend","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"data","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/workorders/{id}":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_api_notifications_v2_workorders_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/workorders/{id}":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_notifications_v2_workorders_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/workorders/cxml/{id}":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_api_notifications_v2_workorders_cxml_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/workorders/cxml/{id}":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_notifications_v2_workorders_cxml_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/workorders/notes/{id}":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_api_notifications_v2_workorders_notes_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/workorders/notes/{id}":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_notifications_v2_workorders_notes_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/workorders/ivr/{id}":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_api_notifications_v2_workorders_ivr_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/workorders/ivr/{id}":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_notifications_v2_workorders_ivr_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/workorders/list":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_api_notifications_v2_workorders_list?proId={proId}&start={start}&finish={finish}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"start","in":"query","required":true,"type":"string","format":"date-time"},{"name":"finish","in":"query","required":true,"type":"string","format":"date-time"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/workorders/list":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_notifications_v2_workorders_list?proId={proId}&start={start}&finish={finish}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"start","in":"query","required":true,"type":"string","format":"date-time"},{"name":"finish","in":"query","required":true,"type":"string","format":"date-time"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/workorders/notes/list":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_api_notifications_v2_workorders_notes_list?proId={proId}&start={start}&finish={finish}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"start","in":"query","required":true,"type":"string","format":"date-time"},{"name":"finish","in":"query","required":true,"type":"string","format":"date-time"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/workorders/notes/list":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_notifications_v2_workorders_notes_list?proId={proId}&start={start}&finish={finish}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"start","in":"query","required":true,"type":"string","format":"date-time"},{"name":"finish","in":"query","required":true,"type":"string","format":"date-time"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/workorders/ivr/list":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_api_notifications_v2_workorders_ivr_list?proId={proId}&start={start}&finish={finish}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"start","in":"query","required":true,"type":"string","format":"date-time"},{"name":"finish","in":"query","required":true,"type":"string","format":"date-time"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/workorders/ivr/list":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_notifications_v2_workorders_ivr_list?proId={proId}&start={start}&finish={finish}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"start","in":"query","required":true,"type":"string","format":"date-time"},{"name":"finish","in":"query","required":true,"type":"string","format":"date-time"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v2/sendxml":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_api_notifications_v2_sendxml","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v2/sendxml":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_notifications_v2_sendxml","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/reset":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_api_notifications_reset","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/reset":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_notifications_reset","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/resetnotify":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_api_notifications_resetnotify?setupName={setupName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupName","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/resetnotify":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_notifications_resetnotify?setupName={setupName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupName","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/webhooks/subscribe":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_webhooks_subscribe","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"ud","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/webhooks/unsubscribe":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_webhooks_unsubscribe","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"ud","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/webhooks":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_webhooks","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/webhooks/{id}":{"get":{"tags":["OutgoingXml"],"operationId":"GETv3_webhooks_{id}?providerId={providerId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"providerId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v4/workorders/sendnotify":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_api_notifications_v4_workorders_sendnotify?setupName={setupName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupName","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v4/workorders/sendnotify":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_notifications_v4_workorders_sendnotify?setupName={setupName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupName","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v4/workorders/note/sendnotify":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_api_notifications_v4_workorders_note_sendnotify?setupName={setupName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupName","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v4/workorders/note/sendnotify":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_notifications_v4_workorders_note_sendnotify?setupName={setupName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupName","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/notifications/v4/workorders/status/sendnotify":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_api_notifications_v4_workorders_status_sendnotify?setupName={setupName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupName","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/notifications/v4/workorders/status/sendnotify":{"post":{"tags":["OutgoingXml"],"operationId":"POSTv3_notifications_v4_workorders_status_sendnotify?setupName={setupName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"setupName","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/parts":{"get":{"tags":["Parts"],"summary":"Get a Work order parts","description":"Get a Work order parts. Returns Work order parts collection for successful request.\r\n            <br /><br />Available for provider and subscriber usage.","operationId":"GETv3_workorders_{workorderId}_parts","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"The Work order identity","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrderPartResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["Parts"],"summary":"Update Work order parts","description":"Available only for provider.","operationId":"PUTv3_workorders_{workorderId}_parts","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"The Work order identity","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The Work order parts collection for update","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrderPartsCollectionRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br>Error codes:<br>502 - WorkOrder not found;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Error while processing request.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"},"post":{"tags":["Parts"],"summary":"Create Work order parts","description":"Available only for provider.","operationId":"POSTv3_workorders_{workorderId}_parts","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"A new Work order identity","required":true,"type":"integer","format":"int32"},{"name":"requestModel","in":"body","description":"A new Work order parts collection","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrderPartsCollectionRequest"}}],"responses":{"201":{"description":"Indicates that the request succeeded."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br>Error codes:<br>502 - WorkOrder not found;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Error while processing request.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"},"delete":{"tags":["Parts"],"summary":"Delete Work order parts","description":"Available only for provider.","operationId":"DELETEv3_workorders_{workorderId}_parts?ids[0]={ids[0]}&ids[1]={ids[1]}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"The Work order identity","required":true,"type":"integer","format":"int32"},{"name":"ids","in":"query","description":"The Work order part identity collection for delete","required":true,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"Indicates that the request succeeded."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br>Error codes:<br>502 - WorkOrder not found;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Error while processing request.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/workorders/{workorderId}/{includeConnectorParts}/partsV1":{"get":{"tags":["Parts"],"summary":"Get a Work order parts","description":"Get a Work order parts. Returns Work order parts collection for successful request.\r\n            <br /><br />Available for provider and subscriber usage.","operationId":"GETv3_workorders_{workorderId}_{includeConnectorParts}_partsV1","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"The Work order identity","required":true,"type":"integer","format":"int32"},{"name":"includeConnectorParts","in":"path","description":"Include Connector Parts","required":true,"type":"boolean","default":false}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrderPartResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/inventory/refrigerantusage":{"get":{"tags":["Parts"],"summary":"","operationId":"GETv3_workorders_{workorderId}_inventory_refrigerantusage","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Parts.RefrigerantUsageResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br>Error codes:<br>502 - WorkOrder not found;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Error while processing request.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/inventory/parts/bulkPartUsage":{"post":{"tags":["Parts"],"summary":"Inventory part user record bulk change","operationId":"POSTv3_workorders_inventory_parts_bulkPartUsage","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantBulkChangeRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"type":"string"}},"500":{"description":"Error while processing request.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/partsUsage":{"get":{"tags":["Parts"],"summary":"Retrieve work order parts usage","operationId":"GETv3_workorders_{workorderId}_partsUsage","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br>Error codes:<br>502 - WorkOrder not found;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Error while processing request.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/parts/isTechCertificationUsedOnRefrigerantTracking":{"get":{"tags":["Parts"],"summary":"Verifies that user is associated with parts usage","operationId":"GETv3_parts_isTechCertificationUsedOnRefrigerantTracking?authUserId={authUserId}&technicianId={technicianId}&certificationNumber={certificationNumber}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"authUserId","in":"query","description":"","required":true,"type":"integer","format":"int64"},{"name":"technicianId","in":"query","description":"","required":true,"type":"integer","format":"int32"},{"name":"certificationNumber","in":"query","description":"","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.TechnicianAssociatedResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Error while processing request.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/proposals/statistics":{"get":{"tags":["Proposals"],"summary":"Retrieve statistics on RFPs and proposals","description":"Returns statistics on requests for proposals (RFPs) and proposals for the specified time period for the current provider:\r\n             • RFPs awaiting response\r\n             • Open proposals\r\n             • Approved proposals\r\n             • Proposals in the _On Hold_ and _Reviewed_ statuses\r\n             • Rejected proposals","operationId":"GETv3_proposals_statistics?daysPeriod={daysPeriod}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"daysPeriod","in":"query","description":"Time period set as the number of days prior to the current date for which statistics on RFPs and proposals are returned. The default is 30.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Statistics on RFPs and proposals for the requested time period are returned in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.ProposalStatisticsResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — Only for providers usage","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/proposals/{proposalId}/recipients":{"get":{"tags":["Proposals"],"summary":"Retrieve users who can be added to the list of email recipients to notify of a proposal approval or rejection","description":"Returns users who can be added to the list of email recipients to notify when the specified proposal is approved or rejected.\r\n            <br />***Note:*** This method is only available to subscriber users.","operationId":"GETv3_proposals_{proposalId}_recipients","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proposalId","in":"path","description":"The unique numeric identifier of the proposal.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Users who can be added to the list of email recipients to notify when a proposal is approved or rejected are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — Invalid proposal identifier\r\n            503 — Request is empty or null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/proposals/{proposalId}/validate":{"get":{"tags":["Proposals"],"summary":"Validate a proposal","description":"Checks if the specified proposal exists for the current user.","operationId":"GETv3_proposals_{proposalId}_validate","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proposalId","in":"path","description":"The unique numeric identifier of the proposal to validate.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The specified proposal exists for the current user."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — Proposal not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/proposals/{proposalId}/reject":{"put":{"tags":["Proposals"],"summary":"Reject a proposal","description":"Updates the status of the specified proposal to *Rejected*.\r\n            <br />You can send a proposal rejection notification to a specific user or to all users from the **Proposals/Proposal Alerts** list.\r\n             • `ProviderEmail` and `UserEmail`. Use these parameters to send a proposal rejection notification to a specific user. If passed, any of these parameters prevails over `useProposalAlertEmails`. In case you pass a value to the `ProviderEmail` or `UserEmail` parameter in the request body and set `useProposalAlertEmails` to `true`, a notification is sent to the specified email address, while users from the **Proposals/Proposal Alerts** list are not notified.\r\n             • `useProposalAlertEmails`. Set this parameter to `true` to send proposal rejection notifications to all users listed in the **Proposals/Proposal Alerts** section of **Dispatch Preferences**.\r\n            <br />***Note:*** This method is only available to subscriber users.\r\n            <br />**Example Request**\r\n            \r\n                PUT /proposals/{proposalId}/reject\r\n                {\r\n                   \"Comments\": \"The project is canceled\",\r\n                   \"ProviderEmail\": \"\",\r\n                   \"UserEmail\": \"\",\r\n                   \"RejectReasonCodeId\": 7,\r\n                   \"ActionSource\": \"Standard\",\r\n                   \"ReasonString\": \"\"    \r\n                }","operationId":"PUTv3_proposals_{proposalId}_reject?useProposalAlertEmails={useProposalAlertEmails}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proposalId","in":"path","description":"The unique numeric identifier of the proposal to reject.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The request to update the proposal status to *Rejected*.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest"}},{"name":"useProposalAlertEmails","in":"query","description":"Defines if a proposal rejection notification is sent to all users listed in the **Proposals/Proposal Alerts** section of **Dispatch Preferences**.\r\n            If the parameter value is `true`, users from the **Proposals/Proposal Alerts** list get a notification if the `ProviderEmail` and `UserEmail` parameters are not passed. If set to `false` or not passed, this parameter is ignored.","required":false,"type":"boolean","default":false}],"responses":{"204":{"description":"The proposal status is set to *Rejected*, users are notified based on the passed parameters, and the values of the specified parameters are updated.<br/>The response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            401 — Invalid subscriber id\r\n            502 — Proposal not found\r\n            503 — The proposal status is already Rejected\r\n            503 — The user is MLP user\r\n            503 — Request is empty or null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/ProposalsReject":{"put":{"tags":["Proposals"],"summary":"Reject proposals","description":"Updates the status of the specified proposal to *Rejected*.\r\n            <br />***Note:*** This method is only available to subscriber users.","operationId":"PUTv3_proposals_ProposalsReject","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"data","in":"body","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.UpdateProposalsStatusRequest"}}}],"responses":{"204":{"description":"The proposal status is set to *Rejected*, users are notified based on the passed parameters, and the values of the specified parameters are updated.<br/>The response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes: \r\n            100 — Proposal was already rejected\r\n            100 — User has no rights to perform this action\r\n            401 — Invalid subscriber id\r\n            502 — Wrong Proposal Id\r\n            502 — Proposal not found\r\n            502 — Cannot find proposal data\r\n            502 — Cannot find assigned Work Order\r\n            502 — Proposal not has WO\r\n            502 — Proposals are linked to a different Work Order\r\n            502 — You don't have permissions to process Proposal\r\n            502 — Proposal is not MLP and cannot be rejected by an MLP user\r\n            502 — Proposal is already rejected\r\n            502 — Couldn’t find Proposals to Reject\r\n            502 — Couldn't find the Provider for Proposal\r\n            502 — Escalation can't be performed as all upper levels are empty\r\n            502 — Rule set not found\r\n            503 — Wrong Work Order Id\r\n            503 — More information Required\r\n            503 — Proposal requires a Reason for Rejection\r\n            503 — The request contains proposals with the same Proposal ID\r\n            503 — Request is empty or null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/GetProposalsToReject":{"get":{"tags":["Proposals"],"summary":"Retrieve proposals that can be reject","description":"Returns list of the proposals that can be reject.\r\n            <br />***Note:*** This method is only available to subscriber users.","operationId":"GETv3_proposals_GetProposalsToReject?trackingNumber={trackingNumber}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"trackingNumber","in":"query","description":"The unique numeric identifier of the WO.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Users that can be added to the list of email recipients to notify when a proposal is approved or rejected are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — Proposals to Reject not found\r\n            502 — Cannot find proposal data\r\n            503 — Invalid WO identifier","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/proposals/{proposalId}/onhold":{"put":{"tags":["Proposals"],"summary":"Put a proposal on hold","description":"Updates the status of the specified proposal to *On Hold*.\r\n            <br />***Note:*** This method is only available to subscriber users.\r\n            <br />**Example Request**\r\n            \r\n                PUT /proposals/{proposalId}/onhold\r\n                {\r\n                   \"Comments\": \"The proposal needs further review\",\r\n                   \"ProviderEmail\": \"\",\r\n                   \"UserEmail\": \"\",\r\n                   \"RejectReasonCodeId\": 0,\r\n                   \"ActionSource\": \"Standard\",\r\n                   \"ReasonString\": \"\"    \r\n                }","operationId":"PUTv3_proposals_{proposalId}_onhold","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proposalId","in":"path","description":"The unique numeric identifier of the proposal to put on hold.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The request to update the proposal status to *On Hold*.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest"}}],"responses":{"204":{"description":"The proposal status is set to *On Hold*, users are notified based on the passed parameters, and the values of the specified parameters are updated.<br/>The response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            401 — Invalid subscriber id\r\n            502 — Proposal not found\r\n            503 — The proposal status is already On Hold\r\n            503 — The user is MLP user\r\n            503 — Request is empty or null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/{proposalId}/approve":{"put":{"tags":["Proposals"],"summary":"Approve a proposal","description":"Updates the status of the specified proposal to *Approved*.\r\n            <br />***Note:*** This method is only available to subscriber users.\r\n            <br />**Example Request**\r\n            \r\n                PUT /proposals/{proposalId}/approve\r\n                {\r\n                   \"Comments\": \"The project starts earlier than expected\",\r\n                   \"ProviderEmail\": \"\",\r\n                   \"UserEmail\": \"\",\r\n                   \"RejectReasonCodeId\": 0,\r\n                   \"ActionSource\": \"Standard\",\r\n                   \"ReasonString\": \"Best fit for the job and scope\"\r\n                }","operationId":"PUTv3_proposals_{proposalId}_approve","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proposalId","in":"path","description":"The unique numeric identifier of the proposal to approve.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The request to update the proposal status to *Approved*.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest"}}],"responses":{"204":{"description":"The proposal status is set to *Approved*, users are notified based on the passed parameters, and the values of the specified parameters are updated.<br/>The response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            100 — Proposal amount exceeds user’s NTE limit\r\n            401 — Invalid subscriber id\r\n            502 — Proposal not found\r\n            503 — The proposal status is already Approved\r\n            503 — Cannot Approve Proposal that is not assigned to Work Order\r\n            503 — Cannot Approve Proposal. The Work Order this proposal is linked to has already been invoiced\r\n            503 — The user is MLP user\r\n            503 — Request is empty or null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/{proposalId}/open":{"put":{"tags":["Proposals"],"summary":"Open a proposal","description":"Updates the status of the specified proposal to *Open*.\r\n            <br />***Note:*** This method is only available to subscriber users.\r\n            <br />**Example Request**\r\n            \r\n                PUT /proposals/{proposalId}/open\r\n                {\r\n                   \"Comments\": \"The project is resumed\",\r\n                   \"ProviderEmail\": \"\",\r\n                   \"UserEmail\": \"\",\r\n                   \"RejectReasonCodeId\": 0,\r\n                   \"ActionSource\": \"Standard\",\r\n                   \"ReasonString\": \"\"    \r\n                }","operationId":"PUTv3_proposals_{proposalId}_open","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proposalId","in":"path","description":"The unique numeric identifier of the proposal to open.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The request to update the proposal status to *Open*.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest"}}],"responses":{"204":{"description":"The proposal status is set to *Open*, users are notified based on the passed parameters, and the values of the specified parameters are updated.<br/>The response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            401 — Invalid subscriber id\r\n            502 — Proposal not found\r\n            503 — The proposal status is already Open\r\n            503 — The user is MLP user\r\n            503 — Request is empty or null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/{proposalId}/assignWO":{"put":{"tags":["Proposals"],"summary":"Attach a work order to a proposal","description":"Links the specified work order to the proposal. If the proposal already has a linked service request, the attached work order is updated. See [Link a WO to a Proposal](https://developer.servicechannel.com/guides/proposals/link-a-WO-to-a-proposal/) for more information.\r\n            <br />***Note:*** This method is only available to subscriber users.","operationId":"PUTv3_proposals_{proposalId}_assignWO?isFromProjectsModule={isFromProjectsModule}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proposalId","in":"path","description":"The unique numeric identifier of the proposal to attach the work order to.","required":true,"type":"integer","format":"int32"},{"name":"workorderId","in":"body","description":"The unique numeric identifier of the work order to link to the proposal.","required":true,"schema":{"format":"int32","type":"integer"}},{"name":"isFromProjectsModule","in":"query","description":"Is request from projects module.","required":false,"type":"boolean","default":false}],"responses":{"204":{"description":"The specified work order is attached to the proposal, and the response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            401 — Invalid subscriber id\r\n            502 — Proposal not found\r\n            503 — Request is empty or null\r\n            503 — Proposal already approved\r\n            503 — Workorder doesn't match\r\n            503 — The user is MLP user\r\n            917 — Invalid WO Identifier","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/{proposalId}/escalate":{"put":{"tags":["Proposals"],"summary":"Escalate a proposal","description":"Escalates the specified proposal to another user in the subscriber’s multi-level proposal (MLP) approval hierarchy. The proposal can be approved, rejected, put on hold, or returned upon escalation. You can attach an existing work order or create a new one while submitting the request.\r\n            <br />***Note:*** This method is only available to subscribers with the MLP setting enabled.\r\n            <br />MLP users can [escalate a proposal](https://developer.servicechannel.com/guides/proposals/assign-or-escalate-a-proposal/#escalate-a-proposal-for-mlp-users) if the following conditions are met:\r\n             • The user's approval level corresponds to the proposal level.\r\n             • The Override option is enabled for the user in case their level is higher than the proposal level.\r\n            <br />**Example Request**\r\n            \r\n                PUT /proposals/{proposalId}/escalate\r\n                {\r\n                   \"Action\": \"Approve\",\r\n                   \"WoType\": 2,\r\n                   \"TrackingNumber\": 140324907,\r\n                   \"PoNumber\": \"\",\r\n                   \"ExistingPoNumber\": \"\",\r\n                   \"Category\": \"\",\r\n                   \"CategoryId\": ,\r\n                   \"ApprovalCode\": \"\",\r\n                   \"Priority\": \"\",\r\n                   \"Comment\": \"Escalating proposal to the General Manager\",\r\n                   \"RejectReasonCodeId\": 0,\r\n                   \"ReasonString\": \"\",\r\n                   \"EmailsToNotify\": \"john.smith@domain.com\",\r\n                   \"EmailMyself\": false,\r\n                   \"MyEmail\": \"\",\r\n                   \"ProposalId\": 10010836\r\n                }","operationId":"PUTv3_proposals_{proposalId}_escalate","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proposalId","in":"path","description":"The unique numeric identifier of the proposal to escalate.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The request to escalate the proposal to another user in the MLP hierarchy.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.MlpWoRecommendationRequest"}}],"responses":{"204":{"description":"The specified proposal is escalated and updated with the passed parameters. The response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            401 — Invalid subscriber id\r\n            502 — Proposal not found\r\n            503 — Request is empty or null\r\n            503 — The user is not MLP user\r\n            503 — Invalid WO Tracking Number\r\n            503 — Invalid WO Tracking Number in Proposal\r\n            503 — Invalid Wo Type\r\n            503 — There is no WO recommendation\r\n            503 — Action not found in rules\r\n            503 — User level less than Proposal level\r\n            503 — ForwardTo item is empty\r\n            503 — There is no the action in next rule\r\n            503 — Invalid Level\r\n            503 — Override flag is false\r\n            503 — EndStatus item is empty\r\n            503 — Invalid Action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/{proposalId}/assignUser":{"put":{"tags":["Proposals"],"summary":"Assign a proposal to a user","description":"Assigns the proposal to the specified user in the subscriber’s organization. If the proposal already has an assignee, the appointed user is updated.\r\n            <br />***Note:*** You cannot [assign a proposal](https://developer.servicechannel.com/guides/proposals/assign-or-escalate-a-proposal/#assign-a-proposal-to-a-user) in the *Approved* or *Rejected* status.\r\n            <br />**Example Request**\r\n            \r\n                PUT /proposals/{proposalId}/assignUser\r\n                {\r\n                   \"UserId\": 1417703,\r\n                   \"Comments\": \"Proposal reassigned at the request of the Store Manager\",\r\n                   \"UserEmail\": \"\",\r\n                   \"ReasonString\": \"\",\r\n                   \"Note\": \"\"\r\n                }","operationId":"PUTv3_proposals_{proposalId}_assignUser","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proposalId","in":"path","description":"The unique numeric identifier of the proposal to assign to the specified user.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The request to assign the proposal to the specified user.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.AssignUserToProposalRequest"}}],"responses":{"204":{"description":"The proposal is assigned to the specified user, and the response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes: \r\n            502 — Proposal not found\r\n            503 — Request is empty or null\r\n            503 — Wrong User Id\r\n            503 — Selected proposal has been finalized\r\n            503 — Selected user has no required rights\r\n            503 — Selected user doesn't have Location or Trade access","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals":{"get":{"tags":["Proposals"],"summary":"Retrieve proposals","description":"Returns proposals based on the specified input parameters for the current subscriber.","operationId":"GETv3_proposals?statuses={statuses}&assignedTo={assignedTo}&skip={skip}&top={top}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"statuses","in":"query","description":"Proposal statuses separated by commas. Valid values: *Open*, *On Hold*, *Approved*, *Rejected*, *Void*, *Reviewed*.\r\n            Proposals in all statuses are returned if the value is not passed.","required":false,"type":"string"},{"name":"assignedTo","in":"query","description":"The unique numeric identifier of the user who is assigned the proposals.","required":false,"type":"integer","format":"int32"},{"name":"skip","in":"query","description":"The number of entries to skip in the response (starting from the first one).","required":false,"type":"integer","format":"int32"},{"name":"top","in":"query","description":"The number of entries to return. The default value is 50.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested proposals are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.ProposalStatisticsResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/proposals/GetProposals":{"post":{"tags":["Proposals"],"summary":"Get Proposals","operationId":"POSTv3_proposals_GetProposals","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proposalModel","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.SearchProposalModel"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br> 400 - Bad Request\r\n            <br/> 503 - Request should not be null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions\r\n            <br/>User does not have Location or Trade access to perform this operation","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/proposals/{proposalId}/users":{"get":{"tags":["Proposals"],"summary":"Retrieve users who can be assigned a proposal","description":"Returns a list of users in the subscriber’s organization who can be assigned the specified proposal. You can send this request to retrieve the user ID before [assigning a proposal](https://developer.servicechannel.com/guides/proposals/assign-or-escalate-a-proposal/#assign-a-proposal-to-a-user).","operationId":"GETv3_proposals_{proposalId}_users","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proposalId","in":"path","description":"The unique numeric identifier of the proposal.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Users who can be assigned the specified proposal are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.UserInfo"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — Proposal not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/proposals/RejectionReasons":{"get":{"tags":["Proposals"],"summary":"Retrieve proposal rejection reasons","description":"Returns numeric identifiers and descriptions of the reasons for rejecting a proposal.","operationId":"GETv3_proposals_RejectionReasons","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Proposal rejection reasons are in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            400 — Bad Request","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/proposals/ApprovalReasons":{"get":{"tags":["Proposals"],"summary":"Retrieve proposal approval reasons","description":"Returns the reasons for approving a proposal for the current subscriber.\r\n            <br />Admin users can manage proposal approval reasons in Service Automation in **Admin** &gt; **Proposals** &gt; **Proposal Approve Reasons** if the subscriber has this feature enabled.","operationId":"GETv3_proposals_ApprovalReasons?Trade={Trade}&Category={Category}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"Trade","in":"query","description":"The type of work a provider performs. Has a narrower definition than `Category`.","required":true,"type":"string"},{"name":"Category","in":"query","description":"The overall classification of the performed work.","required":true,"type":"string"}],"responses":{"200":{"description":"Proposal approval reasons are in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"The requested resource is not allowed for the current user.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/AssignReasons":{"get":{"tags":["Proposals"],"summary":"Retrieve the reasons for assigning a proposal","description":"Returns the reasons for assigning a proposal to another user in the subscriber’s organization.\r\n            <br />Admin users can manage the reasons for assigning proposals in Service Automation in **Admin** &gt; **Proposals** &gt; **Proposal Assign Reasons** if the subscriber has this feature enabled.","operationId":"GETv3_proposals_AssignReasons?Trade={Trade}&Category={Category}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"Trade","in":"query","description":"The type of work a provider performs. Has a narrower definition than `Category`.","required":true,"type":"string"},{"name":"Category","in":"query","description":"The overall classification of the performed work.","required":false,"type":"string"}],"responses":{"200":{"description":"The reasons for assigning a proposal are in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"The requested resource is not allowed for the current user.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/proposalIds":{"get":{"tags":["Proposals"],"summary":"Get proposal actions by ID","description":"Returns available actions for the specified proposals:\r\n             • **Edit.** Proposals that can be changed by your client.\r\n             • **Open.** Proposals that haven't been reviewed by your client.\r\n             • **On hold.** Proposals that require your client’s further review before being approved or rejected.\r\n             • **Approve.** Proposals that have been already approved by your client.\r\n             • **Reject.** Proposals that have been rejected by your client.\r\n             • **Assign.** Proposals that have not been assigned by your client.\r\n            <br />In ServiceChannel University, you can find out more about [taking action on proposals](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/560103501/Taking+Action+on+Proposals).","operationId":"GETv3_proposals_proposalIds?proposalIds[0]={proposalIds[0]}&proposalIds[1]={proposalIds[1]}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proposalIds","in":"query","description":"Unique numeric identifier of the proposal.","required":true,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"The available proposal actions are in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/proposals/GetUsersByLevelName":{"get":{"tags":["Proposals"],"summary":"Get users by level name","description":"Returns the usernames of employees appointed to the specified MLP level.\r\n            <br />You can get MLP levels information for the current subscriber by sending the [GET /proposals/GetMlpLevelsForSubscriber](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/GETv3_proposals_GetMlpLevelsForSubscriber) request.\r\n            <br />Refer to ServiceChannel University to learn more about [how to configure MLP levels](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/621282301/Configuring+MLP+Levels).","operationId":"GETv3_proposals_GetUsersByLevelName?levelName={levelName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"levelName","in":"query","description":"MLP level name.","required":true,"type":"string"}],"responses":{"200":{"description":"The users assigned to the specified level are in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            400 — Bad Request\r\n            503 — Request is empty or null\r\n            3401 — The level doesn't exist","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/GetMlpLevelsForSubscriber":{"get":{"tags":["Proposals"],"summary":"Get MLP levels for a subscriber","description":"Returns all MLP levels with their information for the current subscriber.\r\n            <br />To retrieve all users assigned to a particular level, use the [GET /proposals/GetUsersByLevelName](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/GETv3_proposals_GetUsersByLevelName_levelName__levelName_) method.","operationId":"GETv3_proposals_GetMlpLevelsForSubscriber","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"The MLP levels for the current subscriber are in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            400 - Bad Request","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/AddUserToMlpLevel":{"put":{"tags":["Proposals"],"summary":"Add a user to an MLP level","description":"Assigns a user to an existing MLP level. Get a username by sending the [GET /users](https://developer.servicechannel.com/swagger/ui/index?version=3#/Users/GETv3_users_subscriberId__subscriberId__startIndex__startIndex__maxCount__maxCount_) request.\r\n            <br />Once you assign a user to an MLP level, you can assign a location to the user and MLP level by using the [PUT /proposals/AddLocationToUserLevel](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/PUTv3_proposals_AddLocationToUserLevel_userName__userName__location__location_) method.\r\n            <br />***Note***: Each user can be added to only one MLP level. If a user should be assigned to another level, you first need to [remove this user from the MLP level](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/PUTv3_proposals_RemoveUserFromLevel_userName__userName__location__location_) they currently belong to.","operationId":"PUTv3_proposals_AddUserToMlpLevel?userName={userName}&levelName={levelName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userName","in":"query","description":"Username to log into the system. The field is case sensitive.","required":true,"type":"string"},{"name":"levelName","in":"query","description":"MLP level name.","required":true,"type":"string"}],"responses":{"200":{"description":"The specified user is assigned to the MLP level."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            400 — Bad Request\r\n            503 — Request is empty or null\r\n            3401 — The user has already been assigned","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/RemoveUserFromMlpLevel":{"put":{"tags":["Proposals"],"summary":"Remove a user from an MLP level","description":"Removes the specified user from the assigned MLP level.\r\n            <br />To assign a user to an MLP level, use the [PUT /proposals/AddUserToMlpLevel](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/PUTv3_proposals_AddUserToLevelLocation) method.","operationId":"PUTv3_proposals_RemoveUserFromMlpLevel?userName={userName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userName","in":"query","description":"Username to log into the system.","required":true,"type":"string"}],"responses":{"200":{"description":"The user is successfully removed from the MLP level."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            400 — Bad Request\r\n            503 — Request is empty or null\r\n            3401 — The user has already been assigned","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/AssignLocationToMlpUser":{"put":{"tags":["Proposals"],"summary":"Add a location to a user’s MLP level","description":"Assigns a particular location to the specified user along with the MLP level.\r\n            <br />You can remove a location from the user and MLP level by using the [PUT /proposals/RemoveLocationFromUserLevel](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/PUTv3_proposals_RemoveLocationFromUserLevel_userName__userName__location__location_) method.","operationId":"PUTv3_proposals_AssignLocationToMlpUser?userName={userName}&location={location}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userName","in":"query","description":"Username to log into the system.","required":true,"type":"string"},{"name":"location","in":"query","description":"Alphanumeric location identifier in the client’s system.","required":true,"type":"string"}],"responses":{"200":{"description":"The location is assigned to the specified user and MLP level."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            400 — Bad Request\r\n            503 — Request is empty or null\r\n            3401 — The location doesn't exist","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/RemoveLocationFromMlpUser":{"put":{"tags":["Proposals"],"summary":"Remove a location from a user’s MLP level","description":"Removes the specified location from the user and user’s MLP level.\r\n            <br />To add a location, send the [PUT /proposals/AddLocationToUserLevel](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/PUTv3_proposals_AddLocationToUserLevel_userName__userName__location__location_) request.","operationId":"PUTv3_proposals_RemoveLocationFromMlpUser?userName={userName}&location={location}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userName","in":"query","description":"Username to log into the system.","required":true,"type":"string"},{"name":"location","in":"query","description":"Alphanumeric location identifier in the client’s system.","required":true,"type":"string"}],"responses":{"200":{"description":"The location is successfully removed from the user and MLP level."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            400 — Bad Request\r\n            503 — Request is empty or null\r\n            3401 — The location doesn't exist","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/{rfpId}":{"put":{"tags":["Proposals"],"summary":"Delete Proposal and Rfp reference with projectId by rfpId","description":"Delete Proposal and Rfp reference with projectId by rfpId","operationId":"PUTv3_proposals_{rfpId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"rfpId","in":"path","description":"The unique numeric identifier of the RFP.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The projectId reference is successfully removed from proposal and rfp."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            400 — Bad Request\r\n            503 — Request is empty or null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/GetProposalsAssociatedWithWorkOderExceptRfp":{"get":{"tags":["Proposals"],"operationId":"GETv3_proposals_GetProposalsAssociatedWithWorkOderExceptRfp?trackingNumber={trackingNumber}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"trackingNumber","in":"query","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Get all proposals for a work order based on tracking numbers that are not associated with an RFP."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            400 - Bad Request\r\n            503 — Request is empty or null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/AssignProjectIdToProposalAndRfp":{"put":{"tags":["Proposals"],"summary":"Assign a ProjectId to a ProposalId and Rfp","operationId":"PUTv3_proposals_AssignProjectIdToProposalAndRfp?proposalId={proposalId}&projectId={projectId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"proposalId","in":"query","description":"","required":true,"type":"integer","format":"int32"},{"name":"projectId","in":"query","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Assign a ProjectId to a ProposalId and Rfp"},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            400 - Bad Request\r\n            503 — Request is empty or null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/RemoveMlpUserValidationAsync":{"put":{"tags":["Proposals"],"summary":"Whether the user can be deleted from MLP level.","description":"Whether the user can be deleted from MLP level.","operationId":"PUTv3_proposals_RemoveMlpUserValidationAsync?userId={userId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userId","in":"query","description":"The User Id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Whether the user can be deleted from MLP level."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            400 — Bad Request\r\n            503 — Request is empty or null\r\n            3401 — The user has already been assigned","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/proposals/GetProposalsAssociatedWithWorkOrderAsync":{"get":{"tags":["Proposals"],"summary":"Get proposals associated with work order by tracking number. Only for Subscriber","operationId":"GETv3_proposals_GetProposalsAssociatedWithWorkOrderAsync?trackingNumber={trackingNumber}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"trackingNumber","in":"query","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Get proposals associated with work order by tracking number."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            400 - Bad Request\r\n            503 — Request is empty or null","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/api/providers/GetStandingStatus":{"get":{"tags":["Providers"],"summary":"Returns standing status of the provider passed","operationId":"GETv3_api_providers_GetStandingStatus?providerId={providerId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"providerId","in":"query","description":"A provider unique identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/providers/info/{id}":{"get":{"tags":["Providers"],"operationId":"GETv3_api_providers_info_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/providers/trained":{"post":{"tags":["Providers"],"summary":"Trained Status for Providers","description":"List Provider Trained Statuses.","operationId":"POSTv3_providers_trained","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersRequest"}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersResponse"}}}},"deprecated":false,"x-access":"Any"}},"/providers/RemoveProviderSubscriberLink":{"post":{"tags":["Providers"],"summary":"Delete provider of subscriber","description":"Delete provider of subscriber.","operationId":"POSTv3_providers_RemoveProviderSubscriberLink","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.RemoveProviderSubscriberLinkRequest"}}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - Invalid provider id passed;\r\n            <br/> 400 - Invalid subscriber id passed;\r\n            <br/> 503 - Empty Request;\r\n            <br/> 500 - Provider subscriber link has not been deleted;\r\n            <br/> 1217 - Proccess provider subscriber link error text;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/providers":{"post":{"tags":["Providers"],"summary":"Create blank provider","description":"Create blank provider.","operationId":"POSTv3_providers","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderRequest"}}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 103 - Provider already exists;\r\n            <br/> 802 - Invalid user name;\r\n            <br/> 806 - User already exists;\r\n            <br/> 1150 - User does not exist;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/providers/AccountChanged":{"post":{"tags":["Providers"],"operationId":"POSTv3_providers_AccountChanged","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.ProviderAccountChangedRequest"}}],"responses":{"200":{"description":"OK","schema":{"type":"string"}}},"deprecated":false,"x-access":"Any"}},"/api/providers/{providerId}/problemtypes":{"get":{"tags":["Providers"],"operationId":"GETv3_api_providers_{providerId}_problemtypes?subscriberId={subscriberId}&dashboardId={dashboardId}&locationId={locationId}&areaId={areaId}&trade={trade}&problemType={problemType}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"providerId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"subscriberId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"dashboardId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"areaId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"trade","in":"query","required":true,"type":"string"},{"name":"problemType","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/providers/current/problemtypes":{"get":{"tags":["Providers"],"operationId":"GETv3_providers_current_problemtypes?subscriberId={subscriberId}&dashboardId={dashboardId}&locationId={locationId}&areaId={areaId}&trade={trade}&problemType={problemType}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"dashboardId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"areaId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"trade","in":"query","required":true,"type":"string"},{"name":"problemType","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/providers/getbytrade":{"get":{"tags":["Providers"],"summary":"Providers For Subscriber User by Trade","description":"List of Providers.","operationId":"GETv3_providers_getbytrade?trade={trade}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"trade","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.ProviderInfo"}}}},"deprecated":false,"x-access":"Any"}},"/providers/{providerId}/feedback":{"post":{"tags":["Providers"],"operationId":"POSTv3_providers_{providerId}_feedback","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"providerId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.ProviderFeedbackRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/providers/updateDispatchSetting":{"post":{"tags":["Providers"],"summary":"Set isDoNotDispatch value for providers","operationId":"POSTv3_providers_updateDispatchSetting","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"updateDispatchSettingModel","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Models.UpdateDispatchSettingModel"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/providers/getProviderState":{"get":{"tags":["Providers"],"operationId":"GETv3_providers_getProviderState?providerId={providerId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"providerId","in":"query","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/providers/IsSdiMobileEnabled":{"get":{"tags":["Providers"],"summary":"Allows one to get information whether the SDIMobileInt flag is enabled.","description":"True - if the FF is enabled for a provider and subscriber or for a provider and location.\r\n            Otherwise it returns false.","operationId":"GETv3_api_providers_IsSdiMobileEnabled?subscriberId={subscriberId}&locationId={locationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"Subscriber id","required":false,"type":"integer","format":"int32"},{"name":"locationId","in":"query","description":"Location id","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The request succeeded and the information is retrieved.","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Providers"}},"/providers/getESignatureSettings":{"get":{"tags":["Providers"],"summary":"Receives the Electronic Signature Settings for current user (authorized provider)","operationId":"GETv3_providers_getESignatureSettings?workOrderId={workOrderId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"query","description":"Work order id","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The request succeeded and the information is retrieved.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.GetESignatureSettingsResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 101 - Invalid provider id passed;\r\n            <br/> 401 - Invalid subscriber Id;\r\n            <br/> 803 - Not provider user;\r\n            <br/> 947 - Work order not found;\r\n            <br/> 2105 - Feature ReqElecSig is Off;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/locations/{locationId}/subscribe":{"post":{"tags":["PushNotifications"],"summary":"Subscribe to Push Notifications","description":"Subscribe Push Notification.\r\n            <br /><br />Available for subscriber usage.","operationId":"POSTv3_locations_{locationId}_subscribe","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Numeric Id of the Location to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The Subscription Push Notification request.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.PushNotificationSubscriptionRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/locations/{locationId}/push":{"get":{"tags":["PushNotifications"],"summary":"List existing email subscriptions","description":"Returns a list of email subscriptions","operationId":"GETv3_locations_{locationId}_push?deviceToken={deviceToken}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"deviceToken","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/unsubscribe":{"delete":{"tags":["PushNotifications"],"summary":"Unsubscribe from Push Notifications","description":"Unsubscribe from Push Notifications.\r\n            <br /><br />Available for subscriber usage.","operationId":"DELETEv3_unsubscribe?deviceToken={deviceToken}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"deviceToken","in":"query","description":"Device token: \"35353-335345-FAC342...\"","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/locations/{locationId}/unsubscribe":{"delete":{"tags":["PushNotifications"],"summary":"Unsubscribe from Push Notifications","description":"Unsubscribe from Push Notifications.\r\n            <br /><br />Available for subscriber usage.","operationId":"DELETEv3_locations_{locationId}_unsubscribe?id={id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Numeric Id of the Location to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"id","in":"query","description":"Numeric Id of the Subscription to perform action with.","required":false,"type":"integer","format":"int32"},{"name":"deviceToken","in":"query","description":"Required Device Token.","required":true,"type":"string"},{"name":"deviceType","in":"query","description":"Device type: Android, iOS, Amazon","required":true,"type":"string","enum":["Android","iOS","Amazon"]},{"name":"notificationType","in":"query","description":"Notification type: Check In , ....","required":true,"type":"string","enum":["CheckIn","CheckOut","BadgeScanRequired"]},{"name":"application","in":"query","description":"Application : ScMobile, FTM, ...","required":true,"type":"string","enum":["ScMobile"]},{"name":"notificationRules.rules","in":"query","required":false,"type":"array","items":{}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/QualitySurvey/{recordId}":{"get":{"tags":["QualitySurvey"],"summary":"The get.","operationId":"GETv3_QualitySurvey_{recordId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"recordId","in":"path","description":"The record id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["QualitySurvey"],"summary":"The put.","operationId":"PUTv3_QualitySurvey_{recordId}?respondent={respondent}&creator={creator}&notes={notes}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"recordId","in":"path","description":"The record id.","required":true,"type":"integer","format":"int32"},{"name":"respondent","in":"query","description":"The respondent.","required":true,"type":"string"},{"name":"creator","in":"query","description":"The creator.","required":true,"type":"string"},{"name":"notes","in":"query","description":"The notes.","required":true,"type":"string"},{"name":"answerIds","in":"body","description":"The answer ids.","required":true,"schema":{"type":"array","items":{"format":"int32","type":"integer"}}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/QualitySurvey":{"get":{"tags":["QualitySurvey"],"summary":"The get.","operationId":"GETv3_api_QualitySurvey?recordId={recordId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"recordId","in":"query","description":"The record id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["QualitySurvey"],"summary":"The put.","operationId":"PUTv3_api_QualitySurvey?recordId={recordId}&respondent={respondent}&creator={creator}&notes={notes}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"recordId","in":"query","description":"The record id.","required":true,"type":"integer","format":"int32"},{"name":"respondent","in":"query","description":"The respondent.","required":true,"type":"string"},{"name":"creator","in":"query","description":"The creator.","required":true,"type":"string"},{"name":"notes","in":"query","description":"The notes.","required":true,"type":"string"},{"name":"answerIds","in":"body","description":"The answer ids.","required":true,"schema":{"type":"array","items":{"format":"int32","type":"integer"}}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/{subscriberId}/QualitySurvey":{"get":{"tags":["QualitySurvey"],"summary":"The get quality survey.","operationId":"GETv3_subscribers_{subscriberId}_QualitySurvey","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"The subscriber id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/api/QualitySurvey/GetQualitySurvey":{"get":{"tags":["QualitySurvey"],"summary":"The get quality survey.","operationId":"GETv3_api_QualitySurvey_GetQualitySurvey?subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"The subscriber id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/ChargeDescriptions":{"get":{"tags":["RefrigerantTracking"],"summary":"Get Charge Descriptions","operationId":"GETv3_refrigeranttracking_ChargeDescriptions","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking":{"get":{"tags":["RefrigerantTracking"],"summary":"Get Leak Tracking Preferences","description":"GetLeakTrackingPreferences","operationId":"GETv3_refrigeranttracking?subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"Subscriber Id","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:           \r\n            <br/> 502 - No Get Leak Tracking Preferences;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["RefrigerantTracking"],"summary":"Update/Insert Leak Tracking Preferences","description":"Update/Insert Leak Tracking Preferences. Returns Success/NoSuccess request.","operationId":"PUTv3_refrigeranttracking","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.PreferencesRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 502 - No Update/Insert Leak Tracking Preferences;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["RefrigerantTracking"],"summary":"Get Rack Equipment","description":"RackEquipment","operationId":"POSTv3_refrigeranttracking","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Equipments.GetAvailableRacksRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:           \r\n            <br/> 502 - No Get Rack Equipments","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/rack":{"get":{"tags":["RefrigerantTracking"],"summary":"Get Rack Connection","description":"Rack Connection","operationId":"GETv3_refrigeranttracking_rack?id={id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"query","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:           \r\n            <br/> 502 - No Get Rack Connection","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["RefrigerantTracking"],"summary":"Create/Update Rack Connection","description":"Create/Update Rack Connection","operationId":"POSTv3_refrigeranttracking_rack","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.CreateUpdateRackConnectionRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:           \r\n            <br/> 502 - No Get Rack Connection","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/{locationId}/GetRefrigerantSettings":{"get":{"tags":["RefrigerantTracking"],"summary":"Get Refrigerant settings by locationId","description":"GetRefrigerantSettingsByLocationId","operationId":"GETv3_refrigeranttracking_{locationId}_GetRefrigerantSettings","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Location Id","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:           \r\n            <br/> 502 - No Refrigerant Setings;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/CheckRefrigerantTrackingAvailable":{"post":{"tags":["RefrigerantTracking"],"summary":"Check if Refrigerant Tracking Available for list of locations","description":"GetLeakTrackingPreferences","operationId":"POSTv3_refrigeranttracking_CheckRefrigerantTrackingAvailable","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationIds","in":"body","description":"locationIds","required":true,"schema":{"type":"array","items":{"format":"int32","type":"integer"}}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:           \r\n            <br/> 502 - No Get Leak Tracking Preferences;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/CheckRefrigerantTrackingAvailable_v1":{"post":{"tags":["RefrigerantTracking"],"summary":"Check if Refrigerant Tracking Available for list of locations","description":"GetLeakTrackingPreferences","operationId":"POSTv3_refrigeranttracking_CheckRefrigerantTrackingAvailable_v1","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"request","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Core.InternalRequests.RefrigerantTracking.CheckRefrigerantTrackingRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:           \r\n            <br/> 502 - No Get Leak Tracking Preferences;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/{subscriberId}/GetRefrigerantUseReasonCodes":{"get":{"tags":["RefrigerantTracking"],"summary":"Get Refrigerant Use Reason Codes","description":"GetRefrigerantUseReasonCodes","operationId":"GETv3_refrigeranttracking_{subscriberId}_GetRefrigerantUseReasonCodes","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"Subscriber Id","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:           \r\n            <br/> 502 - No Get Leak Tracking Preferences;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/{assetId}/refrigerantusagesummary":{"get":{"tags":["RefrigerantTracking"],"summary":"Get refrigerant usage summary","operationId":"GETv3_refrigeranttracking_{assetId}_refrigerantusagesummary","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 502 - No Update/Insert Leak Tracking Preferences;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/subscribers":{"get":{"tags":["RefrigerantTracking"],"summary":"Get SubscriberIds With RefrigerantTracking Feature Flag","operationId":"GETv3_refrigeranttracking_subscribers","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 502 - No Update/Insert Leak Tracking Preferences;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/leakrecord":{"put":{"tags":["RefrigerantTracking"],"summary":"UpdateLeakRecord","operationId":"PUTv3_refrigeranttracking_leakrecord","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 502 - No Update Leak Record;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/leakrecordV1":{"put":{"tags":["RefrigerantTracking"],"summary":"UpdateLeakRecord With Returns Detail Operation Result","operationId":"PUTv3_refrigeranttracking_leakrecordV1","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 502 - No Update Leak Record;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/leakrecords":{"post":{"tags":["RefrigerantTracking"],"summary":"Retrieve leak records by filter","operationId":"POSTv3_refrigeranttracking_leakrecords","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/{trackingNumber}/leakRecord":{"get":{"tags":["RefrigerantTracking"],"summary":"Retrieve leak record by tracking number","operationId":"GETv3_refrigeranttracking_{trackingNumber}_leakRecord","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"trackingNumber","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/CreateLeakRecordFollowupWo":{"post":{"tags":["RefrigerantTracking"],"summary":"Creates Follow Up wo for non-closed leak records","operationId":"POSTv3_refrigeranttracking_CreateLeakRecordFollowupWo?leakRecordId={leakRecordId}&currentTrackingNumber={currentTrackingNumber}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"leakRecordId","in":"query","description":"","required":true,"type":"integer","format":"int32"},{"name":"currentTrackingNumber","in":"query","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 502 - No Update/Insert Leak Tracking Preferences;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/leakRecord/faultCodes":{"get":{"tags":["RefrigerantTracking"],"summary":"Retrieve leak record fault codes","operationId":"GETv3_refrigeranttracking_leakRecord_faultCodes","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/isRefrigerantTrackingAvailable/{locationId}":{"get":{"tags":["RefrigerantTracking"],"operationId":"GETv3_refrigeranttracking_isRefrigerantTrackingAvailable_{locationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 502 - No Update/Insert Leak Tracking Preferences;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/leakRecord/actionCodes":{"get":{"tags":["RefrigerantTracking"],"summary":"Retrieve leak record action codes","operationId":"GETv3_refrigeranttracking_leakRecord_actionCodes","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/retireretrofitplans":{"post":{"tags":["RefrigerantTracking"],"summary":"Retrieve retire retrofit plans","operationId":"POSTv3_refrigeranttracking_retireretrofitplans","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/leakNote":{"post":{"tags":["RefrigerantTracking"],"summary":"Add leak note","operationId":"POSTv3_refrigeranttracking_leakNote","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakNoteRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 502 - No Update/Insert Leak Tracking Preferences;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/{subscriberId}/leaklocations":{"get":{"tags":["RefrigerantTracking"],"summary":"Get leak locations","operationId":"GETv3_refrigeranttracking_{subscriberId}_leaklocations","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 502 - No get Leak Locations;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/leakareas":{"get":{"tags":["RefrigerantTracking"],"summary":"Get leak areas","operationId":"GETv3_refrigeranttracking_leakareas","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 502 - No Get leak Areas;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/addLeakDetectorAudit":{"post":{"tags":["RefrigerantTracking"],"summary":"Add leak detector audit","operationId":"POSTv3_refrigeranttracking_addLeakDetectorAudit","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakDetectorAuditAddUpdateRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 502 - No Get leak Areas;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/getLeakDetectorLastAudit":{"get":{"tags":["RefrigerantTracking"],"summary":"get leak detector last audit","operationId":"GETv3_refrigeranttracking_getLeakDetectorLastAudit?assetId={assetId}&recId={recId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetId","in":"query","description":"","required":true,"type":"integer","format":"int32"},{"name":"recId","in":"query","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 502 - No Get leak Areas;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/createChargeHistory":{"post":{"tags":["RefrigerantTracking"],"summary":"Create Charge History","operationId":"POSTv3_refrigeranttracking_createChargeHistory","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"model","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.ChargeHistoryRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters."},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/addUpdateRefrigerationDetails":{"post":{"tags":["RefrigerantTracking"],"summary":"Add Update Refrigeration Details","operationId":"POSTv3_refrigeranttracking_addUpdateRefrigerationDetails?equipmentId={equipmentId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"equipmentId","in":"query","description":"","required":true,"type":"integer","format":"int32"},{"name":"model","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.AssetRefrigerant"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters."},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/AddOrUpdateRefrigerationTypes":{"post":{"tags":["RefrigerantTracking"],"operationId":"POSTv3_refrigeranttracking_AddOrUpdateRefrigerationTypes","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantType"}}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters."},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/SaveRefrigerationDetails":{"post":{"tags":["RefrigerantTracking"],"summary":"Add/Update Refrigeration Details for an asset","operationId":"POSTv3_refrigeranttracking_SaveRefrigerationDetails","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetRefrigerant","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.EditAssetRefrigerantRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/RefrigerantTypes":{"get":{"tags":["RefrigerantTracking"],"summary":"Get refrigerant types","operationId":"GETv3_refrigeranttracking_RefrigerantTypes?subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 502 - No Get Refrigerant Types;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/LeakVerificationMethods":{"get":{"tags":["RefrigerantTracking"],"summary":"Get Leak Verification Methods","operationId":"GETv3_refrigeranttracking_LeakVerificationMethods","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.LeakRecord.LeakVerifyMethod"}}},"500":{"description":"Indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/{assetTypeId}/getRefrigerantUseTypes":{"get":{"tags":["RefrigerantTracking"],"summary":"Get refrigerant use types for equipment","operationId":"GETv3_refrigeranttracking_{assetTypeId}_getRefrigerantUseTypes","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"assetTypeId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters."},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/GetRackTypeListItems":{"get":{"tags":["RefrigerantTracking"],"summary":"Get Rack Type List Items","operationId":"GETv3_refrigeranttracking_GetRackTypeListItems","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/OperationalStatuses":{"get":{"tags":["RefrigerantTracking"],"summary":"Get Operational Statuses","operationId":"GETv3_refrigeranttracking_OperationalStatuses","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/SystemLocations":{"get":{"tags":["RefrigerantTracking"],"summary":"Get System Locations","operationId":"GETv3_refrigeranttracking_SystemLocations","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/{workOrderId}/isCompletedStatusesLimitedByRTSetup":{"get":{"tags":["RefrigerantTracking"],"summary":"Check If WO Status Is Limited By RTSetup","operationId":"GETv3_refrigeranttracking_{workOrderId}_isCompletedStatusesLimitedByRTSetup","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/{workOrderId}/checkRefrigerantWasUsedIsValidForInvoiceableStatuses":{"get":{"tags":["RefrigerantTracking"],"summary":"Check If Used Refrigerant Is Valid For Invoiceble Statuses","operationId":"GETv3_refrigeranttracking_{workOrderId}_checkRefrigerantWasUsedIsValidForInvoiceableStatuses?refrigerantWasUsed={refrigerantWasUsed}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"refrigerantWasUsed","in":"query","description":"","required":false,"type":"string","enum":["No","Yes","EnterLater"]}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/{workOrderId}/createLeakRecordFollowUpWoForStatusUpdate":{"post":{"tags":["RefrigerantTracking"],"summary":"Create Leak Record Follow Up WorkOrder","operationId":"POSTv3_refrigeranttracking_{workOrderId}_createLeakRecordFollowUpWoForStatusUpdate","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/WOLeakVerification":{"put":{"tags":["RefrigerantTracking"],"summary":"Update WOLeakVerification","operationId":"PUTv3_refrigeranttracking_WOLeakVerification","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded.","schema":{"$ref":"#/definitions/System.Object"}},"404":{"description":"Indicates that the recId is not found","schema":{"$ref":"#/definitions/System.Web.Http.Results.NotFoundResult"}},"500":{"description":"Indicates that the server encountered an unexpected condition that prevented it from fulfilling the request","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["RefrigerantTracking"],"summary":"Add WOLeakVerification","operationId":"POSTv3_refrigeranttracking_WOLeakVerification","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded","schema":{"$ref":"#/definitions/System.Object"}},"404":{"description":"Indicates that the recId is not found","schema":{"$ref":"#/definitions/System.Web.Http.Results.NotFoundResult"}},"500":{"description":"Indicates that the server encountered an unexpected condition that prevented it from fulfilling the request","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/WOLeakVerification/{trackingNumber}":{"get":{"tags":["RefrigerantTracking"],"summary":"Get WOLeakVerification by tracking number and assetId","operationId":"GETv3_refrigeranttracking_WOLeakVerification_{trackingNumber}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"trackingNumber","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Api.Model.RefrigerantTracking.WOLeakVerificationResponse"}},"404":{"description":"Indicates that the recId is not found","schema":{"$ref":"#/definitions/System.Web.Http.Results.NotFoundResult"}},"500":{"description":"Indicates that the server encountered an unexpected condition that prevented it from fulfilling the request","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/LeakRecordImmearusable":{"put":{"tags":["RefrigerantTracking"],"summary":"Update entity to RT_LeakImmeasurable","operationId":"PUTv3_refrigeranttracking_LeakRecordImmearusable","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakImmeasurable"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["RefrigerantTracking"],"summary":"Add entity to RT_LeakImmeasurable","operationId":"POSTv3_refrigeranttracking_LeakRecordImmearusable","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakImmeasurableRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/LeakRecordImmearusable/{trackingNumber}":{"get":{"tags":["RefrigerantTracking"],"summary":"Get LeakImmeasurable by recId and assetID","operationId":"GETv3_refrigeranttracking_LeakRecordImmearusable_{trackingNumber}?assetid={assetid}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"trackingNumber","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"assetid","in":"query","description":"","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}},"500":{"description":"Indicates that the server encountered an unexpected condition that prevented it from fulfilling the request","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/DeleteLeakRecordImmeasurable":{"delete":{"tags":["RefrigerantTracking"],"summary":"Deactivated LeakImmeasurable","operationId":"DELETEv3_refrigeranttracking_DeleteLeakRecordImmeasurable?id={id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"query","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/leakrecords/{trackingNumber}":{"get":{"tags":["RefrigerantTracking"],"summary":"Get LeakRecords with LeakImmeasurable","operationId":"GETv3_refrigeranttracking_leakrecords_{trackingNumber}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"trackingNumber","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}},"500":{"description":"Indicates that the server encountered an unexpected condition that prevented it from fulfilling the request","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/BulkLeakrecords":{"post":{"tags":["RefrigerantTracking"],"summary":"BulkLeakrecords","operationId":"POSTv3_refrigeranttracking_BulkLeakrecords","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakImmeasurableBulkChangeRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that the server encountered an unexpected condition that prevented it from fulfilling the request","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/refrigeranttracking/LeakInspectionComplianceAcknowledgement":{"post":{"tags":["RefrigerantTracking"],"summary":"Add Leak Inspection Compliance Acknowledgement","operationId":"POSTv3_refrigeranttracking_LeakInspectionComplianceAcknowledgement","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"model","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakInspectionComplianceAcknowledgement"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/resolutionCodes":{"get":{"tags":["ResolutionCodes"],"summary":"Get resolution codes","description":"Returns a list of resolution codes. Resolution codes are set up for trades and describe actions that a technician takes to resolve a problem upon working on a service request.","operationId":"GETv3_resolutionCodes?subscriberId={subscriberId}&trade={trade}&category={category}&locationId={locationId}&providerId={providerId}&assetCategoryIds[0]={assetCategoryIds[0]}&assetCategoryIds[1]={assetCategoryIds[1]}&keyword={keyword}&page={page}&pageSize={pageSize}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"Unique subscriber identifier.","required":true,"type":"integer","format":"int32"},{"name":"trade","in":"query","description":"Trade to return resolution codes for. A trade is an area of work for which a service is performed, such as _HVAC_, _Refrigeration_, or _Plumbing_.","required":true,"type":"string"},{"name":"category","in":"query","description":"Category to return resolution codes for. A category is the overall classification of a work order, such as _Maintenance_, _Repair_, or _CAPEX_.","required":true,"type":"string"},{"name":"locationId","in":"query","description":"Unique identifier of a subscriber’s location.","required":true,"type":"integer","format":"int32"},{"name":"providerId","in":"query","description":"Unique provider identifier. Should be passed by subscriber users.","required":false,"type":"integer","format":"int32"},{"name":"assetCategoryIds","in":"query","description":"IDs of asset categories to return resolution codes for. You can specify up to 5 asset categories if you have access to this functionality.","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"keyword","in":"query","description":"Keyword contained in resolution codes to perform the search by.","required":false,"type":"string"},{"name":"page","in":"query","description":"Results page number.","required":false,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"Number of objects on the results page. The default is 10.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Resolution codes are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ResolutionCodes.ResolutionCode"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            4113 — You can specify up to 5 asset categories","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes: \r\n            4114 — You don't have access to asset categories","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["ResolutionCodes"],"summary":"Add or update resolution codes for a work order","description":"Associates resolution codes with the specified work order. If resolution codes are already added to a work order, you can change them by sending the request.\r\n            <br />Learn [how providers can add or edit resolution codes](https://servicechannel.atlassian.net/wiki/spaces/SCUCP/pages/1688502858/Resolution+and+Root+Causes+Codes+in+Provider+Automation#ResolutionandRootCausesCodesinProviderAutomation-ProcessingRRCsProcessingResolutionandRootCauseCodes) in ServiceChannel University.\r\n            <br />**Example Requests**\r\n                \r\n              OPTION 1:\r\n                POST /resolutionCodes\r\n                {\r\n                   \"WorkOrderId\": 158716211,\r\n                   \"ResolutionCodeIds\": [\r\n                     2145, 2147\r\n                 ],\r\n                   \"ResolutionCodes\": []\r\n                }\r\n                \r\n              OPTION 2:\r\n                POST /resolutionCodes\r\n                {\r\n                   \"WorkOrderId\": 158716211,\r\n                   \"ResolutionCodeIds\": [],\r\n                   \"ResolutionCodes\": [\r\n                    {\r\n                     \"Key\": 2189,\r\n                     \"Text\": \"Repair wings\",\r\n                     \"AssetCategoryId\": 5\r\n                    },\r\n                    {\r\n                     \"Key\": 2146,\r\n                     \"Text\": \"\",\r\n                     \"AssetCategoryId\": 2\r\n                    }\r\n                   ]\r\n                }","operationId":"POSTv3_resolutionCodes","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request to add or update resolution codes for a work order. \r\n            <br />**Required parameters:**\r\n             • `WorkOrderId`. Unique numeric identifier of the work order to add resolution codes to.\r\n             • Use one of the following collections to add resolution codes. To get resolution code IDs, send the [GET /resolutionCodes](https://developer.servicechannel.com/swagger/ui/index?version=3#/ResolutionCodes/GETv3_resolutionCodes_subscriberId__subscriberId__trade__trade__category__category__locationId__locationId__providerId__providerId__assetCategoryIds_0___assetCategoryIds_0___assetCategoryIds_1___assetCategoryIds_1___keyword__keyword__page__page__pageSize__pageSize_) request, and look for the `Key` value of the desired code in the response. \r\n              ◦ `ResolutionCodeIds`. Enter resolution code IDs separated by commas.\r\n              ◦ `ResolutionCodes`. For each resolution code you want to add, pass an object with the following parameters: `Key`, `Text` — optional comment for resolution codes with the `HasFreeText` attribute, and `AssetCategoryId` (required if you have access to asset categories).\r\n            <br />Users who have access to asset categories should add 1–3 resolution codes for each asset category associated with a work order. Otherwise, you can specify up to 3 resolution codes for a work order.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateResolutionCodesRequest"}}],"responses":{"200":{"description":"Resolution codes are added to the specified work order."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            4100 — You can specify up to 3 resolution codes for a work order\r\n            4101 — You need to specify at least one resolution code\r\n            4108 — The max length of the resolution code text is exceeded\r\n            4109 — Resolution code text must be unique\r\n            4110 — Resolution code without free text must be unique\r\n            4122 — You need to specify up to 3 resolution codes per asset category for all asset categories assigned to the work order","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes: \r\n            4107 — You don't have access to set the resolution code text","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            502 — Data nor found"},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/resolutionCodes/{workOrderId}":{"get":{"tags":["ResolutionCodes"],"summary":"Get resolution codes and root causes for a work order","description":"Returns resolution codes and root causes for the specified work order.\r\n             • A **resolution code** is an action that a technician takes to resolve a problem upon working on a service request.\r\n             • A **root cause** is a reason why the problem occurred to begin with.\r\n            <br />Resolution codes and root causes are set up for specific trades and are standardized. If there are resolution codes and root causes configured for a work order trade, a technician is prompted to select these properties upon [checking out of a work order](https://servicechannel.atlassian.net/wiki/spaces/SCUCP/pages/622396960/Checking+In+and+Out+of+Work+Orders+Using+SC+Provider#CheckingInandOutofWorkOrdersUsingSCProvider-CheckingOutwithResolutionandRootCauseCodes) and moving it to the _Completed_ status in ServiceChannel Provider.","operationId":"GETv3_resolutionCodes_{workOrderId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Unique identifier of the work order to return resolution codes and root causes for.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Resolution codes and root causes for the specified work order are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderResolutionInfo"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            502 — Data not found"},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/resolutionCodes/rootCauses":{"get":{"tags":["ResolutionCodes"],"summary":"Get root causes","description":"Returns a list of root causes. Root causes are set up for trades and describe reasons why the problem occurred to begin with.","operationId":"GETv3_resolutionCodes_rootCauses?subscriberId={subscriberId}&trade={trade}&category={category}&locationId={locationId}&providerId={providerId}&assetCategoryIds[0]={assetCategoryIds[0]}&assetCategoryIds[1]={assetCategoryIds[1]}&keyword={keyword}&page={page}&pageSize={pageSize}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"Unique subscriber identifier.","required":true,"type":"integer","format":"int32"},{"name":"trade","in":"query","description":"Trade to return root causes for. A trade is an area of work for which a service is performed, such as _HVAC_, _Refrigeration_, or _Plumbing_.","required":true,"type":"string"},{"name":"category","in":"query","description":"Category to return root causes for. A category is the overall classification of a work order, such as _Maintenance_, _Repair_, or _CAPEX_.","required":true,"type":"string"},{"name":"locationId","in":"query","description":"Unique identifier of a subscriber’s location.","required":true,"type":"integer","format":"int32"},{"name":"providerId","in":"query","description":"Unique provider identifier. Should be passed by subscriber users.","required":false,"type":"integer","format":"int32"},{"name":"assetCategoryIds","in":"query","description":"IDs of asset categories to return root causes for. You can specify up to 5 asset categories if you have access to this functionality.","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"keyword","in":"query","description":"Keyword contained in root causes to perform the search by.","required":false,"type":"string"},{"name":"page","in":"query","description":"Results page number.","required":false,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"Number of objects on the results page. The default is 10.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Root causes are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ResolutionCodes.RootCause"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            4113 — You can specify up to 5 asset categories","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes: \r\n            4114 — You don't have access to asset categories","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["ResolutionCodes"],"summary":"Add or update root causes for a work order","description":"For users who have access to asset categories, associates root causes with the specified work order. If root causes are already added to a work order, you can replace them by sending the request. You need to specify one root cause for each asset category of a work order.\r\n            <br />Get root cause IDs using the [GET /resolutionCodes/rootCauses](https://developer.servicechannel.com/swagger/ui/index?version=3#/ResolutionCodes/GETv3_resolutionCodes_rootCauses_subscriberId__subscriberId__trade__trade__category__category__locationId__locationId__providerId__providerId__assetCategoryIds_0___assetCategoryIds_0___assetCategoryIds_1___assetCategoryIds_1___keyword__keyword__page__page__pageSize__pageSize_) method. To retrieve asset category IDs, send the [GET /AssetTypes/GetAssetTypeGroups](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/GETv3_AssetTypes_GetAssetTypeGroups_subscriberId__subscriberId_) request.\r\n            <br />***Note:*** Users who don't have access to asset categories should pass the [POST /resolutionCodes/rootCauses/{workOrderId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/ResolutionCodes/POSTv3_resolutionCodes_rootCauses__workOrderId__rootCauseId__rootCauseId__rootCauseText__rootCauseText_) request to add or update a root cause for a work order.\r\n            <br />Visit ServiceChannel University to find out [how providers can add or edit root causes](https://servicechannel.atlassian.net/wiki/spaces/SCUCP/pages/1688502858/Resolution+and+Root+Causes+Codes+in+Provider+Automation#ResolutionandRootCausesCodesinProviderAutomation-ProcessingRRCsProcessingResolutionandRootCauseCodes).\r\n            <br />**Example Request**\r\n            \r\n               POST /resolutionCodes/rootCauses\r\n               {\r\n                 \"WorkOrderId\": 175444600,\r\n                 \"RootCauses\": [\r\n                  {\r\n                    \"Key\": 419,\r\n                    \"Text\": \"Accidental damage\",\r\n                    \"AssetCategoryId\": 1\r\n                  },\r\n                  {\r\n                    \"Key\": 420,\r\n                    \"Text\": \"\",\r\n                    \"AssetCategoryId\": 2\r\n                  }\r\n                ]\r\n               }","operationId":"POSTv3_resolutionCodes_rootCauses","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request to add or update root causes for a work order.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateRootCausesRequest"}}],"responses":{"200":{"description":"Root causes are added to the specified work order."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            4102 - You need to select a root cause\r\n            4105 - The max length of the root cause text is exceeded\r\n            4117 - The work order doesn't have assigned asset categories. You need to specify at least one asset category\r\n            4118 - You need to specify one root cause per asset category for all asset categories assigned to the work order\r\n            4120 - Asset category is required","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason. \r\n            <br/>Error codes:\r\n            4104 — You don't have access to set the root cause tex\r\n            4114 — You don't have access to asset categories","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            502 — Data not found"},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/resolutionCodes/rootCauses/{workOrderId}":{"post":{"tags":["ResolutionCodes"],"summary":"Add or update root causes for a work order","description":"For users who don't have access to asset categories, associates a root cause with the specified work order. If a root cause is already added to a work order, you can change it by sending the request.\r\n            <br />Before adding a root cause, use the [GET /resolutionCodes/rootCauses](https://developer.servicechannel.com/swagger/ui/index?version=3#/ResolutionCodes/GETv3_resolutionCodes_rootCauses_subscriberId__subscriberId__trade__trade__category__category__locationId__locationId__providerId__providerId__assetCategoryIds_0___assetCategoryIds_0___assetCategoryIds_1___assetCategoryIds_1___keyword__keyword__page__page__pageSize__pageSize_) method to find out if root causes are configured for the work order trade. To get a root cause ID, look for the `Key` value of the desired root cause in the response.\r\n            <br /> ***Note:*** Users with access to asset categories should send the following request to add or update root causes for a work order: [POST /resolutionCodes/rootCauses](https://developer.servicechannel.com/swagger/ui/index?version=3#/ResolutionCodes/POSTv3_resolutionCodes_rootCauses).","operationId":"POSTv3_resolutionCodes_rootCauses_{workOrderId}?rootCauseId={rootCauseId}&rootCauseText={rootCauseText}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Unique numeric identifier of the work order to add, update, or delete a root cause for.","required":true,"type":"integer","format":"int32"},{"name":"rootCauseId","in":"query","description":"ID of the root cause to associate with the work order. Ignore this parameter to remove the current root causes from the work order.","required":false,"type":"integer","format":"int32"},{"name":"rootCauseText","in":"query","description":"Comment explaining your understanding of the root cause of the work order.<br />Enabled for root causes with the `HasFreeText` attribute. The maximum length is 100 characters.","required":false,"type":"string"}],"responses":{"200":{"description":"The root cause is added to the specified work order."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            4102 — You need to select a root cause\r\n            4105 — The max length of the root cause text is exceeded","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason. \r\n            <br/>Error codes: \r\n            4104 - You don't have access to set root cause text\r\n            4121 - You must use a method to set multiple root causes when you have access to asset categories","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            502 — Data nor found"},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/resolutionCodes/{workOrderId}/assetCategories":{"get":{"tags":["ResolutionCodes"],"summary":"Retrieve asset categories for a work order","description":"Returns asset categories associated with the specified work order. Asset categories represent a standardized classification of asset types.\r\n            <br />***Note:*** Only users who have access to asset categories can send this request.","operationId":"GETv3_resolutionCodes_{workOrderId}_assetCategories","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Unique numeric identifier of the work order to return asset categories for.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Asset categories for the specified work order are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason. \r\n            <br/>Error codes: \r\n            4114 - You don't have access to asset categories","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            502 — Data not found"},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["ResolutionCodes"],"summary":"Add or update asset categories for a work order","description":"Associates asset categories with the specified work order. Sending this request replaces the current asset categories.\r\n            <br />Asset categories represent a standardized classification of asset types. You can add no more than 5 asset categories to a work order.\r\n            <br />***Note:*** Only users who have access to asset categories can send this request.    \r\n            <br />**Example Request**\r\n            \r\n               POST /resolutionCodes/{workOrderId}/assetCategories\r\n               {\r\n                 \"AssetCategoryIds\": [\r\n                   1, 4, 6\r\n                 ]\r\n               }","operationId":"POSTv3_resolutionCodes_{workOrderId}_assetCategories","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Unique numeric identifier of the work order to add asset categories to.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"Request to add or update asset categories for a work order.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateAssetCategoriesRequest"}}],"responses":{"200":{"description":"Asset categories are added to the specified work order."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            4113 - You can specify up to 5 asset categories\r\n            4115 - You need to specify at least one asset category\r\n            4116 - Invalid asset category id","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason. \r\n            <br/>Error codes: \r\n            4114 - You don't have access to asset categories","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            502 — Data not found"},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/rfps":{"post":{"tags":["Rfps"],"summary":"Create an RFP","description":"Creates a request for proposal (RFP). Returns a unique RFP ID for a successful request.\r\n            <br />***Note:*** Subscribers can create RFPs [using the API](https://developer.servicechannel.com/guides/proposals/create-and-manage-RFPs/#create-an-rfp) or via [Service Automation](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/560300086/Creating+an+RFP).\r\n            <br />**Example Request**\r\n            \r\n                POST /rfps\r\n                {\r\n                   \"Number\": \"\",\r\n                   \"PONumber\": \"\",\r\n                   \"WONumber\": \"\",\r\n                   \"TradeId\": 90480,\r\n                   \"Description\": \"New doors for the office\",\r\n                   \"Date\": \"\",\r\n                   \"DueHrs\": 48,\r\n                   \"DueDate\": \"\",\r\n                   \"Location\": {\r\n                      \"Id\": 2006071467,\r\n                      \"StoreId\": \"\"\r\n                   },\r\n                   \"ProviderId\": 2000090505,\r\n                   \"ResponseDate\": \"\",\r\n                   \"ProposalNotificationEmail\": \"LFAlways1776@gmail.com\",\r\n                   \"ProviderEmail\": \"\",\r\n                   \"ProposalTemplateId\": 0,\r\n                   \"WorkOrderId\": 0,\r\n                   \"ProjectId\": 0\r\n                }","operationId":"POSTv3_rfps","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"The request to create an RFP.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Rfp.CreateRfpRequest"}}],"responses":{"201":{"description":"The RFP is created, and a unique RFP ID is returned in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 — Request is empty or null\r\n            503 — Provider is not valid\r\n            503 — Empty E-Mail address ('ProposalNotificationEmail')\r\n            503 — TradeId is not valid\r\n            503 — Empty Description\r\n            503 — Empty Location or Store ID\r\n            503 — Invalid location Id for current user\r\n            503 — Active contract for current trade, provider, locationId not found\r\n            503 — Empty Provider E-Mail address ('ProviderEmail')","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions\r\n            504 — User does not have Location or Trade access to perform this operation","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/rfps/{rfpId}/assign":{"put":{"tags":["Rfps"],"summary":"Assign an RFP to another provider","description":"Assigns the RFP to the specified provider. Returns a unique RFP ID for a successful request.\r\n            <br />***Note:*** The provider you want to assign the RFP to should have access to the location and trade for which the RFP was created.\r\n            <br />Learn more about [assigning an RFP to another provider](https://developer.servicechannel.com/guides/proposals/create-and-manage-RFPs/#assign-an-rfp-to-another-provider).\r\n            <br />**Example Request**\r\n            \r\n                PUT /rfps/{rfpId}/assign\r\n                {\r\n                   \"ProviderId\": 2000090505,\r\n                   \"ProviderEmail\": \"\"\r\n                }","operationId":"PUTv3_rfps_{rfpId}_assign","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"rfpId","in":"path","description":"The unique numeric identifier of the RFP to assign to the specified provider.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The request to assign the RFP to another provider.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Rfp.AssignRfpRequest"}}],"responses":{"200":{"description":"The RFP is assigned to the specified provider, and a unique RFP ID is returned in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — RFP not found\r\n            503 — Request is empty or null\r\n            503 — Provider is not valid\r\n            503 — Empty Provider E-Mail address ('ProviderEmail')","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/rfps/{id}":{"delete":{"tags":["Rfps"],"summary":"Delete an RFP by ID","description":"Permanently deletes the specified RFP by its ID. It cannot be undone. Find out more about [deleting RFPs via the API](https://developer.servicechannel.com/guides/proposals/create-and-manage-RFPs/#delete-an-rfp).","operationId":"DELETEv3_rfps_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"The unique numeric identifier of the RFP to delete.","required":true,"type":"integer","format":"int32"}],"responses":{"204":{"description":"The RFP is deleted, and the response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — RFP not found\r\n            503 — RFP can only be deleted, if none of the proposals are approved","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server."}},"deprecated":false,"x-access":"Subscribers"}},"/rfps/{number}/locations/{locationId}":{"delete":{"tags":["Rfps"],"summary":"Delete an RFP by the RFP number and location ID","description":"Permanently deletes the RFP by the specified RFP number and location ID. It cannot be undone.\r\n            <br />***Note:*** The RFP number is not unique. If multiple RFPs with the same number were created for a location, all of them are deleted when you pass the request.\r\n            <br />Learn more about [deleting RFPs via the API](https://developer.servicechannel.com/guides/proposals/create-and-manage-RFPs/#delete-an-rfp).","operationId":"DELETEv3_rfps_{number}_locations_{locationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"number","in":"path","description":"The non-unique identifier of the RFP to delete.","required":true,"type":"string"},{"name":"locationId","in":"path","description":"The unique numeric identifier of the location for which the RFP was created.","required":true,"type":"integer","format":"int32"}],"responses":{"204":{"description":"The RFP is deleted, and the response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — RFP not found\r\n            503 — RFP can only be deleted, if none of the proposals are approved","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server."}},"deprecated":false,"x-access":"Subscribers"}},"/roles/FeedRoles":{"get":{"tags":["Roles"],"operationId":"GETv3_roles_FeedRoles","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.PrimaryRoles.PrimaryRolesInfo"}}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/saml/idpConfig":{"get":{"tags":["Saml"],"summary":"Returns Identity Provider Configuration","operationId":"GETv3_saml_idpConfig?key={key}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"key","in":"query","description":"Identity Provider Key","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/ScConnector/WorkorderCreated":{"post":{"tags":["ScConnector"],"summary":"XmlIntegration callout. Called when workorder created","operationId":"POSTv3_ScConnector_WorkorderCreated","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"msg","in":"body","description":"Created workorder","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/ScConnector/WorkorderUpdated":{"post":{"tags":["ScConnector"],"summary":"XmlIntegration callout. Called when workorder updated","operationId":"POSTv3_ScConnector_WorkorderUpdated","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"msg","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/ScConnector/SubContractorWorkorderCreated":{"post":{"tags":["ScConnector"],"summary":"XmlIntegration callout. Called when subcontractor workorder created","operationId":"POSTv3_ScConnector_SubContractorWorkorderCreated","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"msg","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/ScConnector/SubContractorWorkorderUpdated":{"post":{"tags":["ScConnector"],"summary":"XmlIntegration callout. Called when subcontractor workorder updated","operationId":"POSTv3_ScConnector_SubContractorWorkorderUpdated","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"msg","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/ScConnector/CheckInOut":{"post":{"tags":["ScConnector"],"summary":"Called when subcontractor workorder CheckInOut","operationId":"POSTv3_ScConnector_CheckInOut","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"checkinActivity","in":"body","description":"CheckInOut","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Models.CheckInOutNotificationObject"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/ScConnector/SyncNotes":{"post":{"tags":["ScConnector"],"summary":"Connector sync notes process","operationId":"POSTv3_ScConnector_SyncNotes","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/ScConnector/SyncAssets":{"post":{"tags":["ScConnector"],"summary":"Connector sync asset process","operationId":"POSTv3_ScConnector_SyncAssets","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"notificationObject","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/ScConnector/SyncResolutionCodes":{"post":{"tags":["ScConnector"],"summary":"Connector sync Resolution codes process","operationId":"POSTv3_ScConnector_SyncResolutionCodes","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"notificationObject","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/ScConnector/SyncAssetsValidation":{"post":{"tags":["ScConnector"],"summary":"Connector sync asset validation process","operationId":"POSTv3_ScConnector_SyncAssetsValidation","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"notificationObject","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/servicerequest/providers":{"get":{"tags":["ServiceRequest"],"summary":"Get list of providers per service request","description":"Returns providers for specified location and trade or equipment. If no location, trade specified in request equipment values are used.\r\n            <br /><br />Available for provider and subscriber usage.","operationId":"GETv3_servicerequest_providers?locationId={locationId}&trade={trade}&equipmentType={equipmentType}&providerRank={providerRank}&equipmentId={equipmentId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","description":"Location Id","required":false,"type":"integer","format":"int32"},{"name":"trade","in":"query","description":"Trade","required":false,"type":"string"},{"name":"equipmentType","in":"query","description":"Equipment type","required":false,"type":"string"},{"name":"providerRank","in":"query","description":"Sets default provider with specified rank","required":false,"type":"integer","format":"int32"},{"name":"equipmentId","in":"query","description":"Sets default provider for specified equipment id","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.GetServiceRequestProvidersResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/current/servicerequest/info":{"get":{"tags":["ServiceRequest"],"summary":"Get Service Request Info","description":"Retrieves supporting info for \"Create Work Order\" operation.\r\n            <br /><br />This method can only be used for subscriber's users that have assigned dashboard.","operationId":"GETv3_subscribers_current_servicerequest_info?AreaName={AreaName}&ProblemType={ProblemType}&EquipmentType={EquipmentType}&ProblemCode={ProblemCode}&LocationId={LocationId}&SetupId={SetupId}&CallDate={CallDate}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"areaName","in":"query","description":"Name of the area","required":false,"type":"string"},{"name":"problemType","in":"query","description":"Problem type","required":false,"type":"string"},{"name":"equipmentType","in":"query","description":"Equipment type","required":false,"type":"string"},{"name":"problemCode","in":"query","description":"Problem name","required":false,"type":"string"},{"name":"locationId","in":"query","description":"ID of a location","required":false,"type":"integer","format":"int32"},{"name":"setupId","in":"query","description":"SetupId","required":false,"type":"integer","format":"int32"},{"name":"callDate","in":"query","description":"Call Date","required":false,"type":"string","format":"date-time"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 917 - Invalid work order identifier. Returned if workorderId is &lt;= 0;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/current/servicerequest/info/nosettings":{"get":{"tags":["ServiceRequest"],"summary":"Get Service Request Info Without Dashboard Settings","description":"Retrieves supporting info for \"Create Work Order\" operation.\r\n            <br /><br />This method can only be used for subscriber's users that have assigned dashboard.","operationId":"GETv3_subscribers_current_servicerequest_info_nosettings?AreaName={AreaName}&ProblemType={ProblemType}&EquipmentType={EquipmentType}&ProblemCode={ProblemCode}&LocationId={LocationId}&SetupId={SetupId}&CallDate={CallDate}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"areaName","in":"query","description":"Name of the area","required":false,"type":"string"},{"name":"problemType","in":"query","description":"Problem type","required":false,"type":"string"},{"name":"equipmentType","in":"query","description":"Equipment type","required":false,"type":"string"},{"name":"problemCode","in":"query","description":"Problem name","required":false,"type":"string"},{"name":"locationId","in":"query","description":"ID of a location","required":false,"type":"integer","format":"int32"},{"name":"setupId","in":"query","description":"SetupId","required":false,"type":"integer","format":"int32"},{"name":"callDate","in":"query","description":"Call Date","required":false,"type":"string","format":"date-time"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 917 - Invalid work order identifier. Returned if workorderId is &lt;= 0;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/current/servicerequest/addresses":{"get":{"tags":["ServiceRequest"],"summary":"","operationId":"GETv3_subscribers_current_servicerequest_addresses?SubscriberId={SubscriberId}&SetupId={SetupId}&LocationId={LocationId}&ProviderId={ProviderId}&Trade={Trade}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"setupId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"providerId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"trade","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - Request data is empty;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/providers/current/subscribers/{subscriberId}/applicationissuechoice/servicerequest/info":{"get":{"tags":["ServiceRequest"],"operationId":"GETv3_providers_current_subscribers_{subscriberId}_applicationissuechoice_servicerequest_info?AreaName={AreaName}&ProblemType={ProblemType}&EquipmentType={EquipmentType}&ProblemCode={ProblemCode}&LocationId={LocationId}&SetupId={SetupId}&CallDate={CallDate}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"areaName","in":"query","description":"Name of the area","required":false,"type":"string"},{"name":"problemType","in":"query","description":"Problem type","required":false,"type":"string"},{"name":"equipmentType","in":"query","description":"Equipment type","required":false,"type":"string"},{"name":"problemCode","in":"query","description":"Problem name","required":false,"type":"string"},{"name":"locationId","in":"query","description":"ID of a location","required":false,"type":"integer","format":"int32"},{"name":"setupId","in":"query","description":"SetupId","required":false,"type":"integer","format":"int32"},{"name":"callDate","in":"query","description":"Call Date","required":false,"type":"string","format":"date-time"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoRequest"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/providers/current/subscriber/{subscriberId}/location/{locationId}/applicationissuechoice/servicerequest/info":{"get":{"tags":["ServiceRequest"],"operationId":"GETv3_providers_current_subscriber_{subscriberId}_location_{locationId}_applicationissuechoice_servicerequest_info","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Providers"}},"/sso/clients/register":{"post":{"tags":["SingleSignOn"],"operationId":"POSTv3_sso_clients_register","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SingleSignOn.RegisterSsoClientRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/sso/clients/{clientIdentifier}/delete":{"delete":{"tags":["SingleSignOn"],"operationId":"DELETEv3_sso_clients_{clientIdentifier}_delete","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"clientIdentifier","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/sso/clients/{clientIdentifier}/deactivate":{"put":{"tags":["SingleSignOn"],"operationId":"PUTv3_sso_clients_{clientIdentifier}_deactivate","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"clientIdentifier","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/sso/clients/{clientIdentifier}/activate":{"put":{"tags":["SingleSignOn"],"operationId":"PUTv3_sso_clients_{clientIdentifier}_activate","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"clientIdentifier","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/current/locations/{locationId}/siteaudit/templateTypes":{"get":{"tags":["SiteAudit"],"summary":"Get available audit types for specified location","operationId":"GETv3_subscribers_current_locations_{locationId}_siteaudit_templateTypes","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Location identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/current/locations/{locationId}/siteaudit/templateTypes/{templateTypeId}/auditInfo":{"get":{"tags":["SiteAudit"],"summary":"Get audit data for specified location and audit type","description":"Audit can be created from:\r\n            - completed audit data\r\n            - setup (templates) data\r\n            - mixed completed + setup\r\n            How audit data is combined depends on the loaded setup file to the system and/or availability \r\n            of previous finished audit data.","operationId":"GETv3_subscribers_current_locations_{locationId}_siteaudit_templateTypes_{templateTypeId}_auditInfo","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Location identifier","required":true,"type":"integer","format":"int32"},{"name":"templateTypeId","in":"path","description":"Audit type identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"},"post":{"tags":["SiteAudit"],"summary":"Post (save) completed audit to the database","operationId":"POSTv3_subscribers_current_locations_{locationId}_siteaudit_templateTypes_{templateTypeId}_auditInfo","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Location identifier","required":true,"type":"integer","format":"int32"},{"name":"templateTypeId","in":"path","description":"Audit type identifier","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"Completed audit data","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternalOld"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/current/locations/{locationId}/siteaudit/templateTypes/{templateTypeId}/auditInfoWeighted":{"get":{"tags":["SiteAudit"],"summary":"Get audit data for specified location and audit type for new templates","description":"Audit can be created from:\r\n            - completed audit data\r\n            - setup (templates) data\r\n            - mixed completed + setup\r\n            How audit data is combined depends on the loaded setup file to the system and/or availability \r\n            of previous finished audit data.","operationId":"GETv3_subscribers_current_locations_{locationId}_siteaudit_templateTypes_{templateTypeId}_auditInfoWeighted","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Location identifier","required":true,"type":"integer","format":"int32"},{"name":"templateTypeId","in":"path","description":"Audit type identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"},"post":{"tags":["SiteAudit"],"summary":"Post (save) completed audit of new type to the database","operationId":"POSTv3_subscribers_current_locations_{locationId}_siteaudit_templateTypes_{templateTypeId}_auditInfoWeighted","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"Location identifier","required":true,"type":"integer","format":"int32"},{"name":"templateTypeId","in":"path","description":"Audit type identifier","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"Completed audit data","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditDataWeightedExternal"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/current/locations/auditInfo":{"post":{"tags":["SiteAudit"],"summary":"Save completed audit to the database","operationId":"POSTv3_subscribers_current_locations_auditInfo","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Request object","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternal"}}],"responses":{"200":{"description":"The audit info for the requested location is provided in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.SaveAuditDataResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            1010 - Invalid site audit parameters","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/current/locations/auditinfo":{"get":{"tags":["SiteAudit"],"summary":"Get audit data for specified location and audit type without template information","description":"Setup data for areas-checklist-checklistItems relationship data are not provided in this method.","operationId":"GETv3_subscribers_current_locations_auditinfo?locationId={locationId}&templateId={templateId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","description":"Location identifier","required":true,"type":"integer","format":"int32"},{"name":"templateId","in":"query","description":"Audit type identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The audit info for the requested location is provided in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.GetAuditInfo"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            1010 - Invalid site audit parameters","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/current/locations/auditinfo/checklist/templates":{"get":{"tags":["SiteAudit"],"summary":"Get checklist templates by audit template.","operationId":"GETv3_subscribers_current_locations_auditinfo_checklist_templates?templateId={templateId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"templateId","in":"query","description":"Audit type identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Checklist templates are provided in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListTemplateExternal"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            1010 - Invalid site audit parameters","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/current/locations/auditinfo/checklistitem/templates":{"get":{"tags":["SiteAudit"],"summary":"Get checklistitem templates by audit template.","operationId":"GETv3_subscribers_current_locations_auditinfo_checklistitem_templates?templateId={templateId}&checkListTemplateId={checkListTemplateId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"templateId","in":"query","description":"Audit type identifier","required":true,"type":"integer","format":"int32"},{"name":"checkListTemplateId","in":"query","description":"Check list template identifier","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Checklist templates are provided in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemExternal"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            1010 - Invalid site audit parameters","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/current/siteaudit/checkListItems/{checkListItemId}":{"get":{"tags":["SiteAudit"],"summary":"Get details for specified checklist item","description":"Details include:\r\n            - comments with attachments\r\n            - workorders\r\n            - quantity","operationId":"GETv3_subscribers_current_siteaudit_checkListItems_{checkListItemId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"checkListItemId","in":"path","description":"Identifier of checklist item","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested completed audit list is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemDetailsResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/current/siteaudit/audits/completed":{"get":{"tags":["SiteAudit"],"summary":"Get list of completed audits for current subscriber","operationId":"GETv3_subscribers_current_siteaudit_audits_completed?daysPeriod={daysPeriod}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"daysPeriod","in":"query","description":"Number of days in the past from now","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested completed audit list is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CompletedAuditListResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/current/siteaudit/report":{"get":{"tags":["SiteAudit"],"summary":"Get site audit reports","description":"Returns a site audit report, its part, or several reports for the current subscriber.\r\n            <br />**Required parameters:**\r\n             • **Option 1**. `auditId`. Use to get a site audit report by ID.\r\n             • **Option 2**. The combination of `fromDate` and `toDate`. Use to get site audit reports for a specific period.\r\n            <br />***Note:*** Site audit reports are also known as *site planning reports* or just *audits*. See [Site Planning Manager](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/551059548/Site+Planning+Manager) for more info.","operationId":"GETv3_subscribers_current_siteaudit_report?auditId={auditId}&fromDate={fromDate}&toDate={toDate}&country={country}&locationId={locationId}&area={area}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"auditId","in":"query","description":"The numeric identifier of the site audit report to return.","required":false,"type":"integer","format":"int32"},{"name":"fromDate","in":"query","description":"The date from which you want to return site audit reports. The format is `YYYY-MM-DDThh:mm:ss.sssZ`.","required":false,"type":"string","format":"date-time"},{"name":"toDate","in":"query","description":"The date until which you want to return site audit reports. The format is `YYYY-MM-DDThh:mm:ss.sssZ`.","required":false,"type":"string","format":"date-time"},{"name":"country","in":"query","description":"The two-letter [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the location country.","required":false,"type":"string"},{"name":"locationId","in":"query","description":"The numeric identifier of the subscriber's property.","required":false,"type":"integer","format":"int32"},{"name":"area","in":"query","description":"The audited area within the location.","required":false,"type":"string"}],"responses":{"200":{"description":"The requested site audit reports are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditReportExternal"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            1010 - Invalid site audit parameters","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/current/siteaudit/completed/{auditId}":{"get":{"tags":["SiteAudit"],"summary":"Get completed audit info","operationId":"GETv3_subscribers_current_siteaudit_completed_{auditId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"auditId","in":"path","description":"The numeric identifier of the site audit info to return.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The requested site audit info is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfoExternal"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            608 - Do not have access to the location","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            1008 - Audit not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/current/siteaudit/completed":{"put":{"tags":["SiteAudit"],"summary":"Update completed audit info","operationId":"PUTv3_subscribers_current_siteaudit_completed","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Completed audit info","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfo"}}],"responses":{"200":{"description":"The site audit info is successfully updated.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.UpdatedCompletedAuditResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            608 - Do not have access to the location.\r\n            1007 - Template type is inactive.\r\n            1009 - Unexpected error","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            1008 - Audit not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 - Unspecified internal server error occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/current/subsidiaries":{"get":{"tags":["Subscribers"],"operationId":"GETv3_subscribers_current_subsidiaries","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/trades":{"get":{"tags":["Subscribers"],"summary":"Retrieve Trades","description":"Returns the current subscriber's trade list ( IDs ).\r\n            <br /><br />This method can only be used for subscriber's users.","operationId":"GETv3_subscribers_trades","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.GetSubscriberTradesResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/{subscriberId}/trades":{"get":{"tags":["Subscribers"],"summary":"Retrieve Trades","description":"Returns trade list ( IDs ) of requested subscriber.","operationId":"GETv3_subscribers_{subscriberId}_trades","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"Numeric id of subscriber to perform action with.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.GetSubscriberTradesResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/{subscriberId}/primarytrades":{"get":{"tags":["Subscribers"],"summary":"Retrieve Trades","description":"Returns trade list of requested subscriber.","operationId":"GETv3_subscribers_{subscriberId}_primarytrades","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"Numeric id of subscriber to perform action with.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/subscribers":{"post":{"tags":["Subscribers"],"summary":"Create Subscriber","description":"Returns success result","operationId":"POSTv3_subscribers","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"registerSubscriberRequest","in":"body","description":"Request for creation of new Subscriber","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.RegisterSubscriberRequest"}}],"responses":{"201":{"description":"Indicates that the request succeeded and that a new Subscriber is created."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that an error has occured wile creation of a new Subscriber."}},"deprecated":false,"x-access":"Any"}},"/subscribers/{subscriberId}/validatepasswordsecurity/{password}":{"get":{"tags":["Subscribers"],"summary":"Password security","description":"Validate password security","operationId":"GETv3_subscribers_{subscriberId}_validatepasswordsecurity_{password}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"Numeric id of subscriber.","required":true,"type":"integer","format":"int32"},{"name":"password","in":"path","description":"Password to be checked.","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/{subscriberId}":{"get":{"tags":["Subscribers"],"summary":"Get Subscriber by Id","description":"Returns success result","operationId":"GETv3_subscribers_{subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["Subscribers"],"summary":"Update subscriber info","description":"Acceptable values for DateFormat are: \"MMM d, yyyy\" or \"d, MMM yyyy\". Acceptable values for TimeFormat are: \"H:mm\" or \"h:mm\". Default values are \"MMM d, yyyy\" and \"H:mm\" correspondingly.\r\n            Acceptable valuer for DecimalSeparator are: \".\" or \",\". Default value is point.","operationId":"PUTv3_subscribers_{subscriberId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"Subscriber identifier","required":true,"type":"integer","format":"int32"},{"name":"subscriberInfo","in":"body","description":"Subscriber info","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.UpdateSubscriberInfoRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded"},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/{subscriberId}/securityrules":{"get":{"tags":["Subscribers"],"summary":"Security rules","description":"Get security rules","operationId":"GETv3_subscribers_{subscriberId}_securityrules","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"Numeric id of subscriber.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/rules":{"get":{"tags":["Subscribers"],"summary":"Returns list of subscriber properties","operationId":"GETv3_subscribers_rules?subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"subscriber identifier","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.GetSubscriberPropertyResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/{subscriberId}/rules":{"get":{"tags":["Subscribers"],"summary":"Returns list of subscriber properties","operationId":"GETv3_subscribers_{subscriberId}_rules","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"subscriber identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.GetSubscriberPropertyResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/{subscriberId}/workOrderRescheduleReasons":{"get":{"tags":["Subscribers"],"summary":"Returns list of reschedule reasons","operationId":"GETv3_subscribers_{subscriberId}_workOrderRescheduleReasons","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"subscriber identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"object","additionalProperties":{"type":"string"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/subscribers/current/dashboards":{"get":{"tags":["Subscribers"],"summary":"Returns list of subscriber(current or specified) dashboards","description":"Available for subscriber users. Returns list of subscriber dashboards (current or specified subscriber if allowed)","operationId":"GETv3_subscribers_current_dashboards?subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"Subscriber identifier","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.DashboardInfo"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Indicates that the requested resource not allowed for current user","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/{subscriberId}/dashboards":{"get":{"tags":["Subscribers"],"summary":"Returns list of subscriber(current or specified) dashboards","description":"Available for subscriber users. Returns list of subscriber dashboards (current or specified subscriber if allowed)","operationId":"GETv3_subscribers_{subscriberId}_dashboards","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"Subscriber identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.DashboardInfo"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Indicates that the requested resource not allowed for current user","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/subscribers/GetSubscribersRegionalSettings":{"post":{"tags":["Subscribers"],"summary":"Returns regional settings for subscribers","operationId":"POSTv3_subscribers_GetSubscribersRegionalSettings","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"list of subscriber","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            <br/> 501 - Unhandled exception occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/surveyquestions/getwithanswers/{locationId}":{"get":{"tags":["SurveyQuestions"],"summary":"Get questions with possible answers for specific location","operationId":"GETv3_surveyquestions_getwithanswers_{locationId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyQuestionWithAnswers"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/surveyquestions/addanswers/{locationId}":{"post":{"tags":["SurveyQuestions"],"summary":"Submit answered questions.","operationId":"POSTv3_surveyquestions_addanswers_{locationId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"surveyAnsweredQuestions","in":"body","description":"","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyAnsweredQuestion"}}},{"name":"locationId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"201":{"description":"Indicates that the request succeeded and that new Answers are added."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that an error has occured wile creation of a new Subscriber."}},"deprecated":false,"x-access":"Any"}},"/surveyquestions/workorderanswers/{workOrderId}":{"get":{"tags":["SurveyQuestions"],"summary":"Get workorder survey answers with questions.","operationId":"GETv3_surveyquestions_workorderanswers_{workOrderId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SurveyQuestion.WorkorderAnsweredQuestionResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/TemplateFilesHistory/GetHistory":{"get":{"tags":["TemplateFilesHistory"],"operationId":"GETv3_TemplateFilesHistory_GetHistory","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"fileTypeIds","in":"query","description":"Gets or sets FileTypeId.","required":false,"type":"array","items":{"type":"integer","format":"int32"}},{"name":"sort","in":"query","description":"Sort resources by the specified property in the response.","required":false,"type":"string"},{"name":"page","in":"query","description":"Results page number.","required":false,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"Number of objects on the results page. The default and maximum per page is 50.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Template.GetTemplateFilesHistoriesResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/test/encrypt":{"get":{"tags":["Test"],"summary":"Get Encrypted Password","description":"Get Encrypted Password (Rijndael)\r\n            <br /><br />This method can only be used for users with 'MasterAdminRole' permissions.","operationId":"GETv3_test_encrypt?data={data}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"data","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/test/webhooks/notifications":{"post":{"tags":["Test"],"summary":"Ping a target URL","description":"Tests the URL for receiving events. Delivers a [test event](https://developer.servicechannel.com/guides/wh/test-your-webhook-url/) to the target URL for a successful request.","operationId":"POSTv3_test_webhooks_notifications","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"The request object containing the URL that needs to be tested.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.TestNotificationRequest"}}],"responses":{"201":{"description":"The test event is sent."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            503 - Failed to send POST request to specified URL, or your server responded with invalid status code","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/test/notifications1":{"post":{"tags":["Test"],"operationId":"POSTv3_test_notifications1","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/test/notifications2":{"post":{"tags":["Test"],"operationId":"POSTv3_test_notifications2","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/test/notifications3":{"post":{"tags":["Test"],"operationId":"POSTv3_test_notifications3","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/test/notificationsDelay":{"post":{"tags":["Test"],"operationId":"POSTv3_test_notificationsDelay","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/trades/IsRefrigerant":{"post":{"tags":["Trades"],"operationId":"POSTv3_trades_IsRefrigerant?subscriberId={subscriberId}&tradeName={tradeName}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"tradeName","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.Trade"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - User has no permissions to perform this action. Not Allowed Subscriber Id(s): ..;..;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/trades":{"post":{"tags":["Trades"],"operationId":"POSTv3_trades","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.AddTradeRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.AddTradeRequest"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions\r\n            <br/> 710 - Trade already exists\r\n            <br/> 711 - Invalid NTE","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/trades/batch":{"post":{"tags":["Trades"],"operationId":"POSTv3_trades_batch","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.AddTradeRequest"}}}],"responses":{"200":{"description":"Indicates that the request succeeded.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.AddTradeResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions\r\n            <br/> 710 - Trade already exists\r\n            <br/> 711 - Invalid NTE","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/trades/LocationProviderTrades":{"post":{"tags":["Trades"],"operationId":"POSTv3_trades_LocationProviderTrades","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesRequest"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/trades/GetPrimaryTrade":{"post":{"tags":["Trades"],"summary":"Get Primary Trade For Provider","operationId":"POSTv3_trades_GetPrimaryTrade?subscriberId={subscriberId}&tradeName={tradeName}&tradeId={tradeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"","required":true,"type":"integer","format":"int32"},{"name":"tradeName","in":"query","description":"","required":false,"type":"string"},{"name":"tradeId","in":"query","description":"","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.TradeWithPrimaryTrade"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:            \r\n            <br/> 503 - tradeName and tradeId cannot be both empty or null and less than 1 and null respectively.\r\n            <br/> 401 - Invalid subscriber id","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            <br/> 5010 - Trade is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/tradesmen":{"post":{"tags":["Tradesmen"],"summary":"Profile","description":"Creates Tradesman Profile. Returns Tradesman Profile Id for successful request.\r\n            <br /><br />Available for provider usage.","operationId":"POSTv3_tradesmen","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"A new Tradesmen Profile","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Tradesmen.CreateTradesmenProfileRequest"}}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - Invalid request;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Indicates that the server refuses to fulfill the request.\r\n            <br/>Error codes:\r\n            <br/> 100 - User has no rights to perform this action;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/trucks/{id}":{"get":{"tags":["Trucks"],"operationId":"GETv3_trucks_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["Trucks"],"operationId":"PUTv3_trucks_{id}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"},{"name":"truckRequest","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trucks.TruckRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"},"delete":{"tags":["Trucks"],"operationId":"DELETEv3_trucks_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/trucks":{"post":{"tags":["Trucks"],"operationId":"POSTv3_trucks","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"truckRequest","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trucks.TruckRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/trucks/technician":{"post":{"tags":["Trucks"],"operationId":"POSTv3_trucks_technician","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"techTruckCreate","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trucks.TechTruckRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/trucks/technician/{authTechId}":{"get":{"tags":["Trucks"],"operationId":"GETv3_trucks_technician_{authTechId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"authTechId","in":"path","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["Trucks"],"operationId":"PUTv3_trucks_technician_{authTechId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"authTechId","in":"path","required":true,"type":"integer","format":"int64"},{"name":"techTruck","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trucks.TechTruckRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"},"delete":{"tags":["Trucks"],"operationId":"DELETEv3_trucks_technician_{authTechId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"authTechId","in":"path","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/twilio/Sms":{"get":{"tags":["TwilioApi"],"operationId":"GETv3_twilio_Sms?SmsSid={SmsSid}&Body={Body}&MessageStatus={MessageStatus}&AccountSid={AccountSid}&From={From}&To={To}&FromCity={FromCity}&FromState={FromState}&FromZip={FromZip}&FromCountry={FromCountry}&ToCity={ToCity}&ToState={ToState}&ToZip={ToZip}&ToCountry={ToCountry}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"smsSid","in":"query","required":false,"type":"string"},{"name":"body","in":"query","required":false,"type":"string"},{"name":"messageStatus","in":"query","required":false,"type":"string"},{"name":"accountSid","in":"query","required":false,"type":"string"},{"name":"from","in":"query","required":false,"type":"string"},{"name":"to","in":"query","required":false,"type":"string"},{"name":"fromCity","in":"query","required":false,"type":"string"},{"name":"fromState","in":"query","required":false,"type":"string"},{"name":"fromZip","in":"query","required":false,"type":"string"},{"name":"fromCountry","in":"query","required":false,"type":"string"},{"name":"toCity","in":"query","required":false,"type":"string"},{"name":"toState","in":"query","required":false,"type":"string"},{"name":"toZip","in":"query","required":false,"type":"string"},{"name":"toCountry","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["TwilioApi"],"operationId":"POSTv3_twilio_Sms","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/Twilio.AspNet.Common.SmsRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/twilio/SmsStatus":{"post":{"tags":["TwilioApi"],"operationId":"POSTv3_twilio_SmsStatus","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/Twilio.AspNet.Common.SmsRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/users":{"get":{"tags":["Users"],"summary":"Users Collection","description":"Returns the list of all users of the current subscriber (the main user is also included) for successful request.\r\n            <br /><br />Available for subscriber usage (Power User, Super Admin, SC Admin).","operationId":"GETv3_users?subscriberId={subscriberId}&startIndex={startIndex}&maxCount={maxCount}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"For 'SC Admin' users only - ability to specify subscriber. Optional","required":false,"type":"integer","format":"int32"},{"name":"startIndex","in":"query","description":"Start item index. Optional, 0 by Default","required":false,"type":"integer","format":"int32"},{"name":"maxCount","in":"query","description":"Items count to get. Optional, all items by Default.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.User"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            <br/> 502 - Users not found;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"},"post":{"tags":["Users"],"summary":"Create a user","description":"Creates a new user. Returns a unique user ID for a successful request.\r\n            <br />***Note:*** Available for subscribers with the Admin User and Super Admin secondary roles.","operationId":"POSTv3_users","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"The user object that needs to be created.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.AddUserRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/users/{id}":{"get":{"tags":["Users"],"summary":"Retrieve a User","description":"Returns the information of the specified user.","operationId":"GETv3_users_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"Numeric Id of the User to perform action with.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.GetUserResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            <br/>502 - User not found;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"put":{"tags":["Users"],"summary":"Update User","description":"Updates the information of the specified user. Returns User Id for successful request.\r\n            <br /><br />Available for Super Admin, SC Admin, Provider Power Users usage.","operationId":"PUTv3_users_{id}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"Numeric Id of the User to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The request model to perform action with.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.UpdateUserRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Indicates that the server refuses to fulfill the request.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"delete":{"tags":["Users"],"summary":"Remove the User","description":"Removes the User with specified id. Returns User Id for successful request.\r\n            <br /><br />Available for Super Admin, SC Admin, Provider Power Users usage.","operationId":"DELETEv3_users_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"Numeric Id of the User to perform action with.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"},"patch":{"tags":["Users"],"summary":"Patch user's info","operationId":"PATCHv3_users_{id}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"User identifier","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"Patch user's profile info model (only properties to be patched)","required":true,"schema":{"type":"object","additionalProperties":{"$ref":"#/definitions/System.Object"}}}],"responses":{"200":{"description":"Indicates that the update user profile request was successful.","schema":{"$ref":"#/definitions/System.Object"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            <br/> 501 - Unhandled exception occurred","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/users/current/profile":{"get":{"tags":["Users"],"operationId":"GETv3_users_current_profile","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/users/current/menu":{"get":{"tags":["Users"],"operationId":"GETv3_users_current_menu","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.MenuResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Indicates that the requested resource not allowed for current user.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            <br/> 502 - Users not found;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/users/{userId}/menu":{"get":{"tags":["Users"],"operationId":"GETv3_users_{userId}_menu","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/users/{userId}/islocked":{"get":{"tags":["Users"],"summary":"Is locked","description":"Returns true if requested user is locked.\r\n            <br /><br />Available for Super Admin, SC Admin users usage.","operationId":"GETv3_users_{userId}_islocked","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userId","in":"path","description":"Numeric Id of the User to perform action with.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"default":false,"type":"boolean"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/users/features":{"get":{"tags":["Users"],"summary":"Returns user features object","operationId":"GETv3_users_features","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ApplicationAccess.FeatureResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/users/current/locationNoteRestrictions":{"get":{"tags":["Users"],"summary":"Returns user location note restrictions object","operationId":"GETv3_users_current_locationNoteRestrictions","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.User.UserLocationNoteRestrictionResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/employees/{employeeId}/users":{"get":{"tags":["Users"],"summary":"Retrieve provider users with the specified employee ID","description":"Returns a list of provider users with the specified employee ID. Provider admins can set an employee identifier on the **Employee Details** tab of the user profile.\r\n            <br />***Note:*** This method is only available to provider users with the *Provider Automation Admin* role.","operationId":"GETv3_employees_{employeeId}_users","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"employeeId","in":"path","description":"Non-unique identifier of a provider user.","required":true,"type":"string"}],"responses":{"200":{"description":"Provider users with the specified employee ID are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.User"}}}},"deprecated":false,"x-access":"Providers"}},"/users/regionalSettings":{"get":{"tags":["Users"],"summary":"Retrieve user localization settings","description":"","operationId":"GETv3_users_regionalSettings","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"User Localization settings are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.User.UserLocalizationSettings"}}},"deprecated":false,"x-access":"Any"}},"/weather/eventTypes":{"get":{"tags":["Weather"],"summary":"Get list of available weather types","operationId":"GETv3_weather_eventTypes?subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Workorders.WeatherEventType"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/weather/subscribers":{"get":{"tags":["Weather"],"summary":"Get SubscriberIds With WeatherOverlayOnMap Feature Flag","operationId":"GETv3_weather_subscribers","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Object"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br>Error codes:\r\n            <br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/workactivities/{workactivityId}":{"put":{"tags":["WorkActivities"],"summary":"Update the specified work activity of a work order","description":"Updates the specified work activity of a work order by setting the check-in and check-out date and time values passed in the request.\r\n            <br />Before updating a work activity, please consider the following:\r\n             • You can update work activities only for work orders in the *In Progress* primary status.\r\n             • The check-in date and time cannot be greater than the check-out date and time.\r\n             • The check-in date and time cannot be earlier than the scheduled date and time of the work order.\r\n             • The time range of the work activity you are updating cannot overlap the time ranges of existing work activities of the work order.\r\n             • The name will be set to the API caller name if the `name` value is not provided.\r\n            <br />***Note:*** Both subscribers and providers can use this method.\r\n            <br />***Note:*** Only users with extended permissions can update the work activities created by other users along with updating the `name` parameter. The users with certain permissions are:\r\n             • Subscribers that have the *Admin* role. These users can update the work activities created both by subscribers and by providers.\r\n             • Providers that have the *Admin* role (with the *EditLaborItemsOnWoDetailsProvider* feature flag turned on). These users can update the work activities created by providers only.\r\n             • Providers that have the *Business Owner / Management* role (with the *EditLaborItemsOnWoDetailsProvider* feature flag turned on). These users can update the work activities created by providers only.\r\n            <br />Learn more about [updating a work activity](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/576258285/Updating+Service+Provider+Check-In+Out+Information) in ServiceChannel University.\r\n            <br />**Example Request**\r\n            \r\n                PUT /workorders/{workorderId}/workactivities/{workactivityId}\r\n                {\r\n                   \"CheckInDate\": \"2020-11-19T11:10:36.868Z\",\r\n                   \"CheckOutDate\": \"2020-11-19T12:30:36.868Z\",\r\n                   \"Name\": \"John Doe\"\r\n                }","operationId":"PUTv3_workorders_{workorderId}_workactivities_{workactivityId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"The unique numeric identifier of the work order for which you want to update a work activity.","required":true,"type":"integer","format":"int32"},{"name":"workactivityId","in":"path","description":"The unique numeric identifier of the work activity to update.","required":true,"type":"integer","format":"int32"},{"name":"activityRequest","in":"body","description":"Request to update a work activity.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkActivityRequest"}}],"responses":{"200":{"description":"The work activity is updated, and its ID is returned in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — WorkOrder not found\r\n            503 — Work activity is not found\r\n            503 — Date range is incorrect\r\n            503 — Check In/Out is premature\r\n            904 — Invalid work order status\r\n            1186 — Time range is overlapped","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes:\r\n            804 — User has no permissions to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/workactivities":{"post":{"tags":["WorkActivities"],"summary":"Create a work activity for the specified work order","description":"Creates a new work activity for the specified work order. The work activity type can be either *Travel* or *Repair*. Note that custom types may be configured for a subscriber.\r\n            <br />Before creating a work activity, please consider the following:\r\n             • You can create work activities only for work orders in the *In Progress* primary status.\r\n             • The check-in date and time cannot be greater than the check-out date and time.\r\n             • The check-in date and time cannot be earlier than the scheduled date and time of the work order.\r\n             • The time range of the work activity you are creating cannot overlap the time ranges of existing work activities of the work order.\r\n             • The name will be set to the API caller name if the `name` value is not provided.\r\n            <br />***Note:*** Both subscribers and providers can use this method.\r\n            <br />***Note:*** Only users with extended permissions can specify the technician's name while creating a work activity. The users with extended permissions are:\r\n             • Subscribers that have the *Admin* role.\r\n             • Providers that have the *Admin* role (with the *EditLaborItemsOnWoDetailsProvider* feature flag turned on).\r\n             • Providers that have the *Business Owner / Management* role (with the *EditLaborItemsOnWoDetailsProvider* feature flag turned on).\r\n            <br />Learn more about [creating a work activity](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/576258285/Updating+Service+Provider+Check-In+Out+Information) in ServiceChannel University.\r\n            <br />**Example Request**\r\n            \r\n                POST /workorders/{workorderId}/workactivities\r\n                {\r\n                   \"WorkTypeId\": \"1\",       \r\n                   \"CheckInDate\": \"2020-11-19T11:10:36.868Z\",\r\n                   \"CheckOutDate\": \"2020-11-19T12:15:36.868Z\",\r\n                   \"Name\": \"John Doe\"\r\n                }","operationId":"POSTv3_workorders_{workorderId}_workactivities","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"The unique numeric identifier of the work order for which you want to create a work activity.","required":true,"type":"integer","format":"int32"},{"name":"activityRequest","in":"body","description":"Request to create a work activity.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkActivityPostRequest"}}],"responses":{"201":{"description":"A work activity is created for the specified work order, and a unique work activity ID is returned in the response."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — WorkOrder not found\r\n            503 — Work Type Not Found\r\n            503 — Date range is incorrect\r\n            503 — Check In/Out is premature\r\n            904 — Invalid work order status\r\n            1186 — Time range is overlapped","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes:\r\n            804 — User has no permissions to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"406":{"description":"The request is already processed.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"delete":{"tags":["WorkActivities"],"summary":"Delete the specified work activities of a work order","description":"Delete one or more work activities of the specified work order. When you pass multiple work activity IDs, the request will succeed if at least one ID is valid.\r\n            <br />***Note:*** Both subscribers and providers can use this method.","operationId":"DELETEv3_workorders_{workorderId}_workactivities?workactivityIds[0]={workactivityIds[0]}&workactivityIds[1]={workactivityIds[1]}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"The unique numeric identifier of the work order for which you want to delete work activities.","required":true,"type":"integer","format":"int32"},{"name":"workactivityIds","in":"query","description":"The unique numeric identifiers of the work activities to delete.","required":true,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"204":{"description":"The specified work activities are deleted, and the response is intentionally blank."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — WorkOrder not found\r\n            502 — Work activities are not found\r\n            804 — User has no permissions to perform this action","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders":{"get":{"tags":["WorkOrders"],"summary":"Search Work Orders","description":"Performs search of workorders by specified filter expression and returns list of work orders with all details.\r\n            <br />One page contains 50 items by default (\"pageSize\"=50). To get next 50 items use the \"page\" parameter (for example page=2 and so on).","operationId":"GETv3_workorders?locationId={locationId}&storeId={storeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","description":"UID of location.","required":false,"type":"integer","format":"int32"},{"name":"storeId","in":"query","description":"StoreId of location. Used to find location for which search will be performed.","required":false,"type":"string"},{"name":"otherLocationId","in":"query","description":"UID of location, exact search by default","required":false,"type":"array","items":{}},{"name":"id","in":"query","description":"UID of work order, exact search by default","required":false,"type":"array","items":{}},{"name":"category","in":"query","description":"Category of work order, exact search by default","required":false,"type":"array","items":{}},{"name":"status","in":"query","description":"Status of work order, exact search by default","required":false,"type":"array","items":{}},{"name":"extendedStatus","in":"query","description":"Extended status of work order, exact search by default","required":false,"type":"array","items":{}},{"name":"number","in":"query","description":"Work order number, 'starts with' search criteria by default","required":false,"type":"array","items":{}},{"name":"serviceId","in":"query","description":"'starts with' search criteria by default","required":false,"type":"array","items":{}},{"name":"priority","in":"query","description":"Priority of work order, exact search by default","required":false,"type":"array","items":{}},{"name":"purchaseNumber","in":"query","description":"Purchase number of work order, 'starts with' search criteria by default","required":false,"type":"array","items":{}},{"name":"trade","in":"query","description":"Trade, 'starts with' search criteria by default","required":false,"type":"array","items":{}},{"name":"scheduledDate","in":"query","description":"Scheduled date","required":false,"type":"array","items":{}},{"name":"expirationDate","in":"query","description":"Expiration date","required":false,"type":"array","items":{}},{"name":"callDate","in":"query","description":"Call date","required":false,"type":"array","items":{}},{"name":"sort","in":"query","description":"Sort resources by the specified property in the response.","required":false,"type":"string"},{"name":"page","in":"query","description":"Results page number.","required":false,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"Number of objects on the results page. The default and maximum per page is 50.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 403 - Account has not been activated for GPS use;\r\n            <br/> 503 - Validation fails. Request is empty or null;\r\n            <br/> 601 - Location Id is invalid;\r\n            <br/> 606 - Cannot find location by StoreId;\r\n            <br/> 1000 - Invalid Setup Id;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions; ","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            <br/> 501 - Timeout expired. The timeout period elapsed prior to completion of the operation or the server is not responding.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["WorkOrders"],"summary":"Create a Work order","description":"Creates a new Work order. Returns Work order Id for successful request.\r\n            <br />Available for provider and subscriber usage.\r\n            <br />Additional info:\r\n            <br />Updates GL code based on passed Category param according to settings in Admin module {go to Admin =&gt; Accounting =&gt; GlCodes to see user GL codes}.\r\n            Similar logic is used when you create Work order through next path: Dashboard =&gt; Request Service.","operationId":"POSTv3_workorders","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"A new Work order","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest"}}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - No provider was found for specified location and trade;\r\n            <br/> 300 - Missed contract data;\r\n            <br/> 301 - Contract not found for specified subscribers location, provider and trade;\r\n            <br/> 400 - Invalid Subscriber Id specified;\r\n            <br/> 503 - Work order cannot be created, provider could not be determined (missing providerID or IssueRequestInfo);\r\n            <br/> 600 - Invalid Location Id specified;\r\n            <br/> 603 - Subscriber has no specified Location;\r\n            <br/> 700 - Invalid Trade Name specified;\r\n            <br/> 702 - Subscriber has no specified Trade;\r\n            <br/> 800 - Missed required argument 'UserId';\r\n            <br/> 801 - Missed required argument 'CreatedBy';\r\n            <br/> 900 - Missed problem description options;\r\n            <br/> 901 - Missed required argument 'ProblemSource';\r\n            <br/> 902 - Missed required argument 'Description';\r\n            <br/> 903 - Missed required argument 'ProblemCode';\r\n            <br/> 904 - Invalid WorkOrder status;\r\n            <br/> 905 - Invalid 'Nte' value;\r\n            <br/> 906 - Invalid 'CallerName' value;\r\n            <br/> 907 - Invalid 'CallDate' value;\r\n            <br/> 908 - Invalid 'ScheduledDate' value;\r\n            <br/> 909 - Invalid 'ScheduledDate', greater than max allowed by subscriber;\r\n            <br/> 910 - Missed required argument 'Category';\r\n            <br/> 911 - Invalid 'Category';\r\n            <br/> 912 - Missed required argument 'Priority';\r\n            <br/> 913 - Invalid 'Priority';\r\n            <br/> 914 - Invalid 'Currency' value;\r\n            <br/> 915 - Invalid Setup Id;\r\n            <br/> 916 - At least one attachment required to create this WorkOrder;\r\n            <br/> 918 - Assets required to create this WorkOrder;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            <br/> 501 - Sequence contains no elements","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/status":{"put":{"tags":["WorkOrders"],"summary":"Update a Work order Status","description":"Updates Work Order status with optional Note. Returns Work order Id for successful request.\r\n            <br /><br />This method can only be used for users with 'WorkOrderStatusChange' permissions.\r\n            Available for provider and subscriber usage.","operationId":"PUTv3_workorders_{workorderId}_status","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequestExt","in":"body","description":"The update request. Work order Status.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWoStatusRequestExt"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderStatusResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - You don't have location access to perform this operation;\r\n            <br/> User has no permissions to perform this action;\r\n            <br/> 502 - WorkOrder not found;\r\n            <br/> 503 - Request data is empty; User data not found;\r\n            <br/> 904 - Invalid WorkOrder status;\r\n            <br/> User has no permission to set selected status;\r\n            <br/> 921 - Cannot update invoiced Work order;\r\n            <br/> 9001 - Decline reason id is required;\r\n            <br/> 9002 - This decline reason doesn't allow custom text","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/priority":{"put":{"tags":["WorkOrders"],"summary":"Update Work order Priority","description":"Updates Work Order priority. Returns Work order Id for successful request.\r\n            <br /><br />This method can only be used for users with 'WorkOrderFullEdit' permissions.","operationId":"PUTv3_workorders_{workorderId}_priority","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request. Work order Priority.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - You don't have location access to perform this operation;\r\n            <br/> 502 - Data not found. Returned if target Work order is not found database;\r\n            <br/> 503 - Request data is empty;\r\n            <br/> 913 - Priority isn't found in user settings;\r\n            <br/> Priority length cannot be longer then 100 or shorter then 1 characters;\r\n            <br/> 921 - Cannot update invoiced Work order;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/category":{"put":{"tags":["WorkOrders"],"summary":"Update the work order category","description":"Updates the category of the specified work order (WO) with the passed value. Note that you cannot update the category of an invoiced service request.\r\n            <br />If the WO category does not have a GL code mapping with the WO trade, you will get an error message listing valid categories for this trade based on existing GL codes. You can retrieve valid categories for a specific trade by sending the [GET /categories/glcodes](https://developer.servicechannel.com/swagger/ui/index?version=3#/Categories/GETv3_categories_glcodes_locationId__locationId__trade__trade_) request.\r\n            <br />***Note:*** Only users who have permission to edit work orders can use this method.\r\n            <br />**Example Request**\r\n            \r\n                PUT /workorders/{workorderId}/category\r\n                {\r\n                   \"Value\": \"Repair\",\r\n                   \"Actor\": \"James Smith\",\r\n                   \"Id\": 12345\r\n                }","operationId":"PUTv3_workorders_{workorderId}_category","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Unique numeric identifier of the work order you want to update the category for.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"Request to update the work order category.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWoCategoryRequest"}}],"responses":{"200":{"description":"The category of the specified work order is updated, and the unique work order ID is returned in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            100 — User has no rights to perform this action\r\n            502 — Work order is not found\r\n            921 — Cannot update invoiced work order","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/nte":{"put":{"tags":["WorkOrders"],"summary":"Update Work order NTE","description":"Updates Work Order NTE. Returns Work order Id for successful request.\r\n            <br /><br />This method can only be used for users with 'WorkOrderFullEdit' permissions.","operationId":"PUTv3_workorders_{workorderId}_nte","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request. Work order NTE.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWoNteRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n        \t<br/>Error codes:\r\n        \t<br/> 100 - You don't have location access to perform this operation;\r\n        \t<br/> 502 - Data not found. Returned if target Work order is not found database;\r\n        \t<br/> 503 - Request data is empty;\r\n        \t<br/> 905 - Invalid Work order NTE specified. Returned if nte exceeds user limit or its value is not a number;\r\n        \t<br/> 921 - Cannot update invoiced Work order;\r\n        \t<br/> 931 - NTE cannot be adjusted, please use subtotal and tax;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workOrderId}/projectApproval":{"put":{"tags":["WorkOrders"],"summary":"Update Work orders NTE project approval","description":"Update Work orders NTE project approval. Returns successfully updated id.\r\n            <br /><br />This method can only be used for users with 'WorkOrderFullEdit' permissions.","operationId":"PUTv3_workorders_{workOrderId}_projectApproval","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request. Work orders NTE/Link project approval.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrdersProjectApprovalRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n        \t<br/>Error codes:\r\n        \t<br/> 100 - You don't have location access to perform this operation;\r\n        \t<br/> 502 - Data not found. Returned if target Work order is not found database;\r\n        \t<br/> 503 - Request data is empty;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["WorkOrders"],"summary":"Create Work orders project approval","description":"Create Work orders project approval. Returns successfully updated id.\r\n            <br /><br />This method can only be used for users with 'WorkOrderFullEdit' permissions.","operationId":"POSTv3_workorders_{workOrderId}_projectApproval","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"createRequest","in":"body","description":"The create request. Work orders project approval.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrdersProjectApprovalRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n        \t<br/>Error codes:\r\n        \t<br/> 100 - You don't have location access to perform this operation;\r\n        \t<br/> 502 - Data not found. Returned if target Work order is not found database;\r\n        \t<br/> 503 - Request data is empty;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/scheduledate":{"put":{"tags":["WorkOrders"],"summary":"Update Work order Scheduled Date","description":"Updates Work Order Scheduled Date. Returns Work order Id for successful request.\r\n            <br /><br />Available for provider and subscriber usage.\r\n            This method can only be used for users with 'WorkOrderScheduledDateChange' permissions.","operationId":"PUTv3_workorders_{workorderId}_scheduledate?rescheduleReasonCode={rescheduleReasonCode}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request. Work order Scheduled Date.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest"}},{"name":"rescheduleReasonCode","in":"query","description":"Numeric reschedule reason code. Optional.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - You don't have location access to perform this operation;\r\n            <br/> 502 - Data not found. Returned if target Work order is not found database;\r\n            <br/> 503 - Request data is empty;\r\n            <br/> 908 - Invalid Work order scheduled date specified. Returned if invalid date format was specified,\r\n            scheduled date is smaller then Work order CallDate or bigger then Work order ExpirationDate;\r\n            <br/> 921 - Cannot update invoiced Work order;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/description":{"put":{"tags":["WorkOrders"],"summary":"Update Work order Description","description":"Updates Work Order Description. Returns Work order Id for successful request.\r\n            <br /><br />This method can only be used for users with 'WorkOrderFullEdit' permissions.","operationId":"PUTv3_workorders_{workorderId}_description","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request. Work order Description.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - You don't have location access to perform this operation;\r\n            <br/> 502 - Data not found. Returned if target Work order is not found database;\r\n            <br/> 503 - Request data is empty;\r\n            <br/> 902 - Invalid Work order Problem Description specified. Returned if description exceeds max len (8000 chars) or is empty;\r\n            <br/> 921 - Cannot update invoiced Work order;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/trade":{"put":{"tags":["WorkOrders"],"summary":"Change Work order Trade","operationId":"PUTv3_workorders_{workorderId}_trade","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - You don't have location access to perform this operation;\r\n            <br/> 502 - Data not found. Returned if target Work order is not found database;\r\n            <br/> 503 - Request data is empty;\r\n            <br/> 921 - Cannot update invoiced Work order;\r\n            <br/> 934 - Invalid Work order Trade specified. Returned if trade exceeds max len (50 chars) or is empty","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/resolution":{"post":{"tags":["WorkOrders"],"summary":"Add Work order Resolution","description":"Adds Resolution to Work order. Returns Resolution Id for successful request.","operationId":"POSTv3_workorders_{workorderId}_resolution","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The update request. Work order Resolution.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrderResolutionRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - User has no permissions to perform this action;\r\n            <br/> 502 - Work order is not found;\r\n            <br/> 503 - Request data is empty;\r\n            <br/> 904 - Work Order is in status that not allow to perform this action;\r\n            <br/> 933 - Workorder is on hold, no actions allowed;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/caller":{"put":{"tags":["WorkOrders"],"summary":"Update Work order Caller","description":"Updates Work order Caller. Returns Work order Id for successful request.\r\n            <br /><br />This method can only be used for users with 'WorkOrderFullEdit' permissions.","operationId":"PUTv3_workorders_{workorderId}_caller","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request. Work order Caller.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - You don't have location access to perform this operation;\r\n            <br/> 502 - Data not found. Returned if target Work order is not found database;\r\n            <br/> 503 - Request data is empty;\r\n            <br/> 906 - Invalid Work order Caller Name specified. Returned if Caller Name exceeds max len (100 chars) or is empty;\r\n            <br/> 921 - Cannot update invoiced Work order;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/ponumber":{"put":{"tags":["WorkOrders"],"summary":"Update Work order Purchase Number","description":"Updates Work order Purchase Number. Returns Work order Id for successful request.\r\n            <br /><br />This method can only be used for users with 'WorkOrderFullEdit' permissions.","operationId":"PUTv3_workorders_{workorderId}_ponumber","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request. Work order Purchase Number.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - You don't have location access to perform this operation;\r\n            <br/> 502 - Data not found. Returned if target Work order is not found database;\r\n            <br/> 503 - Request data is empty;\r\n            <br/> 920 - Invalid Work order purchase number specified. Returned if duplicate PO number is found for this subscriber or if value exceeds max len (20 chars);\r\n            <br/> 921 - Cannot update invoiced Work order;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/wonumber":{"put":{"tags":["WorkOrders"],"summary":"Update Work order Number","description":"Updates Work order Number.\r\n            <br /><br />This method can only be used for users with 'WorkOrderFullEdit' permissions.","operationId":"PUTv3_workorders_{workorderId}_wonumber","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request. Work order Number.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - You don't have location access to perform this operation;\r\n            <br/> 502 - Data not found. Returned if target Work order is not found database;\r\n            <br/> 503 - Request data is empty;\r\n            <br/> 923 - Invalid Work order number specified. Returned if duplicate number is found for this provider or if value exceeds max len (20 chars);\r\n            <br/> 921 - Cannot update invoiced Work order;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/projectid":{"put":{"tags":["WorkOrders"],"summary":"Update ProjectId","description":"Updates ProjectId.","operationId":"PUTv3_workorders_{workorderId}_projectid","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request. ProjectId.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWoProjectIdRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - You don't have location access to perform this operation;\r\n            <br/> 502 - Data not found. Returned if target Work order is not found database;\r\n            <br/> 503 - Request data is empty;\r\n            <br/> 923 - Invalid Work order number specified. Returned if duplicate number is found for this provider or if value exceeds max len (20 chars);\r\n            <br/> 921 - Cannot update invoiced Work order;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/projectid/unlink":{"put":{"tags":["WorkOrders"],"summary":"Unlink ProjectId","description":"Unlink ProjectId.","operationId":"PUTv3_workorders_{workorderId}_projectid_unlink","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - You don't have location access to perform this operation;\r\n            <br/> 502 - Data not found. Returned if target Work order is not found database;\r\n            <br/> 503 - Request data is empty;\r\n            <br/> 923 - Invalid Work order number specified. Returned if duplicate number is found for this provider or if value exceeds max len (20 chars);\r\n            <br/> 921 - Cannot update invoiced Work order;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/weatherTypeId":{"put":{"tags":["WorkOrders"],"summary":"Update weather type","description":"Updates weather type.\r\n            <br /><br />This method can only be used for users with 'WorkOrderFullEdit' permissions.","operationId":"PUTv3_workorders_{workorderId}_weatherTypeId?subscriberId={subscriberId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request. WeatherTypeId (put Value as empty to remove weather type).","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWoWeatherTypeIdRequest"}},{"name":"subscriberId","in":"query","description":"The subscriber Id to use (if logged in as a provider).","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - You don't have location access to perform this operation;\r\n            <br/> 502 - Data not found. Returned if target Work order is not found database;\r\n            <br/> 503 - Request data is empty;\r\n            <br/> 923 - Invalid Work order number specified. Returned if duplicate number is found for this provider or if value exceeds max len (20 chars);\r\n            <br/> 921 - Cannot update invoiced Work order;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/issueChoice":{"put":{"tags":["WorkOrders"],"summary":"Update issue choice on WO","operationId":"PUTv3_workorders_{workorderId}_issueChoice?subscriberId={subscriberId}&locationId={locationId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"subscriberId","in":"query","description":"The subscriber Id to use (if logged in as a provider).","required":true,"type":"integer","format":"int32"},{"name":"issueChoice","in":"body","description":"The request to perform action with.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.IssueChoiceRequest"}},{"name":"locationId","in":"query","description":"UID of location","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br/>Error codes:<br/> \r\n        503 - Validation fails;<br> \r\n        1000 - Invalid setupId(dashboard) for current user;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/reassign":{"put":{"tags":["WorkOrders"],"summary":"Reassign Work Order","description":"Reassign Work Order to another provider. Returns Work order Id for successful request.\r\n            <br /><br />Available for provider and subscriber usage.","operationId":"PUTv3_workorders_{workorderId}_reassign","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The request to perform action with.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ReassignWORequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 1301 - Request data is empty;\r\n            <br/> 101 - Invalid Provider Id;\r\n            <br/>Provider not found for selected trade and location;\r\n            <br/> 503 - Invalid Work order reassignment reason;\r\n            <br/>Request data is empty;\r\n            <br/>Required provider id not found;<br>Work order could not be reassigned. Only 'OPEN' and 'IN PROGRESS' statuses allowed;\r\n            <br/>Provider or trade should be changed;\r\n            <br/> 905 - Invalid 'Nte' value;\r\n            <br/>Nte value exceeds user limit;\r\n            <br/> 921 - Cannot update invoiced Work order;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Indicates that the server refuses to fulfill the request.\r\n            <br/> Error codes:\r\n            <br/> 804 - API call rejected by lack of provider permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/reassign/reasons":{"get":{"tags":["WorkOrders"],"summary":"Work order reassignment reasons","description":"List Work order reassignment reasons.\r\n            <br /><br />Available for provider and subscriber usage.\r\n            <br /><br />SubscriberId is used to determine provider access to the action ('WorkOrderReassign' EffectiveProviderPermissions, calculated flag. Calculated by ProviderAuthorizationHandler)","operationId":"GETv3_workorders_reassign_reasons?subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"This parameter is required only for provider.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrderReassignmentReason"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Indicates that the server refuses to fulfill the request.\r\n            <br/> Error codes:\r\n            <br/> 804 - API call rejected by lack of provider permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}":{"get":{"tags":["WorkOrders"],"summary":"Retrieve a Work order","description":"A single Work order object with all its details.","operationId":"GETv3_workorders_{workorderId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - Request data is empty;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/validateCheckIn":{"get":{"tags":["WorkOrders"],"summary":"Validate Check-In action","description":"Validate Check-In action","operationId":"GETv3_workorders_{workorderId}_validateCheckIn?WorkTypeId={WorkTypeId}&Latitude={Latitude}&Longitude={Longitude}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"workTypeId","in":"query","description":"Optional, type work Id. 1 - 'Repair', 2 - 'Travel'\r\n            Default value is 1 ('Repair'). Supports custom types.","required":false,"type":"integer","format":"int32"},{"name":"latitude","in":"query","description":"Global position. Latitude","required":true,"type":"number","format":"double"},{"name":"longitude","in":"query","description":"Global position. Longitude","required":true,"type":"number","format":"double"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 - WorkOrder not found;\r\n            <br/> 503 - Request data is empty;\r\n            <br/>Provide your location to perform checkin/checkout;\r\n            <br/> 917 - Invalid Tracking Number;\r\n            <br/> 921 - Cannot update work order in 'completed' status;\r\n            <br/>Cannot update invoiced work order;\r\n            <br/> 924 - Work order has been invoiced and cannot be changed;\r\n            <br/> 941 - Can't do check in: out of ... mile range;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"405":{"description":"Indicates that the request method is not allowed on the requested resource."}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/validateCheckOut":{"get":{"tags":["WorkOrders"],"summary":"Validate Check-Out action","description":"Validate Check-Out action","operationId":"GETv3_workorders_{workorderId}_validateCheckOut?WorkTypeId={WorkTypeId}&Latitude={Latitude}&Longitude={Longitude}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"workTypeId","in":"query","description":"Optional, type work Id. 1 - 'Repair', 2 - 'Travel'\r\n            Default value is 1 ('Repair'). Supports custom types.","required":false,"type":"integer","format":"int32"},{"name":"latitude","in":"query","description":"Global position. Latitude","required":true,"type":"number","format":"double"},{"name":"longitude","in":"query","description":"Global position. Longitude","required":true,"type":"number","format":"double"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 - WorkOrder not found;\r\n            <br/> 503 - Request data is empty;\r\n            <br/>Provide your location to perform checkin/checkout;\r\n            <br/> 917 - Invalid Tracking Number;\r\n            <br/> 921 - Cannot update work order in 'completed' status;\r\n            <br/>Cannot update invoiced work order;\r\n            <br/> 924 - Work order has been invoiced and cannot be changed;\r\n            <br/> 941 - Can't do check out: out of ... mile range;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"405":{"description":"Indicates that the request method is not allowed on the requested resource."}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/universalCheckIn":{"post":{"tags":["WorkOrders"],"summary":"Perform a check-in","description":"Creates a check-in record of the indicated work type: travel, repair, or custom. Returns `MechanicId` for a successful request.\r\n            See the [Check-In/Out guide](https://developer.servicechannel.com/guides/checkin/about-check-in-out/) for code snippets and detailed instructions.\r\n            <br />***Note:*** [Special permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#check-inout-permissions) is required for the Travel and Repair work types.\r\n            <br />**Example Request**\r\n            \r\n                POST /workorders/{workorderId}/universalCheckIn\r\n                {\r\n                  \"WorkTypeId\": 1,\r\n                  \"UserId\": 1544987,\r\n                  \"TechsCount\": 2,\r\n                  \"Latitude\": 40.736618,\r\n                  \"Longitude\": -73.991806,\r\n                  \"CheckInTime\": \"2018-10-23T08:30:00Z\"\r\n                }","operationId":"POSTv3_workorders_{workorderId}_universalCheckIn","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"The unique ID of the work order for which you want to report a check-in.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The check-in object that needs to be created.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.CheckInRequest"}}],"responses":{"200":{"description":"The check-in record is created.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckInOut.CheckInOutResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 - Work order not found\r\n            503 - Required data missing or incorrect\r\n            503 - Provide your location to perform check-in or check-out\r\n            503 - Work type not found\r\n            503 - Check-in or check-out premature\r\n            503 - Check-in or check-out time should be close to current location time\r\n            503 - Check-in or check-out out of date\r\n            804 - User has no permission to perform this action\r\n            917 - Invalid WO tracking number\r\n            921 - Cannot update work order in one of the completed statuses\r\n            924 - Work order has been invoiced and cannot be changed\r\n            924 - No changes can be made to this maintenance work order because it is expired or premature\r\n            924 - Cannot check in/out of work order in … status\r\n            924 - Client not participating in GPS check-in process; use IVR\r\n            924 - Store has no GPS coordinates\r\n            941 - Can’t perform check-in or check-out: out of ... mile range","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"405":{"description":"The method is not allowed."}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/universalCheckOut":{"post":{"tags":["WorkOrders"],"summary":"Perform a check-out","description":"Creates a check-out record of the indicated work type: travel, repair, or custom. Returns `MechanicId` for a successful request.\r\n            See the [Check-In/Out guide](https://developer.servicechannel.com/guides/checkin/about-check-in-out/) for code snippets and detailed instructions.\r\n            <br />***Note:*** [Special permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#check-inout-permissions) is required for the Travel and Repair work types.\r\n            <br />**Example Request**\r\n            \r\n                POST /workorders/{workorderId}/universalCheckOut\r\n                {\r\n                  \"WorkTypeId\": 1,\r\n                  \"PrimaryStatus\": \"InProgress\",\r\n                  \"ExtendedStatus\": \"string\",\r\n                  \"ActionStatus\": \"Complete\",\r\n                  \"Resolution\": \"We need more time to complete this job.\",\r\n                  \"UserId\": 1544987,\r\n                  \"Latitude\": 40.736618,\r\n                  \"Longitude\": -73.991806,\r\n                  \"CheckOutTime\": \"2018-10-23T09:30:00Z\"\r\n                }","operationId":"POSTv3_workorders_{workorderId}_universalCheckOut","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"The unique ID of the work order for which you want to report a check-out.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The check-out object that needs to be created.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.CheckOutRequest"}}],"responses":{"200":{"description":"The check-out record is created.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckInOut.CheckInOutResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 - Work order not found\r\n            503 - Required data missing or incorrect\r\n            503 - Provide your location to perform check-in or check-out\r\n            503 - User has not checked in\r\n            503 - Work type not found\r\n            503 - Check-in or check-out premature\r\n            503 - Check-in or check-out time should be close to current location time\r\n            503 - Check-in or check-out out of date\r\n            503 - Invalid SignatureAttachmentId\r\n            503 - Invalid UnableObtainSignatureNoteId\r\n            503 - You can set either SignatureAttachmentId or UnableObtainSignatureNoteId but not both\r\n            503 - No access to electronic signatures\r\n            804 - User has no permission to perform this action\r\n            904 - User does not have … extended status that belongs to … primary status\r\n            917 - Invalid WO tracking number\r\n            921 - Cannot update work order in one of the completed statuses\r\n            925 - Work order has been invoiced and cannot be changed\r\n            925 - No changes can be made to this maintenance work order because it is expired or premature\r\n            925 - Cannot check in/out of work order in … status\r\n            925 - Client not participating in GPS check-in process; use IVR\r\n            925 - Store has no GPS coordinates\r\n            942 - Can’t perform check-in or check-out: out of ... mile range","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 - Missing or incorrect authentication credentials","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"405":{"description":"The method is not allowed."}},"deprecated":false,"x-access":"Any"}},"/workorders/{workOrderId}/checklists-responses":{"get":{"tags":["WorkOrders"],"summary":"Get checklist responses for a work order","description":"[Returns checklist responses](https://developer.servicechannel.com/guides/checklists/get-checklist-responses-for-a-wo/) submitted for the specified work order.","operationId":"GETv3_workorders_{workOrderId}_checklists-responses?getAll={getAll}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Unique identifier of the work order to return checklist responses for.","required":true,"type":"integer","format":"int32"},{"name":"getAll","in":"query","description":"Flag to get responses from all completed checklists.","required":false,"type":"boolean","default":false}],"responses":{"200":{"description":"Checklist responses for the specified work order are returned.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.GetResponsesByWorkOrderResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — Work order is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/odata/workorders/filter":{"post":{"tags":["WorkOrders"],"summary":"Retrieve work orders","description":"Returns a list of work orders created within the last 90 days if not specified otherwise in `$filter`. The maximum date range between the work order `CallDate` and the current date is 365 days.\r\n            <br />The default number of work orders in the response is 50. To retrieve more work orders, use the `$skip` parameter.\r\n            <br />***Note***: You can also get a list of work orders by using one of the following methods: [GET /odata/workorders](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/WorkOrders_GetWorkOrders), [GET /workorders](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/GETv3_workorders_locationId__locationId__storeId__storeId_).\r\n            <param name=\"request\"></param>","operationId":"POSTv3_odata_workorders_filter","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ODataRequest"}}],"responses":{"200":{"description":"The list of work orders is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"}}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"406":{"description":"The request is already processed.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.\r\n            <br/>Error codes:\r\n            501 — Object reference is not set to an instance of an object","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/locations/{locationId}/workorders":{"get":{"tags":["WorkOrders"],"summary":"Search Work Orders for specified location","description":"Performs search of workorders by specified filter expression and returns list of work orders with all details.\r\n            <br />One page contains 50 items by default (\"pageSize\"=50). To get next 50 items use the \"page\" parameter (for example page=2 and so on).","operationId":"GETv3_locations_{locationId}_workorders?storeId={storeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","description":"UID of location.","required":true,"type":"integer","format":"int32"},{"name":"storeId","in":"query","description":"StoreId of location. Used to find location for which search will be performed.","required":false,"type":"string"},{"name":"id","in":"query","description":"UID of work order, exact search by default","required":false,"type":"array","items":{}},{"name":"category","in":"query","description":"Category of work order, exact search by default","required":false,"type":"array","items":{}},{"name":"status","in":"query","description":"Status of work order, exact search by default","required":false,"type":"array","items":{}},{"name":"extendedStatus","in":"query","description":"Extended status of work order, exact search by default","required":false,"type":"array","items":{}},{"name":"number","in":"query","description":"Work order number, 'starts with' search criteria by default","required":false,"type":"array","items":{}},{"name":"serviceId","in":"query","description":"'starts with' search criteria by default","required":false,"type":"array","items":{}},{"name":"priority","in":"query","description":"Priority of work order, exact search by default","required":false,"type":"array","items":{}},{"name":"purchaseNumber","in":"query","description":"Purchase number of work order, 'starts with' search criteria by default","required":false,"type":"array","items":{}},{"name":"trade","in":"query","description":"Trade, 'starts with' search criteria by default","required":false,"type":"array","items":{}},{"name":"scheduledDate","in":"query","description":"Scheduled date","required":false,"type":"array","items":{}},{"name":"expirationDate","in":"query","description":"Expiration date","required":false,"type":"array","items":{}},{"name":"callDate","in":"query","description":"Call date","required":false,"type":"array","items":{}},{"name":"sort","in":"query","description":"Sort resources by the specified property in the response.","required":false,"type":"string"},{"name":"page","in":"query","description":"Results page number.","required":false,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"Number of objects on the results page. The default and maximum per page is 50.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 403 - Account has not been activated for GPS use;\r\n            <br/> 503 - Validation fails. Request is empty or null;\r\n            <br/> 601 - Location Id is invalid;\r\n            <br/> 606 - Cannot find location by StoreId;\r\n            <br/> 1000 - Invalid Setup Id;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions; ","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            <br/> 501 - Timeout expired. The timeout period elapsed prior to completion of the operation or the server is not responding.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/locations/{LocationId}/warningworkorders":{"get":{"tags":["WorkOrders"],"summary":"Retrieve a Warning Work Orders for Location","description":"Retrieve a Warning Work Orders for Location\r\n            <br />One page contains 50 items by default (\"pageSize\"=50). To get next 50 items use the \"page\" parameter (for example page=2 and so on).","operationId":"GETv3_locations_{LocationId}_warningworkorders?ProblemCode={ProblemCode}&Equipment={Equipment}&ProblemType={ProblemType}&Trade={Trade}&Completed={Completed}&SubscriberId={SubscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"query","required":true,"type":"string"},{"name":"locationId","in":"query","required":false,"type":"integer","format":"int32"},{"name":"problemCode","in":"query","required":false,"type":"string"},{"name":"equipment","in":"query","required":false,"type":"string"},{"name":"problemType","in":"query","required":false,"type":"string"},{"name":"trade","in":"query","required":false,"type":"string"},{"name":"completed","in":"query","required":false,"type":"boolean","default":false},{"name":"subscriberId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"}}}},"deprecated":false,"x-access":"Any"}},"/workorders/statistics":{"get":{"tags":["WorkOrders"],"summary":"Statistics Collection","description":"Retrieves list of all Work order Statistics. Only for providers usage.","operationId":"GETv3_workorders_statistics?daysPeriod={daysPeriod}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"daysPeriod","in":"query","description":"Days Period to perform action with (30 by default).","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrderStatisticsResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - Only for providers usage;<br>Request data is empty;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/categories":{"get":{"tags":["WorkOrders"],"summary":"Categories Collection","description":"Retrieves list of all Work order categories.","operationId":"GETv3_workorders_categories?SubscriberId={SubscriberId}&SortExpr={SortExpr}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"This parameter is required only for provider.","required":false,"type":"integer","format":"int32"},{"name":"sortExpr","in":"query","description":"Gets or sets sort expression.","required":false,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Category.CategoryResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - Request data is empty;\r\n            <br/>SubscriberId is incorrect;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/statuses":{"get":{"tags":["WorkOrders"],"summary":"Statuses Collection","description":"Retrieves list of available Work order statuses. Id value can be used instead of primary status name in Update Status method.","operationId":"GETv3_workorders_statuses?subscriberId={subscriberId}&tradeId={tradeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"This parameter is required only for provider.","required":false,"type":"integer","format":"int32"},{"name":"tradeId","in":"query","description":"Optional, if LimitStatusesByTrade FF is on","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/statuses":{"get":{"tags":["WorkOrders"],"summary":"Statuses Collection that relates to the state of work order","description":"Retrieves list of available Work order statuses that are related to current work order state.\r\n            Id value can be used instead of primary status name in Update Status method.","operationId":"GETv3_workorders_{workorderId}_statuses?subscriberId={subscriberId}&tradeId={tradeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"subscriberId","in":"query","description":"This parameter is required only for provider.","required":false,"type":"integer","format":"int32"},{"name":"tradeId","in":"query","description":"Optional, if LimitStatusesByTrade FF is on","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/priorities":{"get":{"tags":["WorkOrders"],"summary":"Priorities Collection","description":"Retrieves list of all Work order priorities in user settings.","operationId":"GETv3_workorders_priorities?subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"This parameter is required only for provider.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Priorities.PriorityResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["WorkOrders"],"summary":"Create Priority","description":"Creates Priority.","operationId":"POSTv3_workorders_priorities","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"The request model to perform action with.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Priorities.AddPriorityRequest"}}],"responses":{"201":{"description":"Indicates that the request succeeded.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Priorities.AddPriorityResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/starred":{"get":{"tags":["WorkOrders"],"summary":"Starred Work Order Ids Collection","description":"Retrieves list of work order ids starred by the current user.","operationId":"GETv3_workorders_starred","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"format":"int32","type":"integer"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n             <br/>Error codes:\r\n             <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/locations/{locationId}/workorders/priorities":{"get":{"tags":["WorkOrders"],"operationId":"GETv3_locations_{locationId}_workorders_priorities","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"locationId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Priorities.PriorityResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 502 - Location not found;\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/label":{"get":{"tags":["WorkOrders"],"summary":"Get work orders labels.","operationId":"GETv3_workorders_label?keyword={keyword}&page={page}&pageSize={pageSize}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"keyword","in":"query","description":"Keyword contained in labels to perform the search by.","required":false,"type":"string"},{"name":"page","in":"query","description":"Results page number. Page number for pagination is 1-based.","required":false,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"Number of labels on the results page.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.GetWorkOrderLabelResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/label":{"put":{"tags":["WorkOrders"],"summary":"Update work order label","description":"Update work order label.","operationId":"PUTv3_workorders_{workorderId}_label","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Work order id","required":true,"type":"integer","format":"int32"},{"name":"workOrderLabelRequest","in":"body","description":"Model for add/update label to work order","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"delete":{"tags":["WorkOrders"],"summary":"Delete work order label","description":"Delete work order label.","operationId":"DELETEv3_workorders_{workorderId}_label","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Work order id","required":true,"type":"integer","format":"int32"},{"name":"workOrderLabelRequest","in":"body","description":"Model for delete label from work order","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/servicenowid":{"put":{"tags":["WorkOrders"],"summary":"Update work order servicenowid","description":"Update work order servicenowid.","operationId":"PUTv3_workorders_{workorderId}_servicenowid","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Work order id","required":true,"type":"integer","format":"int32"},{"name":"workOrderServiceNowIdRequest","in":"body","description":"Model for add/update label to work order","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrderServiceNowIdRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"You are not authorized to request this resource, or the resource is unavailable for some reason.\r\n            <br/>Error codes: \r\n            804 — User has no permissions to perform this action.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/addstripecharge":{"post":{"tags":["WorkOrders"],"summary":"Create Stripe charge","description":"<para>Creates charge through Stripe with provider stripe account as destination.</para>\r\n<para>Also increases NTE by charge amount.</para>","operationId":"POSTv3_workorders_{workorderId}_addstripecharge","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Work order id","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"request","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.AddStripeChargeRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br>Error codes:<br>502 - WorkOrder not found;<br>503 - Request data is empty;WO don't have provider;WorkOrder does not belong to subscriber;Amount is not positive;<br>904 - WorkOrder is completed;<br>101 - Provider don't have Stripe account;<br>501 - Stripe API error","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Error while processing request.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/workorders/{workorderId}/link":{"put":{"tags":["WorkOrders"],"summary":"Creates link between two Work Orders","description":"<para>Current Work Order marked as a parent, linking Work Order marked as follow Up.</para>\r\n<para>If you set 'workorderIdToLink' parameter then 'WorkorderIds' parameter of requested body will be ignored.</para>\r\n<br />\r\n<br />Available for provider and subscriber usage.","operationId":"PUTv3_workorders_{workorderId}_link?workorderIdToLink={workorderIdToLink}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Parent Work Order id","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"Link Workorders Request","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.LinkWorkordersRequest"}},{"name":"workorderIdToLink","in":"query","description":"Work Order Id that links to parent. Optional.","required":false,"type":"integer","format":"int32"}],"responses":{"204":{"description":"Indicates that the request succeeded"},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br/>Error codes:<br/> \r\n        917 - Wrong Parent Work Order Id;<br> \r\n        932 - Wrong Linked Work Order Id;<br>\r\n        601 - Location doesn't match","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/unlink":{"put":{"tags":["WorkOrders"],"summary":"Removes link between two Work Orders","description":"<para>Current Work Order is parent, followUp Work Order is linked Work Order</para>\r\n<para>If you set 'linkedWorkorderId' parameter then 'WorkorderIds' parameter of requested body will be ignored.</para>\r\n<br />\r\n<br />Available for provider and subscriber usage.","operationId":"PUTv3_workorders_{workorderId}_unlink?linkedWorkorderId={linkedWorkorderId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Parent Work Order id","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"UnLink Workorders Request","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.UnlinkWorkordersRequest"}},{"name":"linkedWorkorderId","in":"query","description":"Work Order Id that Unlinks from parent. Optional.","required":false,"type":"integer","format":"int32"}],"responses":{"204":{"description":"Indicates that the request succeeded"},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br/>Error codes:<br/> \r\n        917 - Wrong Parent Work Order Id;<br> \r\n        932 - Wrong Linked Work Order Id","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/feedback":{"post":{"tags":["WorkOrders"],"summary":"Leave feedback for a work order","operationId":"POSTv3_workorders_{workorderId}_feedback","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"leaveFeedbackRequest","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.LeaveFeedbackRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br/>Error codes:<br/> \r\n        935 - Invalid Star Score;<br> \r\n        936 - Work Order was rated another user","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/feedback/list":{"get":{"tags":["WorkOrders"],"summary":"Get work orders feedbacks","operationId":"GETv3_workorders_feedback_list?workOrdersIds[0]={workOrdersIds[0]}&workOrdersIds[1]={workOrdersIds[1]}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrdersIds","in":"query","description":"","required":true,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"}],"responses":{"200":{"description":"Indicates that the request succeeded."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/providerforreassignment":{"get":{"tags":["WorkOrders"],"summary":"Retrieve a Provider","description":"A single Provider object with all its details.","operationId":"GETv3_workorders_providerforreassignment?workorderId={workorderId}&providerId={providerId}&locationId={locationId}&trade={trade}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"query","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"providerId","in":"query","description":"Numeric Id of the previously assigned Provider.","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"query","description":"Numeric Id of the Location.","required":true,"type":"integer","format":"int32"},{"name":"trade","in":"query","description":"Trade.","required":true,"type":"string"}],"responses":{"204":{"description":"Indicates that the request has been successfully processed and that the response is intentionally blank."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - Request data is empty;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/solvedissue":{"post":{"tags":["WorkOrders"],"summary":"Submit solved issue during troubleshooting","operationId":"POSTv3_workorders_solvedissue","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"model","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.Dashboard.Requests.SubmitSolvedIssueModel"}}],"responses":{"201":{"description":"Indicates that the request has succeeded and has led to the creation of a resource."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - Request data is empty;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/worktypes":{"get":{"tags":["WorkOrders"],"summary":"Work types Collection","description":"Retrieves list of Work types.","operationId":"GETv3_worktypes?subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"query","description":"This parameter is required only for provider.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.V4.Workorders.WorkTypeResponse"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/techniciansAssigned":{"get":{"tags":["WorkOrders"],"summary":"Retrieve list of technicians assigned to the specified work order","operationId":"GETv3_workorders_{workorderId}_techniciansAssigned","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"401":{"description":"Indicates that the requested resource requires authentication. \r\n                                                    <br/>Error codes: \r\n                                                    <br/>504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"403":{"description":"Indicates that the server refuses to fulfill the request. \r\n                                                    <br/>Error codes: \r\n                                                    <br/>504 - Work order doesn't belong to the current user","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Not Found - the requested resource could not be found but may be available in the future. \r\n                                                        <br/>Error codes: \r\n                                                        <br/>502 - Work order is not found;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server. \r\n        <br/>Error codes: \r\n        <br/>501 - Timeout expired. The timeout period elapsed prior to completion of the operation or the server is not responding.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/workorders/{workorderId}/refrigerantUseStatus":{"get":{"tags":["WorkOrders"],"summary":"Retrieve the status of refrigerant use on a work order","description":"Returns the status of refrigerant use on the specified work order:\r\n             • `null`: There is no information on the use of refrigerant.\r\n             • `true`: Refrigerant was used upon execution of the service request.\r\n             • `false`: Refrigerant wasn't used when performing work on the service request.","operationId":"GETv3_workorders_{workorderId}_refrigerantUseStatus","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"The unique numeric identifier of the work order to return the status of refrigerant use for.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"The status of refrigerant use on the specified work order is in the response.","schema":{"default":false,"type":"boolean"}},"401":{"description":"The request is not authorized.<br/><br/>Error codes:<br/>504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/workorders/{workOrderId}/leakWasDetected":{"get":{"tags":["WorkOrders"],"summary":"Retrieve the leak detection result in a Work Order","description":"Return the answer to the question did you find a leak on the specified work order:\r\n             • `null`: There is no information about the detected leak.\r\n             • `true`: The answer to the question did you find a leak is Yes.\r\n             • `false`: The answer to the question did you find a leak is No.","operationId":"GETv3_workorders_{workOrderId}_leakWasDetected","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"The unique numeric identifier of the work order.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"default":false,"type":"boolean"}},"401":{"description":"The request is not authorized.<br/><br/>Error codes:<br/>504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/markRefrigerantUse":{"put":{"tags":["WorkOrders"],"summary":"Update the status of refrigerant use on a work order","description":"Updates the status of refrigerant use on the specified work order.\r\n            <br />Set the `refrigerantWasUsed` parameter to either `true` or `false` to mark whether refrigerant was used on the service request or not.","operationId":"PUTv3_workorders_{workorderId}_markRefrigerantUse?refrigerantWasUsed={refrigerantWasUsed}&actor={actor}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"The unique numeric identifier of the work order to update the status of refrigerant use for.","required":true,"type":"integer","format":"int32"},{"name":"refrigerantWasUsed","in":"query","description":"Defines if refrigerant was used on the work order.","required":false,"type":"boolean","default":false},{"name":"actor","in":"query","description":"Name of the person on whose behalf you are performing the action.","required":false,"type":"string"}],"responses":{"204":{"description":"The status of refrigerant use on the specified work order is updated."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.<br/><br/>Error codes:<br/>504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/workorders/{workOrderId}/UpdateWorkOrderLeakInspectionInfo":{"put":{"tags":["WorkOrders"],"summary":"Update the leak inspection info on a work order","description":"RTMultiLeakFlow FF must be enabled for this operation","operationId":"PUTv3_workorders_{workOrderId}_UpdateWorkOrderLeakInspectionInfo?refrigerantWasUsed={refrigerantWasUsed}&leakWasDetected={leakWasDetected}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"The unique numeric identifier of the work order to update the status of refrigerant use for.","required":true,"type":"integer","format":"int32"},{"name":"refrigerantWasUsed","in":"query","description":"Defines if refrigerant was used on the work order.","required":true,"type":"boolean","default":false},{"name":"leakWasDetected","in":"query","description":"Defines if leak was detected on the work order.","required":true,"type":"boolean","default":false}],"responses":{"204":{"description":"The leak inspection info on the specified work order is updated."},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            <br/>701 - Invalid trade","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            <br/>504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/workorders/{workOrderId}/weatherEvent":{"get":{"tags":["WorkOrders"],"summary":"Get the Weather Event associated to a work order (if set)","description":"Retrieves the set Weather Event related to a work order.","operationId":"GETv3_workorders_{workOrderId}_weatherEvent?subscriberId={subscriberId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"The Id of the work order.","required":true,"type":"integer","format":"int32"},{"name":"subscriberId","in":"query","description":"This parameter is required only for provider.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Api.Model.Workorders.WeatherEventType"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/SetMoeNumber":{"put":{"tags":["WorkOrders"],"summary":"Mark if refrigerant was used","operationId":"PUTv3_workorders_{workorderId}_SetMoeNumber?moeNumber={moeNumber}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Work Order id","required":true,"type":"integer","format":"int32"},{"name":"moeNumber","in":"query","description":"MOE Number","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded"},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/features":{"get":{"tags":["WorkOrders"],"summary":"Checks features of Work order subscriber","operationId":"GETv3_workorders_{workorderId}_features?features[0]={features[0]}&features[1]={features[1]}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"features","in":"query","description":"Features to check","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ApplicationAccess.FeatureResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 503 - Request data is empty;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"502":{"description":"Indicates that the requested resource was not found on the server."}},"deprecated":false,"x-access":"Any"}},"/workorders/{workOrderId}/analytics":{"get":{"tags":["WorkOrders"],"summary":"Get analytics on a work order","description":"Retrieves analytics on the specified work order. \r\n            <br />Analytics are based on the following flags: \r\n             • **IVR**. Tracks the proper Check-In/Out process and indicates whether the work order has both Check-In and Check-Out records and completes with a Check-Out. \r\n             • **SLA**. Tracks estimated time of arrival (ETA) and indicates whether the work order met the original ETA. \r\n             • **FirstTimeCompletionFlag**. Indicates whether the work order was completed on the first visit (the work order has only one Check-In and one Check-Out records within 24 hours). \r\n            <br />***Note***: You can get analytics from any work order. However, the analytics are mostly relevant for the work orders in the **Completed** status, as these flags rest on the Check-In/Out information.","operationId":"GETv3_workorders_{workOrderId}_analytics","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Unique numeric identifier of the work order to get analytics from.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Analytics on the specified work order are in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrderAnalyticsResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The request URI is incorrect, or the resource does not exist.\r\n            <br/>Error codes: \r\n            502 — Data not found\r\n            The resource you are looking for has been removed, had its name changed, or is temporarily unavailable"},"500":{"description":"Something went wrong, and the server was unable to complete your request.\r\n            <br/>Error codes:\r\n            501 — Internal Error","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/isTechnicianCertificateUsedOnWorkOrders":{"get":{"tags":["WorkOrders"],"summary":"Verify if refrigerant certificat is associated with WOs","operationId":"GETv3_workorders_isTechnicianCertificateUsedOnWorkOrders?certificateId={certificateId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"certificateId","in":"query","description":"Numeric Id of the technician certificatite","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Refrigerant certification is verified.","schema":{"default":false,"type":"boolean"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Something went wrong, and the server was unable to complete your request.\r\n            <br/>Error codes:\r\n            501 — Internal Error","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workOrderId}/technicianCertificate":{"put":{"tags":["WorkOrders"],"summary":"Assign technician certificate to the WO","operationId":"PUTv3_workorders_{workOrderId}_technicianCertificate","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The request to perform action with","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ChangeWoTechnicianCertificateRequest"}}],"responses":{"200":{"description":"Certificatite was sucsesfully assigned."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 - Work order is not found;\r\n            <br/> 601 - Invalid Location Id;\r\n            <br/> 701 - Invalid trade;\r\n            <br/> 1301 - Request data is empty;\r\n            <br/> 3901 - Invalid Certificate Id;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workOrderId}/accept":{"put":{"tags":["WorkOrders"],"summary":"Accept a work order","description":"Allows a provider to accept a work order with an optional note.\r\n            <br />When a work order is successfully accepted, it changes its status from *Open* to *In Progress / Dispatch Confirmed*. \r\n            <br />***Note***: Providers only can use this method.","operationId":"PUTv3_workorders_{workOrderId}_accept","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Unique numeric identifier of the work order.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"Request to add a note to the work order while accepting it.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.AcceptWorkOrderRequest"}}],"responses":{"200":{"description":"Work order is successfully accepted."},"400":{"description":"The request was not accepted due to bad syntax, missing parameters, insufficient data, etc.  \r\n            <br/>Error codes:\r\n            502 &mdash; Work order is not found\r\n            804 &mdash; User has no permission to perform this action \r\n            904 &mdash; Work order is in status that does not allow to perform this action \r\n            5202 &mdash; This work order was already accepted\r\n            5203 &mdash; Acceptance of the work order failed","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The requested resource requires authentication.\r\n            <br/>Error codes:\r\n            504 &mdash; API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Invalid work order ID.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Something went wrong, and the server was unable to complete your request. ","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/workorders/{workOrderId}/decline":{"put":{"tags":["WorkOrders"],"summary":"Decline a work order","description":"Allows a provider to decline a work order with a note. \r\n            <br />When a provider declines a work order, the order changes its status from *Open* to *Open / Declined* or becomes automatically reassigned to another provider if the *WOMultipleAutoReassign* feature flag is turned on for the subscriber. \r\n            <br />***Note***: Providers only can use this method.","operationId":"PUTv3_workorders_{workOrderId}_decline","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workOrderId","in":"path","description":"Unique numeric identifier of the work order.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"Request to add information about the work order decline. \r\n            <br />Required parameters: \r\n             • `DeclineReasonId` (if the *DeclineHistoryWO* feature flag is on)\r\n             • `CustomDeclineReason` (if the decline reason has `AskCustomReason`=true)","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.DeclineWorkOrderRequest"}}],"responses":{"200":{"description":"Work order is declined."},"400":{"description":"The request was not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 &mdash; Work order is not found\r\n            804 &mdash; User has no permission to perform this action\r\n            904 &mdash; Work order is in status that does not allow to perform this action\r\n            5201 &mdash; Work order decline failed\r\n            9002 &mdash; This decline reason does not allow custom text\r\n            9003 &mdash; Invalid decline reason ID","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The requested resource requires authentication. \r\n            <br/>Error codes:\r\n            504 &mdash; API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Something went wrong, and the server was unable to complete your request.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/workorders/{workorderId}/GPSRadius":{"get":{"tags":["WorkOrders"],"summary":"Get GPS Radius for a WO","description":"Get GPS Radius for a WO","operationId":"GETv3_workorders_{workorderId}_GPSRadius","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.GetGPSRadiusResponse"}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 502 - WorkOrder not found;            \r\n            <br/> 917 - Invalid Tracking Number;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workorders/{workorderId}/followers":{"post":{"tags":["WorkOrders"],"summary":"Add Followers to Work order","description":"Add Followers to Work order.","operationId":"POSTv3_workorders_{workorderId}_followers","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The request model to perform action with.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest"}}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/>503 - Request data is empty;\r\n            <br/>There is no followers in request;\r\n            <br/>Empty tracking number (workorder Id);","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"},"delete":{"tags":["WorkOrders"],"summary":"Remove Follower from Work order","description":"Remove Follower from Work order.","operationId":"DELETEv3_workorders_{workorderId}_followers?email={email}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Numeric Id of the Work order to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"email","in":"query","description":"The follower email address.","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/>503 - Request data is empty;\r\n            <br/>There is no followers in request;<br/>Empty tracking number (workorder Id);","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/subscribers/{subscriberId}/workorders/{workorderId}/reassign":{"put":{"tags":["WorkOrders"],"operationId":"PUTv3_subscribers_{subscriberId}_workorders_{workorderId}_reassign","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"subscriberId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"workorderId","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/workorders/handlewocompletionforsurvey":{"post":{"tags":["WorkOrders"],"summary":"Add Empty Survey for Work Order Completion","operationId":"POSTv3_workorders_handlewocompletionforsurvey","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"The request model to perform action with.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject"}}],"responses":{"201":{"description":"Indicates that the request succeeded."}},"deprecated":false,"x-access":"Any"}},"/workrequests/{workrequestId}/notes":{"get":{"tags":["WorkRequestNote"],"summary":"Work request Notes Collection","description":"*In limited availability phase.*\r\n            <br />Returns list of work request notes, sorted descending by creation date.","operationId":"GETv3_workrequests_{workrequestId}_notes?pageNumber={pageNumber}&pageSize={pageSize}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workrequestId","in":"path","description":"Numeric Id of the Work request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"pageNumber","in":"query","description":"Page number.","required":true,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"Page size.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request succeeded and the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 8020 - Invalid work request identifier. Returned if workrequestId is &lt;= 0;\r\n            <br/> 922 - Invalid paging parameter. Returned if paging parameter doesn't correspond to valid format;\r\n            <br/> 100 - You don't have location access to perform this operation;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Unauthorized indicates that the requested resource requires authentication.<br>Error codes:<br> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"},"post":{"tags":["WorkRequestNote"],"summary":"Creates a work request note","description":"*In limited availability phase.*\r\n            <br />Returns Note Id for successful request.","operationId":"POSTv3_workrequests_{workrequestId}_notes","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workrequestId","in":"path","description":"Numeric Id of the Work request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"noteRequest","in":"body","description":"The note request model.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestNoteRequest"}}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            <br/> 100 - You don't have location access to perform this operation;\r\n            <br/> 503 - Validation fails. Invalid WorkRequest Id or Note value;\r\n            <br/> 8020 - Invalid work request identifier.Returned if workrequestId is &lt;= 0;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequests/{workrequestId}/notes/followers":{"post":{"tags":["WorkRequestNote"],"summary":"Add Followers to Work request","description":"*In limited availability phase.*\r\n            <br />Returns status \"OK\" for successful request.","operationId":"POSTv3_workrequests_{workrequestId}_notes_followers","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workrequestId","in":"path","description":"Numeric Id of the Work request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"request","in":"body","description":"The request model to perform action with.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.AddWorkRequestNoteFollowersRequest"}}],"responses":{"200":{"description":"Created indicates that the request resulted in a new resource created before the response was sent."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br>Error codes:<br>503 - Request data is empty;<br>There is no followers in request;<br>Empty tracking number (workrequest Id);","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"},"delete":{"tags":["WorkRequestNote"],"summary":"Remove Follower from Work request","description":"*In limited availability phase.*\r\n            <br />Returns status \"OK\" for successful request.","operationId":"DELETEv3_workrequests_{workrequestId}_notes_followers?email={email}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workrequestId","in":"path","description":"Numeric Id of the Work request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"email","in":"query","description":"Follower email.","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.<br>Error codes:<br>503 - Request data is empty;<br>There is no followers in request;<br>Empty tracking number (workorder Id);","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"Indicates that the requested resource does not exist on the server."}},"deprecated":false,"x-access":"Any"}},"/workrequests":{"post":{"tags":["WorkRequests"],"summary":"Creates a work request","description":"*In limited availability phase.*","operationId":"POSTv3_workrequests","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestRequest"}}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            101 - Invalid provider id\r\n            301 - Contract not found for specified subscribers location, provider and trade\r\n            401 - Invalid subscriber\r\n            601 - Location is not found\r\n            701 - Invalid trade\r\n            8001 — Description is required\r\n            8002 — Call Date is required\r\n            8003 — Issue is required\r\n            8005 - CallDate has wrong format\r\n            8006 - ScheduledDate has wrong format\r\n            8007 - Invalid status\r\n            8008 - Invalid extended status\r\n            8009 - Invalid category\r\n            8010 - Invalid priority\r\n            8011 - Invalid currency\r\n            8012 - Invalid setup\r\n            8013 - Invalid area\r\n            8014 - Invalid asset\r\n            8017 - ProblemCode is required\r\n            8018 - ProblemType is required\r\n            8019 - ScheduledDate must be greater than CallDate","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            501 - Internal Error code","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequests/{id}":{"get":{"tags":["WorkRequests"],"summary":"Retrieve a work request","description":"*In limited availability phase.*","operationId":"GETv3_workrequests_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"Numeric Id of the work request to perform action with.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.WorkRequest"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            502 — Data not found"}},"deprecated":false,"x-access":"Any"},"delete":{"tags":["WorkRequests"],"summary":"Delete a work request","description":"*In limited availability phase.*","operationId":"DELETEv3_workrequests_{id}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"Numeric Id of the work request to perform action with.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            502 — Data not found"}},"deprecated":false,"x-access":"Any"}},"/workrequests/{workRequestId}":{"put":{"tags":["WorkRequests"],"summary":"Update a work request","description":"*In limited availability phase.*","operationId":"PUTv3_workrequests_{workRequestId}","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","description":"Numeric Id of the work request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.UpdateWorkRequestRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            301 - Contract not found for specified subscribers location, provider and trade\r\n            502 - WorkRequest not found\r\n            701 - Invalid trade\r\n            8006 - ScheduledDate has wrong format\r\n            8007 - Invalid status\r\n            8008 - Invalid extended status\r\n            8009 - Invalid category\r\n            8010 - Invalid priority     \r\n            8011 - Invalid currency\r\n            8019 - ScheduledDate must be greater than CallDate\r\n            8107 - Work request is closed\r\n            8108 - Closed reason is required for Closed status\r\n            8109 - Work order id is required for this closed reason\r\n            8110 - Invalid closed reason\r\n            8111 - Closed reason could be set only for Closed status\r\n            8112 - Invalid work order id\r\n            8113 - Work order id could be set only for Closed status\r\n            8114 - Work order id could be set only for &apos;Work order created&apos; reason","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            501 - Internal Error code","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequests/{workRequestId}/status":{"put":{"tags":["WorkRequests"],"summary":"Update a work request status","description":"*In limited availability phase.*","operationId":"PUTv3_workrequests_{workRequestId}_status","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","description":"Numeric Id of the work request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request. Work request Status.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStatusRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            502 - WorkRequest not found\r\n            8007 - Invalid status\r\n            8008 - Invalid extended status","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            501 - Internal Error code","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequests/{workRequestId}/priority":{"put":{"tags":["WorkRequests"],"summary":"Update work request priority","description":"*In limited availability phase.*","operationId":"PUTv3_workrequests_{workRequestId}_priority?priorityId={priorityId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","description":"Numeric Id of the work request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"priorityId","in":"query","description":"Priority Id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            502 - WorkRequest not found\r\n            8010 - Invalid priority","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            501 - Internal Error code","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequests/{workRequestId}/category":{"put":{"tags":["WorkRequests"],"summary":"Update work request category","description":"*In limited availability phase.*","operationId":"PUTv3_workrequests_{workRequestId}_category?categoryId={categoryId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","description":"Numeric Id of the work request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"categoryId","in":"query","description":"Category Id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            502 - WorkRequest not found\r\n            8009 - Invalid category","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            501 - Internal Error code","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequests/{workRequestId}/nte":{"put":{"tags":["WorkRequests"],"summary":"Update work request NTE","description":"*In limited availability phase.*","operationId":"PUTv3_workrequests_{workRequestId}_nte","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","description":"Numeric Id of the work request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request. Work request NTE.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestNteRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            502 - WorkRequest not found\r\n            8011 - Invalid currency","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            501 - Internal Error code","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequests/{workRequestId}/scheduledate":{"put":{"tags":["WorkRequests"],"summary":"Update work request schedule date","description":"*In limited availability phase.*","operationId":"PUTv3_workrequests_{workRequestId}_scheduledate?scheduledDate={scheduledDate}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","description":"Numeric Id of the work request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"scheduledDate","in":"query","description":"Scheduled date.","required":true,"type":"string"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            502 - WorkRequest not found\r\n            8006 - ScheduledDate has wrong format\r\n            8019 - ScheduledDate must be greater than CallDate","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            501 - Internal Error code","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequests/{workRequestId}/description":{"put":{"tags":["WorkRequests"],"summary":"Update work request description","description":"*In limited availability phase.*","operationId":"PUTv3_workrequests_{workRequestId}_description","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","description":"Numeric Id of the work request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"updateRequest","in":"body","description":"The update request. Work request description.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStringFieldsRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            502 - WorkRequest not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            501 - Internal Error code","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequests/{workRequestId}/trade":{"put":{"tags":["WorkRequests"],"summary":"Update work request trade","description":"*In limited availability phase.*","operationId":"PUTv3_workrequests_{workRequestId}_trade?tradeId={tradeId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","description":"Numeric Id of the Work request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"tradeId","in":"query","description":"Trade id.","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            301 - Contract not found for specified subscribers location, provider and trade\r\n            502 - WorkRequest not found\r\n            701 - Invalid trade","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            501 - Internal Error code","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequests/{workRequestId}/reassign":{"put":{"tags":["WorkRequests"],"summary":"Reassign work request to another provider","description":"*In limited availability phase.*","operationId":"PUTv3_workrequests_{workRequestId}_reassign","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"path","description":"Numeric Id of the work request to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"reassignRequest","in":"body","description":"The request to perform action with.","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.ReassignWorkRequestRequest"}}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.\r\n            <br/>Error codes:\r\n            100 - Invalid provider id passed\r\n            301 - Contract not found for specified subscribers location, provider and trade\r\n            502 - WorkRequest not found\r\n            503 - Provider should be changed\r\n            701 - Invalid trade\r\n            8006 - ScheduledDate has wrong format\r\n            8009 - Invalid category\r\n            8010 - Invalid priority\r\n            8011 - Invalid currency\r\n            8019 - ScheduledDate must be greater than CallDate","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            501 - Internal Error code","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequests/search":{"post":{"tags":["WorkRequests"],"summary":"Performs search of work requests by specified filter expression.  \r\n            One page contains 50 items by default (\"PageSize\"=50). \r\n            To get next 50 items use the “Page” parameter (for example Page=2 and so on).","description":"*In limited availability phase.*","operationId":"POSTv3_workrequests_search","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"","required":true,"schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.SearchWorkRequestRequest"}}],"responses":{"200":{"description":"Work requests are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.WorkRequest"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:           \r\n            8100 - CallDateFrom has wrong format\r\n            8101 - CallDateTo has wrong format\r\n            8102 - ScheduledDateFrom has wrong format\r\n            8103 - ScheduledDateTo has wrong format\r\n            8104 - CloseDateFrom has wrong format\r\n            8105 - CloseDateTo has wrong format","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/workrequests/providersforreassignment":{"get":{"tags":["WorkRequests"],"summary":"Get providers available for reassign","operationId":"GETv3_workrequests_providersforreassignment?workRequestId={workRequestId}","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"workRequestId","in":"query","description":"Work request id","required":true,"type":"integer","format":"int32"}],"responses":{"201":{"description":"Created indicates that the request resulted in a new resource created before the response was sent.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.ServiceRequestProvider"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:           \r\n            503 - Invalid Equipment Id\r\n            503 - Invalid Location Id\r\n            804 - API call rejected by lack of provider permissions\r\n            502 - We could not find the service provider for the problem you have indicated","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The requested resource does not exist on the server.\r\n            <br/>Error codes:\r\n            502 — We could not find the service provider for the problem you have indicated"},"500":{"description":"Indicates that a generic error has occurred on the server.\r\n            <br/>Error codes:\r\n            501 - Internal Error code","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/odata/rfps":{"get":{"tags":["Rfps"],"summary":"Retrieve Rfps","description":"Retrieve Rfps\r\n            <br /> Dates without 'Dto' endings return UTC date format.\r\n            <br /> Dates without 'Dto' endings are not recommended for using.","operationId":"Rfps_GetRfps","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Rfp.Rfp"}}}},"deprecated":false,"x-access":"Subscribers"}},"/odata/rfps({rfpId})":{"get":{"tags":["Rfps"],"summary":"Retrieve Rfp","description":"Retrieve Rfp","operationId":"Rfps_GetRfp","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"rfpId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Rfp.Rfp"}}}},"deprecated":false,"x-access":"Subscribers"}},"/odata/invoices":{"get":{"tags":["Invoices"],"summary":"Retrieve Invoices","description":"Returns a list of invoices posted within the last 90 days if not specified otherwise in `$filter`. The maximum date range between the invoice `PostedDate` and the current date is 365 days.","operationId":"Invoices_GetInvoices","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"The requested invoices are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.Invoice"}}}},"deprecated":false,"x-access":"Subscribers"}},"/odata/workorders({workorderId})/workactivities":{"get":{"tags":["WorkActivities"],"summary":"List work activities of the specified work order","description":"Returns work activities of the specified work order.\r\n            <br />A work activity details information about the technician's work on a service request: the time when the technician started and finished their work, the type of activity they carried out, the number of technicians who rendered the service, and other details related to the labor performed.\r\n            <br />***Note:*** Both subscribers and providers can use this method.","operationId":"WorkActivities_GetWorkActivities","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"workorderId","in":"path","description":"The unique numeric identifier of the work order for which you want to retrieve work activities.","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"The work activities of the specified work order are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkActivity"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — WorkOrder not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/odata/workactivities/Service.ForTimeInterval(dtMin={dtMin}, dtMax={dtMax}, userId={userId})":{"get":{"tags":["WorkActivities"],"summary":"List work activities created by a provider user within the specified time period","description":"Returns work activities created by the specified provider user within the set time period.\r\n            <br />A work activity details information about the technician’s work on a service request: the time when the technician started and finished their work, the type of activity they carried out, the number of technicians who rendered the service, and other details related to the labor performed.\r\n            <br />***Note:*** This method is only available to provider users.","operationId":"WorkActivities_ForTimeInterval","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"userId","in":"path","description":"PIN of the provider user who created work activities.","required":true,"type":"integer","format":"int32"},{"name":"dtMax","in":"path","description":"The end date of the time period for which you want to retrieve work activities. The format is `YYYY-MM-DD`.","required":true,"type":"string","format":"date-time"},{"name":"dtMin","in":"path","description":"The start date of the time period for which you want to retrieve work activities. The format is `YYYY-MM-DD`.","required":true,"type":"string","format":"date-time"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Work activities created by the specified provider user within the set time period are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkActivity"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            504 — User not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/odata/workorders({workorderId})/workactivities({workactivityId})":{"get":{"tags":["WorkActivities"],"summary":"Retrieve the specified work activity of a work order","description":"Returns the specified work activity of a work order.\r\n            <br />A work activity details information about the technician's work on a service request: the time when the technician started and finished their work, the type of activity they carried out, the number of technicians who rendered the service, and other details related to the labor performed.\r\n            <br />***Note:*** Both subscribers and providers can use this method.","operationId":"WorkActivities_GetWorkActivity","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"workactivityId","in":"path","description":"The unique numeric identifier of the work activity to return.","required":true,"type":"integer","format":"int32"},{"name":"workorderId","in":"path","description":"The unique numeric identifier of the work order for which you want to retrieve a work activity.","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"The requested work activity of the specified work order is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkActivity"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.\r\n            <br/>Error codes:\r\n            502 — WorkOrder not found\r\n            502 — Work activity is not found","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.\r\n            <br/>Error codes:\r\n            504 — API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"500":{"description":"The server was unable to complete the request due to an internal error.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/odata/trucks":{"get":{"tags":["Trucks"],"operationId":"Trucks_GetTrucks","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/System.Object"}}},"deprecated":false,"x-access":"Any"}},"/odata/workorders({workorderId})/notes":{"get":{"tags":["Notes"],"summary":"Retrieve Work Order Notes","operationId":"Notes_GetWorkOrderNotes","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"workorderId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notes.Note"}}}},"deprecated":false,"x-access":"Any"}},"/odata/workorders({workorderId})/notes({noteId})":{"get":{"tags":["Notes"],"summary":"Retrieve Work Order Note","operationId":"Notes_GetWorkOrderNote","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"noteId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"workorderId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notes.Note"}}}},"deprecated":false,"x-access":"Any"}},"/odata/locations({locationId})/providers/Service.GetRecent(days={days})":{"get":{"tags":["Providers"],"summary":"Get recent providers for the given location.\r\n            \"Recent\" means a provider has completed WOs for a certain time.","operationId":"Providers_GetRecent","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"days","in":"path","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"The request succeeded and providers are returned.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.ReviewedProvider"}}},"400":{"description":"The request parameters are not valid."},"401":{"description":"An unauthorized request."},"403":{"description":"Providers cannot use this method."},"404":{"description":"The location wasn't found."},"500":{"description":"Something went wrong."}},"deprecated":false,"x-access":"Any"}},"/odata/detailedProviders/Service.Get(providerId={providerId})":{"get":{"tags":["Providers"],"summary":"Get provider by provider id.","operationId":"Providers_GetProvider","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"providerId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"The request succeeded and the provider is returned.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.DetailedProvider"}},"401":{"description":"Unauthorized request."},"403":{"description":"Providers cannot use this method."},"404":{"description":"The provider wasn't found."},"500":{"description":"Something went wrong."}},"deprecated":false,"x-access":"Any"}},"/odata/locations({locationId})/providers/Service.GetLast(days={days})":{"get":{"tags":["Providers"],"summary":"Retrieve providers feedback rating data.","operationId":"Providers_GetLast","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"days","in":"path","required":true,"type":"integer","format":"int32"},{"name":"locationId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"The request succeeded and providers are returned.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.ExtendedReviewedProvider"}}},"400":{"description":"The request parameters are not valid."},"401":{"description":"An unauthorized request."},"403":{"description":"Providers cannot use this method."},"404":{"description":"The location wasn't found."},"500":{"description":"Something went wrong."}},"deprecated":false,"x-access":"Any"}},"/odata/proposals":{"get":{"tags":["Proposals"],"summary":"Retrieve Proposals","description":"Retrieve Proposals\r\n            <br />The filter expressions by defaul is \"$filter CreatedDate ge (Now-90 days)\".\r\n            <br />The maximum CreatedDate value is 365 days even if provided.\r\n            <br />Dates without 'Dto' endings return UTC date format.\r\n            <br />Dates without 'Dto' endings are not recommended for using.","operationId":"Proposals_GetProposals","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.ProposalInfo"}}},"400":{"description":"Indicates that the requested Proposal is in void status.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/odata/rfps({rfpId})/proposals":{"get":{"tags":["Proposals"],"summary":"Retrieve Rfp Proposals","description":"Retrieve Rfp Proposals","operationId":"Proposals_GetProposalsForRfp","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"rfpId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.ProposalInfo"}}}},"deprecated":false,"x-access":"Any"}},"/odata/proposals({proposalId})/Service.Categories()":{"get":{"tags":["Proposals"],"summary":"Retrieve Proposal Categories","description":"Retrieve Proposal Categories","operationId":"Proposals_GetProposalCategories","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"proposalId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.ProposalCategory"}}}},"deprecated":false,"x-access":"Any"}},"/odata/providerassignment/Service.GetAssigned()":{"get":{"tags":["ProviderAssignment"],"summary":"Retrieve list of providers assigned to specific subscriber","description":"","operationId":"ProviderAssignment_GetAssigned","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.ProviderInfo"}}}},"deprecated":false,"x-access":"Any"}},"/odata/GetProviderAssignments":{"get":{"tags":["ProviderAssignment"],"summary":"Retrieve Provider Assignments","description":"Retrieve Provider Assignments.\r\n            <br />One page contains 50 items by default. To get next 50 items use the \"$skip\" parameter (for example $skip=50 and so on).","operationId":"ProviderAssignment_GetProviderAssignments","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ProviderAssignments.ProviderAssignment"}}}},"deprecated":false,"x-access":"Any"}},"/odata/locations":{"get":{"tags":["Locations"],"summary":"Retrieve locations","description":"Returns a list of locations. You can use filter parameters to make your request more specific.\r\n            <br /> You can also get a list of locations by using one of the following methods: [GET /stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_), [GET /locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_).","operationId":"Locations_GetLocations","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"The list of locations is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.Location"}}}},"deprecated":false,"x-access":"Any"}},"/odata/locations/Service.NearBy(latitude={latitude},longitude={longitude})":{"get":{"tags":["Locations"],"summary":"Get locations by geographic coordinates","description":"Returns locations that are near the longitude and latitude specified in the request. Use the filter parameters to make the request more specific.","operationId":"Locations_GetLocationsNearMe","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"longitude","in":"path","description":"Location’s global position. Longitude.","required":true,"type":"number","format":"double"},{"name":"latitude","in":"path","description":"Location’s global position. Latitude.","required":true,"type":"number","format":"double"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"The requested locations are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.Location"}}}},"deprecated":false,"x-access":"Any"}},"/odata/locations/Service.ForServiceRequest()":{"get":{"tags":["Locations"],"summary":"Retrieve locations","description":"Returns a list of locations of a service request. You can use filter parameters to make the request more specific.","operationId":"Locations_GetServiceRequestLocations","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"The requested locations are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.Location"}}}},"deprecated":false,"x-access":"Any"}},"/odata/trades":{"get":{"tags":["Trades"],"summary":"Trades Collection","description":"List trades.\r\n            <br /><br />Available for provider and subscriber usage.","operationId":"Trades_GetTrades","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.Trade"}}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/Amazon.Runtime.Internal.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/Amazon.Runtime.Internal.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/odata/locations({locationId})/trades":{"get":{"tags":["Trades"],"summary":"Location Trades","description":"List Location Trades. Method returns trades for specified location which have providers with rank 1 and higher.\r\n            <br /><br />Available for subscriber and provider usage.","operationId":"Trades_GetTradesByLocation","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"locationId","in":"path","description":"Numeric id of the Location to perform action with.","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.Trade"}}},"400":{"description":"Bad Request - the request could not be understood or was missing required parameters.","schema":{"$ref":"#/definitions/Amazon.Runtime.Internal.ErrorResponse"}},"401":{"description":"Indicates that the requested resource requires authentication.\r\n            <br/>Error codes:\r\n            <br/> 504 - API call rejected by security permissions;","schema":{"$ref":"#/definitions/Amazon.Runtime.Internal.ErrorResponse"}},"500":{"description":"Indicates that a generic error has occurred on the server.","schema":{"$ref":"#/definitions/Amazon.Runtime.Internal.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/odata/users":{"get":{"tags":["Users"],"summary":"Retrieve list of Users. Available for \"Power User\", \"Super Admin\", \"SC Admin\", \"Provider Power User\", \"Project Manager\"","description":"<para>Available for \"Power User\", \"Super Admin\", \"SC Admin\", \"Provider Power User\", \"Project Manager\"</para>","operationId":"Users_GetUsers","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.User"}}}},"deprecated":false,"x-access":"Any"}},"/odata/providers({providerId})/users":{"get":{"tags":["Users"],"summary":"Retrieve list of Users for specified Provider. Available for \"SC Admin\"","description":"<para>Available for \"SC Admin\"</para>","operationId":"Users_GetUsersForProvider","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"providerId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.User"}}}},"deprecated":false,"x-access":"Any"}},"/odata/subscribers({subscriberId})/users":{"get":{"tags":["Users"],"summary":"Retrieve list of Users for specified Subscriber. Available for \"SC Admin\"","description":"<para>Available for \"SC Admin\"</para>","operationId":"Users_GetUsersForSubscriber","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"subscriberId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.User"}}}},"deprecated":false,"x-access":"Any"}},"/odata/workorders":{"get":{"tags":["WorkOrders"],"summary":"Retrieve work orders","description":"Returns a list of work orders created within the last 90 days if not specified otherwise in `$filter`. The maximum date range between the work order `CallDate` and the current date is 365 days. \r\n            <br />The default number of work orders in the response is 50. To retrieve more work orders, use the `$skip` parameter.\r\n            <br />***Note***: You can also get a list of work orders by using one of the following methods: [GET /workorders](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/GETv3_workorders_locationId__locationId__storeId__storeId_), [POST /odata/workorders/filter](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/POSTv3_odata_workorders_filter).","operationId":"WorkOrders_GetWorkOrders","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"The list of work orders is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"}}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.<br/><br/>The query specified in the URI is not valid.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"401":{"description":"The request is not authorized.<br/><br/>Error codes:<br/>504 � API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"502":{"description":"The server, while acting as a gateway or proxy, received an invalid response from the upstream server.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/odata/workorders({workorderId})":{"get":{"tags":["WorkOrders"],"summary":"Retrieve a Work Orders","description":"Retrieve a Work Orders","operationId":"WorkOrders_Get","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"workorderId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"}}},"deprecated":false,"x-access":"Any"}},"/odata/workorders({workorderId})/Service.CheckInActivity()":{"get":{"tags":["WorkOrders"],"summary":"Retrieve a Work Order CheckIn Activity","description":"Retrieve a Work Order CheckIn Activity","operationId":"WorkOrders_CheckInActivity","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"workorderId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.CheckInIActivity"}}}},"deprecated":false,"x-access":"Any"}},"/odata/locations({locationId})/workorders":{"get":{"tags":["WorkOrders"],"summary":"Retrieve a Work Orders","description":"Retrieve a Work Orders.\r\n            <br />One page contains 50 items by default. To get next 50 items use the \"$skip\" parameter (for example $skip=50 and so on).\r\n            <br />The filter expressions by defaul is \"$filter CallDate ge (Now+90 days)\". \r\n            <br />The maximum CallDate value is 365 days even if provided.","operationId":"WorkOrders_GetWorkOrdersForLocation","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"locationId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"}}}},"deprecated":false,"x-access":"Any"}},"/odata/locations({locationId})/workorders/Service.GetDuplicates()":{"get":{"tags":["WorkOrders"],"summary":"Retrieve a Duplicate Work Orders","description":"Retrieve a Duplicate Work Orders\r\n            <br />One page contains 50 items by default. To get next 50 items use the \"$skip\" parameter (for example $skip=50 and so on).","operationId":"WorkOrders_GetDuplicateWorkOrders","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"},{"name":"locationId","in":"path","description":"Location identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"}}}},"deprecated":false,"x-access":"Any"}},"/odata/locations({locationId})/workorders/Service.GetRecalls()":{"get":{"tags":["WorkOrders"],"summary":"Retrieve Work Order Recalls","description":"Retrieve Work Order Recalls\r\n            <br />One page contains 50 items by default. To get next 50 items use the \"$skip\" parameter (for example $skip=50 and so on).","operationId":"WorkOrders_GetRecallWorkOrders","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"},{"name":"locationId","in":"path","description":"Location identifier","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"}}}},"deprecated":false,"x-access":"Any"}},"/odata/workorders/Service.NearBy(latitude={latitude},longitude={longitude})":{"get":{"tags":["WorkOrders"],"summary":"Retrieve a Work Orders near by a site.","description":"Retrieve a Work Orders near by a site orderred by Location distance (by default). \r\n            <br />One page contains 50 items by default. To get next 50 items use the \"$skip\" parameter (for example $skip=50 and so on).\r\n            <br />The filter expressions by defaul is \"$filter CallDate ge (Now+90 days)\". \r\n            <br />The maximum CallDate value is 365 days even if provided.","operationId":"WorkOrders_GetWorkOrdersNearBy","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"longitude","in":"path","description":"Longitude of a site","required":true,"type":"number","format":"double"},{"name":"latitude","in":"path","description":"Latitude of a site","required":true,"type":"number","format":"double"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"}}}},"deprecated":false,"x-access":"Any"}},"/odata/workorders({workorderId})/attachments":{"get":{"tags":["Attachments"],"summary":"Retrieve Workorders Attachments","description":"Retrieve Workorders Attachments","operationId":"Attachments_GetWorkOrderAttachments","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"workorderId","in":"path","description":"Workorder Identifier","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.Attachment"}}}},"deprecated":false,"x-access":"Any"}},"/odata/workorders({workorderId})/notes({noteId})/attachments":{"get":{"tags":["Attachments"],"summary":"Retrieve Workorder Note Attachments","description":"Retrieve Workorder Note Attachments","operationId":"Attachments_GetWorkOrderNotesAttachments","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"noteId","in":"path","description":"Note Identifier","required":true,"type":"integer","format":"int32"},{"name":"workorderId","in":"path","description":"Workorder Identifier","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.Attachment"}}}},"deprecated":false,"x-access":"Any"}},"/odata/workorders({workorderId})/attachments({attachmentId})/Service.GetThumbnail(width={width},height={height},mode={mode},imageFormat={imageFormat})":{"get":{"tags":["Attachments"],"summary":"Retrieve Attachment Thumbnail","description":"Retrieve Attachment Thumbnail","operationId":"Attachments_GetWorkorderAttachmentThumbnail","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"imageFormat","in":"path","description":"","required":true,"type":"string"},{"name":"mode","in":"path","description":"","required":true,"type":"string"},{"name":"height","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"width","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"attachmentId","in":"path","description":"Attachment Identifier","required":true,"type":"integer","format":"int32"},{"name":"workorderId","in":"path","description":"Workorder Identifier","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Net.Http.ByteArrayContent"}}},"deprecated":false,"x-access":"Any"}},"/odata/proposals({proposalId})/attachments":{"get":{"tags":["Attachments"],"summary":"Retrieve Proposal Attachments","description":"Retrieve Proposal Attachments","operationId":"Attachments_GetProposalAttachments","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"proposalId","in":"path","description":"Proposal Identifier","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.Attachment"}}}},"deprecated":false,"x-access":"Any"}},"/odata/proposals({proposalId})/attachments({attachmentId})/Service.GetThumbnail(width={width},height={height},mode={mode},imageFormat={imageFormat})":{"get":{"tags":["Attachments"],"summary":"Retrieve Attachment Thumbnail","description":"Retrieve Attachment Thumbnail","operationId":"Attachments_GetProposalAttachmentThumbnail","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"imageFormat","in":"path","description":"","required":true,"type":"string"},{"name":"mode","in":"path","description":"","required":true,"type":"string"},{"name":"height","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"width","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"attachmentId","in":"path","description":"Attachment Identifier","required":true,"type":"integer","format":"int32"},{"name":"proposalId","in":"path","description":"Proposal Identifier","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"$ref":"#/definitions/System.Net.Http.ByteArrayContent"}}},"deprecated":false,"x-access":"Any"}},"/odata/rfps({rfpId})/attachments":{"get":{"tags":["Attachments"],"summary":"Retrieve Rfp Attachments","description":"Retrieve Rfp Attachments","operationId":"Attachments_GetRFPAttachments","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"rfpId","in":"path","description":"Rfp Identifier","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.Attachment"}}}},"deprecated":false,"x-access":"Any"}},"/odata/assets({assetId})":{"get":{"tags":["Assets"],"summary":"Get an asset","description":"Returns the details of the specified asset for the current subscriber.","operationId":"Assets_GetAsset","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"assetId","in":"path","description":"Unique numeric asset identifier you want to get the details of.","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"The requested asset with its details is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetResponse"}},"400":{"description":"The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}},"404":{"description":"The request URI is incorrect, or the resource does not exist.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Subscribers"}},"/odata/assets/Service.Search(locationId={locationId},code={code})":{"get":{"tags":["Assets"],"summary":"Get assets by `locationId` and `code`","description":"Returns a list of assets for the current subscriber based on the specified `locationId` and `code` parameters. You can narrow the search by applying other filter parameters.","operationId":"Assets_SearchAssets","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"code","in":"path","description":"Also known as AssetTag. The value must be entered in '29182-A'","required":true,"type":"string"},{"name":"locationId","in":"path","description":"Unique numeric identifier of the location you want to get assets of.","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"The requested assets are in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetResponse"}}},"401":{"description":"The request is not authorized.<br/><br/>Error codes:<br/> 504 � API call rejected by security permissions","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/odata/assets/Service.AssociateAssetCode(equipmentId={equipmentId},code={code},processDuplicatedAssetTag={processDuplicatedAssetTag})":{"get":{"tags":["Assets"],"summary":"","operationId":"Assets_AssociateAssetCode","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"processDuplicatedAssetTag","in":"path","description":"","required":true,"type":"boolean"},{"name":"code","in":"path","description":"","required":true,"type":"string"},{"name":"equipmentId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response."}},"deprecated":false,"x-access":"Any"}},"/odata/assets/Service.FindAssets(searchCriteria={searchCriteria})":{"get":{"tags":["Assets"],"summary":"Finds assets using the supplied search criteria.  The following fields will be searched for a match to the search criteria:  tag ID, asset type, brand, serial Number","operationId":"Assets_FindAssets","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"searchCriteria","in":"path","description":"","required":true,"type":"string"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetResponse"}}},"400":{"description":"Indicates that the request DID NOT succeed and that the related error information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}},"/odata/assets/Service.FindAssetsBySubscriber(searchCriteria={searchCriteria},subscriberId={subscriberId})":{"get":{"tags":["Assets"],"summary":"Finds assets using the supplied search criteria.  The following fields will be searched for a match to the search criteria:  tag ID, asset type, brand, serial Number","operationId":"Assets_FindAssetsBySubscriber","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"subscriberId","in":"path","description":"","required":true,"type":"integer","format":"int32"},{"name":"searchCriteria","in":"path","description":"","required":true,"type":"string"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetResponse"}}},"400":{"description":"Indicates that the request DID NOT succeed and that the related error information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Providers"}},"/odata/assets/Service.FindAssetsByLocation(searchCriteria={searchCriteria},locationId={locationId})":{"get":{"tags":["Assets"],"operationId":"Assets_FindAssetsByLocation","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"name":"locationId","in":"path","required":true,"type":"integer","format":"int32"},{"name":"searchCriteria","in":"path","required":true,"type":"string"},{"name":"$expand","in":"query","description":"Expand a navigation property.","required":false,"type":"string"},{"name":"$select","in":"query","description":"Select a set of properties to return.","required":false,"type":"string"},{"name":"$filter","in":"query","description":"Filter a collection of resources addressed by a request URL.","required":false,"type":"string"},{"name":"$orderby","in":"query","description":"Order resources by the specified property in the response.","required":false,"type":"string"},{"name":"$top","in":"query","description":"Return the specified number of items in the response.","required":false,"type":"integer"},{"name":"$skip","in":"query","description":"Skip the specified number of items in the response.","required":false,"type":"integer"},{"name":"$count","in":"query","description":"Include the count of the matching resources in the response.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Indicates that the request succeeded and that the requested information is in the response.","schema":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetResponse"}}},"400":{"description":"Indicates that the request DID NOT succeed and that the related error information is in the response.","schema":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ErrorResponse"}}},"deprecated":false,"x-access":"Any"}}},"definitions":{"ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]":{"description":"Notification message","type":"object","properties":{"Object":{"$ref":"#/definitions/ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder","description":"Message body object"},"EventType":{"description":"Notification message event type","enum":["WorkOrderCreated","WorkOrderNoteAdded","WorkOrderNotePinned","WorkOrderNoteUnpinned","WorkOrderStatusChanged","WorkOrderAttachmentAdded","WorkOrderNumberChanged","WorkOrderPriorityChanged","WorkOrderScheduledDateChanged","WorkOrderTradeChanged","WorkOrderNteChanged","WorkOrderCategoryChanged","WorkOrderProviderChanged","WorkOrderDescriptionChanged","WorkOrderResolutionCreated","RefrigerantWasUsedChanged","WorkOrderResolutionUpdated","WorkOrderResolutionCodeUpdated","WorkOrderRootCauseCodeUpdated","WorkOrderAssetAttached","WorkOrderAssetDetached","WorkOrderAssetValidated","WorkOrderLabelAdded","WorkOrderLabelDeleted","WorkOrderWeatherTypeChanged","WorkOrderIssueChoiceChanged","WorkOrderTechnicianAssigned","WorkOrderTechnicianUnassigned","WorkOrderTechnicianAccepted","WorkOrderTechnicianDeclined","WorkOrderCertifiedTechnicianAssigned","WorkOrderLinksAdded","WorkOrderLinksDeleted","WorkOrderStarAdded","WorkOrderStarRemoved","WorkOrderCheckIn","WorkOrderCheckOut","BadgeScanRequired","InvoiceCreated","InvoiceOpen","InvoiceApproved","InvoiceOnHold","InvoiceReviewed","InvoiceRejected","InvoiceApprovalCodeChanged","InvoiceStarAdded","InvoiceStarRemoved","InvoiceDisputed","InvoiceVoided","InvoicePaid","ProposalCreated","ProposalOpen","ProposalApproved","ProposalOnHold","ProposalRejected","ProposalReviewed","ProposalUserAssigned","ProposalWorkOrderAssigned","ProposalAttachmentAdded","ProposalScheduled","ProposalVoided","ProposalPendingExternalApproval","FbInvitationAccepted","CalendarIntegrationAdded","CalendarIntegrationUpdated","LocationCreated","LocationUpdated","LocationDeleted","LocationNoteHeaderCreated","LocationNoteHeaderUpdated","LocationNoteHeaderDeleted","LocationNotesChanged","SubscriberTradeCreated","SubscriberTradeUpdated","SubscriberTradeDeleted","SubscriberPriorityCreated","SubscriberPriorityUpdated","SubscriberPriorityDeleted","SubscriberStatusCreated","SubscriberStatusUpdated","SubscriberStatusDeleted","SubscriberCategoryCreated","SubscriberCategoryUpdated","SubscriberCategoryDeleted","ProviderTradeAssigned","ProviderTradeUnassigned","LeakRecordCreated","LeakRecordUpdated","LeakRecordDeleted","CheckListResponseAdded","CheckListResponseUpdated","CheckListCreated","CheckListUpdated","CheckListDeleted","IssueListAssigned","AssetCreated","AssetUpdated"],"type":"string"},"Version":{"format":"int32","description":"Notification message format version","type":"integer"}}},"ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder":{"type":"object","properties":{"OriginationUserName":{"type":"string"},"Id":{"format":"int32","type":"integer"},"Number":{"type":"string"},"PurchaseNumber":{"type":"string"},"SubscriberId":{"format":"int32","type":"integer"},"ProviderId":{"format":"int32","type":"integer"},"ProviderName":{"type":"string"},"LocationId":{"format":"int32","type":"integer"},"LocationName":{"type":"string"},"LocationStoreId":{"type":"string"},"Status":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.WorkorderStatusDescriptor"},"Caller":{"type":"string"},"CreatedBy":{"type":"string"},"UpdatedBy":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.User"},"CallDate":{"format":"date-time","type":"string"},"CallDate_DTO":{"format":"date-time","type":"string"},"ReassignDate":{"format":"date-time","type":"string"},"Priority":{"type":"string"},"Trade":{"type":"string"},"ScheduledDate":{"format":"date-time","type":"string"},"AreaId":{"format":"int32","type":"integer"},"AssetType":{"type":"string"},"ProblemType":{"type":"string"},"CreatedDate_DTO":{"format":"date-time","type":"string"},"UpdatedDate":{"format":"date-time","type":"string"},"UpdatedDate_DTO":{"format":"date-time","type":"string"},"ScheduledDate_DTO":{"format":"date-time","type":"string"},"RescheduleReason":{"type":"string"},"CompletedDate":{"format":"date-time","type":"string"},"ExpirationDate":{"format":"date-time","type":"string"},"ExpirationDate_DTO":{"format":"date-time","type":"string"},"Description":{"type":"string"},"Category":{"type":"string"},"Nte":{"format":"double","type":"number"},"Subtotal":{"format":"double","type":"number"},"Tax":{"format":"double","type":"number"},"Tax2Type":{"type":"string"},"Tax2":{"format":"double","type":"number"},"CurrencyAlphabeticalCode":{"type":"string"},"ProblemCode":{"type":"string"},"Resolution":{"type":"string"},"AssetId":{"format":"int32","type":"integer"},"Source":{"type":"string"},"RecallWorkOrder":{"format":"int32","type":"integer"},"Notes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Note"}},"Attachments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Attachment"}},"ProjectId":{"format":"int32","type":"integer"},"Labels":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Label"}},"ResolutionCodes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.ResolutionCodesAndRootCause"}},"ResolutionCodesIds":{"type":"array","items":{"format":"int32","type":"integer"}},"RootCauses":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.ResolutionCodesAndRootCause"}},"LinkedWorOrderIds":{"type":"array","items":{"format":"int32","type":"integer"}},"Assets":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Asset"}},"RefrigerantWasUsed":{"format":"int32","type":"integer"},"WeatherEventId":{"format":"int32","type":"integer"},"Technician":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Technician"},"IssueChoice":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.IssueChoice"}}},"ServiceChannel.Notifications.Objects.WorkorderStatusDescriptor":{"type":"object","properties":{"Primary":{"type":"string"},"Extended":{"type":"string"}}},"ServiceChannel.Notifications.Objects.User":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"AuthUserId":{"format":"int64","type":"integer"},"UserName":{"type":"string"},"FullName":{"type":"string"},"Email":{"type":"string"},"LoginType":{"enum":["Credentials","Pin"],"type":"string"},"SubscriberId":{"format":"int32","type":"integer"},"ProviderId":{"format":"int32","type":"integer"}}},"ServiceChannel.Notifications.Objects.Note":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"NoteType":{"enum":["SystemNote","UsersNote"],"type":"string"},"Number":{"format":"int32","type":"integer"},"NoteData":{"type":"string"},"DateCreated":{"format":"date-time","type":"string"},"ScheduledDate":{"format":"date-time","type":"string"},"FollowUpDate":{"format":"date-time","type":"string"},"ActionRequired":{"default":false,"type":"boolean"},"MailedTo":{"type":"string"},"CreatedBy":{"type":"string"},"CreatedByUser":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.User"},"Visibility":{"format":"int32","type":"integer"},"DateCreated_DTO":{"format":"date-time","type":"string"}}},"ServiceChannel.Notifications.Objects.Attachment":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Description":{"type":"string"},"Name":{"type":"string"},"Date":{"format":"date-time","type":"string"},"Uri":{"type":"string"},"CreatedBy":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.User"},"Visibility":{"format":"int32","type":"integer"},"Type":{"enum":["Undefined","WorkOrder","Invoice","Rfp","Proposal"],"type":"string"}}},"ServiceChannel.Notifications.Objects.Label":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Text":{"type":"string"}}},"ServiceChannel.Notifications.Objects.ResolutionCodesAndRootCause":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Text":{"type":"string"},"AssetCategoryId":{"format":"int32","type":"integer"}}},"ServiceChannel.Notifications.Objects.Asset":{"type":"object","properties":{"Manufacturer":{"type":"string"},"ModelNo":{"type":"string"},"SerialNo":{"type":"string"},"Area":{"type":"string"},"WorkOrderArea":{"type":"string"},"StoreId":{"type":"string"},"Trade":{"type":"string"},"Type":{"type":"string"},"InstallDate":{"type":"string"},"ManufacturerDate":{"type":"string"},"PurchaseDate":{"type":"string"},"UsesRefrigerant":{"format":"int32","type":"integer"},"IsLeased":{"default":false,"type":"boolean"},"LifeExpectancy":{"format":"int32","type":"integer"},"OriginalValue":{"format":"double","type":"number"},"LeaseDate":{"type":"string"},"LeasePeriod":{"format":"int32","type":"integer"},"Condition":{"format":"int32","type":"integer"},"EnergyEfficiency":{"type":"string"},"Capacity":{"type":"string"},"HasLeakDetector":{"default":false,"type":"boolean"},"Location":{"type":"string","readOnly":true},"Warranty":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.AssetWarranty"},"IsReplaceEquipment":{"default":false,"type":"boolean"},"HasTagged":{"default":false,"type":"boolean"},"LastModifiedUseDate":{"format":"date-time","type":"string"},"LastModifiedUserName":{"type":"string"},"SubName":{"type":"string"},"AssetAttributesMap":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.AssetAttributesMap"},"ImportedFrom":{"format":"int32","type":"integer"},"ParentId":{"format":"int32","type":"integer"},"Description":{"type":"string"},"HasComponents":{"default":false,"type":"boolean"},"HasCircuits":{"default":false,"type":"boolean"},"IsCircuit":{"default":false,"type":"boolean"},"SubscriberId":{"format":"int32","type":"integer"},"AssetValidated":{"default":false,"type":"boolean"},"ValidationRequired":{"default":false,"type":"boolean"},"IsLeakDetector":{"default":false,"type":"boolean"},"AdditionalTradesNames":{"type":"string"},"CreatedDate":{"format":"date-time","type":"string"},"ModifiedDate":{"format":"date-time","type":"string"},"AssetTypeGroupId":{"format":"int32","type":"integer"},"AssetTagScanAuditRecord":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.AssetTagScanAuditRecord"},"Id":{"format":"int32","type":"integer"},"Tag":{"type":"string"},"AssetTypeId":{"format":"int32","type":"integer"},"TradeId":{"format":"int32","type":"integer"},"BrandId":{"format":"int32","type":"integer"},"Active":{"default":false,"type":"boolean"},"AssetTag":{"type":"string"},"AssetStatus":{"format":"byte","type":"string"},"LocationId":{"format":"int32","type":"integer"}}},"ServiceChannel.Notifications.Objects.Technician":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"AuthUserId":{"format":"int64","type":"integer"},"CertificateId":{"type":"string"},"NumericCertificateId":{"format":"int32","type":"integer"}}},"ServiceChannel.Notifications.Objects.IssueChoice":{"type":"object","properties":{"SetupId":{"format":"int32","type":"integer"},"AreaId":{"format":"int32","type":"integer"},"AreaName":{"type":"string"},"ProblemType":{"type":"string"},"EquipmentType":{"type":"string"},"ProblemCode":{"type":"string"}}},"ServiceChannel.Notifications.Objects.AssetWarranty":{"type":"object","properties":{"ExpirationDate":{"format":"date-time","type":"string"},"ProviderId":{"format":"int32","type":"integer"},"NTE":{"format":"double","type":"number"},"Priority":{"type":"string"},"Category":{"type":"string"},"Provider":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.AssetWarrantyProvider"},"Expiration":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.AssetWarrantyExpiration"}}},"ServiceChannel.Notifications.Objects.AssetAttributesMap":{"type":"object","properties":{"StandardAttributesMap":{"format":"int32","type":"integer"},"ViewableForProvidersAttributesMap":{"format":"int32","type":"integer"},"EditableForProvidersAttributesMap":{"format":"int32","type":"integer"},"RequiredStandardAttributesMap":{"format":"int32","type":"integer"}}},"ServiceChannel.Notifications.Objects.AssetTagScanAuditRecord":{"type":"object","properties":{"AssetTagStatus":{"type":"string"},"ManuallyEntered":{"default":false,"type":"boolean"},"AssetTagNotScannedReason":{"type":"string"},"UnableToValidateReasonId":{"format":"int32","type":"integer"},"OtherReason":{"type":"string"}}},"ServiceChannel.Notifications.Objects.AssetWarrantyProvider":{"type":"object","properties":{"Type":{"enum":["Fixed","PrimaryRanked","FixedRanked"],"type":"string"},"Value":{"format":"int32","type":"integer"},"ProviderName":{"type":"string"}}},"ServiceChannel.Notifications.Objects.AssetWarrantyExpiration":{"type":"object","properties":{"Type":{"enum":["FromPurchaseDate","FromInstallDate"],"type":"string"},"Period":{"format":"int32","type":"integer"}}},"System.Object":{"type":"object","properties":{}},"ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse":{"type":"object","properties":{"Id":{"type":"string"},"WarningMessage":{"type":"string"},"IsSuccess":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.ErrorResponse":{"description":"The error response object","type":"object","properties":{"ErrorCodes":{"description":"The list of error codes. Go to https://developer.servicechannel.com/basics/general/response-codes/#internal-error-codes-and-messages to map error codes to error reasons.","type":"array","items":{"enum":["NotAllowed","EmptyProvider","InvalidProviderId","UnknownProvider","ProviderAlreadyExists","ProviderIdNotExists","TimeoutExpiredError","EmptyContract","ContractUndefined","EmptySubscriber","InvalidSubscriberId","UnknownSubscriber","InactiveSubscriber","EmptySubscriberId","SubscriberIdNotExists","InternalError","DataNotFound","BadRequest","UnAuthorized","UnSupportedApplication","SubsidiaryUserDisabled","EmptyLocation","InvalidLocationId","UnknownLocation","LocationNotBelongsToSubscriber","EmptyLocationCountry","LocationAlreadyExists","InvalidStoreId","LocationEmptyState","NoAccessToLocation","LocationAddressValidationError","LocationAddressRequestValidationError","InvalidLocationNoteHeader","NoAccessToUpdateProtectedNote","InvalidBusinessHoursFormat","WorkingHoursIntersect","InvalidDayOfWeek","DuplicateDayOfWeek","InvalidBusinessHoursInitialSetup","BusinessHoursIsEmpty","InvalidHolidayRepeatByType","EmptyHolidayListOfDays","EmptyHolidayListOfMonths","InvalidHolidayMonthName","InvalidHolidayNameLength","InvalidHolidayRepeatEvery","DuplicateMonth","InvalidHolidayFrequency","InvalidHolidayStartDate","InvalidCloseAllDay","HolidayDoesNotExist","InvalidFormatParameter","InvalidLocationCity","InvalidLocationZip","InvalidLocationLatitude","InvalidLocationLongitude","InvalidLocationEmail","InvalidLocationName","InvalidLocationState","InvalidLocationAddlAddress","InvalidLocationMainAddress","InvalidLocationCountry","InvalidLocationRegion","InvalidLocationDistrict","InvalidLocationPhone","InvalidLocationContact","InvalidLocationFaxNumber","LocationCountryNotFound","LocationStateNotFound","LocationCityNotFound","LocationIdNotExists","InvalidLocationEmailLength","LocationStateIdNotFound","IncorrectCombinationStateAndStateId","InvalidSubscriberIds","InvalidLocalizationSettings","LandlordResponsibilityNotFound","LandlordResponsibilityAlreadyExists","EmptyLocationIds","AttachmentNotExist","InvalidTradeId","InvalidCategoryId","InvalidOverrideCategoryId","InvalidOverridePriorityId","LeaseNoteExceedMaxLength","InvalidOverrideProviderRank","InvalidOverrideNTE","EmptyTrade","InvalidTrade","TradeNotBelongsToSubscriber","InvalidPrimaryTrade","InvalidTradeForSubscriber","InvalidCategoryForSubscriber","GlCodeAlreadyExists","GlCodeNotExists","InvalidGlCodeUpdate","EmptyGlCode","TradeAlreadyExists","InvalidNTETrade","TradeNotExists","TradeAlreadyInUse","EmptyUser","EmptyCreatedBy","InvalidUserName","NotProviderUser","UserHasNoPermissions","RestrictedAccount","UserAlreadyExists","UserHasNoPermissionsEditWO","UserEmailAddressIsMissing","InvalidSubsriberProviderId","LanguageNameNotFound","InvalidLanguageId","LanguageIdNotFound","UseBothSubscriberIdProviderId","EmptyWoProblem","InvalidWoProblemSource","InvalidWoProblemDescription","InvalidWoProblemCode","InvalidWoStatus","InvalidWoNte","InvalidWoCaller","InvalidWoCallDate","InvalidWoScheduledDate","InvalidWoScheduledDateGreaterThanMaxAllowed","EmptyWoCategory","InvalidWoCategory","EmptyWoPriority","InvalidWoPriority","InvalidWoCurrency","InvalidWoSetupId","AttachmentsRequired","InvalidWoIdentifier","EquipmentRequired","WoNteOverflow","InvalidWoPurchaseNumber","InvalidWoStateForUpdate","InvalidPagingParameter","InvalidWoNumber","CheckInDenied","CheckOutDenied","WoScheduledDateLessThenReassignDate","WoScheduledDateLessThenCallDate","InvalidWoActionReason","EmptySubscriberProperty","WorkOrderUpdateError","MissedWoNteDetails","InvalidLinkedWoIdentifier","WoIsOnHold","InvalidWoTrade","InvalidStarScore","WorkOrderAlreadyRated","AttachmentThumbnailNotAvailable","InvalidWoIdentifierOrPin","InvalidTimeZoneHeader","RefrigerantWasUsedShouldBeYesOrNo","CheckInDeniedOutsideGeolocation","CheckOutDeniedOutsideGeolocation","LeakDetectorAuditShouldBeCreated","CheckInOutPremature","WorkOrderAttachmentsSizeExceeded","WorkOrderNotFound","WorkOrderCreateError","InvalidSetupId","IssueListNotFound","InvalidIssueListField","InactiveTemplateType","SiteAuditNotFound","SiteAuditUpdateError","InvalidSiteAuditParameters","InvalidAdditionalApprovalCode","InvalidAdditionalApprovalCodeValue","AdditionalApprovalCodeIsDisabled","InvalidOtherDesc","InvalidTax2Name","InvoiceInconsistentAmounts","InvoiceInvalidTotal","InvoiceTotalGreaterNte","InvoiceExists","CreatingInvoiceError","DuplInvNumber","InvoiceTotalNull","InvComplDateNull","InvDateLessComplDate","InvoiceNotAuto","ESignatureRequired","InvWoNotFound","InvWrongWoCurr","InvWoCurrNotFound","InvoicingDisabled","InvCreationUnexpectedRes","InvoiceInvalidLaborAmount","InvoiceInvalidMaterialAmount","InvDateOld","InvDateGreater","InvoiceMaterialDescriptionLengthOverflow","InvoiceTaxNotValidated","InvoiceMaterialPartNumberLengthOverflow","TaxValidationError","TaxExemptionError","InvalidInvoiceNumber","GetApprovalLevelsError","InvoiceAddUsersToMliLevelsError","InvoiceAddDeleteLocationsToMliLevelUserError","InvoiceUpdateMLiLevelError","InvoiceDeleteMliLevelError","InvoiceDeleteUsersFromMliLevelError","ApprovalLevelNameLengthOverflow","GstTaxError","Tax2Error","GetApprovalLevelsAndLocationsByUserError","GetAssignedUserShortInfoError","AssignAllLocationsToApprovalLevelAndUserError","GetLocationsForApprovalLevelAndAssignedUserError","GetLocationsBySubscriberError","AssignUserWithLocationsToApprovalLevelError","ReAssignUserWithLocationsToNewApprovalLevelError","ReAssignLocationsToApprovalLevelAndUserError","OutstandingBalance","InvoiceTaxDetailsEmpty","InvoiceTaxDetailsIncorrectSum","MultipleUsersForLocationIsNotAllowed","UserAssignedToOtherLevel","UserDoesNotExist","LaborLineItemRequired","MaterialLineItemRequired","InvoiceDoesntExist","InvoiceStarUnstarFailed","InvoiceBatchUpdateInvalidInvoiceStatusError","InvoiceBatchUpdateLimitExceededError","InvoiceNotAvailableForCurrentUser","InvoiceBatchUpdateInvalidRuleSetStructure","InvoiceBatchUpdateInvalidMliStructure","InvoiceBatchUpdateStatusError","InvoiceMaterialUnitTypeInvalid","ExistingBatchNumber","InvoiceResolutionTextRequired","GetInvoiceDefaultApprovalCodesError","InvoiceInvalidTravelAmount","InvoiceTravelDescriptionLengthOverflow","InvoiceTravelUnitTypeInvalid","TravelLineItemRequired","TravelDetailsDisabled","OnOffShoreDisabled","InvoiceInvalidLaborCount","InvoiceInvalidMaterialCount","InvoiceInvalidTravelCount","SubscriberNotRegisteredForTaxValidation","ManyDecimalsInAmountError","DecimalPartQstTaxError","LaborRatesDiscrepancy","PayInvoicesError","InvoiceNumberRequirementsError","InvoiceNumberIncorrect","InvoiceNumberRegExPatternError","GetInvoicesPendingApprovalByLocationError","ReAssignInvoicesToUsersFailed","ReAssignInvoicesUsersMatched","GetUsersForReassignInvoiceError","InvalidTimeRangeActivity","OutsourcedSourceInvoiceNotFound","OthersLineItemsDisabled","InvoiceInvalidOtherAmount","InvoiceInvalidOtherCount","InvoiceOtherDescriptionLengthOverflow","OtherLineItemRequired","OtherLineItemsNotNegativeValueRequired","InvalidLaborSkillLevel","InvalidLaborType","InvalidTechnicianQuantity","GetInvoicesCommonCategoriesError","InvoiceExplainDisputeEmpty","InvoiceAdditionalApprovalCodeHeaderError","TemplateParseSuccess","TemplateIncorrectHeaderError","TemplateEmptyTemplateError","TemplateWrongFieldsCountError","TemplateFieldNotFoundError","TemplateFieldRequiredError","TemplateParseIntError","TemplateFieldSizeError","TemplateInvalidValueError","TemplateFieldFormatError","TemplateFieldMaxRangeError","TemplateFieldMinRangeError","TemplateProviderNotEntered","TemplateInvalidSubscriberError","TemplateVendorNotFoundError","TemplateMissedProviderError","TemplateProviderNotFoundError","TemplateProviderSubsccriberLinkError","TemplateTradeDispatchRankError","TemplateInvalidTradeForSubscriberError","TemplateStoreNotFoundError","TemplateNotStoresForStateError","TemplateNotStoresForCountryError","TemplateNotStoresForDistrictError","TemplateNotStoresForRegionError","TemplateMultiplePimaryProvidersForTradeStoreError","TemplateDuplicatePrimaryRelationshipError","TemplateAmbiguousDataError","TemplateIncorrectSubscriber","TemplateDuplicateRanking","TemplateLongitudeRangeError","TemplateLatitudeRangeError","TemplateInvalidStateError","TemplateMissedSubscriberError","TemplateMissedStoreIdError","TemplateInvalidSubscriberIdError","TemplateOpenCloseDateError","TemplateInvalidCountryError","TemplateInvalidStateForCountryError","TemplateInvalidLocationTypeError","TemplateMissingFullAndShortNameError","TemplateMissingCountryError","TemplateDuplicatedDataError","TemplateParentLocationNotFoundError","TemplateParseDateTimeError","TemplateParseDecimalError","TemplateSquareValueRangeError","TemplateInvalidSquareMeasureError","TemplateTypeLabelCanNotBeUpdatedError","TemplateTypeLabelHaveToBeLocationForNotInventory","TemplateInvalidPrimarySupplyLocation","TemplateInvalidHomestoreLocationNumber","TemplateErrorDuringCreation","TemplateLocationNotFoundError","TemplateDuplicatedLocationFoundError","TemplateInvalidLocationHeaderError","TemplateDuplicatedLocationHeaderError","TemplateHeaderContainsEmptyFieldsError","TemplateLocHeadersShortHeaderError","TemplateHeaderContainsDuplicatesError","TemplateLocationNotesStoreIdFieldLengthError","TemplateLocationNotesNoteValueFieldLengthError","TemplateErrorInvalidZipCode","TemplateMissingLocationNoteHeader","TemplateMissingLocationNoteIdHeader","TemplateInvalidSecondarySupplyLocation","TemplateLocationWasNotCreated","TemplateTruckNameIsEmpty","TemplateWrongFormat","TemplateSubscriberNotFound","TemplateDuplicatedLocationHeaders","TemplateInvalidHeaders","TemplateInvalidPhoneError","TemplateDuplicateTelecomRecordError","TemplateTelecomRecordExistsError","TemplateInvalidCategory","TemplateDifferentRanksForProviderAssignments","TemplateDuplicateRankError","TemplateProviderNonCompliant","TemplateLocationIsClosed","TemplateProviderWarning","EmptyRequest","InvoiceOtherUnitTypeInvalid","InvalidNumberOfParameters","EmptyLocationOrTradeList","StoreIdRequiredError","InvalidUserIdError","InvalidStoreIdError","AmbigiousError","MliHierarchyFiledsCountError","MliHierarchyMaxUserNameError","MliHierarchyDuplicateUserError","MLiHirarchyUserExistInOtherLevelError","MissingLevelsError","DuplicateApprovalLevelsError","InvalidMliLocations","InvalidMlpLocations","ApprovalLevelUsedInRulsetError","GLCodeAmbiguous","GlCodeInvalidResponce","GetRuleSetListError","RuleSetDuplicateNameError","RuleSetDuplicateActionError","RuleSetConflictedActionError","RuleSetRuleSetDoesNotExistsError","RuleSetTradeDoesNotExistError","RuleSetCategoryDoesNotExistError","RuleSetMliLevelDoesNotExistError","GetRuleSet","CreateUpdateRuleSetError","DeleteRuleSet","GetRuleSetCategoriesTradesCountError","GetRuleSetByInvoice","GetCategoryTradeIdsAreSelectedError","ProposalAboveMlpLimitError","ProposalNextLevelHasNoAvailableActionsError","DefaultRuleSetError","UserFilterGetError","UserFilterCreateUpdateError","UserFilterDeleteError","UserFilterSetAsDefaultError","InvoiceFilterFromAlpProviderError","PaymenowScProviderIdOrFbCompanyIdMustBeProvided","PaymenowBannersForProvidersOnly","PaymenowFeatureDisabled","PaymenowBannerInfoNotFound","PaymenowBannerInvalidNavigationUrl","PaymenowRequestedProvidersIsNotAssigned","PaymenowEmptyRequestedProviders","PaymentManagerFeatureDisabled","PaymentManagerFeatureDisabledForSubscriber","PaymentSystemCurrentlyUnavailable","CurrencyNotSupported","PaymentSystemAccountNotFound","FeatureIsOff","EarlyPayFeatureWithoutPaymentManagetFeatureError","FtpTestError","AcceptTermsAndConditionsRequestInvalid","PaymentSystemAccountError","SendReportToFTP","SchedulingError","BadPaymentData","InvoicesCanNotBeRepaid","InvoicesCanNotBeRescheduled","InvalidBillingAddress","PaymentManagerGeneralSettingsNotFound","PaymentManagerEInvoiceSettingsNotFound","BadgeVerificationFailed","BadgeTempPassEmpty","BadgeScanRequired","SolvedIssueSubmitFailed","SolvedIssueInvalidLocationId","SolvedIssueInvalidCategoryId","SolvedIssueInvalidTradeId","SolvedIssueInvalidPriorityId","SolvedIssueInvalidSource","SolvedIssueInvalidProblemCode","SolvedIssueInvalidType","SubmitFeedbackErrorWoStatus","SubmitFeedbackInvalidAnswer","SubmitFeedbackInvalidTrackingNumber","SubmitFeedbackInvalidSubscriber","SubmitFeedbackInvalidScore","SubmitFeedbackUnsatisfactoryCommentRequired","SubmitFeedbackInvalidReviewId","SubmitFeedbackInvalidSetupId","FeedbackSetupInvalidSetupId","S3SaveError","AbsSaveError","GoodDataLoginFailed","GoodDataElementUriError","GoodDataReportResultUriError","GoodDataReportResultEmpty","GoodDataDesReportResCountError","GoodDataDesReportResConvertError","GoodDataDesDisplayFormAttributeEmpty","InvalidProposalAmountLimit","GetApprovalProposalReasonsError","GetEmailRecipientsError","GetAssignProposalReasonsError","AssetTypeDuplicateNameError","AssetTypeDoesntExistError","AssetTypeFailUpdateRefrigerantPurpose","AssetTypeDeleteFailed","ExistingAssetsFoundForAssetType","CantModifyAssetTypeParentId","InvalidAssetTypeName","AssetTypeInheritanceError","ExistingProposalsFoundForAssetType","InstallPurchaseDateOverflow","WOexistsWithSomeAssets","PartsChangeFailed","PartsReasonCodeError","PartsUseDateError","PartsRefrigerantAlreadyExists","PartsChargeHistoryAlreadyExists","PartsNotFound","BulkPartUseIncorrectWorkOrder","BulkPartsByIdsNotFound","BulkPartsMultipleWosError","BulkPartsIncorrectIsRefrigerantParam","BulkPartsIsRefrigerantCanNotbeChanged","BulkPartsReasonCodeChangeError","BulkPartsInvalidAssetAndReasonCodeParams","BulkPartsInvalidAssetId","BulkPartsInvalidInitialChargeCode","BulkPartsAssetDoesntContainCharge","BulkPartsIsInventoryFlagError","BulkPartsLeakAlreadyInProcessError","BulkPartsInvalidDateRangeError","BulkPartsMoeNumberRequiredError","BulkPartsSystemChargeExceeded","BulkRefrigerantuUageBlocked","BulkIDsNotBeNull","BulkPartRemovalNotAllowedOnRetrofitRetireWO","BulkAddPartUsagesNotAllowedAfterRetrofitRetireCreation","BulkRetrofitRetireRefrigerantUsageReasonCanNotChanged","BulkInitialChargeSystemExpansionNotAllowed","BulkInventoryPartIdCanNotBeChanged","BulkInventoryLocationIdCanNotBeChanged","BulkPartsDuplicatedRequest","BulkChangePartsIncorrectRefrigerantType","BulkPartsWorkOrderInProcessing","BulkPartsRetroRetireIsInProgressOnThisDate","BulkPartsCanNotAttachRefrigerantUsageToPlanLeakRecord","RetrofitRetireCanNotBeRemoved","RetroRetirePartsCantbeChanged","BulkPartsInventoryApiFailed","BadNotificationSubscriptionEventType","RefrigerantUseDateOutOfTheLeakProcessDateRange","InventoryUsageNotAllowedOnRTrackingConnectedSubAndSubcontractors","BulkExternalWoCurrentlyDoesntExists","BulkConnectorOnlyExternalClientAssetsCanBeProcessed","BulkConnectorOnlyClientAssetsCouldBeProcessed","LeakRecordHasWrongDateValue","HasUncompliedLeakRecordInAnoutherWO","HasUncompletedWOOnAnotherLeakRecord","OnlyOneAssetWorkOrderPair","OneLeakRecordMustBeOnCompletedWO","LeakRecordNotFaund","AssetIDWoIdIsRequired","BulkPartsReasonCodeRetrofit","MlpImportLevelError","UpdateMlpUserLevelError","InvalidHolidayName","DuplicateHolidayName","HolidaysDeleteFailed","HolidaysExcludeInsertFailed","HolidaysUpdateFailed","HolidaysInsertFailed","HolidaysExcludeDeleteFailed","BusinessHoursDeleteFailed","BusinessHoursUpdateFailed","BusinessHoursInsertFailed","InvalidTime","HolidayForDeleteNotFound","InvalidChecklistId","NoLinkBetweenSubscriberAndProvider","WorkforceCreateContractorError","InvalidCertificateId","MaxThresholdExceeded","MaxTriggerRateExceeded","LeakPriorityIsRequired","MissingRTSettings","ResolutionCodesLimitExceeded","ResolutionCodesAreRequired","RootCauseIsRequired","RootCauseTextIsRequired","NoAccessToSetRootCauseText","RootCauseTextMaxLengthExceeded","ResolutionCodeTextIsRequired","NoAccessToSetResolutionCodeText","ResolutionCodeTextMaxLengthExceeded","ResolutionCodeTextMustBeUnique","ResolutionCodeWithoutFreeTextMustBeUnique","PendingResCodesStatusCannotBeChangedToInvoiceableBySubscriber","ResolutionAndRootCauseCodesAreRequiredToMoveToInvoiceableStatusByProvider","AssetCategoriesLimitExceeded","NoAccessToAssetCategories","AssetCategoriesAreRequired","InvalidAssetCategoryId","NoAssetCategoriesOnWorkOrder","RootCausesMustBeForAllWorkOrderAssetCategories","RootCauseTextMustBeUnique","AssetCategoryIsRequired","MultipleRootCausesMethodMustBeUsed","ResolutionCodesMustBeForAllWorkOrderAssetCategories","UnknownStoreId","UsesRefrigerantAttributeNotChanged","AssetTagDuplicate","AssetTagIdDuplicate","UnknownEquipmentType","ParentIdInOtherLocation","UnknownBrandName","CARBRequiredManufacturedDate","CARBRequiredInstallDate","TradeNotFound","AssetDoesntExist","AssetIsNotRefrigerant","AssetCantContainRefrigerant","OnlyRackAssetsContainingCircuits","ConnectorAssetTagIdCanNotBeChanged","ConnectorAssetLocationIdCanNotBeChanged","AssetTagCantBeUpdated","AssetTypeIsNotСonfiguredToManageRTAssets","RefrigerantTrackingNotAvailableForLocation","UsesRefrigerantRequiredByAssetTypeSettings","AssetLocationTradeDoesntCorrespondToWO","AssetLocationSelectedPMmodule","UpdateAssetRepairStatusValidation","HasCircuitsCantBeChange","HasComponentsCantBeChange","CircuitCanNotBeConnectedToCircuit","RTCircuitCanNotBeConnectedToNonRTAsset","RTComponentCanNotBeConnectedToNonRTAsset","ComponentCanNotBeConnectedToComponent","NonRTComponentCanNotBeConnectedToRtAsset","NonRTCircuitCanNotBeConnectedToRtAsset","ComponentCanNotBeConnectedToCircuit","ParentAssetShouldHaveEitherComponentsNorCircuits","ParentAssetCantHaveComponents","ParentAssetCantHaveCircuits","MultipleAssetsFoundForTheRequestedTagId","DeclineWorkOrderFailed","AcceptWorkOrderFailed","WorkOrderWasAccepted","SaveMliAuditReportSetting","GetMliAuditReportSetting","SaveMliAuditReportResult","SaveMliAuditReportSendEmailStatus","SaveMliAuditReportFilePath","GetSubscribersEnabledSchedule","SaveMliAuditInfoError","TaxValidationAddNewCompanySettingsError","TaxValidationUpdateCompanySettingsError","ProjectAssociationError","GetProjectsInvoiceAmountsError","TaxCodeNotUniqueError","FieldLengthIsTooLongError","SetTaxCodesBulkError","InvoiceAdditionalApprovalCodeValueError","BulkUpdateInvoicePaymentError","ContractServiceExist","ContractServiceCantChangeTrade","ContractServiceCantChangeCategory","ContractServiceCantChangeProvider","ContractServicePMServiceCantChangeTrade","ContractServicePMServiceCantChangeCategory","WorkRequestDescriptionIsRequired","WorkRequestCallDateIsRequired","WorkRequestIssueIsRequired","WorkRequestCallDateHasWrongFormat","WorkRequestScheduledDateHasWrongFormat","InvalidWorkRequestStatus","InvalidWorkRequestExtendedStatus","InvalidWorkRequestCategory","InvalidWorkRequestPriority","InvalidWorkRequestCurrency","InvalidWorkRequestIssueSetup","InvalidWorkRequestIssueArea","InvalidWorkRequestAsset","WorkRequestAttachmentFileNameIsRequired","WorkRequestAttachmentOriginalNameIsRequired","WorkRequestIssueProblemCodeIsRequired","WorkRequestIssueProblemTypeIsRequired","WorkRequestScheduledDateMustBeGreaterThanCallDate","InvalidWorkRequestId","WorkRequestSearchCallDateFromHasWrongFormat","WorkRequestSearchCallDateToHasWrongFormat","WorkRequestSearchScheduledDateFromHasWrongFormat","WorkRequestSearchScheduledDateToHasWrongFormat","WorkRequestSearchClosedDateFromHasWrongFormat","WorkRequestSearchClosedDateToHasWrongFormat","WorkOrderIsAlreadyCreatedForWorkRequest","WorkRequestIsClosed","WorkRequestClosedReasonIsRequiredForClosedStatus","WorkOrderIdIsRequiredForThisClosedReason","InvalidWorkRequestClosedReason","WorkRequestClosedReasonIsOnlyForClosedStatus","InvalidWorkRequestWorkOrderId","WorkRequestWorkOrderIdIsOnlyForClosedStatus","WorkRequestWorkOrderIdIsOnlyForCertainClosedReason","InvalidWorkOrderSourceType","DeclineReasonIdIsRequired","DeclineReasonDoesntAllowCustomText","InvalidDeclineReasonId","MultipleWorkOrdersForPurchaseNumber","InvoiceMaterialMakupInvalid","MaterialMarkUpDiscrepancyReasonShouldBeStated","MaterialPriceDiscrepancyReasonShouldBeStated","OtherPriceDiscrepancyReasonShouldBeStated"],"type":"string"}},"ErrorCode":{"description":"The code of the first error found","enum":["NotAllowed","EmptyProvider","InvalidProviderId","UnknownProvider","ProviderAlreadyExists","ProviderIdNotExists","TimeoutExpiredError","EmptyContract","ContractUndefined","EmptySubscriber","InvalidSubscriberId","UnknownSubscriber","InactiveSubscriber","EmptySubscriberId","SubscriberIdNotExists","InternalError","DataNotFound","BadRequest","UnAuthorized","UnSupportedApplication","SubsidiaryUserDisabled","EmptyLocation","InvalidLocationId","UnknownLocation","LocationNotBelongsToSubscriber","EmptyLocationCountry","LocationAlreadyExists","InvalidStoreId","LocationEmptyState","NoAccessToLocation","LocationAddressValidationError","LocationAddressRequestValidationError","InvalidLocationNoteHeader","NoAccessToUpdateProtectedNote","InvalidBusinessHoursFormat","WorkingHoursIntersect","InvalidDayOfWeek","DuplicateDayOfWeek","InvalidBusinessHoursInitialSetup","BusinessHoursIsEmpty","InvalidHolidayRepeatByType","EmptyHolidayListOfDays","EmptyHolidayListOfMonths","InvalidHolidayMonthName","InvalidHolidayNameLength","InvalidHolidayRepeatEvery","DuplicateMonth","InvalidHolidayFrequency","InvalidHolidayStartDate","InvalidCloseAllDay","HolidayDoesNotExist","InvalidFormatParameter","InvalidLocationCity","InvalidLocationZip","InvalidLocationLatitude","InvalidLocationLongitude","InvalidLocationEmail","InvalidLocationName","InvalidLocationState","InvalidLocationAddlAddress","InvalidLocationMainAddress","InvalidLocationCountry","InvalidLocationRegion","InvalidLocationDistrict","InvalidLocationPhone","InvalidLocationContact","InvalidLocationFaxNumber","LocationCountryNotFound","LocationStateNotFound","LocationCityNotFound","LocationIdNotExists","InvalidLocationEmailLength","LocationStateIdNotFound","IncorrectCombinationStateAndStateId","InvalidSubscriberIds","InvalidLocalizationSettings","LandlordResponsibilityNotFound","LandlordResponsibilityAlreadyExists","EmptyLocationIds","AttachmentNotExist","InvalidTradeId","InvalidCategoryId","InvalidOverrideCategoryId","InvalidOverridePriorityId","LeaseNoteExceedMaxLength","InvalidOverrideProviderRank","InvalidOverrideNTE","EmptyTrade","InvalidTrade","TradeNotBelongsToSubscriber","InvalidPrimaryTrade","InvalidTradeForSubscriber","InvalidCategoryForSubscriber","GlCodeAlreadyExists","GlCodeNotExists","InvalidGlCodeUpdate","EmptyGlCode","TradeAlreadyExists","InvalidNTETrade","TradeNotExists","TradeAlreadyInUse","EmptyUser","EmptyCreatedBy","InvalidUserName","NotProviderUser","UserHasNoPermissions","RestrictedAccount","UserAlreadyExists","UserHasNoPermissionsEditWO","UserEmailAddressIsMissing","InvalidSubsriberProviderId","LanguageNameNotFound","InvalidLanguageId","LanguageIdNotFound","UseBothSubscriberIdProviderId","EmptyWoProblem","InvalidWoProblemSource","InvalidWoProblemDescription","InvalidWoProblemCode","InvalidWoStatus","InvalidWoNte","InvalidWoCaller","InvalidWoCallDate","InvalidWoScheduledDate","InvalidWoScheduledDateGreaterThanMaxAllowed","EmptyWoCategory","InvalidWoCategory","EmptyWoPriority","InvalidWoPriority","InvalidWoCurrency","InvalidWoSetupId","AttachmentsRequired","InvalidWoIdentifier","EquipmentRequired","WoNteOverflow","InvalidWoPurchaseNumber","InvalidWoStateForUpdate","InvalidPagingParameter","InvalidWoNumber","CheckInDenied","CheckOutDenied","WoScheduledDateLessThenReassignDate","WoScheduledDateLessThenCallDate","InvalidWoActionReason","EmptySubscriberProperty","WorkOrderUpdateError","MissedWoNteDetails","InvalidLinkedWoIdentifier","WoIsOnHold","InvalidWoTrade","InvalidStarScore","WorkOrderAlreadyRated","AttachmentThumbnailNotAvailable","InvalidWoIdentifierOrPin","InvalidTimeZoneHeader","RefrigerantWasUsedShouldBeYesOrNo","CheckInDeniedOutsideGeolocation","CheckOutDeniedOutsideGeolocation","LeakDetectorAuditShouldBeCreated","CheckInOutPremature","WorkOrderAttachmentsSizeExceeded","WorkOrderNotFound","WorkOrderCreateError","InvalidSetupId","IssueListNotFound","InvalidIssueListField","InactiveTemplateType","SiteAuditNotFound","SiteAuditUpdateError","InvalidSiteAuditParameters","InvalidAdditionalApprovalCode","InvalidAdditionalApprovalCodeValue","AdditionalApprovalCodeIsDisabled","InvalidOtherDesc","InvalidTax2Name","InvoiceInconsistentAmounts","InvoiceInvalidTotal","InvoiceTotalGreaterNte","InvoiceExists","CreatingInvoiceError","DuplInvNumber","InvoiceTotalNull","InvComplDateNull","InvDateLessComplDate","InvoiceNotAuto","ESignatureRequired","InvWoNotFound","InvWrongWoCurr","InvWoCurrNotFound","InvoicingDisabled","InvCreationUnexpectedRes","InvoiceInvalidLaborAmount","InvoiceInvalidMaterialAmount","InvDateOld","InvDateGreater","InvoiceMaterialDescriptionLengthOverflow","InvoiceTaxNotValidated","InvoiceMaterialPartNumberLengthOverflow","TaxValidationError","TaxExemptionError","InvalidInvoiceNumber","GetApprovalLevelsError","InvoiceAddUsersToMliLevelsError","InvoiceAddDeleteLocationsToMliLevelUserError","InvoiceUpdateMLiLevelError","InvoiceDeleteMliLevelError","InvoiceDeleteUsersFromMliLevelError","ApprovalLevelNameLengthOverflow","GstTaxError","Tax2Error","GetApprovalLevelsAndLocationsByUserError","GetAssignedUserShortInfoError","AssignAllLocationsToApprovalLevelAndUserError","GetLocationsForApprovalLevelAndAssignedUserError","GetLocationsBySubscriberError","AssignUserWithLocationsToApprovalLevelError","ReAssignUserWithLocationsToNewApprovalLevelError","ReAssignLocationsToApprovalLevelAndUserError","OutstandingBalance","InvoiceTaxDetailsEmpty","InvoiceTaxDetailsIncorrectSum","MultipleUsersForLocationIsNotAllowed","UserAssignedToOtherLevel","UserDoesNotExist","LaborLineItemRequired","MaterialLineItemRequired","InvoiceDoesntExist","InvoiceStarUnstarFailed","InvoiceBatchUpdateInvalidInvoiceStatusError","InvoiceBatchUpdateLimitExceededError","InvoiceNotAvailableForCurrentUser","InvoiceBatchUpdateInvalidRuleSetStructure","InvoiceBatchUpdateInvalidMliStructure","InvoiceBatchUpdateStatusError","InvoiceMaterialUnitTypeInvalid","ExistingBatchNumber","InvoiceResolutionTextRequired","GetInvoiceDefaultApprovalCodesError","InvoiceInvalidTravelAmount","InvoiceTravelDescriptionLengthOverflow","InvoiceTravelUnitTypeInvalid","TravelLineItemRequired","TravelDetailsDisabled","OnOffShoreDisabled","InvoiceInvalidLaborCount","InvoiceInvalidMaterialCount","InvoiceInvalidTravelCount","SubscriberNotRegisteredForTaxValidation","ManyDecimalsInAmountError","DecimalPartQstTaxError","LaborRatesDiscrepancy","PayInvoicesError","InvoiceNumberRequirementsError","InvoiceNumberIncorrect","InvoiceNumberRegExPatternError","GetInvoicesPendingApprovalByLocationError","ReAssignInvoicesToUsersFailed","ReAssignInvoicesUsersMatched","GetUsersForReassignInvoiceError","InvalidTimeRangeActivity","OutsourcedSourceInvoiceNotFound","OthersLineItemsDisabled","InvoiceInvalidOtherAmount","InvoiceInvalidOtherCount","InvoiceOtherDescriptionLengthOverflow","OtherLineItemRequired","OtherLineItemsNotNegativeValueRequired","InvalidLaborSkillLevel","InvalidLaborType","InvalidTechnicianQuantity","GetInvoicesCommonCategoriesError","InvoiceExplainDisputeEmpty","InvoiceAdditionalApprovalCodeHeaderError","TemplateParseSuccess","TemplateIncorrectHeaderError","TemplateEmptyTemplateError","TemplateWrongFieldsCountError","TemplateFieldNotFoundError","TemplateFieldRequiredError","TemplateParseIntError","TemplateFieldSizeError","TemplateInvalidValueError","TemplateFieldFormatError","TemplateFieldMaxRangeError","TemplateFieldMinRangeError","TemplateProviderNotEntered","TemplateInvalidSubscriberError","TemplateVendorNotFoundError","TemplateMissedProviderError","TemplateProviderNotFoundError","TemplateProviderSubsccriberLinkError","TemplateTradeDispatchRankError","TemplateInvalidTradeForSubscriberError","TemplateStoreNotFoundError","TemplateNotStoresForStateError","TemplateNotStoresForCountryError","TemplateNotStoresForDistrictError","TemplateNotStoresForRegionError","TemplateMultiplePimaryProvidersForTradeStoreError","TemplateDuplicatePrimaryRelationshipError","TemplateAmbiguousDataError","TemplateIncorrectSubscriber","TemplateDuplicateRanking","TemplateLongitudeRangeError","TemplateLatitudeRangeError","TemplateInvalidStateError","TemplateMissedSubscriberError","TemplateMissedStoreIdError","TemplateInvalidSubscriberIdError","TemplateOpenCloseDateError","TemplateInvalidCountryError","TemplateInvalidStateForCountryError","TemplateInvalidLocationTypeError","TemplateMissingFullAndShortNameError","TemplateMissingCountryError","TemplateDuplicatedDataError","TemplateParentLocationNotFoundError","TemplateParseDateTimeError","TemplateParseDecimalError","TemplateSquareValueRangeError","TemplateInvalidSquareMeasureError","TemplateTypeLabelCanNotBeUpdatedError","TemplateTypeLabelHaveToBeLocationForNotInventory","TemplateInvalidPrimarySupplyLocation","TemplateInvalidHomestoreLocationNumber","TemplateErrorDuringCreation","TemplateLocationNotFoundError","TemplateDuplicatedLocationFoundError","TemplateInvalidLocationHeaderError","TemplateDuplicatedLocationHeaderError","TemplateHeaderContainsEmptyFieldsError","TemplateLocHeadersShortHeaderError","TemplateHeaderContainsDuplicatesError","TemplateLocationNotesStoreIdFieldLengthError","TemplateLocationNotesNoteValueFieldLengthError","TemplateErrorInvalidZipCode","TemplateMissingLocationNoteHeader","TemplateMissingLocationNoteIdHeader","TemplateInvalidSecondarySupplyLocation","TemplateLocationWasNotCreated","TemplateTruckNameIsEmpty","TemplateWrongFormat","TemplateSubscriberNotFound","TemplateDuplicatedLocationHeaders","TemplateInvalidHeaders","TemplateInvalidPhoneError","TemplateDuplicateTelecomRecordError","TemplateTelecomRecordExistsError","TemplateInvalidCategory","TemplateDifferentRanksForProviderAssignments","TemplateDuplicateRankError","TemplateProviderNonCompliant","TemplateLocationIsClosed","TemplateProviderWarning","EmptyRequest","InvoiceOtherUnitTypeInvalid","InvalidNumberOfParameters","EmptyLocationOrTradeList","StoreIdRequiredError","InvalidUserIdError","InvalidStoreIdError","AmbigiousError","MliHierarchyFiledsCountError","MliHierarchyMaxUserNameError","MliHierarchyDuplicateUserError","MLiHirarchyUserExistInOtherLevelError","MissingLevelsError","DuplicateApprovalLevelsError","InvalidMliLocations","InvalidMlpLocations","ApprovalLevelUsedInRulsetError","GLCodeAmbiguous","GlCodeInvalidResponce","GetRuleSetListError","RuleSetDuplicateNameError","RuleSetDuplicateActionError","RuleSetConflictedActionError","RuleSetRuleSetDoesNotExistsError","RuleSetTradeDoesNotExistError","RuleSetCategoryDoesNotExistError","RuleSetMliLevelDoesNotExistError","GetRuleSet","CreateUpdateRuleSetError","DeleteRuleSet","GetRuleSetCategoriesTradesCountError","GetRuleSetByInvoice","GetCategoryTradeIdsAreSelectedError","ProposalAboveMlpLimitError","ProposalNextLevelHasNoAvailableActionsError","DefaultRuleSetError","UserFilterGetError","UserFilterCreateUpdateError","UserFilterDeleteError","UserFilterSetAsDefaultError","InvoiceFilterFromAlpProviderError","PaymenowScProviderIdOrFbCompanyIdMustBeProvided","PaymenowBannersForProvidersOnly","PaymenowFeatureDisabled","PaymenowBannerInfoNotFound","PaymenowBannerInvalidNavigationUrl","PaymenowRequestedProvidersIsNotAssigned","PaymenowEmptyRequestedProviders","PaymentManagerFeatureDisabled","PaymentManagerFeatureDisabledForSubscriber","PaymentSystemCurrentlyUnavailable","CurrencyNotSupported","PaymentSystemAccountNotFound","FeatureIsOff","EarlyPayFeatureWithoutPaymentManagetFeatureError","FtpTestError","AcceptTermsAndConditionsRequestInvalid","PaymentSystemAccountError","SendReportToFTP","SchedulingError","BadPaymentData","InvoicesCanNotBeRepaid","InvoicesCanNotBeRescheduled","InvalidBillingAddress","PaymentManagerGeneralSettingsNotFound","PaymentManagerEInvoiceSettingsNotFound","BadgeVerificationFailed","BadgeTempPassEmpty","BadgeScanRequired","SolvedIssueSubmitFailed","SolvedIssueInvalidLocationId","SolvedIssueInvalidCategoryId","SolvedIssueInvalidTradeId","SolvedIssueInvalidPriorityId","SolvedIssueInvalidSource","SolvedIssueInvalidProblemCode","SolvedIssueInvalidType","SubmitFeedbackErrorWoStatus","SubmitFeedbackInvalidAnswer","SubmitFeedbackInvalidTrackingNumber","SubmitFeedbackInvalidSubscriber","SubmitFeedbackInvalidScore","SubmitFeedbackUnsatisfactoryCommentRequired","SubmitFeedbackInvalidReviewId","SubmitFeedbackInvalidSetupId","FeedbackSetupInvalidSetupId","S3SaveError","AbsSaveError","GoodDataLoginFailed","GoodDataElementUriError","GoodDataReportResultUriError","GoodDataReportResultEmpty","GoodDataDesReportResCountError","GoodDataDesReportResConvertError","GoodDataDesDisplayFormAttributeEmpty","InvalidProposalAmountLimit","GetApprovalProposalReasonsError","GetEmailRecipientsError","GetAssignProposalReasonsError","AssetTypeDuplicateNameError","AssetTypeDoesntExistError","AssetTypeFailUpdateRefrigerantPurpose","AssetTypeDeleteFailed","ExistingAssetsFoundForAssetType","CantModifyAssetTypeParentId","InvalidAssetTypeName","AssetTypeInheritanceError","ExistingProposalsFoundForAssetType","InstallPurchaseDateOverflow","WOexistsWithSomeAssets","PartsChangeFailed","PartsReasonCodeError","PartsUseDateError","PartsRefrigerantAlreadyExists","PartsChargeHistoryAlreadyExists","PartsNotFound","BulkPartUseIncorrectWorkOrder","BulkPartsByIdsNotFound","BulkPartsMultipleWosError","BulkPartsIncorrectIsRefrigerantParam","BulkPartsIsRefrigerantCanNotbeChanged","BulkPartsReasonCodeChangeError","BulkPartsInvalidAssetAndReasonCodeParams","BulkPartsInvalidAssetId","BulkPartsInvalidInitialChargeCode","BulkPartsAssetDoesntContainCharge","BulkPartsIsInventoryFlagError","BulkPartsLeakAlreadyInProcessError","BulkPartsInvalidDateRangeError","BulkPartsMoeNumberRequiredError","BulkPartsSystemChargeExceeded","BulkRefrigerantuUageBlocked","BulkIDsNotBeNull","BulkPartRemovalNotAllowedOnRetrofitRetireWO","BulkAddPartUsagesNotAllowedAfterRetrofitRetireCreation","BulkRetrofitRetireRefrigerantUsageReasonCanNotChanged","BulkInitialChargeSystemExpansionNotAllowed","BulkInventoryPartIdCanNotBeChanged","BulkInventoryLocationIdCanNotBeChanged","BulkPartsDuplicatedRequest","BulkChangePartsIncorrectRefrigerantType","BulkPartsWorkOrderInProcessing","BulkPartsRetroRetireIsInProgressOnThisDate","BulkPartsCanNotAttachRefrigerantUsageToPlanLeakRecord","RetrofitRetireCanNotBeRemoved","RetroRetirePartsCantbeChanged","BulkPartsInventoryApiFailed","BadNotificationSubscriptionEventType","RefrigerantUseDateOutOfTheLeakProcessDateRange","InventoryUsageNotAllowedOnRTrackingConnectedSubAndSubcontractors","BulkExternalWoCurrentlyDoesntExists","BulkConnectorOnlyExternalClientAssetsCanBeProcessed","BulkConnectorOnlyClientAssetsCouldBeProcessed","LeakRecordHasWrongDateValue","HasUncompliedLeakRecordInAnoutherWO","HasUncompletedWOOnAnotherLeakRecord","OnlyOneAssetWorkOrderPair","OneLeakRecordMustBeOnCompletedWO","LeakRecordNotFaund","AssetIDWoIdIsRequired","BulkPartsReasonCodeRetrofit","MlpImportLevelError","UpdateMlpUserLevelError","InvalidHolidayName","DuplicateHolidayName","HolidaysDeleteFailed","HolidaysExcludeInsertFailed","HolidaysUpdateFailed","HolidaysInsertFailed","HolidaysExcludeDeleteFailed","BusinessHoursDeleteFailed","BusinessHoursUpdateFailed","BusinessHoursInsertFailed","InvalidTime","HolidayForDeleteNotFound","InvalidChecklistId","NoLinkBetweenSubscriberAndProvider","WorkforceCreateContractorError","InvalidCertificateId","MaxThresholdExceeded","MaxTriggerRateExceeded","LeakPriorityIsRequired","MissingRTSettings","ResolutionCodesLimitExceeded","ResolutionCodesAreRequired","RootCauseIsRequired","RootCauseTextIsRequired","NoAccessToSetRootCauseText","RootCauseTextMaxLengthExceeded","ResolutionCodeTextIsRequired","NoAccessToSetResolutionCodeText","ResolutionCodeTextMaxLengthExceeded","ResolutionCodeTextMustBeUnique","ResolutionCodeWithoutFreeTextMustBeUnique","PendingResCodesStatusCannotBeChangedToInvoiceableBySubscriber","ResolutionAndRootCauseCodesAreRequiredToMoveToInvoiceableStatusByProvider","AssetCategoriesLimitExceeded","NoAccessToAssetCategories","AssetCategoriesAreRequired","InvalidAssetCategoryId","NoAssetCategoriesOnWorkOrder","RootCausesMustBeForAllWorkOrderAssetCategories","RootCauseTextMustBeUnique","AssetCategoryIsRequired","MultipleRootCausesMethodMustBeUsed","ResolutionCodesMustBeForAllWorkOrderAssetCategories","UnknownStoreId","UsesRefrigerantAttributeNotChanged","AssetTagDuplicate","AssetTagIdDuplicate","UnknownEquipmentType","ParentIdInOtherLocation","UnknownBrandName","CARBRequiredManufacturedDate","CARBRequiredInstallDate","TradeNotFound","AssetDoesntExist","AssetIsNotRefrigerant","AssetCantContainRefrigerant","OnlyRackAssetsContainingCircuits","ConnectorAssetTagIdCanNotBeChanged","ConnectorAssetLocationIdCanNotBeChanged","AssetTagCantBeUpdated","AssetTypeIsNotСonfiguredToManageRTAssets","RefrigerantTrackingNotAvailableForLocation","UsesRefrigerantRequiredByAssetTypeSettings","AssetLocationTradeDoesntCorrespondToWO","AssetLocationSelectedPMmodule","UpdateAssetRepairStatusValidation","HasCircuitsCantBeChange","HasComponentsCantBeChange","CircuitCanNotBeConnectedToCircuit","RTCircuitCanNotBeConnectedToNonRTAsset","RTComponentCanNotBeConnectedToNonRTAsset","ComponentCanNotBeConnectedToComponent","NonRTComponentCanNotBeConnectedToRtAsset","NonRTCircuitCanNotBeConnectedToRtAsset","ComponentCanNotBeConnectedToCircuit","ParentAssetShouldHaveEitherComponentsNorCircuits","ParentAssetCantHaveComponents","ParentAssetCantHaveCircuits","MultipleAssetsFoundForTheRequestedTagId","DeclineWorkOrderFailed","AcceptWorkOrderFailed","WorkOrderWasAccepted","SaveMliAuditReportSetting","GetMliAuditReportSetting","SaveMliAuditReportResult","SaveMliAuditReportSendEmailStatus","SaveMliAuditReportFilePath","GetSubscribersEnabledSchedule","SaveMliAuditInfoError","TaxValidationAddNewCompanySettingsError","TaxValidationUpdateCompanySettingsError","ProjectAssociationError","GetProjectsInvoiceAmountsError","TaxCodeNotUniqueError","FieldLengthIsTooLongError","SetTaxCodesBulkError","InvoiceAdditionalApprovalCodeValueError","BulkUpdateInvoicePaymentError","ContractServiceExist","ContractServiceCantChangeTrade","ContractServiceCantChangeCategory","ContractServiceCantChangeProvider","ContractServicePMServiceCantChangeTrade","ContractServicePMServiceCantChangeCategory","WorkRequestDescriptionIsRequired","WorkRequestCallDateIsRequired","WorkRequestIssueIsRequired","WorkRequestCallDateHasWrongFormat","WorkRequestScheduledDateHasWrongFormat","InvalidWorkRequestStatus","InvalidWorkRequestExtendedStatus","InvalidWorkRequestCategory","InvalidWorkRequestPriority","InvalidWorkRequestCurrency","InvalidWorkRequestIssueSetup","InvalidWorkRequestIssueArea","InvalidWorkRequestAsset","WorkRequestAttachmentFileNameIsRequired","WorkRequestAttachmentOriginalNameIsRequired","WorkRequestIssueProblemCodeIsRequired","WorkRequestIssueProblemTypeIsRequired","WorkRequestScheduledDateMustBeGreaterThanCallDate","InvalidWorkRequestId","WorkRequestSearchCallDateFromHasWrongFormat","WorkRequestSearchCallDateToHasWrongFormat","WorkRequestSearchScheduledDateFromHasWrongFormat","WorkRequestSearchScheduledDateToHasWrongFormat","WorkRequestSearchClosedDateFromHasWrongFormat","WorkRequestSearchClosedDateToHasWrongFormat","WorkOrderIsAlreadyCreatedForWorkRequest","WorkRequestIsClosed","WorkRequestClosedReasonIsRequiredForClosedStatus","WorkOrderIdIsRequiredForThisClosedReason","InvalidWorkRequestClosedReason","WorkRequestClosedReasonIsOnlyForClosedStatus","InvalidWorkRequestWorkOrderId","WorkRequestWorkOrderIdIsOnlyForClosedStatus","WorkRequestWorkOrderIdIsOnlyForCertainClosedReason","InvalidWorkOrderSourceType","DeclineReasonIdIsRequired","DeclineReasonDoesntAllowCustomText","InvalidDeclineReasonId","MultipleWorkOrdersForPurchaseNumber","InvoiceMaterialMakupInvalid","MaterialMarkUpDiscrepancyReasonShouldBeStated","MaterialPriceDiscrepancyReasonShouldBeStated","OtherPriceDiscrepancyReasonShouldBeStated"],"type":"string","readOnly":true},"ErrorMessage":{"description":"The description of all errors.","type":"string"},"Data":{"$ref":"#/definitions/System.Object","description":"Optional\r\n            Gets or Sets the Data object."}}},"ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrderCheckInOut]":{"description":"Notification message","type":"object","properties":{"Object":{"$ref":"#/definitions/ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrderCheckInOut","description":"Message body object"},"EventType":{"description":"Notification message event type","enum":["WorkOrderCreated","WorkOrderNoteAdded","WorkOrderNotePinned","WorkOrderNoteUnpinned","WorkOrderStatusChanged","WorkOrderAttachmentAdded","WorkOrderNumberChanged","WorkOrderPriorityChanged","WorkOrderScheduledDateChanged","WorkOrderTradeChanged","WorkOrderNteChanged","WorkOrderCategoryChanged","WorkOrderProviderChanged","WorkOrderDescriptionChanged","WorkOrderResolutionCreated","RefrigerantWasUsedChanged","WorkOrderResolutionUpdated","WorkOrderResolutionCodeUpdated","WorkOrderRootCauseCodeUpdated","WorkOrderAssetAttached","WorkOrderAssetDetached","WorkOrderAssetValidated","WorkOrderLabelAdded","WorkOrderLabelDeleted","WorkOrderWeatherTypeChanged","WorkOrderIssueChoiceChanged","WorkOrderTechnicianAssigned","WorkOrderTechnicianUnassigned","WorkOrderTechnicianAccepted","WorkOrderTechnicianDeclined","WorkOrderCertifiedTechnicianAssigned","WorkOrderLinksAdded","WorkOrderLinksDeleted","WorkOrderStarAdded","WorkOrderStarRemoved","WorkOrderCheckIn","WorkOrderCheckOut","BadgeScanRequired","InvoiceCreated","InvoiceOpen","InvoiceApproved","InvoiceOnHold","InvoiceReviewed","InvoiceRejected","InvoiceApprovalCodeChanged","InvoiceStarAdded","InvoiceStarRemoved","InvoiceDisputed","InvoiceVoided","InvoicePaid","ProposalCreated","ProposalOpen","ProposalApproved","ProposalOnHold","ProposalRejected","ProposalReviewed","ProposalUserAssigned","ProposalWorkOrderAssigned","ProposalAttachmentAdded","ProposalScheduled","ProposalVoided","ProposalPendingExternalApproval","FbInvitationAccepted","CalendarIntegrationAdded","CalendarIntegrationUpdated","LocationCreated","LocationUpdated","LocationDeleted","LocationNoteHeaderCreated","LocationNoteHeaderUpdated","LocationNoteHeaderDeleted","LocationNotesChanged","SubscriberTradeCreated","SubscriberTradeUpdated","SubscriberTradeDeleted","SubscriberPriorityCreated","SubscriberPriorityUpdated","SubscriberPriorityDeleted","SubscriberStatusCreated","SubscriberStatusUpdated","SubscriberStatusDeleted","SubscriberCategoryCreated","SubscriberCategoryUpdated","SubscriberCategoryDeleted","ProviderTradeAssigned","ProviderTradeUnassigned","LeakRecordCreated","LeakRecordUpdated","LeakRecordDeleted","CheckListResponseAdded","CheckListResponseUpdated","CheckListCreated","CheckListUpdated","CheckListDeleted","IssueListAssigned","AssetCreated","AssetUpdated"],"type":"string"},"Version":{"format":"int32","description":"Notification message format version","type":"integer"}}},"ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrderCheckInOut":{"type":"object","properties":{"CheckInNotes":{"type":"object","additionalProperties":{"type":"string"}},"Id":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"ProviderId":{"format":"int32","type":"integer"},"LocationId":{"format":"int32","type":"integer"},"CheckinAction":{"enum":["CheckIn","CheckOut"],"type":"string"},"WorkOrderId":{"format":"int32","type":"integer"},"Date":{"format":"date-time","type":"string"},"DateDTO":{"format":"date-time","type":"string"},"User":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.User"},"CallerId":{"type":"string"},"Action":{"type":"string"},"WorkType":{"type":"string"},"WorkorderStatus":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.WorkorderStatusDescriptor"},"ProviderName":{"type":"string"},"Trade":{"type":"string"},"Category":{"type":"string"},"Source":{"type":"string"},"TradeId":{"format":"int32","type":"integer"},"TechsCount":{"format":"int32","type":"integer"},"Location":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Location"}}},"ServiceChannel.Notifications.Objects.Location":{"type":"object","properties":{"StoreId":{"type":"string"},"Id":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"ShortName":{"type":"string"},"FullName":{"type":"string"},"Address1":{"type":"string"},"Address2":{"type":"string"},"Region":{"type":"string"},"District":{"type":"string"},"City":{"type":"string"},"State":{"type":"string"},"Country":{"type":"string"},"StoreOpen":{"format":"date-time","type":"string"},"StoreClose":{"format":"date-time","type":"string"},"Zip":{"type":"string"},"MainContact":{"type":"string"},"PhoneNumber":{"type":"string"},"FaxNumber":{"type":"string"},"FacilityManager":{"type":"string"},"Email":{"type":"string"},"NotesCount":{"format":"int32","type":"integer"},"LocationTypeId":{"format":"int32","type":"integer"},"LocationType":{"type":"string"},"Latitude":{"format":"double","type":"number"},"Longitude":{"format":"double","type":"number"},"TimeZoneId":{"type":"string"},"RetiredAllProvidersDate":{"format":"date-time","type":"string"},"RetiredLogin":{"type":"string"},"UpdatedUserName":{"type":"string"},"UpdatedDate":{"format":"date-time","type":"string"},"UpdatedLocationNotesUserName":{"type":"string"},"UpdatedLocationNotesDate":{"format":"date-time","type":"string"}}},"ServiceChannel.Services.Messaging.Location.ProviderTradeAssignmentNotificationObject":{"type":"object","properties":{"Object":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.ProviderTradeAssignment"},"Type":{"type":"string"},"Action":{"type":"string"},"EventType":{"type":"string"}}},"ServiceChannel.Notifications.Objects.ProviderTradeAssignment":{"type":"object","properties":{"ProviderId":{"format":"int32","type":"integer"},"TradedId":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"LocationIds":{"type":"array","items":{"format":"int32","type":"integer"}},"UpdatedBy":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.User"}}},"ServiceChannel.Services.Messaging.LocationNote.LocationNotesNotificationObject":{"type":"object","properties":{"Object":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.LocationNotes"},"Type":{"type":"string"},"Action":{"type":"string"},"EventType":{"type":"string"}}},"ServiceChannel.Notifications.Objects.LocationNotes":{"type":"object","properties":{"SubscriberId":{"format":"int64","type":"integer"},"LocationId":{"format":"int64","type":"integer"},"ChangedValues":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.LocationNoteValue"}},"User":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.User"}}},"ServiceChannel.Notifications.Objects.LocationNoteValue":{"type":"object","properties":{"Name":{"type":"string"},"Value":{"type":"string"}}},"ServiceChannel.Services.Messaging.LocationNote.ProposalNotificationObject":{"type":"object","properties":{"Object":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Proposal.Proposal"},"Type":{"type":"string"},"Action":{"type":"string"},"EventType":{"type":"string"}}},"ServiceChannel.Notifications.Objects.Proposal.Proposal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Number":{"type":"string"},"Description":{"type":"string"},"Comments":{"type":"string"},"Trade":{"type":"string"},"LocationId":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"ProviderId":{"format":"int32","type":"integer"},"WorkOrderId":{"format":"int32","type":"integer"},"WorkOrderNumber":{"type":"string"},"RfpId":{"format":"int32","type":"integer"},"CurrencyAlphabeticalCode":{"type":"string"},"CreatedBy":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.User"},"UpdatedBy":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.User"},"AssignedTo":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.User"},"RequestedBy":{"type":"string"},"ScheduledDate":{"format":"date-time","type":"string"},"Status":{"type":"string"},"Attachments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Attachment"}},"Amount":{"format":"double","type":"number"},"AmountCategories":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Proposal.Category"}},"Asset":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Proposal.Asset"}},"Category":{"type":"string"},"ProjectId":{"format":"int32","type":"integer"}}},"ServiceChannel.Notifications.Objects.Proposal.Category":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"TotalCost":{"format":"double","type":"number"}}},"ServiceChannel.Notifications.Objects.Proposal.Asset":{"type":"object","properties":{"Id":{"type":"string"},"Action":{"type":"string"},"Area":{"type":"string"},"BrandId":{"type":"string"},"TypeId":{"type":"string"},"IsNew":{"default":false,"type":"boolean"},"Attributes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Proposal.AssetAttribute"}}}},"ServiceChannel.Notifications.Objects.Proposal.AssetAttribute":{"type":"object","properties":{"Name":{"type":"string"},"Value":{"type":"string"}}},"ServiceChannel.Services.Broker.Models.Processing.ProposalResponse":{"type":"object","properties":{"ProposalId":{"type":"string"},"WarningMessage":{"type":"string"},"IsSuccess":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.AfterHours.BusinessHoursApiResponse":{"description":"Business hours object.","type":"object","properties":{"TimeZoneShortDescription":{"description":"Location’s timezone abbreviation.","type":"string"},"BusinessHours":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AfterHours.BusinessHourApiResponse"}}}},"ServiceChannel.Services.Messaging.AfterHours.BusinessHourApiResponse":{"type":"object","properties":{"DayOfWeek":{"description":"Day of the week.","type":"string"},"OpenTime":{"description":"Location opening hours.","type":"string"},"CloseTime":{"description":"Location closing hours.","type":"string"},"ClosedAllDay":{"description":"Defines whether the location is closed on the specified day.","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.AfterHours.UpdateLocationBusinessHoursApiModelRequest":{"description":"Request object to update business hours for a location.","type":"object","properties":{"businessHours":{"description":"Business hours details to add to the location.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AfterHours.LocationBusinessHoursApiModel"}}}},"ServiceChannel.Services.Messaging.AfterHours.LocationBusinessHoursApiModel":{"description":"Business hours object.","type":"object","properties":{"DayOfWeek":{"description":"Day of the week.","enum":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"type":"string"},"OpenTime":{"description":"Location opening hours.","type":"string"},"CloseTime":{"description":"Location closing hours.","type":"string"},"ClosedAllDay":{"description":"Defines whether the location is closed on the specified day.","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.AfterHours.HolidaysApiResponse":{"description":"Object containing the details of a location holiday.","type":"object","properties":{"TimeZoneShortDescription":{"description":"Location’s timezone abbreviation.","type":"string"},"Holidays":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.AfterHours.HolidayApiResponse"}}}},"ServiceChannel.Services.Messaging.AfterHours.HolidayApiResponse":{"type":"object","properties":{"HolidayName":{"description":"Holiday name.","type":"string"},"StartDate":{"format":"date-time","description":"Holiday date.","type":"string"},"OpenTime":{"description":"Location opening hours.","type":"string"},"CloseTime":{"description":"Location closing hours.","type":"string"},"ClosedAllDay":{"description":"Defines whether the location is closed on the specified day.","default":false,"type":"boolean"},"Frequency":{"description":"Defines how often the holiday occurs. Valid values: Singular, Weekly, Monthly, Yearly.","type":"string"},"RepeatEvery":{"format":"byte","description":"Defines intervals for the holiday to repeat. Valid values: a number from 1 to 60. Used in combination with the `Frequency` values: Yearly, Monthly, Weekly.","type":"string"},"RepeatBy":{"description":"Defines whether the holiday repeats on days of the month or week. Valid values: DaysOfWeek, DaysOfMonth.","type":"string"},"RepeatOnDays":{"description":"Days when the holiday occurs. Used in combination with the `Frequency` value ‘Weekly’.","type":"array","items":{"type":"string"}},"RepeatOnMonths":{"description":"Months when the holiday occurs. Used in combination with the `Frequency` value ‘Yearly’.","type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.AfterHours.AddHolidayApiModelRequest":{"description":"Object request to add a holiday to a location.","type":"object","properties":{"HolidayName":{"description":"Holiday name.","type":"string"},"OpenTime":{"description":"Location opening hours.","type":"string"},"CloseTime":{"description":"Location closing hours.","type":"string"},"ClosedAllDay":{"description":"Defines whether the location is closed on the specified day.","default":false,"type":"boolean"},"Frequency":{"description":"Defines how often the holiday occurs. Valid values: Singular, Weekly, Monthly, Yearly.","enum":["Weekly","Monthly","Yearly","Singular"],"type":"string"},"StartDate":{"format":"date-time","description":"Holiday date.","type":"string"},"RepeatEvery":{"format":"byte","description":"Defines intervals for the holiday to repeat. Valid values: a number from 1 to 60. Used in combination with the `Frequency` values: Yearly, Monthly, Weekly.","type":"string"},"RepeatBy":{"description":"Defines whether the holiday repeats on days of the month or week. Valid values: DaysOfWeek, DaysOfMonth","enum":["DayOfWeek","DayOfMonth"],"type":"string"},"RepeatOnDays":{"description":"Days when the holiday occurs. Used in combination with the `Frequency` value  ‘Weekly’.","type":"array","items":{"enum":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"type":"string"}},"RepeatOnMonths":{"description":"Months when the holiday occurs. Used in combination with the `Frequency` value  ‘Yearly’.","type":"array","items":{"enum":["January","February","March","April","May","June","July","August","September","October","November","December"],"type":"string"}}}},"ServiceChannel.Services.Messaging.AfterHours.HolidayIdsApiResponse":{"type":"object","properties":{"HolidayIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Landing.UserLandingData":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"ENearEta":{"format":"int32","type":"integer"},"EDispatchNotConfirmed":{"format":"int32","type":"integer"},"EDeclined":{"format":"int32","type":"integer"},"EProposalPending":{"format":"int32","type":"integer"},"EProposalPendingApproval":{"format":"int32","type":"integer"},"NeNearEta":{"format":"int32","type":"integer"},"NeDispatchNotConfirmed":{"format":"int32","type":"integer"},"NeDeclined":{"format":"int32","type":"integer"},"NeProposalPending":{"format":"int32","type":"integer"},"NeProposalPendingApproval":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Landing.UpdateSubscriberLandingPreferenceRequest":{"type":"object","properties":{"UserId":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"SelectedLocationNoteHeaderIds":{"type":"string"},"ThresholdEDispatchNotConfirmed":{"format":"int32","type":"integer"},"ThresholdEDispatchDeclined":{"format":"int32","type":"integer"},"ThresholdELateToArrive":{"format":"int32","type":"integer"},"ThresholdEWaitingForQuote":{"format":"int32","type":"integer"},"ThresholdEPendingApproval":{"format":"int32","type":"integer"},"ThresholdEPartsOnOrder":{"format":"int32","type":"integer"},"ThresholdNeDispatchNotConfirmed":{"format":"int32","type":"integer"},"ThresholdNeDispatchDeclined":{"format":"int32","type":"integer"},"ThresholdNeLateToArrive":{"format":"int32","type":"integer"},"ThresholdNeWaitingForQuote":{"format":"int32","type":"integer"},"ThresholdNePendingApproval":{"format":"int32","type":"integer"},"ThresholdNePartsOnOrder":{"format":"int32","type":"integer"},"ThresholdCompletedNotInvoiced":{"format":"int32","type":"integer"},"PriorityId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Announcements.GetUserAnnouncementsResponse":{"type":"object","properties":{"UserAnnouncements":{"$ref":"#/definitions/ServiceChannel.Api.Model.Entities.UserAnnouncements"},"ErrorCode":{"format":"int32","description":"Numeric identifier that determines the nature of an error. Possible values: `0` - success, otherwise - error.","type":"integer"},"Message":{"description":"Defines that the file’s remote storage is unavailable or its URL cannot be found.","type":"string"}}},"ServiceChannel.Api.Model.Entities.UserAnnouncements":{"type":"object","properties":{"ReadAnnouncements":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Entities.UserAnnouncement"}},"UnreadAnnouncements":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Entities.UserAnnouncement"}}}},"ServiceChannel.Api.Model.Entities.UserAnnouncement":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Title":{"type":"string"},"AnnouncementType":{"enum":["NonModal","Modal","SCProviderMobile"],"type":"string"},"CreatedDate":{"format":"date-time","type":"string"},"CreatedById":{"format":"int32","type":"integer"},"MessageBody":{"type":"string"},"CallToAction":{"type":"string"},"ImageLink":{"type":"string"},"UrlLink":{"type":"string"},"ImageName":{"type":"string"}}},"ServiceChannel.Services.Messaging.Assets.AssetResponse":{"description":"Object details of an asset.","type":"object","properties":{"Id":{"format":"int32","description":"Unique numeric asset identifier assigned by the system.","type":"integer"},"Tag":{"description":"Alphanumeric asset identifier assigned by the client.","type":"string"},"Manufacturer":{"description":"Company name that produces an asset.","type":"string"},"ModelNo":{"description":"Asset model number.","type":"string"},"SerialNo":{"description":"Asset serial number.","type":"string"},"LocationId":{"format":"int32","description":"Unique numeric identifier of a location an asset is assigned to.","type":"integer"},"Area":{"description":"Place where an asset is physically located.","type":"string"},"WorkOrderArea":{"description":"Work order area, such as *Dining Room*, *Kitchen*, *Storage*.","type":"string"},"StoreId":{"description":"Alphanumeric location identifier assigned by the client.","type":"string"},"Trade":{"description":"Trade of an asset type the asset is assigned to, for example, *HVAC*, *DOORS*, *ELECTRICAL*.","type":"string"},"TradeId":{"format":"int32","description":"Numeric identifier of the primary trade of an asset.","type":"integer"},"Type":{"description":"Asset type, for example, *Refrigerator*, *Computer Monitor*, etc.","type":"string"},"AssetTypeId":{"format":"int32","description":"Unique numeric identifier of an asset type.","type":"integer"},"BrandId":{"format":"int32","description":"Unique numeric identifier of a manufacturer that produces an asset.","type":"integer"},"InstallDate":{"description":"Date and time when an asset was installed at the current location.","type":"string"},"ManufacturerDate":{"format":"date-time","description":"Date and time when an asset was produced.","type":"string"},"ManufacturerDateStr":{"description":"Date and time when an asset was produced by the manufacturer.","type":"string"},"PurchaseDate":{"description":"Date and time when an asset was purchased.","type":"string"},"UsesRefrigerant":{"format":"int32","description":"Defines whether an asset uses a refrigerant.  **Possible values**: 0 - no, 1 - yes.","type":"integer"},"Active":{"description":"Shows whether an asset is still in use. **Possible values**: *true*, *false*.","default":false,"type":"boolean"},"IsLeased":{"description":"Defines whether an asset is leased. **Possible values**: *true*, *false*.","default":false,"type":"boolean"},"LifeExpectancy":{"format":"int32","description":"Estimated useful life of an asset in months.","type":"integer"},"OriginalValue":{"format":"double","description":"Original asset price.","type":"number"},"LeaseDate":{"description":"Date and time when a lease was signed.","type":"string"},"LeasePeriod":{"format":"int32","description":"Period of time in months a contracted lease is in place.","type":"integer"},"Condition":{"format":"int32","description":"Value representation of an asset condition. **Possible values**: `0` - *broken*, `25` - *poor*, `50` - *average*, `75` - *good*, `100` - *excellent*.","type":"integer"},"ConditionString":{"description":"Current condition of an asset. **Possible values**: *broken*, *poor*, *average*, *good*, *excellent*.","type":"string"},"EnergyEfficiency":{"description":"Provides information on energy efficiency of a particular asset. Maximum is 150 characters.","type":"string"},"Capacity":{"description":"Provides information on the maximum amount of the refrigerant an asset can contain. Maximum is 150 characters.","type":"string"},"HasLeakDetector":{"description":"Defines whether an asset has a leak detector and belongs to the Leak Detector asset type. **Possible values**: *true*, *false*.","default":false,"type":"boolean"},"AssetLeakDetectorConnectionId":{"format":"int32","description":"ID of the leak detector that is connected to an asset.","type":"integer"},"Location":{"description":"Place where an asset is physically located.","type":"string","readOnly":true},"Warranty":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.Warranty","description":"Object containing warranty parameters."},"IsReplaceEquipment":{"description":"Defines if the current asset is a replacement for another on condition that a tracking number is provided. **Possible values**: *true*, *false*.","default":false,"type":"boolean"},"HasTagged":{"description":"Defines if an asset contains ‘Asset Tag’.","default":false,"type":"boolean"},"LastModifiedUseDate":{"format":"date-time","description":"Date and time when an asset was last updated.","type":"string"},"LastModifiedUserName":{"description":"Name of the user who updated an asset.","type":"string"},"SubName":{"description":"Subscriber’s name who added an asset.","type":"string"},"AssetRefrigerant":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.AssetRefrigerant"},"AssetAttributesMap":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetAttributesMap"},"AssetTag":{"description":"Unique alphanumeric decoded value contained in a barcode, QR code, or NFC tag of an asset. It is used to scan assets via [ServiceChannel Mobile](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/575341308/Asset+Tagging#AssetTagging-AccessingtheAssetScanningModuleinSCMobile) and [ServiceChannel Provider](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1181745372/Scanning+and+Validating+Assets+via+SC+Provider+for+FTM+Internal+Techs).","type":"string"},"ImportedFrom":{"format":"int32","description":"Provides the number of the template an asset was imported from.","type":"integer"},"ParentId":{"format":"int32","description":"Unique numeric identification of an asset that has a circuit or component.","type":"integer"},"Description":{"description":"Comment created by a user when adding an asset.","type":"string"},"HasComponents":{"description":"Defines whether an asset has components. **Possible values**: *true*, *false*.","default":false,"type":"boolean"},"HasCircuits":{"description":"Defines if an asset has an added circuit. **Possible values**: *true*, *false*.","default":false,"type":"boolean"},"IsCircuit":{"description":"Defines whether an asset is a circuit. **Possible values**: *true*, *false*.","default":false,"type":"boolean"},"SubscriberId":{"format":"int32","description":"Unique numeric ID of the subscriber an asset belongs to.","type":"integer"},"AssetValidated":{"description":"Defines whether the asset has been validated by a technician.  **Possible values**: *true*, *false*.","default":false,"type":"boolean"},"ValidationRequired":{"description":"Defines whether an asset needs to be validated by a technician upon check-in.","default":false,"type":"boolean"},"IsLeakDetector":{"description":"Defines whether an asset belongs to the *Leak Detector* asset type.","default":false,"type":"boolean"},"AssetStatus":{"format":"byte","description":"Defines an asset repair status. **Possible values**: `0` - *In Use*, `1` - *Out For Repair*, `2` - *Replacement Recommended*, `3` - *Repaired*.","type":"string"},"AssetUpdatesStatus":{"format":"byte","description":"Defines the asset update status. **Possible values**: 0 - Attributes updated by provider, 1- New unconfirmed - asset created by provider, 2 - Rejected, 3 - Asset change confirmed.","type":"string"},"AdditionalTradesNames":{"description":"Names of the additional trades for an asset type.","type":"string"},"CreatedDate":{"format":"date-time","description":"Date and time of the asset creation.","type":"string"},"ModifiedDate":{"format":"date-time","description":"Date and time of the last asset update.","type":"string"},"AssetTypeGroupId":{"format":"int32","description":"Unique ID of an asset type group.","type":"integer"},"Spend":{"format":"double","description":"Total asset cost. Can be calculated if the *IncludeTotalCostOfOwnership* feature flag is enabled.","type":"number"},"IsCarbReporting":{"description":"Defines whether an asset is included in a CARB report. **Possible values**: *true*, *false*.","default":false,"type":"boolean"},"AssetValidationStatus":{"format":"int32","description":"","type":"integer"},"CustomAttributes":{"description":"Custom Attributes","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Equipments.EquipmentAttributeDescription"}},"HasChilds":{"description":"","default":false,"type":"boolean"},"Currency":{"format":"int32","type":"integer"},"ModifiedDateDto":{"format":"date-time","description":"ModifiedDate datetime offset","type":"string"},"RetiredDate":{"format":"date-time","description":"Date and time of the asset deactivation.","type":"string"}}},"ServiceChannel.Services.Messaging.Assets.Warranty":{"description":"Object containing warranty parameters.","type":"object","properties":{"ExpirationDate":{"format":"date-time","description":"Warranty expiration date based on the warranty expiration settings.","type":"string"},"ProviderId":{"format":"int32","description":"ID of a provider who is in charge of warranty services.","type":"integer"},"NTE":{"format":"double","description":"Maximum amount of money to be spent on warranty services in USD. Value -1  means that the amount is not applicable.","type":"number"},"Priority":{"description":"Defines how quickly warranty services should be provided, for example, *Emergency-4 Hours*, *Normal-48 Hours*, *7 Days*.","type":"string"},"Category":{"description":"Warranty category, for example, *ADVISE ONLY*, *REPAIR*, *DISASTER*.","type":"string"},"Provider":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.WarrantyProvider","description":"Rules to choose Warranty Provider"},"Expiration":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.WarrantyExpiration","description":"Rules for Warranty Expiration"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.AssetRefrigerant":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"AssetId":{"format":"int32","type":"integer"},"RefrigerantUsageType":{"format":"int32","type":"integer"},"RackId":{"type":"string"},"RackEntityId":{"format":"int32","type":"integer"},"CarbID":{"type":"string"},"IsCarbReporting":{"default":false,"type":"boolean"},"SystemLocation":{"format":"byte","type":"string"},"OperationalStatus":{"format":"byte","type":"string"},"RefrigerantPartNumber":{"type":"string"},"PartNumberId":{"format":"int32","type":"integer"},"RackTypeId":{"format":"int32","type":"integer"},"CurrentCharge":{"format":"double","type":"number"},"CurrentChargeMetrics":{"format":"double","type":"number"},"CurrentChargeOunces":{"format":"double","type":"number"},"ChargeDescriptionId":{"format":"int32","type":"integer"},"ChargeProviderName":{"type":"string"},"EffectiveChargeDate":{"format":"date-time","type":"string"},"RackTypeName":{"type":"string"},"UserId":{"format":"int32","type":"integer"},"TagId":{"type":"string"},"AssetTypeId":{"format":"int32","type":"integer"},"RefrigerantPurposeId":{"format":"int32","type":"integer"},"RefrigerantPurposeName":{"type":"string"},"ParentId":{"format":"int32","type":"integer"},"CreateOperationalStatusHistory":{"default":false,"type":"boolean"},"OperationStatusDate":{"format":"date-time","type":"string"},"HasLeakDetector":{"default":false,"type":"boolean"},"AssetLeakDetectorId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Assets.AssetAttributesMap":{"type":"object","properties":{"StandardAttributesMap":{"format":"int32","type":"integer"},"ViewableForProvidersAttributesMap":{"format":"int32","type":"integer"},"EditableForProvidersAttributesMap":{"format":"int32","type":"integer"},"RequiredStandardAttributesMap":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Equipments.EquipmentAttributeDescription":{"type":"object","properties":{"EquipmentAttributeId":{"format":"int32","type":"integer"},"EquipmentTypeAttributeId":{"format":"int32","type":"integer"},"ValueType":{"format":"int32","type":"integer"},"EquipmentId":{"format":"int32","type":"integer"},"Value":{"$ref":"#/definitions/System.Object"},"ValueText":{"type":"string"},"SelectedOptionsText":{"type":"string"},"Visible":{"default":false,"type":"boolean"},"Editable":{"default":false,"type":"boolean"},"Required":{"default":false,"type":"boolean"},"Name":{"type":"string"},"Custom":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Assets.WarrantyProvider":{"description":"Object containing warranty provider details.","type":"object","properties":{"Type":{"description":"Defines the provider type responsible for warranty services. **Possible values**: `0` - Fixed provider, `1`- Primary rank provider, `2` - Fixed rank provider.","enum":["Fixed","PrimaryRanked","FixedRanked"],"type":"string"},"Value":{"format":"int32","description":"Provider type value. Displays provider ID for the fixed provider type; provider rank number — from 1 to 100 — for the fixed rank type; 1 for a primary rank provider.","type":"integer"},"ProviderName":{"description":"Name of the provider who is in charge of warranty services.","type":"string"}}},"ServiceChannel.Services.Messaging.Assets.WarrantyExpiration":{"description":"Object containing warranty expiration details.","type":"object","properties":{"Type":{"description":"Warranty expiration calculation type. **Possible values**: 0 - the expiration date is calculated starting from the asset purchase data; 1 - the expiration date is calculated starting from the asset installation date.","enum":["FromPurchaseDate","FromInstallDate"],"type":"string"},"Period":{"format":"int32","description":"Warranty period in months.","type":"integer"}}},"ServiceChannel.Services.Messaging.Equipments.AssociateAssetRequest":{"type":"object","properties":{"AssetId":{"format":"int32","type":"integer"},"Code":{"type":"string"},"ProcessDuplicatedAssetTag":{"default":false,"type":"boolean"},"NeedUpdateRevision":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Equipments.SearchAssetRequest":{"type":"object","properties":{"LocationId":{"format":"int32","type":"integer"},"Code":{"type":"string"}}},"ServiceChannel.Services.Messaging.Assets.GetAssetsForReplacementRequest":{"type":"object","properties":{"StartIndex":{"format":"int32","type":"integer"},"PageSize":{"format":"int32","type":"integer"},"SearchValue":{"type":"string"},"AssetTypes":{"type":"array","items":{"format":"int32","type":"integer"}},"AssetId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Equipments.AssetComponentsRequest":{"type":"object","properties":{"ParentIds":{"type":"array","items":{"format":"int32","type":"integer"}},"OnlyRefrigerantTrackingAssets":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest":{"type":"object","properties":{"AssetIds":{"type":"array","items":{"format":"int32","type":"integer"}},"AssetStatuses":{"type":"array","items":{"format":"int32","type":"integer"}},"ParentIds":{"type":"array","items":{"format":"int32","type":"integer"}},"LocationIds":{"type":"array","items":{"format":"int32","type":"integer"}},"StoreIds":{"type":"array","items":{"type":"string"}},"AssetTypes":{"type":"array","items":{"format":"int32","type":"integer"}},"AssetTypeNames":{"type":"array","items":{"type":"string"}},"TradeIds":{"type":"array","items":{"format":"int32","type":"integer"}},"ProviderTrades":{"type":"array","items":{"type":"string"}},"Brands":{"type":"array","items":{"format":"int32","type":"integer"}},"TagIds":{"type":"array","items":{"type":"string"}},"ModelNumbers":{"type":"array","items":{"type":"string"}},"SerialNumbers":{"type":"array","items":{"type":"string"}},"LeakDetectorIds":{"type":"array","items":{"format":"int32","type":"integer"}},"WarantyExpirationDateFrom":{"format":"date-time","type":"string"},"WarrantyExpirationDateTo":{"format":"date-time","type":"string"},"InstallDeactivatedDateFrom":{"format":"date-time","type":"string"},"InstallDeactivatedDateTo":{"format":"date-time","type":"string"},"DeactivatedDateFrom":{"format":"date-time","type":"string"},"DeactivatedDateTo":{"format":"date-time","type":"string"},"InstallDateFrom":{"format":"date-time","type":"string"},"InstallDateTo":{"format":"date-time","type":"string"},"PurchaseDateFrom":{"format":"date-time","type":"string"},"PurchaseDateTo":{"format":"date-time","type":"string"},"LeaseDateFrom":{"format":"date-time","type":"string"},"LeaseDateTo":{"format":"date-time","type":"string"},"CreatedDateFrom":{"format":"date-time","type":"string"},"CreatedDateTo":{"format":"date-time","type":"string"},"ModifiedDateFrom":{"format":"date-time","type":"string"},"ModifiedDateTo":{"format":"date-time","type":"string"},"SortField":{"enum":["None","AssetType","Trade","Brand","LastUpdatedDate","AssetTag","ModelNo","SerialNo","Location"],"type":"string"},"SortDirection":{"type":"string"},"IsWoDateNecessary":{"default":false,"type":"boolean"},"RefrigerantOnly":{"default":false,"type":"boolean"},"IncludeDeactivated":{"default":false,"type":"boolean"},"DeactivatedOnly":{"default":false,"type":"boolean"},"HasCircuits":{"default":false,"type":"boolean"},"IsCircuit":{"default":false,"type":"boolean"},"HasComponents":{"default":false,"type":"boolean"},"IsComponent":{"default":false,"type":"boolean"},"HasAssetTag":{"default":false,"type":"boolean"},"ChronicLeakRate":{"default":false,"type":"boolean"},"StartIndex":{"format":"int32","type":"integer"},"PageSize":{"format":"int32","type":"integer"},"Conditions":{"type":"array","items":{"format":"int32","type":"integer"}},"AssetUpdatesStatuses":{"type":"array","items":{"format":"int32","type":"integer"}},"SearchAdditionalTrades":{"default":false,"type":"boolean"},"IsLeakDetector":{"default":false,"type":"boolean"},"IncludeRetiredContracts":{"default":false,"type":"boolean"},"SearchByText":{"type":"string"},"SubscriberId":{"format":"int32","type":"integer"},"AssetTypeGroupIds":{"type":"array","items":{"format":"int32","type":"integer"}},"AssetTags":{"type":"array","items":{"type":"string"}},"Districts":{"type":"array","items":{"type":"string"}},"Regions":{"type":"array","items":{"type":"string"}},"Countries":{"type":"array","items":{"format":"int32","type":"integer"}},"States":{"type":"array","items":{"format":"int32","type":"integer"}},"LocationNames":{"type":"array","items":{"type":"string"}},"Cities":{"type":"array","items":{"type":"string"}},"AssetStatus":{"format":"byte","type":"string"},"AssetUpdatesStatus":{"format":"byte","type":"string"},"RecIds":{"type":"array","items":{"format":"int32","type":"integer"}},"UncategorizedOnly":{"default":false,"type":"boolean"},"WarrantyStatuses":{"type":"array","items":{"format":"int32","type":"integer"}},"ExternalSubscriberIds":{"type":"array","items":{"format":"int32","type":"integer"}},"IncludeTotalCostOfOwnership":{"default":false,"type":"boolean"},"AssetValidationStatuses":{"type":"array","items":{"format":"int32","type":"integer"}},"IncludeCustomAttributes":{"default":false,"type":"boolean"},"WithoutCircuitsOnly":{"default":false,"type":"boolean"},"LocationNotes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetLocationNote"}},"WithoutAssetTags":{"default":false,"type":"boolean"},"SubscriberIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Assets.AssetLocationNote":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Header":{"type":"string"},"Note":{"type":"string"}}},"ServiceChannel.Services.Messaging.Assets.AssetsInfoResponse":{"type":"object","properties":{"Assets":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetResponse"}},"AssetRequired":{"default":false,"type":"boolean"},"AssetEntry":{"type":"string"}}},"ServiceChannel.Services.Messaging.Assets.AssetsResponseTreeNode":{"type":"object","properties":{"Asset":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetResponse"},"Circuits":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetsResponseTreeNode"}},"Components":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetResponse"}}}},"ServiceChannel.Services.Messaging.Workorders.WorkOrder":{"description":"Workorder object for Messages exchenge.","type":"object","properties":{"Id":{"format":"int32","description":"Work Order identifier.","type":"integer"},"Number":{"description":"Work Order Number","type":"string"},"PurchaseNumber":{"description":"Purchase number of work order","type":"string"},"Subscriber":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.Subscriber","description":"Subscriber info"},"Provider":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.Provider","description":"Provider info"},"Location":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.Location","description":"Location info"},"LocationId":{"format":"int32","description":"LocationId for use in ODATA calls without expanding Location property (ref. PLAT-55878)","type":"integer"},"Status":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkorderStatusDescriptor","description":"Workorder Status"},"IssueTicketInfo":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.IssueTicketInformation","description":"Issue ticket info"},"Caller":{"description":"Caller","type":"string"},"CreatedBy":{"type":"string"},"CallDate":{"format":"date-time","type":"string"},"CallDate_DTO":{"format":"date-time","type":"string"},"ReassignDate":{"format":"date-time","type":"string"},"ReassignDate_DTO":{"format":"date-time","type":"string"},"LocationOpenDate":{"type":"string"},"LocationRemodelDate":{"type":"string"},"EstimatedCompletionDate":{"format":"date-time","type":"string"},"Priority":{"type":"string"},"Trade":{"type":"string"},"TradeId":{"format":"int32","type":"integer"},"ProviderRank":{"format":"int32","type":"integer"},"ApprovalCode":{"type":"string"},"ScheduledDate":{"format":"date-time","type":"string"},"ScheduledDate_DTO":{"format":"date-time","type":"string"},"CompletedDate":{"format":"date-time","type":"string"},"CompletedDate_DTO":{"format":"date-time","type":"string"},"ExpirationDate":{"format":"date-time","description":"Gets or sets ExpirationDate.","type":"string"},"ExpirationDate_DTO":{"format":"date-time","type":"string"},"OriginalEta":{"format":"date-time","type":"string"},"OriginalEta_DTO":{"format":"date-time","type":"string"},"UpdatedDate":{"format":"date-time","description":"Updated Date","type":"string"},"UpdatedDate_DTO":{"format":"date-time","type":"string"},"CreatedDate":{"format":"date-time","description":"s\r\n            Created Date","type":"string"},"CreatedDate_DTO":{"format":"date-time","type":"string"},"Description":{"type":"string"},"CategoryId":{"format":"int32","type":"integer"},"Category":{"type":"string"},"Nte":{"format":"double","type":"number"},"Tax":{"format":"double","description":"Tax","type":"number"},"Tax2":{"format":"double","description":"Tax2","type":"number"},"Tax2Type":{"description":"Tax2Type","type":"string"},"Price":{"format":"double","description":"Price (subtotal)","type":"number"},"Currency":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Currencies.Currency"},"ProblemCode":{"type":"string"},"Invoice":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.Invoice"},"Resolution":{"type":"string"},"Asset":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetResponse"},"Assets":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetResponse"}},"AssetCount":{"format":"int32","type":"integer"},"Attachments":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.AttachmentsDescriptor"},"Notes":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notes.NotesDescriptor"},"PostedId":{"format":"int32","description":"Gets or sets PostedId.","type":"integer"},"LinkedWorkOrders":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IdentityObject"}},"LinkedInWorkOrders":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IdentityObject"}},"IsCheckInDenied":{"description":"Gets or sets a value indicating whether IsDenied.","default":false,"type":"boolean"},"CheckInDeniedReason":{"description":"Gets or sets Reason.","type":"string"},"RecallWorkOrder":{"format":"int32","description":"Recall WorkOrder Id","type":"integer"},"IsInvoiced":{"description":"Gets or sets IsInvoiced.","default":false,"type":"boolean","readOnly":true},"IsExpired":{"description":"Gets or sets IsExpired.","default":false,"type":"boolean"},"IsEnabledForMobile":{"description":"Gets or sets value that allowed clients to manage their vendors to participate in the mobile App process.","default":false,"type":"boolean"},"HasWorkActivity":{"default":false,"type":"boolean"},"Source":{"type":"string"},"ClosingAuthorizationNumber":{"format":"int32","type":"integer"},"CallerId":{"format":"int32","type":"integer"},"AutoComplete":{"default":false,"type":"boolean"},"Labels":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Workorders.WorkOrderLabel"}},"AutoInvoice":{"default":false,"type":"boolean"},"Assignee":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.AssigneeUser"},"ProjectId":{"format":"int32","type":"integer"},"FrequencyId":{"format":"int32","type":"integer"},"ServiceId":{"format":"int32","type":"integer"},"WeatherEvent":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WeatherEvent"}}},"ServiceChannel.Services.Messaging.Subscribers.Subscriber":{"required":["Name"],"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"ShortName":{"type":"string"},"Email":{"type":"string"},"Users":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.User"}},"PrimaryCurrency":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Currencies.Currency"},"IsOutsourcedWorkOn":{"default":false,"type":"boolean"},"Name":{"description":"Required Name\r\n            Name - name of the subscriber","type":"string"},"Address1":{"description":"Optional","type":"string"},"Address2":{"description":"Optional","type":"string"},"Country":{"description":"Optional","type":"string"},"State":{"description":"Optional","type":"string"},"City":{"description":"Optional","type":"string"},"Zip":{"description":"Optional","type":"string"},"Phone":{"description":"Optional","type":"string"},"Fax":{"description":"Optional","type":"string"},"ContactName":{"description":"Optional","type":"string"},"TimeFormat":{"type":"string"},"DateFormat":{"type":"string"},"DecimalSeparator":{"type":"string"}}},"ServiceChannel.Services.Messaging.Providers.Provider":{"type":"object","properties":{"Phone":{"type":"string"},"FullName":{"description":"Full Name","type":"string"},"Address1":{"description":"Address1","type":"string"},"Address2":{"description":"Adress2","type":"string"},"City":{"description":"City","type":"string"},"State":{"description":"State","type":"string"},"Zip":{"description":"Zip","type":"string"},"Country":{"description":"Country","type":"string"},"MainContact":{"description":"Main Contact","type":"string"},"DateCreated":{"format":"date-time","description":"Date Created","type":"string"},"LastUserDate":{"description":"Last User Date","type":"string"},"SuperUser":{"description":"SuperUser","type":"string"},"WebSite":{"description":"WebSite","type":"string"},"Email":{"description":"Email","type":"string"},"TaxId":{"description":"Tax Id","type":"string"},"Trade":{"description":"Trade","type":"string"},"ProcessingEmail":{"description":"Processing Email","type":"string"},"FaxNumber":{"description":"Fax Number","type":"string"},"SuiteFloor":{"description":"Suite Floor","type":"string"},"MailInfo":{"description":"Mail Info","type":"string"},"ImageFile":{"description":"Image File","type":"string"},"ReturnMail":{"description":"Return Mail","type":"string"},"MailFrequency":{"format":"int32","description":"Mail Frequency","type":"integer"},"FormId":{"format":"int32","description":"Form Id","type":"integer"},"Pager":{"description":"Pager","type":"string"},"NightRequest":{"format":"int32","description":"NightRequest","type":"integer"},"ShortFormatEmail":{"description":"Short Format Email","type":"string"},"LastTrainingDate":{"format":"date-time","description":"Last Training Date","type":"string"},"LastTrainingDateStr":{"description":"Last Training Date as a string","type":"string"},"IsInternal":{"description":"Is Internal","default":false,"type":"boolean"},"IsOnOffShoreFeatureEnabled":{"description":"Is OnOffShoreFeature Enabled","default":false,"type":"boolean"},"Id":{"format":"int32","description":"Id","type":"integer"},"Name":{"description":"Name","type":"string"},"DoNotDispatch":{"description":"DoNotDispatch enabled?","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Location.Location":{"description":"General location details object.","type":"object","properties":{"Id":{"format":"int32","description":"Unique location identifier.","type":"integer"},"SubscriberId":{"format":"int32","description":"Unique subscriber identifier.","type":"integer"},"SubscriberName":{"type":"string"},"StoreId":{"description":"Alphanumeric identifier of the store in the client's system. Assigned by and unique per subscriber.","type":"string"},"Name":{"description":"Location name.","type":"string"},"ShortName":{"description":"Shortened location name.","type":"string"},"Latitude":{"format":"double","description":"Global position. Latitude.","type":"number"},"Longitude":{"format":"double","description":"Global position. Longitude.","type":"number"},"Distance":{"format":"double","description":"Distance from GPS coordinate to this location","type":"number"},"Radius":{"format":"double","description":"GPS radius for the location.","type":"number"},"LocationTypeId":{"format":"int32","description":"Numeric identifier of the location type.","type":"integer"},"Address1":{"description":"Additional location address.","type":"string"},"Address2":{"description":"Main location address.","type":"string"},"City":{"description":"Location city.","type":"string"},"State":{"description":"State where the location is situated.","type":"string"},"StateId":{"format":"int32","description":"Numeric identifier of the location’s state.","type":"integer"},"Region":{"description":"Part of the country where the location is situated.","type":"string"},"District":{"description":"Abbreviation of the town or country area where the location is situated.","type":"string"},"Zip":{"description":"Location ZIP or postal code.","type":"string"},"Country":{"description":"Abbreviation of the country name where the location is situated.","type":"string"},"CountryId":{"format":"int32","description":"Numeric identifier of the country of the location.","type":"integer"},"ClosedDate":{"format":"date-time","description":"Last day when the location is open for business.","type":"string"},"OpenDate":{"format":"date-time","description":"First day when the location is open for business.","type":"string"},"Status":{"description":"Status of the location. Possible values: *open*, *closed*.","type":"string"},"Email":{"description":"Email the location can be contacted at.","type":"string"},"FaxNumber":{"description":"Fax number the location can be contacted at.","type":"string"},"Phone":{"description":"Contact phone number of the location.","type":"string"},"Contact":{"description":"Name of the main person to contact at the location.","type":"string"},"HasInventory":{"description":"Indicates whether it’s an inventory location or not. Possible values: *true*, *false*.","default":false,"type":"boolean"},"SquareValue":{"format":"double","description":"Square value of the facility.","type":"number"},"SquareMeasure":{"description":"Unit or system of units for measuring location area.","type":"string"},"TimeZoneInfoId":{"format":"int32","description":"Numeric identifier of the location time zone.","type":"integer"},"TimeZoneShortDescription":{"description":"Location time zone abbreviation.","type":"string"},"TimeZoneMsName":{"description":"Location time zone Microsoft Name. e.g \"Eastern Standard Time\"","type":"string"},"TimeZoneIanaName":{"description":"Location time zone Iana Name. e.g. \"America/New_York\"","type":"string"},"TypeLabel":{"description":"[Inventory location type](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1209106525/Creating+Inventory+Locations?preview=%2F1209106525%2F1205830388%2FSupply-House-Type.png). Possible values: *Location*, *Warehouse*, *Supply House*, *Truck*.","type":"string"},"Supplier":{"description":"Supplier’s location name.","type":"string"},"CountyId":{"format":"int32","description":"County numeric identifier.","type":"integer"},"Notes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.LocationNote.LocationNote"}},"TimeShiftToEST":{"format":"int32","type":"integer"},"AddressTypeId":{"format":"int32","description":"Address format pattern Id","type":"integer"},"FormattedAddress":{"type":"string"},"LocationFormattedAddressTail":{"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.WorkorderStatusDescriptor":{"type":"object","properties":{"Primary":{"description":"Primary work order status value, you can pass status id or its name here. To get all subscriber's statuses see [Statuses] in Statuses section","type":"string"},"Extended":{"description":"Extended status value","type":"string"},"CanCreateInvoice":{"description":"True if invoice creation is allowed","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.IssueLists.IssueTicketInformation":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"AreaId":{"format":"int32","type":"integer"},"AreaName":{"type":"string"},"ProblemGroup":{"type":"string"},"Equipment":{"type":"string"},"ProblemCode":{"type":"string"},"TicketType":{"type":"string"},"SetupId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Currencies.Currency":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"AlphabeticalCode":{"type":"string"},"DecimalCount":{"format":"int32","type":"integer"},"Entity":{"type":"string"},"CurrencyName":{"type":"string"},"NumericCode":{"type":"string"},"Rate":{"format":"double","type":"number"}}},"ServiceChannel.Services.Messaging.Invoices.Invoice":{"type":"object","properties":{"Provider":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.Provider","description":"Gets or sets Provider."},"Subscriber":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.Subscriber","description":"Gets or sets Subscriber."},"Location":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.Location","description":"Gets or sets Location."},"Id":{"format":"int32","type":"integer"},"Number":{"description":"Gets or sets invoice number.","type":"string"},"BatchNumber":{"description":"Gets or sets Batch number.","type":"string"},"InvoiceTax":{"format":"double","type":"number"},"PostedTaxRate":{"format":"float","type":"number"},"PostedTax2Rate":{"format":"float","type":"number"},"VendorPayeeId":{"format":"int32","type":"integer"},"InvoiceTotal":{"format":"double","description":"Gets or sets total with tax amounts.","type":"number"},"InvoiceBalance":{"format":"double","type":"number"},"Currency":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Currencies.Currency"},"ApprovedDate":{"format":"date-time","type":"string"},"ApprovalCode":{"type":"string"},"EditableAdditionalApprovalCode":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ApprovalCodes.EditableAdditionalApprovalCode"},"PostedDate":{"format":"date-time","type":"string"},"PostedBy":{"type":"string"},"Subtotal":{"format":"double","type":"number"},"Status":{"type":"string"},"Trade":{"type":"string"},"InvoiceAmountsDetails":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceAmountsDetails"},"InvoiceTaxesDetails":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceTaxesDetails"},"Tax2Details":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.Tax2Details"},"Labors":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceLabor"}},"Materials":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceMaterial"}},"Travels":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceTravel"}},"Others":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceOther"}},"TaxApprovalCodeGroups":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup"}},"Tax2ApprovalCodeGroups":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup"}},"FreightApprovalCodeGroups":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup"}},"WithMismatchedRates":{"default":false,"type":"boolean"},"IsOutsourced":{"default":false,"type":"boolean"},"StarredBy":{"type":"string"},"IsStarred":{"default":false,"type":"boolean"},"IsTransferred":{"default":false,"type":"boolean","readOnly":true},"StarredDate":{"format":"date-time","type":"string"},"Description":{"type":"string"},"InvoiceDate":{"format":"date-time","type":"string"},"LaborTaxIncluded":{"default":false,"type":"boolean"},"TravelTaxIncluded":{"default":false,"type":"boolean"},"MaterialsTaxIncluded":{"default":false,"type":"boolean"},"FreightTaxIncluded":{"default":false,"type":"boolean"},"OtherTaxIncluded":{"default":false,"type":"boolean"},"NonTaxableLabor":{"format":"int32","type":"integer"},"NonTaxableTravel":{"format":"int32","type":"integer"},"NonTaxableMaterial":{"format":"int32","type":"integer"},"NonTaxableFreight":{"format":"int32","type":"integer"},"NonTaxableOther":{"format":"int32","type":"integer"},"IsExists":{"default":false,"type":"boolean","readOnly":true},"StatusChangeDate":{"format":"date-time","type":"string"},"StatusChangeUser":{"type":"string"},"StatusChangeUserid":{"type":"string"},"IsDuplicate":{"default":false,"type":"boolean"},"WoTrackingNumber":{"format":"int32","description":"Gets or sets work order tracking number.","type":"integer"},"Terms":{"description":"terms","type":"string"},"Comments":{"type":"string"},"PaidDate":{"format":"date-time","type":"string"},"TransferredDate":{"format":"date-time","type":"string"},"LastActionDate":{"format":"date-time","type":"string"},"UpdatedDate":{"format":"date-time","description":"Updated Date","type":"string"},"StatusHistoryShort":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.StatusHistoryShort"}},"WoAssignedTo":{"description":"Gets or sets WO Assignee","type":"string"},"ApprovalCodes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCode"}},"IsChargesApprovalCodesDefault":{"default":false,"type":"boolean"},"Payments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentResponse"}},"StoredFeatures":{"type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.Attachments.AttachmentsDescriptor":{"type":"object","properties":{"Count":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CountDescriptor"}}},"ServiceChannel.Services.Messaging.Notes.NotesDescriptor":{"type":"object","properties":{"Last":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notes.NoteInfo"},"Count":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CountDescriptor"}}},"ServiceChannel.Services.Messaging.IdentityObject":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"}}},"ServiceChannel.Api.Model.Workorders.WorkOrderLabel":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Label":{"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.AssigneeUser":{"type":"object","properties":{"UserId":{"format":"int32","type":"integer"},"UserName":{"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.WeatherEvent":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"}}},"ServiceChannel.Services.Messaging.Users.User":{"description":"User details object.","type":"object","properties":{"Id":{"format":"int32","description":"Unique user identifier.","type":"integer"},"SubscriberId":{"format":"int32","description":"Unique subscriber ID.","type":"integer"},"UserName":{"description":"Username of the user.<br /> • For subscriber users, the username appears as **User Id** on the \"General Info\" tab of the user profile page.<br /> • For provider users, the username is listed as **UserID** under \"Access\" on the \"General\" tab of the user profile page.","pattern":"^$|(\\A\\S+).(\\S).(\\S)\\z","type":"string"},"FullName":{"description":"Full name of the user.<br /> • For subscriber users, the full name appears as **User Name** on the \"General Info\" tab of the user profile page.<br /> • For provider users, you can see their first and last name under \"Basic\" on the \"General\" tab of the user profile page.","type":"string"},"Email":{"description":"User’s email address.","type":"string"},"PsmEmail":{"description":"Email address through which a user can reset their password.","type":"string"},"Disabled":{"description":"Defines if a user is deactivated.","default":false,"type":"boolean"},"Roles":{"description":"Secondary roles assigned to a subscriber user that determine their permissions and level of access to various Service Automation modules.","type":"array","items":{"type":"string"}},"Permissions":{"description":"Permissions assigned to a subscriber user that determine whether they have full or read-only access to various Service Automation modules.","type":"array","items":{"type":"string"}},"UserType":{"description":"Subscriber user type defining their level of access to ServiceChannel:<br /> • `Corporate` — a user can work in Service Automation.<br /> • `Dashboard` — a user can only access the dashboard assigned to them.<br />`0` is returned for provider users.","enum":["Corporate","Dashboard","ServiceChannel"],"type":"string"},"Dashboard":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.DashboardInfo","description":"Dashboard a subscriber user has access to."},"Access":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.AccessOptions","description":"List of locations, districts, regions, and trades a subscriber user has access to."},"Limits":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.LimitOptions","description":"NTE, proposal, and invoice limits set for a subscriber user."},"FeedRole":{"type":"string"},"MliUserInfo":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.MliUserInfo","description":""},"MlpUserInfo":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.MlpUserInfo"}}},"ServiceChannel.Services.Messaging.LocationNote.LocationNote":{"description":"Object with the location note details.","type":"object","properties":{"Id":{"format":"int32","description":"Location note numeric identifier.","type":"integer"},"HeaderId":{"format":"int32","description":"Unique location note header identifier.","type":"integer"},"Value":{"description":"Location note content.","type":"string"},"Header":{"description":"Name of the note.","type":"string"}}},"ServiceChannel.Services.Messaging.ApprovalCodes.EditableAdditionalApprovalCode":{"type":"object","properties":{"Header":{"type":"string"},"Value":{"type":"string"},"SetupId":{"format":"int32","type":"integer"},"LocationId":{"format":"int32","type":"integer"},"DefaultOptionId":{"format":"int32","type":"integer"},"ValueFormat":{"format":"int32","type":"integer"},"EditableAtLineItemLevel":{"format":"int32","type":"integer"},"Options":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ApprovalCodes.AdditionalApprovalCodeOption"}},"DefaultValue":{"type":"string","readOnly":true}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceAmountsDetails":{"description":"Object containing the list of the invoice charges.","type":"object","properties":{"LaborAmount":{"format":"double","description":"Amount of the labor charge. Must equal `Labors.Amount`.","type":"number"},"MaterialAmount":{"format":"double","description":"Amount of the material charge. Must equal `Materials.Amount`.","type":"number"},"TravelAmount":{"format":"double","description":"Amount of the trip charge.","type":"number"},"FreightAmount":{"format":"double","description":"Amount of the freight charge.","type":"number"},"OtherAmount":{"format":"double","description":"Amount of other charges. When you add this parameter, also specify `InvoiceAmountsDetails.OtherDescription`.","type":"number"},"OtherDescription":{"type":"string"}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceTaxesDetails":{"description":"Object containing the list of taxes. You can add taxes as a fixed amount or as a percentage.","type":"object","properties":{"LaborTaxPercent":{"format":"double","description":"Amount of the labor tax in percentage (for countries other than USA and Canada).","type":"number"},"MaterialTaxPercent":{"format":"double","description":"Amount of the material tax in percentage (for countries other than USA and Canada).","type":"number"},"TravelTaxPercent":{"format":"double","description":"Amount of the travel tax in percentage (for countries other than USA and Canada).","type":"number"},"FreightTaxPercent":{"format":"double","description":"Amount of the freight tax in percentage (for countries other than USA and Canada).","type":"number"},"OtherTaxPercent":{"format":"double","description":"Amount of other taxes in percentage (for countries other than USA and Canada).","type":"number"},"LaborTax":{"format":"double","description":"Amount of the labor tax.","type":"number"},"MaterialTax":{"format":"double","description":"Amount of the material tax.","type":"number"},"TravelTax":{"format":"double","description":"Amount of the travel tax.","type":"number"},"FreightTax":{"format":"double","description":"Amount of the freight tax.","type":"number"},"OtherTax":{"format":"double","description":"Amount of other taxes.","type":"number"}}},"ServiceChannel.Services.Messaging.Invoices.Tax2Details":{"description":"Information on the additional tax. Only Canadian or European locations can have Tax2Details.","type":"object","properties":{"Tax2Amount":{"format":"double","description":"Amount of the additional tax.","type":"number"},"Tax2Name":{"description":"Name of the additional tax, for example, *VAT*, *HST*, *PST*, or *QST*.","type":"string"}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceLabor":{"description":"Information on labor. Add a separate object for each worker. When two or more workers have the same `SkillLevel`,`LaborType`, and `HourlyRate`, use one object and specify `NumOfTech`.","type":"object","properties":{"Id":{"format":"int32","type":"integer"},"InvoiceId":{"format":"int32","description":"Invoice identifier.","type":"integer"},"SkillLevel":{"format":"byte","description":"The skill level of a worker. Valid values: `1` - Supervisor, `2` - Technician, `3` - Helper.","type":"string"},"LaborType":{"format":"byte","description":"The type of the pay rate. Valid values: `1` - Regular, `2` - Overtime, `3` - Double time.","type":"string"},"NumOfTech":{"format":"byte","description":"Number of workers.","type":"string"},"HourlyRate":{"format":"double","description":"Worker hourly rate.","type":"number"},"Hours":{"format":"double","description":"Total hours the worker spent to complete the work order.","type":"number"},"Amount":{"format":"double","description":"The amount of the labor charge. The sum of all `Amount` parameters in the `Labors` array must equal `InvoiceAmountsDetails.LaborAmount`.","type":"number"},"IsOffShore":{"description":"Type of the shore (`1` - Onshore, `2` - Offshore).","default":false,"type":"boolean"},"ServiceType":{"format":"byte","description":"Type of the service (`1` - Design Engineering, Architecture, Technical Service, `2` - Installation and Supervision, `3` - Survey and Troubleshooting).","type":"string"},"CityPerformed":{"description":"City where services are performed.","type":"string"},"RateDiscrepancyReason":{"description":"Rate discrepancy reason.","type":"string"},"AgreedRate":{"format":"double","description":"Agreed rate.","type":"number"},"ApprovalCodeGroup":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup"},"IsRateDiscrepancy":{"default":false,"type":"boolean","readOnly":true},"isNontaxableVATEU":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceMaterial":{"description":"Information on the materials used. Add a separate object for each material.","type":"object","properties":{"Id":{"format":"int32","type":"integer"},"InvoiceId":{"format":"int32","description":"Invoice identifier.","type":"integer"},"Description":{"description":"Name or description of the material. Length limit is 100 symbols.","type":"string"},"PartNum":{"description":"Part, serial, or manufacturer number of the material. Length limit is 100 symbols.","type":"string"},"UnitType":{"format":"byte","description":"Unit of measurement. Valid values: 1 — Each; 2 — Box; 3 — Feet; 4 — Sqft; 5 — Lbs; 6 — Gal; 7 — Oz. Default value: 1.","type":"string"},"UnitPrice":{"format":"double","description":"Price per unit.","type":"number"},"PartName":{"description":"Part name.","type":"string"},"MarkUpPercent":{"format":"double","description":"Markup percent.","type":"number"},"AgreedMarkUpPercent":{"format":"double","description":"Agreed markup percent.","type":"number"},"MarkUpDiscrepancyReason":{"description":"Mark up discrepancy reason.","type":"string"},"AgreedPartPrice":{"format":"double","description":"Agreed part price.","type":"number"},"Quantity":{"format":"double","description":"Quantity of the material.","type":"number"},"Amount":{"format":"double","description":"The amount of the material cost. The sum of all `Amount` parameters in the `Materials` array must equal `InvoiceAmountsDetails.MaterialAmount`.","type":"number"},"ApprovalCodeGroup":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup"},"IsMarkUpDiscrepancy":{"description":"Markup discrepancy.","default":false,"type":"boolean"},"IsPartPriceDiscrepancy":{"description":"Part price discrepancy.","default":false,"type":"boolean"},"PriceDiscrepancyReason":{"description":"Price discrepancy reason.","type":"string"},"IsRateDiscrepancy":{"default":false,"type":"boolean","readOnly":true},"isNontaxableVATEU":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceTravel":{"description":"Information on the trip.","type":"object","properties":{"Id":{"format":"int32","type":"integer"},"InvoiceId":{"format":"int32","description":"Invoice identifier.","type":"integer"},"Description":{"description":"Description of the trip.","type":"string"},"UnitType":{"format":"byte","description":"Unit of measurement.","type":"string"},"UnitPrice":{"format":"double","description":"Price per unit.","type":"number"},"Quantity":{"format":"double","description":"Quantity.","type":"number"},"Amount":{"format":"double","description":"The amount of the trip cost. The sum of all `Amount` parameters in the `Travels` array must equal `InvoiceAmountsDetails.TravelAmount`.","type":"number"},"IsOffShore":{"description":"Type of the shore (`1` - Onshore, `2` - Offshore).","default":false,"type":"boolean"},"ApprovalCodeGroup":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup"},"isNontaxableVATEU":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceOther":{"description":"The invoices material","type":"object","properties":{"Id":{"format":"int32","type":"integer"},"InvoiceId":{"format":"int32","description":"Invoice identifier.","type":"integer"},"Description":{"description":"Get or set description.","type":"string"},"Type":{"description":"Get or set type of charge.","type":"string"},"Amount":{"format":"double","description":"Get or set the amount of money that is charged.","type":"number"},"UnitType":{"format":"byte","description":"Get or set the unit of measure","type":"string"},"UnitPrice":{"format":"double","description":"Get or set the price of unit","type":"number"},"Quantity":{"format":"double","description":"Get or set the quantity","type":"number"},"AgreedUnitPrice":{"format":"double","description":"Get or set the AgreedUnitPrice","type":"number"},"UnitPriceDiscrepancyReason":{"description":"UnitPriceDiscrepancyReason","type":"string"},"PriceListOtherChargeId":{"format":"int32","description":"Get or set the PriceListOtherChargeId","type":"integer"},"IsUnitPriceDiscrepancy":{"description":"Get IsUnitPriceDiscrepancy","default":false,"type":"boolean","readOnly":true},"ApprovalCodeGroup":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup"},"isNontaxableVATEU":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup":{"type":"object","properties":{"ApprovalCodeType":{"enum":["Labor","Travel","Material","Freight","Other","Tax","Tax2","LineItem","FreightGenerated"],"type":"string"},"ApprovalCode":{"type":"string"},"AdditionalApprovalCode":{"type":"string"},"Amount":{"format":"double","type":"number"},"ApprovalCodes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeChild"}}}},"ServiceChannel.Services.Messaging.Invoices.StatusHistoryShort":{"type":"object","properties":{"CreatedBy":{"type":"string"},"CreatedById":{"format":"int32","type":"integer"},"Status":{"type":"string"},"InvId":{"format":"int32","type":"integer"},"ActionDate":{"type":"string"}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCode":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"InvoiceId":{"format":"int32","type":"integer"},"InvoiceChargeId":{"format":"int32","type":"integer"},"ApprovalCodeType":{"enum":["Labor","Travel","Material","Freight","Other","Tax","Tax2","LineItem","FreightGenerated"],"type":"string"},"ApprovalCode":{"type":"string"},"AdditionalApprovalCode":{"type":"string"},"ParentId":{"format":"int32","type":"integer"},"InternalId":{"format":"int32","type":"integer"},"InternalParentId":{"format":"int32","type":"integer"},"IsDefault":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Invoices.InvoicePaymentResponse":{"description":"Object containing the invoice payment details.","type":"object","properties":{"Id":{"format":"int32","description":"Numeric identifier of the payment.","type":"integer"},"PaymentDate":{"format":"date-time","description":"Date and time when the specified invoice was paid.","type":"string"},"PaidBy":{"description":"Username of the employee who made the payment.","type":"string"},"PaymentNumber":{"description":"Order number of payment.","type":"string"},"PaymentAmount":{"format":"double","description":"Amount paid for the invoice. The value is negative if it’s a credited invoice.","type":"number"}}},"ServiceChannel.Services.Messaging.CountDescriptor":{"type":"object","properties":{"Total":{"format":"int32","type":"integer"},"Own":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Notes.NoteInfo":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Number":{"format":"int32","type":"integer"},"NoteData":{"type":"string"},"DateCreated":{"format":"date-time","type":"string"},"ActionRequired":{"default":false,"type":"boolean"},"MailedTo":{"type":"string"},"CreatedBy":{"type":"string"}}},"ServiceChannel.Services.Messaging.Users.DashboardInfo":{"description":"Dashboard details object.","type":"object","properties":{"Id":{"format":"int32","description":"Unique dashboard identifier.","type":"integer"},"Name":{"description":"Dashboard name.","type":"string"},"RedirectToDashboard":{"description":"Defines whether a subscriber user is redirected to a dashboard once they log in.","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Users.AccessOptions":{"description":"Object listing locations, districts, regions, and trades a subscriber user has access to. Learn more about [granting access based on locations, districts, and regions](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/585107276/Location+District+Region+Access+Tab) in ServiceChannel University.","type":"object","properties":{"Locations":{"description":"Locations a user has access to.","type":"array","items":{"type":"string"}},"Districts":{"description":"Districts a user has access to.","type":"array","items":{"type":"string"}},"Regions":{"description":"Regions a user has access to.","type":"array","items":{"type":"string"}},"Trades":{"description":"Trades a user is permitted to work with.","type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.Users.LimitOptions":{"description":"Object for NTE, proposal, and invoice limits set for a subscriber user.","type":"object","properties":{"NteLimit":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.Limit","description":"Limit for the NTE amount that a user can not exceed upon editing work orders. If a user who has permission to edit work orders tries to enter the NTE amount above the set limit, an error message will appear."},"ProposalLimit":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.Limit","description":"Limit for the proposal amount above which a user can not approve proposals — for users with the corresponding permission. The user can put on hold or reject proposals above their limit."},"InvoiceLimit":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.Limit","description":"Limit for the invoice amount above which a user can not process invoices by changing their status. The user can view invoices above their limit if they have the corresponding permission."}}},"ServiceChannel.Services.Messaging.Users.MliUserInfo":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"MliLevel":{"type":"string"},"MliLocations":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Users.MlpUserInfo":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"MlpLevel":{"type":"string"},"MlpLocations":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.ApprovalCodes.AdditionalApprovalCodeOption":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Value":{"type":"string"}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeChild":{"type":"object","properties":{"Amount":{"format":"double","type":"number"},"Id":{"format":"int32","type":"integer"},"InvoiceId":{"format":"int32","type":"integer"},"InvoiceChargeId":{"format":"int32","type":"integer"},"ApprovalCodeType":{"enum":["Labor","Travel","Material","Freight","Other","Tax","Tax2","LineItem","FreightGenerated"],"type":"string"},"ApprovalCode":{"type":"string"},"AdditionalApprovalCode":{"type":"string"},"ParentId":{"format":"int32","type":"integer"},"InternalId":{"format":"int32","type":"integer"},"InternalParentId":{"format":"int32","type":"integer"},"IsDefault":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Users.Limit":{"description":"Object for limit details set for a subscriber user.","type":"object","properties":{"Amount":{"format":"double","description":"Limit amount.","type":"number"},"CurrencyId":{"format":"int32","description":"Identifier of the currency the limit is set in.","type":"integer"}}},"ServiceChannel.Services.Messaging.Assets.AddAssetRequest":{"required":["Tag","Manufacturer","StoreId","Type"],"type":"object","properties":{"Tag":{"description":"Required, Should be unique for subscriber","type":"string"},"ParentAssetTagId":{"type":"string"},"Manufacturer":{"description":"Required, Must be existing manufacturer name","type":"string"},"ModelNo":{"description":"Model Number of asset","type":"string"},"SerialNo":{"description":"Serial Number of asset","type":"string"},"LocationId":{"format":"int32","description":"ID of location, Ignored. Use StoreId to setup Location","type":"integer"},"Area":{"type":"string"},"WorkOrderArea":{"type":"string"},"StoreId":{"description":"Required, Should be unique for subscriber","type":"string"},"Trade":{"description":"Trade of asset. Examples: HVAC, DOORS, ELECTRICAL","type":"string"},"TradeId":{"format":"int32","type":"integer"},"Type":{"description":"Required, Type of asset. Examples: Refrigerator, Computer Monitor and etc","type":"string"},"AssetTypeId":{"format":"int32","type":"integer"},"BrandId":{"format":"int32","type":"integer"},"Active":{"default":false,"type":"boolean"},"InstallDate":{"description":"If not specified the current date is taken","type":"string"},"PurchaseDate":{"description":"If not specified the current date is taken","type":"string"},"ManufacturedDate":{"description":"If not specified the current date is taken","type":"string"},"Warranty":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.WarrantyInfo","description":"Describe warranty parameters"},"UsesRefrigerant":{"format":"int32","description":"Refrigerant Usage options","type":"integer"},"IsLeased":{"description":"Is Leased","default":false,"type":"boolean"},"LifeExpectancy":{"format":"int32","description":"Life Expectancy","type":"integer"},"OriginalValue":{"format":"double","description":"Original Value","type":"number"},"LeaseDate":{"description":"Lease Date","type":"string"},"LeasePeriod":{"format":"int32","description":"Lease Period","type":"integer"},"Condition":{"format":"int32","type":"integer"},"EnergyEfficiency":{"type":"string"},"Capacity":{"type":"string"},"HasLeakDetector":{"description":"Has Leak Detector","default":false,"type":"boolean"},"ParentId":{"format":"int32","description":"Parent Id","type":"integer"},"Description":{"type":"string"},"HasComponents":{"default":false,"type":"boolean"},"HasCircuits":{"default":false,"type":"boolean"},"ClearAssetTag":{"default":false,"type":"boolean"},"AssetTag":{"type":"string"},"IsInspection":{"default":false,"type":"boolean"},"ProcessDuplicatedAssetTag":{"default":false,"type":"boolean"},"IsCarbReporting":{"default":false,"type":"boolean"},"ApplyCustom":{"default":false,"type":"boolean"},"CustomAttributes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Equipments.EquipmentAttributeDescription"}},"AssetUpdatesStatus":{"format":"byte","type":"string"},"LocationNoteHeader":{"description":"Location Note Header","type":"string"},"LocationNoteValue":{"description":"Location Note Value","type":"string"},"Currency":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Assets.WarrantyInfo":{"type":"object","properties":{"NTE":{"format":"double","description":"Maximum amount of money to be spent on warranty services in USD. Value -1  means that the amount is not applicable.","type":"number"},"Priority":{"description":"Defines how quickly warranty services should be provided, for example, *Emergency-4 Hours*, *Normal-48 Hours*, *7 Days*.","type":"string"},"Category":{"description":"Warranty category, for example, *ADVISE ONLY*, *REPAIR*, *DISASTER*.","type":"string"},"Provider":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.WarrantyProvider","description":"Rules to choose Warranty Provider"},"Expiration":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.WarrantyExpiration","description":"Rules for Warranty Expiration"}}},"ServiceChannel.Services.Messaging.Assets.UpdateAssetRequest":{"required":["Tag","Manufacturer","StoreId","Type"],"type":"object","properties":{"Id":{"format":"int32","description":"The unique Equipment ID in Service Click system","type":"integer"},"NeedUpdateParentId":{"description":"Flag Need Update ParenId","default":false,"type":"boolean"},"ProcessDuplicatedAssetTag":{"default":false,"type":"boolean"},"Tag":{"description":"Required, Should be unique for subscriber","type":"string"},"ParentAssetTagId":{"type":"string"},"Manufacturer":{"description":"Required, Must be existing manufacturer name","type":"string"},"ModelNo":{"description":"Model Number of asset","type":"string"},"SerialNo":{"description":"Serial Number of asset","type":"string"},"LocationId":{"format":"int32","description":"ID of location, Ignored. Use StoreId to setup Location","type":"integer"},"Area":{"type":"string"},"WorkOrderArea":{"type":"string"},"StoreId":{"description":"Required, Should be unique for subscriber","type":"string"},"Trade":{"description":"Trade of asset. Examples: HVAC, DOORS, ELECTRICAL","type":"string"},"TradeId":{"format":"int32","type":"integer"},"Type":{"description":"Required, Type of asset. Examples: Refrigerator, Computer Monitor and etc","type":"string"},"AssetTypeId":{"format":"int32","type":"integer"},"BrandId":{"format":"int32","type":"integer"},"Active":{"default":false,"type":"boolean"},"InstallDate":{"description":"If not specified the current date is taken","type":"string"},"PurchaseDate":{"description":"If not specified the current date is taken","type":"string"},"ManufacturedDate":{"description":"If not specified the current date is taken","type":"string"},"Warranty":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.WarrantyInfo","description":"Describe warranty parameters"},"UsesRefrigerant":{"format":"int32","description":"Refrigerant Usage options","type":"integer"},"IsLeased":{"description":"Is Leased","default":false,"type":"boolean"},"LifeExpectancy":{"format":"int32","description":"Life Expectancy","type":"integer"},"OriginalValue":{"format":"double","description":"Original Value","type":"number"},"LeaseDate":{"description":"Lease Date","type":"string"},"LeasePeriod":{"format":"int32","description":"Lease Period","type":"integer"},"Condition":{"format":"int32","type":"integer"},"EnergyEfficiency":{"type":"string"},"Capacity":{"type":"string"},"HasLeakDetector":{"description":"Has Leak Detector","default":false,"type":"boolean"},"ParentId":{"format":"int32","description":"Parent Id","type":"integer"},"Description":{"type":"string"},"HasComponents":{"default":false,"type":"boolean"},"HasCircuits":{"default":false,"type":"boolean"},"ClearAssetTag":{"default":false,"type":"boolean"},"AssetTag":{"type":"string"},"IsInspection":{"default":false,"type":"boolean"},"IsCarbReporting":{"default":false,"type":"boolean"},"ApplyCustom":{"default":false,"type":"boolean"},"CustomAttributes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Equipments.EquipmentAttributeDescription"}},"AssetUpdatesStatus":{"format":"byte","type":"string"},"LocationNoteHeader":{"description":"Location Note Header","type":"string"},"LocationNoteValue":{"description":"Location Note Value","type":"string"},"Currency":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Assets.AddUpdateAssetRequest":{"required":["NewTagId","LocationNoteHeaderValue","BrandId","BrandName","AssetTypeId"],"type":"object","properties":{"OriginalTagId":{"description":"Tag Id of an existing asset. If is empty, it means a new Asset should be created","type":"string"},"NewTagId":{"description":"In case of asset update it should be a new Tag Id value\r\n            In case of asset creation it should be Tag ID of created asset","type":"string"},"LocationNoteHeaderName":{"type":"string"},"LocationNoteHeaderValue":{"type":"string"},"BrandId":{"format":"int32","type":"integer"},"BrandName":{"type":"string"},"AssetTypeId":{"format":"int32","type":"integer"},"ApplyEmptyFields":{"default":false,"type":"boolean"},"Warranty":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.WarrantyInfo"},"CustomAttributes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Equipments.EquipmentAttributeDescription"}},"ModelNo":{"type":"string"},"SerialNo":{"type":"string"},"Area":{"type":"string"},"WorkOrderArea":{"type":"string"},"InstallDateStr":{"type":"string"},"PurchaseDateStr":{"type":"string"},"ManufacturedDateStr":{"type":"string"},"EnergyEfficiency":{"type":"string"},"Capacity":{"type":"string"},"Description":{"type":"string"},"AssetTag":{"type":"string"},"UsesRefrigerant":{"format":"int32","type":"integer"},"TradeId":{"format":"int32","type":"integer"},"LifeExpectancy":{"format":"int32","type":"integer"},"LeasePeriod":{"format":"int32","type":"integer"},"Condition":{"format":"int32","type":"integer"},"ParentId":{"format":"int32","type":"integer"},"Currency":{"format":"int32","type":"integer"},"OriginalValue":{"format":"double","type":"number"},"ClearAssetTag":{"default":false,"type":"boolean"},"IsInspection":{"default":false,"type":"boolean"},"ApplyCustom":{"default":false,"type":"boolean"},"HasLeakDetector":{"default":false,"type":"boolean"},"Active":{"default":false,"type":"boolean"},"IsLeased":{"default":false,"type":"boolean"},"HasComponents":{"default":false,"type":"boolean"},"HasCircuits":{"default":false,"type":"boolean"},"IsCarbReporting":{"default":false,"type":"boolean"},"AssetUpdatesStatus":{"format":"byte","type":"string"},"ProcessDuplicatedAssetTag":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Equipments.ActivateAssetRequest":{"description":"A class containing parameters for \"ActivateAsset\" method of AssetsController","type":"object","properties":{"AssetId":{"format":"int32","type":"integer"},"IsActive":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Assets.AttachAssetRequest":{"type":"object","properties":{"AssetId":{"format":"int32","description":"Unique numeric identifier of the asset you want to attach to a work order.","type":"integer"}}},"ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest":{"type":"object","properties":{"RecId":{"format":"int32","type":"integer"},"Assets":{"type":"object","additionalProperties":{"default":false,"type":"boolean"}}}},"ServiceChannel.Services.Messaging.Assets.AssetsWorkRequest":{"type":"object","properties":{"WorkRequestId":{"format":"int32","type":"integer"},"Assets":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Assets.RemoveAssetsWorkRequest":{"type":"object","properties":{"WorkRequestId":{"format":"int32","type":"integer"},"AssetIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Assets.RemoveAssetsFromWORequest":{"type":"object","properties":{"RecId":{"format":"int32","type":"integer"},"AssetIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Api.Model.Equipments.AssetWorkHistory":{"type":"object","properties":{"Date":{"format":"date-time","type":"string"},"WO":{"type":"string"},"WOStatusExtended":{"type":"string"},"WOStatusPrimary":{"type":"string"},"ProblemCode":{"type":"string"},"Technician":{"type":"string"},"RecId":{"format":"int32","type":"integer"},"ProviderId":{"format":"int32","type":"integer"},"ScheduledDate":{"format":"date-time","type":"string"},"CompletedDate":{"format":"date-time","type":"string"}}},"ServiceChannel.Services.Messaging.Assets.Manufacturer":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"}}},"ServiceChannel.Services.Messaging.Assets.ManufacturersResponce":{"type":"object","properties":{"Count":{"format":"int32","type":"integer"},"Manufacturers":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.Manufacturer"}}}},"ServiceChannel.Services.Messaging.Assets.AssetStatusHistoryResponse":{"type":"object","properties":{"AssetId":{"format":"int32","type":"integer"},"InitialStatus":{"enum":["InUse","OutForRepair","ReplacementRecommended","Repaired"],"type":"string"},"InitialStatusStr":{"type":"string"},"ChangedTo":{"enum":["InUse","OutForRepair","ReplacementRecommended","Repaired"],"type":"string"},"ChangedToStr":{"type":"string"},"Description":{"type":"string"},"CreateUserId":{"format":"int32","type":"integer"},"CreateUserIdStr":{"type":"string"},"ChangeDate":{"format":"date-time","type":"string"},"ChangeDateStr":{"type":"string"},"ReplacedByEquipment_Id":{"format":"int32","type":"integer"},"ReplacedByEquipmentTag":{"type":"string"},"UpdatedByApplication":{"format":"byte","type":"string"},"UpdatedByApplicationStr":{"type":"string","readOnly":true}}},"ServiceChannel.Services.Messaging.Assets.UpdateAssetRepairStatusRequest":{"type":"object","properties":{"AssetId":{"format":"int32","type":"integer"},"Status":{"enum":["InUse","OutForRepair","ReplacementRecommended","Repaired"],"type":"string"},"Description":{"type":"string"},"UpdatedByApplication":{"format":"byte","type":"string"},"ReplacedByEquipmentId":{"format":"int32","type":"integer"},"AssetForReplacement":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetForReplacement"}}},"ServiceChannel.Services.Messaging.Assets.AssetForReplacement":{"type":"object","properties":{"LocationId":{"format":"int32","type":"integer"},"TagId":{"type":"string"},"AssetTag":{"type":"string"},"BrandId":{"format":"int32","type":"integer"},"ModelNumber":{"type":"string"},"SerialNumber":{"type":"string"},"InstallDate":{"format":"date-time","type":"string"},"AssetForReplacementRackData":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetForReplacementRackData"}}},"ServiceChannel.Services.Messaging.Assets.AssetForReplacementRackData":{"type":"object","properties":{"RackId":{"type":"string"},"RackTypeId":{"format":"int32","type":"integer"},"PartNumberId":{"format":"int32","type":"integer"},"RefrigerantPartNumber":{"type":"string"},"OperationStatusId":{"format":"byte","type":"string"},"ProviderName":{"type":"string"},"EffectiveDate":{"format":"date-time","type":"string"},"DescriptionId":{"format":"int32","type":"integer"},"Quantity":{"format":"double","type":"number"}}},"ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord":{"description":"Holds information about scanned asset tags.  This class must be kept in sync with ContractorTools.BL.Models.AssetTagScanAuditRecord","type":"object","properties":{"AssetID":{"format":"int32","description":"Asset/Equipment ID of asset whose tag was scanned","type":"integer"},"TrackingNumber":{"format":"int32","description":"Tracking ID associated with work order","type":"integer"},"WorkOrderID":{"description":"Work order number associated with this asset tag scan","type":"string"},"AssetTagStatus":{"description":"Asset tag validation status","enum":["Unknown","NotAvailable","NotValidated","PendingValidation","Validated"],"type":"string"},"ManuallyEntered":{"description":"Indicates whether or not asset tag was manually entered instead of being scanned","default":false,"type":"boolean"},"AssetTagNotScannedReason":{"description":"Reason for asset tag not being scanned","type":"string"},"ValidationRequired":{"description":"Indicates whether or not *this* asset needs its asset tag validated","default":false,"type":"boolean"},"AssetValidated":{"description":"The current validation status of *this* asset","default":false,"type":"boolean"},"UnableToValidateReasonId":{"format":"int32","description":"Reason for asset tag not being validated","type":"integer"},"OtherReason":{"description":"Custom reason for asset tag not being validated","type":"string"},"UnableToScanReasonId":{"format":"int32","description":"Reason for asset tag not being scanned","type":"integer"}}},"ServiceChannel.Services.Messaging.Administration.AssetRules.AssetTagging":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"ScanMethod":{"format":"byte","type":"string"},"AssetChange":{"format":"byte","type":"string"},"ValidationType":{"format":"byte","type":"string"},"AllowAssetChangeForMobile":{"format":"byte","type":"string"},"UpdateAssetStatusByProviderWeb":{"format":"byte","type":"string"},"UpdateAssetStatusByProviderMobile":{"format":"byte","type":"string"},"UpdateAssetByProvider":{"format":"byte","type":"string"},"PromptAssetAssociation":{"format":"byte","type":"string"},"CreateAssetOnMobile":{"format":"byte","type":"string"},"ManageAttachmentsByProvider":{"format":"byte","type":"string"}}},"ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReason":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Reason":{"type":"string"}}},"ServiceChannel.Services.Messaging.Assets.UnableToValidateAssetReasonRequest":{"type":"object","properties":{"RecId":{"format":"int32","type":"integer"},"ReasonId":{"format":"int32","type":"integer"},"ReasonText":{"type":"string"}}},"ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReason":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Reason":{"type":"string"},"Active":{"default":false,"type":"boolean"},"SubscriberId":{"format":"int32","type":"integer"},"ReasonCodePurpose":{"format":"byte","type":"string"}}},"ServiceChannel.Services.Messaging.Assets.UnableToScanAssetReasonRequest":{"type":"object","properties":{"RecId":{"format":"int32","type":"integer"},"ReasonId":{"format":"int32","type":"integer"},"ReasonText":{"type":"string"}}},"ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToAddReason":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Reason":{"type":"string"}}},"ServiceChannel.Services.Messaging.Assets.UnableToAddAssetReasonRequest":{"type":"object","properties":{"RecId":{"format":"int32","type":"integer"},"ReasonId":{"format":"int32","type":"integer"},"ReasonText":{"type":"string"}}},"ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReasonsNotAttachedAsset":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Reason":{"type":"string"}}},"ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReasonsNotAttachedAsset":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Reason":{"type":"string"}}},"ServiceChannel.Services.Core.InternalRequests.Administration.GetAssetTagValidationRequest":{"type":"object","properties":{"SubscriberIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetValidationHistoryRequestInternal":{"type":"object","properties":{"AssetId":{"format":"int32","type":"integer"},"TrackingNumber":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Assets.AssetPrimaryAttachment":{"type":"object","properties":{"AssetId":{"format":"int32","type":"integer"},"FileName":{"type":"string"},"FilePath":{"type":"string"},"ThumbnailPath":{"type":"string"},"ThumbnailUri":{"type":"string"},"Uri":{"type":"string"}}},"ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest":{"type":"object","properties":{"AssetIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup":{"description":"Asset type group object.","type":"object","properties":{"Id":{"format":"int32","description":"Unique numeric identifier of the asset type group.","type":"integer"},"SubscriberId":{"format":"int32","description":"Unique numeric identifier of the subscriber.","type":"integer"},"Name":{"description":"The name of the asset type group.","type":"string"},"FileName":{"description":"The file name of the image attached to the asset type group. For example, *audioequipment.png* or *AEE323FF8091.jpeg*.","type":"string"},"FilePath":{"description":"Path snippet to the full-size image version attached to the asset type group. For example, *#assets/6cb4f87b-3d5f-49ba-9971-11442dcf3d1e*.","type":"string"},"ThumbnailPath":{"description":"Path snippet to the reduced-size image version attached to the asset type group. For example, *#assets/7bc49564-5ac4-4002-9ffc-2282483e6df8*.","type":"string"},"AssetTypeIds":{"description":"A list of unique numeric identifiers of the asset types.","type":"array","items":{"format":"int32","type":"integer"}},"ImgPath":{"description":"Path to the cloud location of the full-size image version attached to the asset type group.","type":"string","readOnly":true},"Uri":{"description":"The URI of the full-size image version attached to the asset type group.","type":"string"},"ThumbnailUri":{"description":"The URI of the reduced-size image version attached to the asset type group.","type":"string"},"AssetTypeCategoryId":{"format":"int32","description":"Unique numeric identifier of the asset category.","type":"integer"}}},"ServiceChannel.Services.Messaging.AssetTypes.GetAssetTypeGroupsRequest":{"type":"object","properties":{"AssetIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Equipments.SearchAssetsByGroupIDRequest":{"type":"object","properties":{"SubscriberId":{"format":"int32","type":"integer"},"LocationId":{"format":"int32","type":"integer"},"SearchByText":{"type":"string"},"AssetTypeGroupIds":{"type":"array","items":{"format":"int32","type":"integer"}},"AssetTypes":{"type":"array","items":{"format":"int32","type":"integer"}},"StartIndex":{"format":"int32","type":"integer"},"PageSize":{"format":"int32","type":"integer"},"UncategorizedOnly":{"default":false,"type":"boolean"},"IncludeTotalCostOfOwnership":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Assets.AssetsGroupedByCategoriesResponse":{"type":"object","properties":{"GroupId":{"format":"int32","type":"integer"},"GroupName":{"type":"string"},"Assets":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetResponse"}}}},"ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem":{"description":"Asset type meter object.","type":"object","properties":{"Id":{"format":"int32","description":"Unique asset meter reading identifier.","type":"integer"},"AssetMeterId":{"format":"int32","description":"Unique numeric asset meter identifier.","type":"integer"},"AssetTypeMeterId":{"format":"int32","description":"Unique numeric identifier of the asset type meter.","type":"integer"},"AssetTypeMeterName":{"description":"Name of an asset type meter.","type":"string"},"UnitOfMeasureId":{"format":"int32","description":"Number of the unit of measure associated with a meter. This is a sequence number of the unit of measure as it is listed in the overlay for creating a meter.","type":"integer"},"UnitOfMeasureName":{"description":"Name of a unit of measure.","type":"string"},"Value":{"format":"double","description":"Value that a user enters when recording a meter reading on an asset.","type":"number"},"TrackingNumber":{"format":"int32","description":"Tracking number of a work order an asset is assigned to.","type":"integer"},"Notes":{"description":"Comment added when creating an asset meter reading.","type":"string"},"UpdatedBy":{"format":"int32","description":"ID of a user who added an asset meter reading.","type":"integer"},"UpdatedByUserName":{"description":"Username of an employee who added an asset meter reading.","type":"string"},"UpdatedDate":{"format":"date-time","description":"Date and time when an asset meter reading was added.","type":"string"}}},"ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequest":{"description":"Object containing the asset meter reading details to add.","type":"object","properties":{"AssetMeterId":{"format":"int32","description":"Unique numeric asset meter identifier.","type":"integer"},"TrackingNumber":{"format":"int32","description":"Tracking number of a work order an asset meter reading is assigned to.","type":"integer"},"Value":{"format":"double","description":"Value that a user enters when recording a meter reading on an asset.","type":"number"},"Notes":{"description":"Comment added when creating an asset meter reading.","type":"string"},"UpdateDate":{"format":"date-time","description":"Date and time when an asset meter reading is updated.","type":"string"}}},"ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequest":{"description":"Object containing the asset meter reading details to update.","type":"object","properties":{"AssetMeterReadingId":{"format":"int32","description":"Unique asset meter reading identifier.","type":"integer"},"Value":{"format":"double","description":"Value that a user enters when recording a meter reading on an asset.","type":"number"},"Notes":{"description":"Comment added when creating an asset meter reading.","type":"string"},"UpdatedDate":{"format":"date-time","description":"Date and time when an asset meter reading is updated.","type":"string"}}},"ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequestItem":{"description":"Object containing the asset meter reading details to add.","required":["AssetId","Value","Notes","UpdatedDate"],"type":"object","properties":{"AssetId":{"format":"int32","description":"Unique numeric asset identifier.","type":"integer"},"AssetMeterId":{"format":"int32","description":"Unique numeric asset meter identifier.","type":"integer"},"AssetTypeMeterId":{"format":"int32","description":"Unique numeric asset type meter identifier.","type":"integer"},"Value":{"format":"double","description":"Value that a user enters when recording a meter reading on an asset.","type":"number"},"Notes":{"description":"Comment added when creating an asset meter reading.","type":"string"},"TrackingNumber":{"format":"int32","description":"Tracking number of a work order an asset is assigned to.","type":"integer"},"UpdatedDate":{"format":"date-time","description":"Date and time when an asset meter reading is updated.","type":"string"}}},"ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequestItem":{"required":["Id","AssetId","Value","Notes","UpdatedDate"],"type":"object","properties":{"Id":{"format":"int32","description":"Unique numeric asset type meter identifier.","type":"integer"},"AssetId":{"format":"int32","description":"Unique numeric asset identifier.","type":"integer"},"Value":{"format":"double","description":"Value that a user enters when recording a meter reading on an asset.","type":"number"},"Notes":{"description":"Comment added when creating an asset meter reading.","type":"string"},"UpdatedDate":{"format":"date-time","description":"Date and time when an asset meter reading is updated.","type":"string"}}},"ServiceChannel.Services.Messaging.Assets.AddAssetMeterRequest":{"required":["AssetId","AssetTypeMeterId"],"type":"object","properties":{"AssetId":{"format":"int32","type":"integer"},"AssetTypeMeterId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Assets.AssetMeter":{"description":"Asset meter object.","type":"object","properties":{"Id":{"format":"int32","description":"Unique numeric identifier of an asset meter.","type":"integer"},"AssetTypeMeterId":{"format":"int32","description":"Unique numeric identifier of the asset type meter.","type":"integer"},"AssetId":{"format":"int32","description":"Unique numeric asset identifier.","type":"integer"},"MeterTypeName":{"description":"Name of an asset type meter.","type":"string"}}},"System.Collections.Generic.KeyValuePair[System.Int32,System.String]":{"type":"object","properties":{"Key":{"format":"int32","type":"integer","readOnly":true},"Value":{"type":"string","readOnly":true}}},"ServiceChannel.Services.Messaging.GetByIdsRequest":{"type":"object","properties":{"Ids":{"description":"A list of unique numeric identifiers.","type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Assets.WorkOrderAssetsCommonValidationResponse":{"type":"object","properties":{"CommonWOValidationStatus":{"type":"string"},"UserRuleValidationType":{"format":"byte","type":"string"},"WorkOrderId":{"format":"int32","type":"integer"},"AssetsValidationStatuses":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetValidationStatusResponse"}}}},"ServiceChannel.Services.Messaging.Assets.AssetValidationStatusResponse":{"type":"object","properties":{"TrackingNumber":{"format":"int32","type":"integer"},"AssetID":{"format":"int32","type":"integer"},"ValidationStatus":{"enum":["Unknown","NotAvailable","NotValidated","PendingValidation","Validated"],"type":"string"},"UnableToValidateReason":{"$ref":"#/definitions/ServiceChannel.Api.Model.Administration.UnableToValidateReason"}}},"ServiceChannel.Api.Model.Administration.UnableToValidateReason":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Reason":{"type":"string"}}},"ServiceChannel.Services.Messaging.Assets.UpdateAssetStatusRequest":{"type":"object","properties":{"AssetId":{"format":"int32","type":"integer"},"Status":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Assets.UpdateAssetsStatusesRequest":{"type":"object","properties":{"AssetIds":{"description":"Unique numeric assets identifiers.","type":"array","items":{"format":"int32","type":"integer"}},"Status":{"format":"int32","description":"Asset update status","type":"integer"}}},"ServiceChannel.Services.Messaging.AssetTasks.CreateAssetTaskResponseRequest":{"description":"Create Asset Task Response Request","type":"object","properties":{"AssetTaskId":{"format":"int32","description":"Asset Task Identifier","type":"integer"},"AssetId":{"format":"int32","description":"Asset Identifier","type":"integer"}}},"ServiceChannel.Services.Messaging.Assets.AssetType":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"IsActive":{"default":false,"type":"boolean"},"SubscriberId":{"format":"int32","type":"integer"},"Parent":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetType"},"Name":{"type":"string"},"PrimaryTrade":{"type":"string"},"TradeId":{"format":"int32","type":"integer"},"ParentId":{"format":"int32","type":"integer"},"RefrigerantPurposeId":{"format":"int32","type":"integer"},"RefrigerantPurposeName":{"type":"string"},"AdditionalTrades":{"type":"array","items":{"type":"string"}},"AdditionalTradesIds":{"type":"array","items":{"format":"int32","type":"integer"}},"IsCircuit":{"default":false,"type":"boolean"},"UserId":{"format":"int32","type":"integer"},"AssetTypeGroupId":{"format":"int32","type":"integer"},"PrimaryAssetTypeId":{"format":"int32","type":"integer"},"BrandIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Assets.AddAssetTypeRequest":{"type":"object","properties":{"ValidateTradeByName":{"default":false,"type":"boolean"},"AllowAdditionalTradesOnInheritance":{"default":false,"type":"boolean"},"Name":{"type":"string"},"PrimaryTrade":{"type":"string"},"TradeId":{"format":"int32","type":"integer"},"ParentId":{"format":"int32","type":"integer"},"RefrigerantPurposeId":{"format":"int32","type":"integer"},"RefrigerantPurposeName":{"type":"string"},"AdditionalTrades":{"type":"array","items":{"type":"string"}},"AdditionalTradesIds":{"type":"array","items":{"format":"int32","type":"integer"}},"IsCircuit":{"default":false,"type":"boolean"},"UserId":{"format":"int32","type":"integer"},"AssetTypeGroupId":{"format":"int32","type":"integer"},"PrimaryAssetTypeId":{"format":"int32","type":"integer"},"BrandIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Assets.AddAssetTypeResponse":{"description":"Add Trade Response","type":"object","properties":{"Id":{"format":"int32","type":"integer"},"ErrorCode":{"format":"int32","description":"Numeric identifier that determines the nature of an error. Possible values: `0` - success, otherwise - error.","type":"integer"},"Message":{"description":"Defines that the file’s remote storage is unavailable or its URL cannot be found.","type":"string"}}},"ServiceChannel.Services.Messaging.Assets.AssetTypeAttributeExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"DefaultValue":{"type":"string"},"Required":{"default":false,"type":"boolean"},"Viewable":{"default":false,"type":"boolean"},"Hidden":{"default":false,"type":"boolean"},"Editable":{"default":false,"type":"boolean"},"AutoGeneratedValue":{"type":"string"},"SortPosition":{"format":"int32","type":"integer"},"IsCustom":{"default":false,"type":"boolean"},"AttributeType":{"enum":["String","Integer","Date","Money","Choice","MultipleChoice","Boolean"],"type":"string"},"SingleOptions":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetAttributeSelectOption"}},"MultipleOptions":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetAttributeSelectOption"}}}},"ServiceChannel.Services.Messaging.Assets.AssetAttributeSelectOption":{"type":"object","properties":{"AssetTypeAttributeSelectOptionId":{"format":"int32","type":"integer"},"AssetTypeAttributeId":{"format":"int32","type":"integer"},"AssetAttributeSelectOptionId":{"format":"int32","type":"integer"},"AssetAttributeId":{"format":"int32","type":"integer"},"Text":{"type":"string"},"Selected":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Assets.GetSubscriberAssetCategoriesRequest":{"description":"Asset categories request object.","type":"object","properties":{"SubscriberId":{"format":"int32","description":"Unique numeric identifier of the subscriber.","type":"integer"},"TradeNames":{"description":"The names of the trades, such as HVAC or PLUMBING.","type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.Assets.AssetTypeCategory":{"description":"Asset category object.","type":"object","properties":{"Id":{"format":"int32","description":"Unique numeric identifier of the asset category.","type":"integer"},"Name":{"description":"Asset category name.","type":"string"}}},"ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetTypesByLocationRequestInternal":{"type":"object","properties":{"LocationIds":{"type":"array","items":{"format":"int32","type":"integer"}},"TradeIds":{"type":"array","items":{"format":"int32","type":"integer"}},"IncludeDeactivated":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Assets.AddAssetTypeGroupAttachmentResponse":{"type":"object","properties":{"IsSuccess":{"default":false,"type":"boolean"},"Message":{"type":"string"},"Id":{"format":"int32","description":"Unique numeric identifier of the asset type group.","type":"integer"},"SubscriberId":{"format":"int32","description":"Unique numeric identifier of the subscriber.","type":"integer"},"Name":{"description":"The name of the asset type group.","type":"string"},"FileName":{"description":"The file name of the image attached to the asset type group. For example, *audioequipment.png* or *AEE323FF8091.jpeg*.","type":"string"},"FilePath":{"description":"Path snippet to the full-size image version attached to the asset type group. For example, *#assets/6cb4f87b-3d5f-49ba-9971-11442dcf3d1e*.","type":"string"},"ThumbnailPath":{"description":"Path snippet to the reduced-size image version attached to the asset type group. For example, *#assets/7bc49564-5ac4-4002-9ffc-2282483e6df8*.","type":"string"},"AssetTypeIds":{"description":"A list of unique numeric identifiers of the asset types.","type":"array","items":{"format":"int32","type":"integer"}},"ImgPath":{"description":"Path to the cloud location of the full-size image version attached to the asset type group.","type":"string","readOnly":true},"Uri":{"description":"The URI of the full-size image version attached to the asset type group.","type":"string"},"ThumbnailUri":{"description":"The URI of the reduced-size image version attached to the asset type group.","type":"string"},"AssetTypeCategoryId":{"format":"int32","description":"Unique numeric identifier of the asset category.","type":"integer"}}},"ServiceChannel.Services.Messaging.Assets.AssetTypeMeterResponseItem":{"description":"Object with an asset type meter details.","type":"object","properties":{"Id":{"format":"int32","description":"Unique numeric identifier of an asset type meter.","type":"integer"},"Name":{"description":"Asset type meter name given by a user.","type":"string"},"MaxValue":{"description":"Maximum value that a user can enter when recording a meter reading on an asset.","type":"string"},"Notes":{"description":"Maximum value that a user can enter when recording a meter reading on an asset.","type":"string"},"Inactive":{"description":"Defines whether a meter is active or has been deactivated. **Possible values:** *true*, *false*. Note that readings can be recorded for active meters only.","default":false,"type":"boolean"},"EditOnWO":{"description":"Defines whether a user can record asset meter readings on a work order via Dashboard. **Possible values:** *true*, *false*.","default":false,"type":"boolean"},"AssetTypeId":{"format":"int32","description":"Unique numeric identifier of an asset type.","type":"integer"},"UnitOfMeasure":{"format":"int32","description":"Number of the unit of measure associated with a meter. This is a sequence number of the unit of measure as it is listed in the overlay for creating a meter.","type":"integer"},"UnitOfMeasureName":{"description":"Unit Of Measure Name","type":"string"}}},"ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem":{"description":"Object with an asset type meter details.","type":"object","properties":{"Id":{"format":"int32","description":"Unique numeric identifier of an asset type meter.","type":"integer"},"Name":{"description":"Asset type meter name given by a user.","type":"string"},"MaxValue":{"description":"Maximum value that a user can enter when recording a meter reading on an asset.","type":"string"},"Notes":{"description":"Comment added to a meter when creating or editing an asset type meter.","type":"string"},"Inactive":{"description":"Defines whether a meter is active or has been deactivated. **Possible values:** *true*, *false*. Note that readings can be recorded for active meters only.","default":false,"type":"boolean"},"EditOnWO":{"description":"Defines whether a user can record asset meter readings on a work order via Dashboard. **Possible values:** *true*, *false*.","default":false,"type":"boolean"},"AssetTypeId":{"format":"int32","description":"Unique numeric identifier of an asset type.","type":"integer"},"UnitOfMeasure":{"format":"int32","description":"Number of the unit of measure associated with a meter. This is a sequence number of the unit of measure as it is listed in the overlay for creating a meter.","type":"integer"}}},"ServiceChannel.Services.Messaging.Attachments.AddAttachmentsRequest":{"required":["Attachments"],"type":"object","properties":{"Attachments":{"description":"Required, Attachments","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.AddAttachmentRequest"}}}},"ServiceChannel.Services.Messaging.Attachments.AddAttachmentRequest":{"type":"object","properties":{"Name":{"type":"string"},"Description":{"type":"string"},"Path":{"type":"string"},"Type":{"enum":["File","RemoteStorage"],"type":"string"},"MediaType":{"description":"Mime type of the attachment","type":"string"},"Visibility":{"format":"int32","description":"Note visibility - valid values: null, 1, 2, 3","type":"integer"},"IsInvoiceDigitalCopy":{"description":"Mark attachment as Invoice Digital Copy","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Attachments.AddBase64AttachmentsRequest":{"type":"object","properties":{"poNumber":{"description":"Purchase Order. Required.","type":"string"},"file":{"description":"File as a base64 encoded value.","type":"string"},"fileName":{"description":"File name with extension. Optional. GUID value by default.","type":"string"},"extension":{"description":"File extension. Ignored if fileName is passed. Optional.","type":"string"},"description":{"description":"Description for file. Optional.","type":"string"},"actor":{"description":"Name of the person on whose behalf you are performing the action. Optional.","type":"string"}}},"System.Threading.CancellationToken":{"type":"object","properties":{"IsCancellationRequested":{"default":false,"type":"boolean","readOnly":true},"CanBeCanceled":{"default":false,"type":"boolean","readOnly":true},"WaitHandle":{"$ref":"#/definitions/System.Threading.WaitHandle","readOnly":true}}},"System.Threading.WaitHandle":{"type":"object","properties":{"SafeWaitHandle":{"$ref":"#/definitions/Microsoft.Win32.SafeHandles.SafeWaitHandle"}}},"Microsoft.Win32.SafeHandles.SafeWaitHandle":{"type":"object","properties":{"IsInvalid":{"default":false,"type":"boolean","readOnly":true},"IsClosed":{"default":false,"type":"boolean","readOnly":true}}},"ServiceChannel.Api.Model.SiteAudit.AttachmentInComment":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Url":{"type":"string"},"UrlResized":{"type":"string"}}},"ServiceChannel.Services.Messaging.Assets.AddAssetAttachmentResponse":{"type":"object","properties":{"IsSuccess":{"default":false,"type":"boolean"},"Message":{"type":"string"},"Id":{"format":"int32","type":"integer"},"AssetId":{"format":"int32","type":"integer"},"FileName":{"type":"string"},"Comment":{"type":"string"},"Date":{"format":"date-time","type":"string"},"FilePath":{"type":"string"},"IsPrimary":{"default":false,"type":"boolean"},"Uri":{"type":"string"},"ThumbnailPath":{"type":"string"},"ThumbnailUri":{"type":"string"}}},"ServiceChannel.Services.Messaging.Assets.AssetAttachment":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"AssetId":{"format":"int32","type":"integer"},"FileName":{"type":"string"},"Comment":{"type":"string"},"Date":{"format":"date-time","type":"string"},"FilePath":{"type":"string"},"IsPrimary":{"default":false,"type":"boolean"},"Uri":{"type":"string"},"ThumbnailPath":{"type":"string"},"ThumbnailUri":{"type":"string"}}},"ServiceChannel.Services.Messaging.Attachments.Attachment":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Description":{"type":"string"},"Name":{"type":"string"},"TimeStamp":{"format":"date-time","type":"string"},"Uri":{"type":"string"},"NoteId":{"format":"int32","description":"Note id. If it is a WO attachment equals null.","type":"integer"},"Visibility":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.BatchRfp.BatchRfpRequest":{"required":["BatchCreateRfps","CallbackUri","BatchName","BatchNumber","BatchTemplateFileName","BatchTemplateRemotePath"],"type":"object","properties":{"BatchCreateRfps":{"description":"Required, BatchCreateRfp to create the batch of Rfp's","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.BatchRfp.BatchCreateRfp"}},"CallbackUri":{"description":"Required, URL where callback method will post the result","type":"string"},"BatchName":{"description":"Optional Batch Name, project module's Name from which this Rfp was created","type":"string"},"BatchNumber":{"description":"Optional Batch Number, project module's GUID from which this Rfp was created","type":"string"},"BatchTemplateFileName":{"description":"Origin file name","type":"string"},"BatchTemplateRemotePath":{"description":"Path to blob","type":"string"},"Attachments":{"description":"Optional, Attachments.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Entities.BatchRfpAttachment"}}}},"ServiceChannel.Services.Messaging.BatchRfp.BatchCreateRfp":{"required":["TradeId","Description","LocationId","LocationName","ProviderId"],"type":"object","properties":{"RfpNumber":{"description":"The non-unique RFP identifier. The value is generated automatically if not provided. It cannot be modified.","type":"string"},"TradeId":{"format":"int32","description":"The unique trade identifier.","type":"integer"},"Description":{"description":"RFP description.","type":"string"},"Date":{"format":"date-time","description":"The RFP creation date and time. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. The default is the current date and time.","type":"string"},"DueHrs":{"format":"double","description":"Due time in hours for the provider to respond to the RFP and submit a proposal. The default is 48 hours unless a different value is specified in the `UiCreationRfpDefaultTime` settings group.","type":"number"},"DueDate":{"format":"date-time","description":"Due date and time for the provider to respond to the RFP and submit a proposal. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. If `DueHrs` is passed, the `DueDate` value is `Date` plus `DueHrs`.\r\n            The default is the current date and time plus 48 hours unless a different value is specified in the `UiCreationRfpDefaultTime` settings group.","type":"string"},"LocationId":{"format":"int32","description":"Location identifier","type":"integer"},"CreateRequestId":{"description":"Create Request Id from project module","type":"string"},"LocationName":{"description":"Store ID","type":"string"},"ProviderId":{"format":"int32","description":"The unique provider identifier.","type":"integer"},"ProjectId":{"format":"int32","description":"The unique project identifier.","type":"integer"},"PurchaseOrder":{"description":"The Purchase Order.","type":"string"},"ProviderEmail":{"description":"Provider's email","type":"string"},"WaitingForPrpEmail":{"description":"User's email","type":"string"}}},"ServiceChannel.Api.Model.Entities.BatchRfpAttachment":{"type":"object","properties":{"OriginalFileName":{"type":"string"},"RemotePath":{"type":"string"},"Description":{"type":"string"}}},"ServiceChannel.Services.Messaging.BatchWorkOrder.BatchCreateRfpResponse":{"description":"The BatchCreateRfpResponse.","type":"object","properties":{"SessionId":{"description":"Session generated in batch handler during batch Rfp creation process","type":"string"}}},"ServiceChannel.Services.Broker.Common.ApiModels.AccessDto":{"type":"object","properties":{"Granted":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Category.CategoryResponse":{"description":"Object containing the details of the available categories.","type":"object","properties":{"Id":{"format":"int32","description":"Category ID.","type":"integer"},"SubscriberId":{"format":"int32","description":"Unique numeric subscriber ID.","type":"integer"},"Name":{"description":"Category name.","type":"string"},"HasDependency":{"description":"Parameter is not populated. The only value is \"false\".","default":false,"type":"boolean"},"PrimaryCategoryID":{"format":"int32","description":"Primary category ID.","type":"integer"},"PrimaryCategoryName":{"description":"Primary category name.","type":"string"}}},"ServiceChannel.Services.Messaging.Category.AddCategoryRequest":{"description":"Object containing the details of the new category.","type":"object","properties":{"Name":{"description":"Category name. The maximum characters count is 50.","type":"string"},"PrimaryCategoryId":{"format":"int32","description":"Primary category ID.","type":"integer"}}},"ServiceChannel.Services.Messaging.Category.AddCategoryResponse":{"description":"Category object.","type":"object","properties":{"Id":{"format":"int32","description":"Category ID.","type":"integer"},"ErrorCode":{"format":"int32","description":"Numeric identifier that determines the nature of an error. Possible values: `0` - success, otherwise - error.","type":"integer"},"Message":{"description":"Defines that the file’s remote storage is unavailable or its URL cannot be found.","type":"string"}}},"ServiceChannel.Services.Messaging.Category.PrimaryCategoryResponse":{"description":"Object containing the details of the available primary categories.","type":"object","properties":{"Id":{"format":"int32","description":"Primary category ID.","type":"integer"},"Name":{"description":"Primary category name.","type":"string"}}},"ServiceChannel.Api.Model.Proposals.CategoryGLCode":{"type":"object","properties":{"CategoryId":{"format":"int32","type":"integer"},"CategoryName":{"type":"string"},"GLCode":{"type":"string"}}},"ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailExtendedResponse":{"description":"Object containing the details of a standard checklist.","type":"object","properties":{"CheckListDetails":{"description":"Details of a standard checklist including its parameters and configured questions.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailResponse"}}}},"ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailResponse":{"description":"Parameters of a standard checklist.","type":"object","properties":{"ChecklistName":{"description":"Checklist name.","type":"string"},"Id":{"format":"int32","description":"Checklist ID.","type":"integer"},"IsActive":{"description":"Defines whether the checklist is active or not.","default":false,"type":"boolean"},"CreatedDate":{"format":"date-time","description":"Date and time when the checklist was created.","type":"string"},"UpdatedDate":{"format":"date-time","description":"Date and time when the checklist was last updated.","type":"string"},"CreatedBy":{"format":"int32","description":"User ID of the employee who created the checklist.","type":"integer"},"UpdatedBy":{"format":"int32","description":"User ID of the employee who last updated the checklist.","type":"integer"},"Questions":{"description":"A list of questions configured for the checklist.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailQuestionsResponse"}}}},"ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailQuestionsResponse":{"description":"Checklist question details.","type":"object","properties":{"Id":{"format":"int32","description":"Checklist question ID.","type":"integer"},"CheckListId":{"format":"int32","description":"ID of the checklist the question belongs to.","type":"integer"},"Question":{"description":"Checklist question that a technician is prompted to answer when working on a service request.","type":"string"},"ShortDescription":{"description":"Not applicable to checklists.","type":"string"},"AnswerRequired":{"description":"Defines whether answering this checklist question is mandatory.","default":false,"type":"boolean"},"PictureFlag":{"description":"Defines whether a technician is required to upload an attachment when answering the question:\r\n             • 0 — Adding an attachment is optional.\r\n             • 1 — An attachment is not required.\r\n             • 2 — Uploading an attachment is mandatory.","enum":["Optional","No","Required"],"type":"string"},"Sequence":{"format":"int32","description":"Not applicable to checklists.","type":"integer"},"QuestionType":{"description":"[Checklist question type](https://developer.servicechannel.com/guides/checklists/types-of-checklist-questions/):\r\n             • 0 — **Acknowledgement**: Represents an on/off toggle prompting a technician to give a positive or negative response to a question.\r\n             • 1 — **Selector**: Provides multiple configured answer options to choose from.\r\n             • 2 — **Text Entry**: Allows entering a text answer.\r\n             • 4 — **Numeric Input**: Prompts to submit a number as a response.","enum":["CheckBox","RadioButton","TextEntry","TriState","NumericInput"],"type":"string"},"CheckListQuestionOptions":{"description":"Answer options for questions of the Selector type.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.CheckListQuestionOptionResponse"}},"AnswerCanPersist":{"description":"Defines whether the answer to this question can persist. If the answer is persistent, the last submitted response populates on the question. A technician can either opt for the current response or update it.","default":false,"type":"boolean"},"CheckListTimingType":{"description":"Defines the checklist segment the question belongs to: 1 — check-in segment, 2 — check-out segment.","enum":["CheckIn","CheckOut"],"type":"string"}}},"ServiceChannel.Services.Messaging.CheckListDetails.CheckListQuestionOptionResponse":{"description":"Answer option configured for a checklist question of the **Selector** type.","type":"object","properties":{"Id":{"format":"int32","description":"ID of the answer option for a checklist question of the **Selector** type.","type":"integer"},"Answer":{"description":"Answer option for a checklist question of the **Selector** type. A technician can select from a list of configured options when answering the question.","type":"string"},"Sequence":{"format":"int32","description":"Not applicable to checklists.","type":"integer"},"IsConditionalFollowUp":{"description":"Defines whether a technician is prompted to add a comment to the selected answer option. A comment is mandatory if answering the checklist question is required.","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponsesResponsePicture":{"description":"Objects for checklist response.","type":"object","properties":{"CheckListResponse":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponseAdded","description":"Parameters of a checklist response."},"CheckListResponsePicture":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.CheckListPictureResponse","description":"Files attached to the checklist response."}}},"ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponseAdded":{"description":"Checklist response object.","type":"object","properties":{"CheckListQuestionId":{"format":"int32","type":"integer"},"CheckListQuestionOptionId":{"format":"int32","type":"integer"},"ProviderId":{"format":"int32","type":"integer"},"TechnicianId":{"format":"int32","type":"integer"},"Id":{"format":"int32","description":"Checklist response ID.","type":"integer"},"Answer":{"description":"Answer to a checklist question.","type":"string"},"FreeTextAnswer":{"description":"Comment to an answer option with the `IsConditionalFollowUp` attribute. Answer options are configured for questions of the **Selector** type.","type":"string"},"EntityId":{"format":"int32","description":"ID of the work order the response was submitted for.","type":"integer"},"EntityTypeId":{"format":"int32","description":"ID of the entity the response was submitted for. 0 is returned for work orders.","type":"integer"},"Attempt":{"format":"int32","description":"Order of a technician’s on-site visit when the response was submitted.","type":"integer"},"UpdatedDate":{"format":"date-time","description":"Date and time when the response was last updated set in EST. The format is `YYYY-MM-DDThh:mm:ss.sss`.","type":"string"},"UpdatedDateStr":{"description":"Date and time when the response was last updated set in the location’s time zone. The format is `Month Day Year hh:mm`.","type":"string"},"UpdatedDateDto":{"format":"date-time","description":"Date and time when the response was last updated set in the location’s time zone with the UTC offset. The format is `YYYY-MM-DDThh:mm:ss.sss±hh:mm`.","type":"string"}}},"ServiceChannel.Services.Messaging.CheckListDetails.CheckListPictureResponse":{"description":"Object for an attachment added to a checklist response.","type":"object","properties":{"Id":{"format":"int32","description":"ID of the file attached to the checklist response.","type":"integer"},"CheckListResponseId":{"format":"int32","description":"ID of the checklist response the attachment is submitted for.","type":"integer"},"DocumentName":{"description":"Attachment name.","type":"string"},"DocumentPath":{"description":"Attachment path.","type":"string"},"ThumbnailPath":{"description":"Attachment thumbnail path.","type":"string"},"HasThumbnail":{"description":"Defines whether a thumbnail is available for the attachment.","default":false,"type":"boolean"},"UpdatedBy":{"format":"int32","description":"User Id.","type":"integer"}}},"ServiceChannel.Services.Core.InternalRequests.Checklists.CheckListResponseRequest":{"required":["CheckListQuestionId","CheckListQuestionOptionID","EntityId"],"type":"object","properties":{"CheckListQuestionId":{"format":"int32","type":"integer"},"CheckListQuestionOptionID":{"format":"int32","type":"integer"},"Answer":{"type":"string"},"FreeTextAnswer":{"type":"string"},"EntityId":{"format":"int32","type":"integer"},"EntityTypeId":{"format":"int32","type":"integer"},"ProviderId":{"format":"int32","type":"integer"},"Attempt":{"format":"int32","type":"integer"},"TechnicianId":{"format":"int32","type":"integer"},"AuthUserId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.ChecklistTasks.CheckListWithTasksExtendedResponse":{"description":"Object containing the details of a checklist with asset tasks.","type":"object","properties":{"ChecklistWithTasks":{"description":"Details of an asset task checklist including its parameters and configured asset-related tasks.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ChecklistTasks.CheckListWithTasksResponse"}}}},"ServiceChannel.Services.Messaging.ChecklistTasks.CheckListWithTasksResponse":{"description":"Parameters of a checklist with asset tasks.","type":"object","properties":{"ChecklistName":{"description":"Checklist name.","type":"string"},"Id":{"format":"int32","description":"Checklist ID.","type":"integer"},"IsActive":{"description":"Defines whether the checklist is active or not.","default":false,"type":"boolean"},"CreatedDate":{"format":"date-time","description":"Date and time when the checklist was created.","type":"string"},"UpdatedDate":{"format":"date-time","description":"Date and time when the checklist was last updated.","type":"string"},"CreatedBy":{"format":"int32","description":"User ID of the employee who created the checklist.","type":"integer"},"UpdatedBy":{"format":"int32","description":"User ID of the employee who last updated the checklist.","type":"integer"},"Tasks":{"description":"A list of asset-related tasks configured for the checklist.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ChecklistTasks.ChecklistTaskResponse"}}}},"ServiceChannel.Services.Messaging.ChecklistTasks.ChecklistTaskResponse":{"description":"Asset task details.","type":"object","properties":{"Id":{"format":"int32","description":"Asset task ID.","type":"integer"},"CheckListId":{"format":"int32","description":"ID of the checklist the asset task belongs to.","type":"integer"},"TypeId":{"format":"int32","description":"ID of the asset type the task is configured for.","type":"integer"},"TaskTypeId":{"description":"ID of the asset task type.","enum":["AssetTask"],"type":"string"},"TaskTypeName":{"description":"Name of the asset task type.","type":"string"},"Name":{"description":"Asset task name.","type":"string"},"Description":{"description":"Asset task description.","type":"string"},"IsActive":{"description":"Defines whether the asset task is active or not.","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Checklists.CheckListTypesExtendedResponse":{"description":"Checklist type object.","type":"object","properties":{"ChecklistTypes":{"description":"A list of checklists with their ID and type.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Checklists.ChecklistTypesResponse"}}}},"ServiceChannel.Services.Messaging.Checklists.ChecklistTypesResponse":{"description":"Object containing the checklist ID and type.","type":"object","properties":{"id":{"format":"int32","description":"Checklist ID.","type":"integer"},"Type":{"description":"Checklist type:\r\n             • 0 — **Standard checklist** with questions that a technician is prompted to answer when working on a service request.\r\n             • 2 — **Asset task checklist** containing tasks for specific asset types that a technician should complete when servicing a work order.","enum":["Checklist","Survey","AssetTask","PlannedMaintenance"],"type":"string"}}},"ServiceChannel.Services.Messaging.Location.AssignProviderRequest":{"type":"object","properties":{"StoreId":{"type":"string"},"Trade":{"type":"string"},"ProviderId":{"format":"int32","type":"integer"},"Rank":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Contracts.GetContractsResponse":{"type":"object","properties":{"Contracts":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Contracts.Contract"}}}},"ServiceChannel.Services.Messaging.Contracts.Contract":{"description":"Contract object.","type":"object","properties":{"Id":{"format":"int32","description":"Numeric identifier of the provider’s assignment.","type":"integer"},"Rank":{"format":"int32","description":"Provider’s rank for the trade and location combo in the subscriber’s system.","type":"integer"},"Contractor":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.Provider"},"Client":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.Subscriber"},"Trade":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.Trade"},"Location":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.Location"},"Category":{"$ref":"#/definitions/ServiceChannel.Api.Model.Entities.Category"}}},"ServiceChannel.Services.Messaging.Trade.Trade":{"description":"Trade object.","type":"object","properties":{"Id":{"format":"int32","description":"Numeric identifier of the trade.","type":"integer"},"Name":{"description":"Trade name.","type":"string"},"SubscriberId":{"format":"int32","description":"Unique subscriber ID.","type":"integer"}}},"ServiceChannel.Api.Model.Entities.Category":{"type":"object","properties":{"Name":{"type":"string"},"HasDependency":{"default":false,"type":"boolean"},"PrimaryCategory":{"$ref":"#/definitions/ServiceChannel.Api.Model.Entities.PrimaryCategory"},"Id":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"UserId":{"format":"int32","type":"integer"}}},"ServiceChannel.Api.Model.Entities.PrimaryCategory":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"SubscriberId":{"format":"int32","type":"integer"},"UserId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Location.RetireProviderRequest":{"required":["ProviderId"],"type":"object","properties":{"StoreId":{"description":"Optional, When 'Trade' and 'StoreId' are not specified then provider is 'retired' from all subscriber's stores.","type":"string"},"Trade":{"description":"Optional, When 'Trade' and 'StoreId' are not specified then provider is 'retired' from all subscriber's stores.","type":"string"},"ProviderId":{"format":"int32","description":"Required Provider Id","type":"integer"}}},"ServiceChannel.Services.Messaging.ContractorTools.TechnicianDto":{"description":"The technician details object.","type":"object","properties":{"FirstName":{"description":"The first name of the technician.","type":"string"},"LoginName":{"description":"The login name of the technician.","type":"string"},"LastName":{"description":"The last name of the technician.","type":"string"},"UserId":{"format":"int64","description":"The ID of the technician in the Authentication service.","type":"integer"},"Email":{"description":"The email address of the technician.","type":"string"},"MobileNumber":{"description":"The mobile phone number of the technician.","type":"string"},"TechnicianAccessLevel":{"description":"The access level of the technician.","type":"array","items":{"type":"string"}},"EmployeeId":{"description":"The employee ID of the technician.","type":"string"}}},"ServiceChannel.Services.Messaging.ContractorTools.ExtendedRefrigerantCertificationDTO":{"description":"Object containing the details of a refrigerant certification.","type":"object","properties":{"Id":{"format":"int32","description":"Numeric identifier of the certificate in the system.","type":"integer"},"CertificationNumber":{"description":"Unique certificate number given by the party that granted the certificate.","type":"string"},"CertificationExpirationDateTime":{"format":"date-time","description":"Date and time when the certificate expires.","type":"string"},"Description":{"description":"Comment added to the attached file.","type":"string"},"FileUrl":{"description":"Path of the attached file.","type":"string"},"FileName":{"description":"Name of the attached file.","type":"string"},"TechnicianFullName":{"description":"First and last name of the technician who received the refrigerant certification.","type":"string"},"AuthUserId":{"format":"int64","description":"Single sign-on (SSO) ID of the technician who received the refrigerant certification.","type":"integer"},"CertificationDateTime":{"format":"date-time","description":"Date and time when the refrigerant certification becomes valid.","type":"string"},"CertificationLevelId":{"format":"int32","description":"Type ID of EPA 608 Technician Certification. Possible values: 1 - Type I, 2 - Type II , 3 - Type III, 4 - Universal.","type":"integer"},"CertificationLevel":{"description":"Type of EPA Section 608 Technician Certification. Possible values: Type Ⅰ - service of small appliances containing 5 lbs or less of refrigerant; Type Ⅱ - service or disposal of high- or very high-pressure appliances (containing more than 5 lbs of refrigerant); Type Ⅲ - service or disposal of low-pressure appliances; Universal - service of refrigerated appliances of all types.","type":"string"}}},"ServiceChannel.Services.Messaging.Currencies.GetAlphabeticalCodeResponse":{"description":"GetAlphabeticalCodeResponse","type":"object","properties":{"AlphabeticalCode":{"description":"AlphabeticalCode","type":"string"}}},"ServiceChannel.Services.Messaging.DashboardSettings.SetupFeedbackResponse":{"type":"object","properties":{"SetupId":{"format":"int32","type":"integer"},"EnableFeedback":{"default":false,"type":"boolean"},"EmailHeader":{"type":"string"},"CustomUnsatisfactoryMessage":{"type":"string"},"EnableNegativeFeedback":{"default":false,"type":"boolean"},"EnablePositiveFeedback":{"default":false,"type":"boolean"},"ShowDays":{"format":"int32","type":"integer"},"ShowCompletedDate":{"default":false,"type":"boolean"},"ShowResolution":{"default":false,"type":"boolean"},"EnableNegFeedNotification":{"default":false,"type":"boolean"},"EnableAutoConfirm":{"default":false,"type":"boolean"},"DaysPeriod":{"format":"int32","type":"integer"},"CustomMessage":{"type":"string"},"Statuses":{"type":"array","items":{"type":"string"}},"EnableScheduledDate":{"default":false,"type":"boolean"},"SkipUnsatisfactoryAlertsToProviders":{"default":false,"type":"boolean"},"UnsatisfactorySubmitAttemptsNotification":{"default":false,"type":"boolean"},"SendFeedbackToCreatedByUser":{"default":false,"type":"boolean"},"EnableSupplyManagerEmailConfirmation":{"default":false,"type":"boolean"},"SupplyManagerEmailConfirmationHoursAfter":{"format":"int32","type":"integer"},"SupplyManagerEmailConfirmationCustomNotificationMessage":{"type":"string"},"AnsweringCustomQuestionOptional":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestResponse":{"type":"object","properties":{"SetupId":{"format":"int32","description":"Store Dashboard Setup ID.","type":"integer"},"EnableRequestWizard":{"description":"This flag enables/disables request wizard for the dashboard.","default":false,"type":"boolean"},"ShowPrivateStoreNotes":{"description":"Show/hide private store notes in the 'location notes' field on the first step of the service request wizard page.","default":false,"type":"boolean"},"ShowProviderPhoneNumber":{"description":"Show/hide provider phone number on the confirmation step after an issue has been submitted.","default":false,"type":"boolean"},"ShowLastServiceCall":{"description":"Show last service call and last description in the body of alert email.","default":false,"type":"boolean"},"SetOriginalVendorForRecalls":{"description":"This option controls whether original vendor is assigned to the work order in case of a recall.","default":false,"type":"boolean"},"NteToZeroForRecalls":{"description":"Set NTE to zero if a new service request is marked as a recall.","default":false,"type":"boolean"},"SendAlertToFM":{"description":"This flag controls whether service request email will be sent to the facility managers or not.","default":false,"type":"boolean"},"TurnOffDescription":{"description":"Show/hide problem description field.","default":false,"type":"boolean"},"DaysOfHistoryToDisplay":{"format":"int32","description":"How many days of work order history to display on the dublicates warning report.","type":"integer"},"ShowStoreWarrantyStr":{"description":"There are three possible options: 1) 'none' hides a StoreWarrantyMessage on the first step of the Request Wizard;\r\n            2) 'show' shows a StoreWarrantyMessage on the first step of the Request Wizard;\r\n            3) 'stop' shows a StoreWarrantyMessage without a possibility to move to the next step.","type":"string"},"StoreWarrantyMessage":{"description":"A store warranty message to show on the first step of the request wizard page.","type":"string"},"ConfirmationMessage":{"description":"This message is shown on the confirmation page after the user submits their request.","type":"string"},"ProviderNotFoundMessage":{"description":"An error message to show when provider is not found for the specified issue choice.","type":"string"},"EnableEquipment":{"description":"Show equipment","default":false,"type":"boolean"},"DuplicateFilters":{"type":"array","items":{"type":"string"}},"ExcludedCategoriesOpenDup":{"type":"array","items":{"type":"string"}},"ExcludedCategoriesClosedDup":{"type":"array","items":{"type":"string"}},"ExcludedStatuses":{"type":"array","items":{"type":"string"}},"ExcludedTradesOpenDup":{"type":"array","items":{"type":"string"}},"EnableEquipmentReplacementFlag":{"default":false,"type":"boolean"},"EnableRequestWizardMobile":{"description":"This flag enables/disables request wizard for the SC Mobile.","default":false,"type":"boolean"},"EnableLocationNotes":{"default":false,"type":"boolean"},"AlwaysShowLocationNotes":{"default":false,"type":"boolean"},"SkipTroubleshootingStep":{"default":false,"type":"boolean"},"HidePriority":{"default":false,"type":"boolean"},"EnableIssueListKeywordSearch":{"description":"This flag enables/disables the keyword search functionality on the request wizard.\r\n            When enabled, users can type keywords to more quickly identify issue list selections.","default":false,"type":"boolean"},"HideGPSRadius":{"default":false,"type":"boolean"},"AssetFirstWorkOrderCreation":{"description":"Enables asset-first approach for work order creation.","default":false,"type":"boolean"},"EnableEquipmentReplacement":{"default":false,"type":"boolean"}}},"ServiceChannel.Api.Model.Dashboard.Settings.SetupRequest":{"type":"object","properties":{"SetupId":{"format":"int32","type":"integer"},"EnableRequestWizard":{"default":false,"type":"boolean"},"ShowPrivateStoreNotes":{"default":false,"type":"boolean"},"ShowProviderPhoneNumber":{"default":false,"type":"boolean"},"ShowLastServiceCall":{"default":false,"type":"boolean"},"SetOriginalVendorForRecalls":{"default":false,"type":"boolean"},"NteToZeroForRecalls":{"default":false,"type":"boolean"},"SendAlertToFM":{"default":false,"type":"boolean"},"TurnOffDescription":{"default":false,"type":"boolean"},"DaysOfHistoryToDisplay":{"format":"int32","type":"integer"},"ShowStoreWarrantyStr":{"type":"string"},"ShowStoreWarranty":{"enum":["None","Show","Stop"],"type":"string","readOnly":true},"StoreWarrantyMessage":{"type":"string"},"ConfirmationMessage":{"type":"string"},"ProviderNotFoundMessage":{"type":"string"},"EnableEquipment":{"default":false,"type":"boolean"},"DuplicateFilters":{"type":"array","items":{"type":"string"}},"ExcludedCategoriesOpenDup":{"type":"array","items":{"type":"string"}},"ExcludedCategoriesClosedDup":{"type":"array","items":{"type":"string"}},"ExcludedTradesOpenDup":{"type":"array","items":{"type":"string"}},"EnableEquipmentReplacementFlag":{"default":false,"type":"boolean"},"EnableRequestWizardMobile":{"default":false,"type":"boolean"},"EnableLocationNotes":{"default":false,"type":"boolean"},"AlwaysShowLocationNotes":{"default":false,"type":"boolean"},"SkipTroubleshootingStep":{"default":false,"type":"boolean"},"HidePriority":{"default":false,"type":"boolean"},"EnableIssueListKeywordSearch":{"default":false,"type":"boolean"},"AssetFirstWorkOrderCreation":{"default":false,"type":"boolean"},"HideGPSRadius":{"default":false,"type":"boolean"},"DuplicateMessage":{"type":"string"}}},"ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestConfirmResponse":{"type":"object","properties":{"ChangeableCategory":{"default":false,"type":"boolean"},"ChangeablePriority":{"default":false,"type":"boolean"},"ChangeablePrioritySetDefault":{"default":false,"type":"boolean"},"ChangeableNte":{"default":false,"type":"boolean"},"AllowChangeableCurrency":{"default":false,"type":"boolean"},"ChangeableScheduledDate":{"default":false,"type":"boolean"},"ChangeableProvider":{"default":false,"type":"boolean"},"EnableAdditionalCodes":{"default":false,"type":"boolean"},"ChangeableGlCode":{"default":false,"type":"boolean"},"CreateLinkedRequest":{"default":false,"type":"boolean"},"AvoidDispatching":{"default":false,"type":"boolean"},"ShowRecipients":{"default":false,"type":"boolean"},"AddCopyRecipient":{"default":false,"type":"boolean"},"DeleteCopyRecipients":{"default":false,"type":"boolean"},"EmptyProviderEmailNotification":{"default":false,"type":"boolean"},"EnablePO":{"default":false,"type":"boolean"},"RequirePO":{"default":false,"type":"boolean"},"EnableWO":{"default":false,"type":"boolean"},"EnableLabels":{"default":false,"type":"boolean"},"LabelsAsSelectOnly":{"default":false,"type":"boolean"},"EditWeatherType":{"default":false,"type":"boolean"},"MaintainOrDecreasePriority":{"default":false,"type":"boolean"}}},"ServiceChannel.Api.Model.Dashboard.Settings.SetupRequestConfirm":{"type":"object","properties":{"SetupId":{"format":"int32","type":"integer"},"ChangeableCategory":{"default":false,"type":"boolean"},"ChangeablePriority":{"default":false,"type":"boolean"},"ChangeableNte":{"default":false,"type":"boolean"},"ChangeableScheduledDate":{"default":false,"type":"boolean"},"ChangeableProvider":{"default":false,"type":"boolean"},"CreateLinkedRequest":{"default":false,"type":"boolean"},"ShowRecipients":{"default":false,"type":"boolean"},"AddCopyRecipient":{"default":false,"type":"boolean"},"DeleteCopyRecipients":{"default":false,"type":"boolean"},"EnableAdditionalCodes":{"default":false,"type":"boolean"},"EmptyProviderEmailNotification":{"default":false,"type":"boolean"},"EnablePO":{"default":false,"type":"boolean"},"RequirePO":{"default":false,"type":"boolean"},"EnableWO":{"default":false,"type":"boolean"},"ChangeablePrioritySetDefault":{"default":false,"type":"boolean"},"AllowChangeableCurrency":{"default":false,"type":"boolean"},"AvoidDispatching":{"default":false,"type":"boolean"},"EnableLabels":{"default":false,"type":"boolean"},"LabelsAsSelectOnly":{"default":false,"type":"boolean"},"EditWeatherType":{"default":false,"type":"boolean"},"ChangeableGlCode":{"default":false,"type":"boolean"},"MaintainOrDecreasePriority":{"default":false,"type":"boolean"},"ShowAsset":{"default":false,"type":"boolean"},"EnableAssignee":{"default":false,"type":"boolean"}}},"ServiceChannel.Api.Model.Dashboard.Settings.SetupGeneral":{"type":"object","properties":{"SetupId":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"CurrencyId":{"format":"int32","type":"integer"},"Title":{"type":"string"},"Theme":{"type":"string"},"NavigationMap":{"type":"string"},"IssueList":{"type":"string"},"FavIcon":{"type":"string"},"Culture":{"type":"string"},"SecondCulture":{"type":"string"},"DefaultUri":{"type":"string"},"RedirectUri":{"type":"string"},"AllowAddingAttachments":{"default":false,"type":"boolean"},"RequireAttachments":{"default":false,"type":"boolean"},"UseObjectIssueList":{"default":false,"type":"boolean"},"ShowOtherCategories":{"default":false,"type":"boolean"},"HideDashboardSelection":{"default":false,"type":"boolean"},"HideLateToArrive":{"default":false,"type":"boolean"},"DashboardDescription":{"type":"string"},"SpacesWoPlacementConfirmation":{"default":false,"type":"boolean"},"DateFormat":{"type":"string"},"TimeFormat":{"type":"string"},"DecimalSeparator":{"type":"string"}}},"ServiceChannel.Services.Messaging.DashboardSettings.SetupNoteResponse":{"description":"Settings for Dashboard Notes","type":"object","properties":{"SetupId":{"format":"int32","description":"Store Dashboard Setup ID.","type":"integer"},"AllowAddingNotes":{"description":"Enable / disable an ability to add workorder notes.","default":false,"type":"boolean"},"AllowAddingNotesForCompletedWorkorders":{"description":"Enable / disable an ability to add notes for workorders with status \"completed\".","default":false,"type":"boolean"},"MaskMoney":{"description":"Parse a work order description and a note text in order to mask money.","default":false,"type":"boolean"},"MaskPhone":{"description":"Parse a work order description and a note text in order to mask phone numbers.","default":false,"type":"boolean"},"MaskEmail":{"description":"Parse a work order description and a note text in order to mask email.","default":false,"type":"boolean"},"ShowProviderRecipients":{"description":"Show provider recipients as wo note recipients.","default":false,"type":"boolean"},"ShowSubscriberRecipients":{"description":"Show subscriber recipients as wo note recipients.","default":false,"type":"boolean"},"ShowPublicUserEmailsOnly":{"description":"Show only users with public emails as wo note recipients.","default":false,"type":"boolean"},"ShowUniversalRecipients":{"description":"Show universal users as wo note recipients.","default":false,"type":"boolean"},"LocationNotesAsRecipients":{"description":"Show emails from location notes as wo note recipients.","type":"string"},"AutoCopyContractorNotes":{"description":"Specify custom addressees to show as wo note recipients.","default":false,"type":"boolean"},"CustomNoteRecipients":{"description":"Specify custom addressees to show as wo note recipients.","type":"string"},"Statuses":{"type":"array","items":{"type":"string"}},"DisableNotes":{"default":false,"type":"boolean"},"NoteEmails":{"description":"Get addresses without dublicates.","type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.Notifications.EmailNotificationSubscriptionRequest":{"description":"Subscribe Email Notification Request model","required":["NotificationType"],"type":"object","properties":{"NotificationType":{"description":"Notification type: Check In , ....","enum":["CheckIn","CheckOut","BadgeScanRequired"],"type":"string"},"LanguageCode":{"description":"ISO 639-1 two-letter code for the language.","type":"string"},"NotificationRules":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.NotificationRulesRequest","description":"Filter for Notification Request"}}},"ServiceChannel.Services.Messaging.Notifications.NotificationRulesRequest":{"description":"Rules for Notification Request model","type":"object","properties":{"Rules":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.Rule"}}}},"ServiceChannel.Services.Messaging.Notifications.Rule":{"type":"object","properties":{"Field":{"type":"string"},"Value":{"type":"string"}}},"ServiceChannel.Services.Messaging.Eula.EulaAgreement":{"description":"Represents an EULA agreement","type":"object","properties":{"Text":{"description":"EULA agreement text","type":"string"}}},"System.Collections.Generic.KeyValuePair[System.String,System.String]":{"type":"object","properties":{"Key":{"type":"string","readOnly":true},"Value":{"type":"string","readOnly":true}}},"ServiceChannel.Services.Messaging.Features.SetFeatureRequest":{"type":"object","properties":{"Name":{"description":"Name","type":"string"},"AdditionalData":{"description":"AdditionalData","type":"string"},"IsOn":{"description":"IsOn","default":false,"type":"boolean"},"EnableForAll":{"description":"EnableForAll","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Feedback.FeedbackRequest":{"type":"object","properties":{"SetupId":{"format":"int32","description":"Dashboard SetupId (optional)","type":"integer"},"LocationId":{"format":"int32","type":"integer"},"Answer":{"description":"Satisfactory answer.\r\n            Supported values: satisfactory, unsatisfactory","type":"string"},"Comment":{"description":"User text comment.\r\n            Required if answer is \"unsatisfactory\".\r\n            Required if score lower than 3","type":"string"},"StarScore":{"format":"int32","description":"Star scrore. The integer value from 1 to 5 (Required for satisfactory answer)","type":"integer"},"SubscriberId":{"format":"int32","description":"Subscriber Id","type":"integer"}}},"ServiceChannel.Services.Messaging.Feedback.FeedbacksForReviewRequest":{"type":"object","properties":{"LocationId":{"format":"int32","description":"LocationId","type":"integer"},"SetupId":{"format":"int32","description":"Dashboard setupId (optional)","type":"integer"},"OrderByField":{"description":"Order by field","enum":["TrackingNumber","Trade","ScheduledDate","Vendor","Priority","Caller","Status","Area","ComplitionDate","FeedbackLeft"],"type":"string"},"OrderDirection":{"description":"Order direction","enum":["Ascending","Descending"],"type":"string"},"ShowMyWorkOrders":{"description":"Activates filter by current user id","default":false,"type":"boolean"},"SubscriberId":{"format":"int32","description":"Subscriber Id","type":"integer"}}},"ServiceChannel.Services.Messaging.Feedback.WorkorderFeedback":{"type":"object","properties":{"TrackingNumber":{"format":"int32","type":"integer"},"Description":{"type":"string"},"Caller":{"type":"string"},"CallDateString":{"type":"string"},"CallDate_DTO":{"format":"date-time","type":"string"},"ScheduledDateString":{"type":"string"},"ScheduledDate_DTO":{"format":"date-time","type":"string"},"CreatedBy":{"type":"string"},"Vendor":{"type":"string"},"VendorPhone":{"type":"string"},"PrioritySub":{"type":"string"},"Trade":{"type":"string"},"Category":{"type":"string"},"Review":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.FeedbackReview"},"Status":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkorderStatusDescriptor"},"Area":{"type":"string"},"CompletedDate":{"format":"date-time","type":"string"},"NotesCount":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Feedback.FeedbackReview":{"type":"object","properties":{"Id":{"format":"int32","description":"Entity Id","type":"integer"},"TrackingNumber":{"format":"int32","description":"Work order tracking number. For provider reviews it is null","type":"integer"},"SubscriberName":{"description":"Subscriber display name","type":"string"},"LocationName":{"description":"Location name (Store Id)","type":"string"},"UserFullName":{"description":"User name who submit a review","type":"string"},"ReviewedDate":{"format":"date-time","description":"Date when user posted or updated a review","type":"string"},"StarScore":{"format":"int32","description":"Review star score. From 1 to 5","type":"integer"},"Comment":{"description":"User comment","type":"string"}}},"ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForProviderRequest":{"type":"object","properties":{"ProviderId":{"format":"int32","description":"Provider Id","type":"integer"},"SearchWithin":{"description":"Search within reviews comment","type":"string"},"PageSize":{"format":"int32","description":"Response page size (default 10)","type":"integer"},"PageOffset":{"format":"int32","description":"Response page offset (default 0)","type":"integer"},"SortBy":{"description":"Sort by field (default by Recent)","enum":["Recent","HighestScoreFirst","LowestScoreFirst"],"type":"string"},"SubscriberId":{"format":"int32","description":"Subscriber Id","type":"integer"}}},"ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForProviderResponse":{"type":"object","properties":{"Reviews":{"description":"User reviews for work orders or providers","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.FeedbackReview"}},"TotalCount":{"format":"int32","type":"integer"},"TotalFilteredCount":{"format":"int32","type":"integer"},"PageSize":{"format":"int32","type":"integer"},"PageOffset":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Feedback.ReviewProviderRequest":{"type":"object","properties":{"LocationId":{"format":"int32","description":"Location Id","type":"integer"},"ProviderId":{"format":"int32","description":"Provider Id","type":"integer"},"StarScore":{"format":"int32","description":"Review star score. From 1 to 5","type":"integer"},"Comment":{"description":"User comment","type":"string"},"Id":{"format":"int32","description":"Provide review Id to update Comment and StarScore (optional)","type":"integer"},"SubscriberId":{"format":"int32","description":"Subscriber Id","type":"integer"}}},"ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsInfoRequest":{"type":"object","properties":{"ProviderId":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForWorkOrdersResponse":{"type":"object","properties":{"Reviews":{"description":"User reviews for work orders","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.FeedbackReview"}}}},"ServiceChannel.Services.Messaging.GlCode.RetrieveGlCodesResponse":{"description":"Object containing the details of a GL Code.","type":"object","properties":{"GetGlCodeResponses":{"description":"Details of a GL Code returned for the authorized subscriber.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.GlCode.GetGlCodeResponse"}}}},"ServiceChannel.Services.Messaging.GlCode.GetGlCodeResponse":{"description":"GL Code object.","type":"object","properties":{"GlCode":{"description":"GL Code numeric identifier.","type":"string"},"Trade":{"description":"Trade name that corresponds to the GL Code.","type":"string"},"Category":{"description":"Category name that corresponds to the GL Code.","type":"string"},"Location":{"description":"The numeric identifier of the store, StoreId, in the client's system. Assigned by and unique per subscriber.","type":"string"}}},"ServiceChannel.Services.Messaging.ApprovalCodes.GetApprovalCodesWithOptionsResponse":{"description":"Holds response.","type":"object","properties":{"ApprovalCodes":{"description":"Gets or sets ApprovalCodes.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Entities.ApprovalCodes.ApprovalCodeWithOptions"}},"ErrorCode":{"format":"int32","description":"Numeric identifier that determines the nature of an error. Possible values: `0` - success, otherwise - error.","type":"integer"},"Message":{"description":"Defines that the file’s remote storage is unavailable or its URL cannot be found.","type":"string"}}},"ServiceChannel.Api.Model.Entities.ApprovalCodes.ApprovalCodeWithOptions":{"type":"object","properties":{"LocationId":{"format":"int32","type":"integer"},"LocationName":{"type":"string"},"LocationStoreId":{"type":"string"},"EditableAtLineItemLevel":{"default":false,"type":"boolean"},"ValueFormat":{"format":"int32","type":"integer"},"DefaultOptionId":{"format":"int32","type":"integer"},"DefaultOption":{"type":"string"},"Options":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Entities.ApprovalCodes.AdditionalApprovalCodeOption"}},"Id":{"format":"int32","type":"integer"},"CategoryId":{"format":"int32","type":"integer"},"Category":{"type":"string"},"Name":{"type":"string"},"Code":{"type":"string"},"OrderNumber":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"IsEnabled":{"default":false,"type":"boolean"}}},"ServiceChannel.Api.Model.Entities.ApprovalCodes.AdditionalApprovalCodeOption":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"AdditionalApprovalCodeId":{"format":"int32","type":"integer"},"OptionValue":{"type":"string"}}},"ServiceChannel.Services.Messaging.GlCode.GetGlCodeResponseMessage":{"description":"GL Code name.","type":"object","properties":{"GlCode":{"description":"GL Code numeric identifier.","type":"string"}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceSettingsGeneral":{"description":"General invoice settings object.","type":"object","properties":{"DaysBeforePostingDate":{"format":"int32","description":"The number of days prior to the invoice posting date within which the invoice creation date can be set. Providers can not create invoices for a date in the past that is older than the specified number of days from the invoice posting date.","type":"integer"},"MaxDaysAfterPostingDate":{"format":"int32","description":"The number of days after the invoice posting date within which the invoice creation date can be set. Providers can not generate invoices for a date in the future that is greater than the specified number of days from the invoice posting date.","type":"integer"},"RequireResolutionText":{"description":"Defines whether providers are required to enter a resolution when creating an invoice.","default":false,"type":"boolean"},"RequireApprovalText":{"description":"Defines whether subscriber’s employees are required to enter a comment when approving invoices.","default":false,"type":"boolean"},"IsInvoiceApprovalCommentFeatureEnabled":{"description":"Defines whether the feature that prompts subscriber’s employees to enter a comment when approving invoices is turned on.","default":false,"type":"boolean"},"IsInvoiceNumberValidationFeatureEnabled":{"description":"Defines whether the feature that enables the invoice number validation is turned on.","default":false,"type":"boolean"},"IsInvoiceNegativeFeatureEnabled":{"description":"Defines whether the feature that enables the invoice negative amounts for the required line items.","default":false,"type":"boolean"},"IsInvoiceZeroVATEU":{"description":"Use Us UI model in international locations.","default":false,"type":"boolean"},"AvailableTrades":{"description":"A list of trades configured for the subscriber. The following parameters are returned for each trade:<br /> • `Id` — trade ID.<br /> • `Name` — trade name.<br /> • `PrimaryTradeName` — name of the primary trade for this trade.","type":"string"},"AvailableCategories":{"description":"A list of categories set up for the subscriber. The following parameters are returned for each category:<br /> • `Id` — category ID.<br /> • `SubscriberId` — subscriber ID.<br /> • `Name` — category name.<br /> • `HasDependency` — defines whether the category has dependent categories.<br /> • `PrimaryCategoryID` — ID of the primary category for this category.<br /> • `PrimaryCategoryName` — name of the primary category for this category.","type":"string"},"LaborTradeIds":{"description":"Trade IDs for which providers must itemize Labor charges when creating a line-item invoice.","type":"array","items":{"format":"int32","type":"integer"}},"MaterialsTradeIds":{"description":"Trade IDs for which providers must itemize Material charges when creating a line-item invoice.","type":"array","items":{"format":"int32","type":"integer"}},"TravelTradeIds":{"description":"Trade IDs for which providers must itemize Travel charges when creating a line-item invoice.","type":"array","items":{"format":"int32","type":"integer"}},"OtherTradeIds":{"description":"Trade IDs for which providers must itemize Other charges when creating a line-item invoice.","type":"array","items":{"format":"int32","type":"integer"}},"LaborCategoryIds":{"description":"Category IDs for which providers must itemize Labor charges when creating a line-item invoice.","type":"array","items":{"format":"int32","type":"integer"}},"MaterialsCategoryIds":{"description":"Category IDs for which providers must itemize Material charges when creating a line-item invoice.","type":"array","items":{"format":"int32","type":"integer"}},"TravelCategoryIds":{"description":"Category IDs for which providers must itemize Travel charges when creating a line-item invoice.","type":"array","items":{"format":"int32","type":"integer"}},"OtherCategoryIds":{"description":"Category IDs for which providers must itemize Other charges when creating a line-item invoice.","type":"array","items":{"format":"int32","type":"integer"}},"NumberRequirementsModel":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.NumberRequirementsModel","description":"Parameters defining requirements for invoice numbers."},"IsProviderAbleToAddSalesTax":{"description":"Defines whether the provider can add sales tax to its ivoices","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Invoices.NumberRequirementsModel":{"description":"Invoice number requirements object.","type":"object","properties":{"AutoGenerationTypesSelect":{"description":"A list of options in the \"Generation uniqueness rule\" drop-down list a subscriber admin can choose from when configuring invoice number rules for automatically generated invoices.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.SelectItem"}},"RestrictionTypesSelect":{"description":"A list of options in the \"Restrictions\" drop-down list a subscriber admin can choose from when configuring invoice number restrictions for manually created invoices.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.SelectItem"}},"ReuseInvoiceNumbersSelect":{"description":"A list of options in the \"ReuseInvoiceNumber\" drop-down list a subscriber admin can choose from when configuring invoice number.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.SelectItem"}},"InvoiceNumberRequirement":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceNumberRequirement","description":"Detailed info about the invoice number requirements set up for the subscriber listing the selected requirements and rules, users who submitted and updated them, when these actions took place, etc."},"DefaultRestrictionComments":{"description":"A list of default explanatory comments on the invoice number format for the corresponding restrictions. A comment is displayed to a provider user in a tooltip when they try to submit an invoice whose number does not meet the restrictions specified by their subscriber. See `RestrictionTypesSelect` to identify which number (`Value`) corresponds to which restriction type: `2` — *Digits Only*, `3` — *Alphanumeric Only*.","type":"object","additionalProperties":{"type":"string"}},"DefaultRestrictionPatterns":{"description":"A list of default regular expressions that define search patterns used to validate the number format of invoices created manually. See `RestrictionTypesSelect` to identify which number (`Value`) corresponds to which restriction type: `2` — *Digits Only*, `3` — *Alphanumeric Only*.","type":"object","additionalProperties":{"type":"string"}},"Resources":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.Localizations","description":"A list of UI labels that appear in the \"Invoice Number\" section on the \"General\" tab of the \"Admin - Invoices\" page in Service Automation."}}},"ServiceChannel.Services.Messaging.Invoices.SelectItem":{"description":"Object containing options a subscriber admin can choose from when configuring restrictions and rules for invoice numbers.","type":"object","properties":{"Value":{"format":"int32","description":"Number indicating the order of the option in the corresponding drop-down list for configuring invoice number restrictions and rules. The count starts from 0.<br /> • Check `RestrictionTypesSelect` to find out which options are available in the \"Restrictions\" drop-down list where a subscriber admin can set up number restrictions for manually created invoices.<br /> • See `AutoGenerationTypesSelect` for options in the \"Generation uniqueness rule\" drop-down list used for configuring number generation rules for automatically created invoices.","type":"integer"},"Name":{"description":"Name of the option in the corresponding drop-down list — \"Restrictions\" or \"Generation uniqueness rule\".","type":"string"}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceNumberRequirement":{"description":"Invoice number requirements object.","type":"object","properties":{"Id":{"format":"int32","description":"ID of the regular expression pattern used to validate the numbers of invoices created manually.","type":"integer"},"SubscriberId":{"format":"int32","description":"Unique ID of the subscriber whose invoice number requirements are returned.","type":"integer"},"Pattern":{"description":"Regular expression pattern used to validate the numbers of invoices created manually.<br />A value is returned even if the selected `RestrictionType` is `0` — *None*. In this case, it’s the last pattern entered in the field.","type":"string"},"Comment":{"description":"Comment on the invoice number format displayed to a provider user in a tooltip when they try to submit an invoice whose number does not meet the specified restrictions. Invoice numbers are validated by the regular expression pattern specified in `Pattern`.<br />A value is returned even if the selected `RestrictionType` is `0` — *None*. In this case, it’s the last comment entered in the field.","type":"string"},"RestrictionType":{"description":"Selected restriction for the numbers of invoices created manually. See `RestrictionTypesSelect` to identify which number (`Value`) corresponds to which restriction type.","enum":["None","Custom","DigitsOnly","AlphaNumericOnly"],"type":"string"},"AutoGenerationType":{"description":"Selected rule for the numbers of invoices generated automatically. See `AutoGenerationTypesSelect` to identify which number (`Value`) corresponds to which rule.","enum":["None","CurrentDate"],"type":"string"},"CreatedDate":{"format":"date-time","description":"Date and time when the invoice number requirements were created.","type":"string"},"UpdatedDate":{"format":"date-time","description":"Date and time when the invoice number requirements were last updated.","type":"string"},"CreatedByUserId":{"format":"int32","description":"Unique ID of the subscriber admin user who created the invoice number requirements.","type":"integer"},"UpdatedByUserId":{"format":"int32","description":"Unique ID of the subscriber admin user who last updated the invoice number requirements.","type":"integer"},"CreatedByUser":{"description":"Username of the subscriber admin who created the invoice number requirements.","type":"string"},"UpdatedByUser":{"description":"Username of the subscriber admin who last updated the invoice number requirements. The username appears in the **Invoice Number** section next to **Last modified**.","type":"string"},"ReuseInvoiceNumber":{"format":"byte","description":"Reuse invoice number","type":"string"},"IsNew":{"description":"Defines whether a default restriction pattern is used.","default":false,"type":"boolean","readOnly":true},"CreatedDateString":{"description":"Date when the invoice number requirements were created.","type":"string","readOnly":true},"UpdatedDateString":{"description":"Date when the invoice number requirements were last updated. The date appears in the **Invoice Number** section next to **Last modified**.","type":"string","readOnly":true}}},"ServiceChannel.Services.Messaging.Invoices.Localizations":{"description":"The object for UI labels that appear in the \"Invoice Number\" section on the \"General\" tab of the \"Admin - Invoices\" page in Service Automation. Note that only subscriber users with the Super Admin secondary role can access this page.","type":"object","properties":{"InvoiceNumberLabel":{"description":"Label for the \"Invoice Number\" section name.","type":"string"},"LastModifiedLabel":{"description":"The \"Last modified\" label for details about who last updated the invoice requirements and when.","type":"string"},"RestrictionLabel":{"description":"Label for the \"Restrictions\" drop-down list where a subscriber admin selects which restriction should apply to the numbers of manually created invoices.","type":"string"},"GenerationRuleLabel":{"description":"Label for the \"Generation uniqueness rule\" drop-down list where a subscriber admin selects which rule should apply to the numbers of automatically generated invoices.","type":"string"},"HelpStringLabel":{"description":"The \"Help string (to show vendors)\" label for the field containing comments shown to a provider when they try to submit an invoice whose number does not meet the restrictions specified by a subscriber.","type":"string"},"PatternPlaceHolder":{"description":"A placeholder text shown in the field where a subscriber admin enters a regular expression pattern to set restrictions for the numbers of manually created invoices.","type":"string"},"CommentPlaceHolder":{"description":"A placeholder text shown in the field where a subscriber admin enters a comment for the restriction applied to the numbers of manually created invoices based on the selected restriction type.","type":"string"}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceRejectionReasonResponse":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"Description":{"type":"string"},"Retired":{"default":false,"type":"boolean"},"ReasonType":{"enum":["Custom","WorkOrderNotInvoiceable","InvoiceRequiresCorrection","Other"],"type":"string"}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceStatisticsResponse":{"description":"Invoice statistics response class","type":"object","properties":{"DaysPeriod":{"format":"int32","description":"Gets or sets the period in days, last X days for which Invoices statistics was collected","type":"integer"},"WoReadyForInvoices":{"format":"int32","description":"Gets or sets the count of Work Orders ready for Invoices","type":"integer"},"OpenInvoices":{"format":"int32","description":"Gets or sets the count of open Invoices","type":"integer"},"ApprovedInvoicesDaysPeriod":{"format":"int32","description":"Gets or sets the period in days, last X days during which Invoices are approved","type":"integer"},"ApprovedInvoices":{"format":"int32","description":"Gets or sets the count of Invoices approved in the past <ApprovedInvoicesDaysPeriod /> days","type":"integer"}}},"ServiceChannel.Services.Messaging.Invoices.CreateInvoiceRequest":{"required":["InvoiceNumber","WoIdentifier"],"type":"object","properties":{"InvoiceNumber":{"description":"Invoice identifier. Must be unique for each invoice.","type":"string"},"InvoiceDate":{"format":"date-time","description":"Date and time when the invoice was issued.","type":"string"},"InvoiceDateDTO":{"format":"date-time","description":"Date and time when the invoice was issued. Indicated with the UTC offset.","type":"string"},"WoIdentifier":{"type":"string"},"InvoiceTax":{"format":"double","description":"The amount of the tax.","type":"number"},"PostedTaxRate":{"format":"float","type":"number"},"NonTaxableLabor":{"format":"int32","type":"integer"},"NonTaxableTravel":{"format":"int32","type":"integer"},"NonTaxableMaterial":{"format":"int32","type":"integer"},"NonTaxableFreight":{"format":"int32","type":"integer"},"NonTaxableOther":{"format":"int32","type":"integer"},"WithMismatchedRates":{"default":false,"type":"boolean"},"InvoiceTotal":{"format":"double","type":"number"},"InvoiceText":{"description":"Detailed description of the work completed. Subscriber can change this field to `required`.","type":"string"},"InvoiceAmountsDetails":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceAmountsDetails"},"InvoiceTaxesDetails":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceTaxesDetails"},"Tax2Details":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.Tax2Details","description":"Gets or sets the additional invoice tax.\r\n            Typically used outside of the united states in Europe for VAT taxes and in Canada for GST/PST/QST/HST taxes."},"TaxIncluded":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.CreatingInvoiceTaxIncludedRequest","description":"Gets or sets the invoice tax included (the taxes included into amount of the InvoiceAmountsDetails items)."},"Labors":{"description":"Get or set the labors description (Subscriber can change this field to required).","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceLabor"}},"Materials":{"description":"Get or set the materials description (Subscriber can change this field to required).","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceMaterial"}},"Travels":{"description":"Get or set the materials description (Subscriber can change this field to required).","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceTravel"}},"Others":{"description":"Get or set the others description (Subscriber can change this field to required).","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceOther"}},"ExplainDispute":{"description":"Gets or sets the explain dispute.","type":"string"},"SubmitDisputed":{"default":false,"type":"boolean"},"VendorId":{"format":"int32","description":"Gets or sets vendor payee identifier.","type":"integer"},"Terms":{"description":"Invoice Terms","type":"string"},"Attachments":{"description":"Optional","type":"array","items":{"$ref":"#/definitions/AddInvoiceAttachmentRequest"}}}},"ServiceChannel.Services.Messaging.Invoices.CreatingInvoiceTaxIncludedRequest":{"description":"The invoice tax included request model.","type":"object","properties":{"LaborTaxIncluded":{"format":"byte","type":"string"},"TravelTaxIncluded":{"format":"byte","type":"string"},"MaterialTaxIncluded":{"format":"byte","type":"string"},"FreightTaxIncluded":{"format":"byte","type":"string"},"OtherTaxIncluded":{"format":"byte","type":"string"}}},"AddInvoiceAttachmentRequest":{"type":"object","properties":{"Name":{"type":"string"},"Description":{"type":"string"},"Path":{"type":"string"},"Visibility":{"format":"int32","description":"Note visibility - valid values: null, 1, 2, 3","type":"integer"},"IsInvoiceDigitalCopy":{"description":"Mark attachment as Invoice Digital Copy","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Invoices.ApiGetInvoiceResponse":{"type":"object","properties":{"VendorPayee":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.ApiVendorPayee"},"ProviderId":{"format":"int32","description":"Gets or sets provider identifier.","type":"integer"},"SubscriberId":{"format":"int32","description":"Gets or sets subscriber identifier.","type":"integer"},"LocationId":{"format":"int32","description":"Gets or sets location identifier.","type":"integer"},"InvoiceNumber":{"description":"Gets or sets invoice number.","type":"string","readOnly":true},"WithAutoApprovalCriteria":{"description":"Gets or sets if invoice meets Auto Approval Criteria.","default":false,"type":"boolean"},"PostedDateStr":{"type":"string","readOnly":true},"InvoiceDateStr":{"type":"string","readOnly":true},"PaidDateStr":{"type":"string","readOnly":true},"StarredDateStr":{"type":"string","readOnly":true},"ApprovedDateStr":{"type":"string","readOnly":true},"TransferredDateStr":{"type":"string","readOnly":true},"LastActionDateStr":{"type":"string","readOnly":true},"StatusChangeDateStr":{"type":"string","readOnly":true},"ProviderName":{"type":"string"},"PreviousUpdated":{"type":"string"},"Discount":{"format":"double","type":"number"},"SubscriberFee":{"format":"double","type":"number"},"ProviderFee":{"format":"double","type":"number"},"InPaymentManager":{"default":false,"type":"boolean"},"DiscountPercent":{"format":"double","type":"number"},"Status":{"type":"string"},"EarlyPayFeePercent":{"format":"double","type":"number"},"Labels":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Workorders.Label"}},"WeatherEventTypeForInvoice":{"$ref":"#/definitions/ServiceChannel.Api.Model.Invoices.WeatherEventTypeForInvoice"},"IsHideUsernameOnInvoice":{"default":false,"type":"boolean"},"IsInvoiceNegativeLineItemsEnabled":{"default":false,"type":"boolean"},"IsHolidayLaborRate":{"default":false,"type":"boolean"},"ProjectId":{"format":"int32","description":"WO ProjectId","type":"integer"},"IsRestrictedForChanges":{"default":false,"type":"boolean"},"Payments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentResponse"}},"DisputeReason":{"type":"string"},"RejectionReasonDescription":{"type":"string"},"Id":{"format":"int32","type":"integer"},"Number":{"description":"Gets or sets invoice number.","type":"string"},"BatchNumber":{"description":"Gets or sets Batch number.","type":"string"},"InvoiceTax":{"format":"double","type":"number"},"PostedTaxRate":{"format":"float","type":"number"},"PostedTax2Rate":{"format":"float","type":"number"},"VendorPayeeId":{"format":"int32","type":"integer"},"InvoiceTotal":{"format":"double","description":"Gets or sets total with tax amounts.","type":"number"},"InvoiceBalance":{"format":"double","type":"number"},"Currency":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Currencies.Currency"},"ApprovedDate":{"format":"date-time","type":"string"},"ApprovalCode":{"type":"string"},"EditableAdditionalApprovalCode":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ApprovalCodes.EditableAdditionalApprovalCode"},"PostedDate":{"format":"date-time","type":"string"},"PostedBy":{"type":"string"},"Subtotal":{"format":"double","type":"number"},"Trade":{"type":"string"},"InvoiceAmountsDetails":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceAmountsDetails"},"InvoiceTaxesDetails":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceTaxesDetails"},"Tax2Details":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.Tax2Details"},"Labors":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceLabor"}},"Materials":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceMaterial"}},"Travels":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceTravel"}},"Others":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceOther"}},"TaxApprovalCodeGroups":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup"}},"Tax2ApprovalCodeGroups":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup"}},"FreightApprovalCodeGroups":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup"}},"WithMismatchedRates":{"default":false,"type":"boolean"},"IsOutsourced":{"default":false,"type":"boolean"},"StarredBy":{"type":"string"},"IsStarred":{"default":false,"type":"boolean"},"IsTransferred":{"default":false,"type":"boolean","readOnly":true},"StarredDate":{"format":"date-time","type":"string"},"Description":{"type":"string"},"InvoiceDate":{"format":"date-time","type":"string"},"LaborTaxIncluded":{"default":false,"type":"boolean"},"TravelTaxIncluded":{"default":false,"type":"boolean"},"MaterialsTaxIncluded":{"default":false,"type":"boolean"},"FreightTaxIncluded":{"default":false,"type":"boolean"},"OtherTaxIncluded":{"default":false,"type":"boolean"},"NonTaxableLabor":{"format":"int32","type":"integer"},"NonTaxableTravel":{"format":"int32","type":"integer"},"NonTaxableMaterial":{"format":"int32","type":"integer"},"NonTaxableFreight":{"format":"int32","type":"integer"},"NonTaxableOther":{"format":"int32","type":"integer"},"IsExists":{"default":false,"type":"boolean","readOnly":true},"StatusChangeDate":{"format":"date-time","type":"string"},"StatusChangeUser":{"type":"string"},"StatusChangeUserid":{"type":"string"},"IsDuplicate":{"default":false,"type":"boolean"},"WoTrackingNumber":{"format":"int32","description":"Gets or sets work order tracking number.","type":"integer"},"Terms":{"description":"terms","type":"string"},"Comments":{"type":"string"},"PaidDate":{"format":"date-time","type":"string"},"TransferredDate":{"format":"date-time","type":"string"},"LastActionDate":{"format":"date-time","type":"string"},"UpdatedDate":{"format":"date-time","description":"Updated Date","type":"string"},"StatusHistoryShort":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.StatusHistoryShort"}},"WoAssignedTo":{"description":"Gets or sets WO Assignee","type":"string"},"ApprovalCodes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCode"}},"IsChargesApprovalCodesDefault":{"default":false,"type":"boolean"},"StoredFeatures":{"type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.Invoices.ApiVendorPayee":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"VendorNumber":{"type":"string"},"FullName":{"type":"string"},"Address1":{"type":"string"},"Address2":{"type":"string"},"City":{"type":"string"},"State":{"type":"string"},"Zip":{"type":"string"},"Country":{"type":"string"}}},"ServiceChannel.Api.Model.Workorders.Label":{"type":"object","properties":{"LabelText":{"type":"string"},"InvoiceId":{"format":"int32","type":"integer"},"LabelId":{"format":"int32","type":"integer"},"IsActive":{"default":false,"type":"boolean"}}},"ServiceChannel.Api.Model.Invoices.WeatherEventTypeForInvoice":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"Description":{"type":"string"},"InvoiceId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy":{"description":"Rate Discrepancy Item","type":"object","properties":{"SkillLevel":{"format":"int32","description":"Get or set skill level (1 - Supervisor, 2 - Technician, 3 - Helper).","type":"integer"},"SkillLevelName":{"description":"Get or set skill level name","type":"string"},"LaborType":{"format":"int32","description":"Get or set type of the labor (1 - Regular, 2 - Overtime, 3 - Double Time).","type":"integer"},"LaborTypeName":{"description":"Get or set labor type name.","type":"string"},"HourlyRate":{"format":"double","description":"Get or set hourly rate.","type":"number"},"AgreedRate":{"format":"double","description":"Get or set agreed hourly rate.","type":"number"},"NumOfTech":{"format":"byte","description":"Get or set number of techs.","type":"string"},"LaborHours":{"format":"double","description":"Get or set spent hours.","type":"number"},"RateDiscrepancyReason":{"description":"Get or set rate discrepancy reason.","type":"string"}}},"ServiceChannel.Services.Messaging.Invoices.InvoiceDiscrepancy":{"type":"object","properties":{"LaborRateDiscrepancies":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy"}},"MaterialMarkupDiscrepancies":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.MaterialMarkupDiscrepancy"}},"OtherPriceDiscrepancies":{"description":"Get or set OtherPriceDiscrepancies","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.OtherPriceDiscrepancy"}}}},"ServiceChannel.Services.Messaging.Invoices.MaterialMarkupDiscrepancy":{"type":"object","properties":{"LineItemId":{"format":"int32","type":"integer"},"AppliedMarkupPercent":{"format":"double","type":"number"},"AgreedMarkupPercent":{"format":"double","type":"number"},"DiscrepancyReason":{"type":"string"}}},"ServiceChannel.Services.Messaging.Invoices.OtherPriceDiscrepancy":{"description":"OtherPriceDiscrepancies","type":"object","properties":{"LineItemId":{"format":"int32","description":"Get or set LineItemId","type":"integer"},"AppliedUnitPrice":{"format":"double","description":"Get or set AppliedUnitPrice","type":"number"},"AgreedUnitPrice":{"format":"double","description":"Get or set AgreedUnitPrice","type":"number"},"DiscrepancyReason":{"description":"Get or set DiscrepancyReason","type":"string"}}},"ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest":{"description":"Request object to add a payment to an invoice.","type":"object","properties":{"PaymentDate":{"format":"date-time","description":"Date and time when the specified invoice is paid. Cannot be a past date.","type":"string"},"PaymentNumber":{"description":"Order number of payment for the invoice.","type":"string"},"PaymentAmount":{"format":"double","description":"Amount you want to pay. Cannot exceed the invoice total amount. If it’s a credited invoice, a single payment is required with a minus before the payment amount.","type":"number"}}},"ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkRequest":{"description":"Request model to add payment records in bulk.","type":"object","properties":{"Payments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.AddInvoicePaymentRequest"}}}},"ServiceChannel.Services.Messaging.Invoices.AddInvoicePaymentRequest":{"description":"Object details to add payment to an invoice.","type":"object","properties":{"InvoiceId":{"format":"int32","description":"Unique numeric invoice identifier.","type":"integer"},"PaymentDate":{"format":"date-time","description":"Date and time when the specified invoice is paid. Cannot be prior to the invoice creation date.","type":"string"},"PaymentNumber":{"description":"Number provided by a user when adding a payment record.","type":"string"},"PaymentAmount":{"format":"double","description":"Amount of the payment. Cannot exceed the total amount of the invoice. If it’s a credited invoice, a single payment is required with a minus before the payment amount.","type":"number"}}},"System.Web.Http.Results.NegotiatedContentResult[ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkResponse]":{"type":"object","properties":{"StatusCode":{"enum":["Continue","SwitchingProtocols","OK","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultipleChoices","Ambiguous","MovedPermanently","Moved","Found","Redirect","SeeOther","RedirectMethod","NotModified","UseProxy","Unused","TemporaryRedirect","RedirectKeepVerb","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","RequestEntityTooLarge","RequestUriTooLong","UnsupportedMediaType","RequestedRangeNotSatisfiable","ExpectationFailed","UpgradeRequired","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported"],"type":"string","readOnly":true},"Content":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkResponse","readOnly":true},"ContentNegotiator":{"$ref":"#/definitions/System.Net.Http.Formatting.IContentNegotiator","readOnly":true},"Request":{"$ref":"#/definitions/System.Object","readOnly":true},"Formatters":{"type":"array","items":{"$ref":"#/definitions/System.Net.Http.Formatting.MediaTypeFormatter"},"readOnly":true}}},"ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkResponse":{"description":"Invoice payments response object.","type":"object","properties":{"Payments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.AddInvoicePaymentResponse"}}}},"System.Net.Http.Formatting.IContentNegotiator":{"type":"object","properties":{}},"System.Net.Http.Formatting.MediaTypeFormatter":{"type":"object","properties":{"SupportedMediaTypes":{"type":"array","items":{"$ref":"#/definitions/System.Net.Http.Headers.MediaTypeHeaderValue"},"readOnly":true},"SupportedEncodings":{"type":"array","items":{"$ref":"#/definitions/System.Text.Encoding"},"readOnly":true},"MediaTypeMappings":{"type":"array","items":{"$ref":"#/definitions/System.Net.Http.Formatting.MediaTypeMapping"},"readOnly":true},"RequiredMemberSelector":{"$ref":"#/definitions/System.Net.Http.Formatting.IRequiredMemberSelector"}}},"ServiceChannel.Services.Messaging.Invoices.AddInvoicePaymentResponse":{"description":"Object details of the added payment.","type":"object","properties":{"PaymentDate":{"format":"date-time","description":"Date and time when the specified invoice is paid.","type":"string"},"PaymentId":{"format":"int32","description":"Unique numeric invoice payment ID.","type":"integer"},"Error":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Invoices.ResponseError"},"InvoiceId":{"format":"int32","description":"Unique numeric invoice identifier.","type":"integer"},"PaymentNumber":{"description":"Number provided by a user when adding a payment record.","type":"string"},"PaymentAmount":{"format":"double","description":"Amount of the payment. Cannot exceed the total amount of the invoice. If it’s a credited invoice, a single payment is required with a minus before the payment amount.","type":"number"}}},"System.Net.Http.Headers.MediaTypeHeaderValue":{"type":"object","properties":{"CharSet":{"type":"string"},"Parameters":{"type":"array","items":{"$ref":"#/definitions/System.Net.Http.Headers.NameValueHeaderValue"},"readOnly":true},"MediaType":{"type":"string"}}},"System.Text.Encoding":{"type":"object","properties":{"BodyName":{"type":"string","readOnly":true},"EncodingName":{"type":"string","readOnly":true},"HeaderName":{"type":"string","readOnly":true},"WebName":{"type":"string","readOnly":true},"WindowsCodePage":{"format":"int32","type":"integer","readOnly":true},"IsBrowserDisplay":{"default":false,"type":"boolean","readOnly":true},"IsBrowserSave":{"default":false,"type":"boolean","readOnly":true},"IsMailNewsDisplay":{"default":false,"type":"boolean","readOnly":true},"IsMailNewsSave":{"default":false,"type":"boolean","readOnly":true},"IsSingleByte":{"default":false,"type":"boolean","readOnly":true},"EncoderFallback":{"$ref":"#/definitions/System.Text.EncoderFallback"},"DecoderFallback":{"$ref":"#/definitions/System.Text.DecoderFallback"},"IsReadOnly":{"default":false,"type":"boolean","readOnly":true},"CodePage":{"format":"int32","type":"integer","readOnly":true}}},"System.Net.Http.Formatting.MediaTypeMapping":{"type":"object","properties":{"MediaType":{"$ref":"#/definitions/System.Net.Http.Headers.MediaTypeHeaderValue","readOnly":true}}},"System.Net.Http.Formatting.IRequiredMemberSelector":{"type":"object","properties":{}},"ServiceChannel.Services.Messaging.Invoices.ResponseError":{"description":"Object details of the response error.","type":"object","properties":{"Code":{"format":"int32","description":"Code of an error that shows why the request has failed.","type":"integer"},"Message":{"description":"Reason for the request failure.","type":"string"}}},"System.Net.Http.Headers.NameValueHeaderValue":{"type":"object","properties":{"Name":{"type":"string","readOnly":true},"Value":{"type":"string"}}},"System.Text.EncoderFallback":{"type":"object","properties":{"MaxCharCount":{"format":"int32","type":"integer","readOnly":true}}},"System.Text.DecoderFallback":{"type":"object","properties":{"MaxCharCount":{"format":"int32","type":"integer","readOnly":true}}},"ServiceChannel.Services.Messaging.IssueLists.PostIssueListRequest":{"type":"object","properties":{"IssueListData":{"type":"string"},"IssueListName":{"type":"string"},"SubscriberId":{"format":"int32","type":"integer"},"UserName":{"type":"string"}}},"ServiceChannel.Services.Messaging.IssueLists.SetIssueListForDashboardRequest":{"type":"object","properties":{"IssueListId":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"DashboardId":{"format":"int32","type":"integer"},"UserName":{"type":"string"}}},"ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse":{"type":"object","properties":{"ProblemGroupNames":{"type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceRequest":{"description":"Get Issue Choice request","type":"object","properties":{"SubscriberId":{"format":"int32","description":"The subsriber id.","type":"integer"},"SetupId":{"format":"int32","description":"The dashboard Id.","type":"integer"},"ProblemType":{"description":"The problem type.","type":"string"},"EquipmentType":{"description":"The equipment type.","type":"string"},"ProblemCode":{"description":"The problem code","type":"string"},"LocationId":{"format":"int32","description":"Location Id","type":"integer"},"AreaName":{"description":"Name of the area","type":"string"},"UserFeatures":{"description":"User's features","type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceSpecificRequest":{"required":["SubscriberId","DashboardSetupId","Trade","Priority","Category"],"type":"object","properties":{"SubscriberId":{"format":"int32","type":"integer"},"DashboardSetupId":{"format":"int32","type":"integer"},"Trade":{"type":"string"},"Priority":{"type":"string"},"Category":{"type":"string"}}},"ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse":{"type":"object","properties":{"IssueAreas":{"description":"The List of issue areas.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.IssueArea"}}}},"ServiceChannel.Services.Messaging.IssueLists.IssueArea":{"description":"The issue area.","type":"object","properties":{"ID":{"format":"int32","description":"Area ID.","type":"integer"},"Name":{"description":"Area Name.","type":"string"}}},"ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse":{"type":"object","properties":{"IssueEquipmentTypes":{"type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse":{"type":"object","properties":{"Problems":{"description":"List of Problems","type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.IVR.IvrMessagesRequest":{"required":["MessageId","Language","SetupPhoneId"],"type":"object","properties":{"MessageId":{"type":"string"},"Language":{"type":"string"},"SetupPhoneId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.IVR.IvrMessageResponse":{"type":"object","properties":{"AudioUrl":{"type":"string"},"ApiReturnCode":{"type":"string"},"ApiResponseCode":{"type":"string"},"CallSid":{"type":"string"}}},"ServiceChannel.Services.Messaging.IVR.IvrBaseResponse":{"type":"object","properties":{"ApiReturnCode":{"type":"string"},"ApiResponseCode":{"type":"string"},"CallSid":{"type":"string"}}},"ServiceChannel.Services.Messaging.Languages.UpdateLanguagesRequest":{"type":"object","properties":{"SubscriberId":{"format":"int32","type":"integer"},"ProviderId":{"format":"int32","type":"integer"},"CultureName":{"type":"string"}}},"ServiceChannel.Services.Messaging.Location.GetLocationsSimpleRequest":{"type":"object","properties":{"Id":{"format":"int32","description":"Unique location identifier.","type":"integer"},"storeIdentifier":{"description":"Alphanumeric location identifier in the client’s system. Assigned by and unique per subscriber.","type":"string"},"Name":{"description":"Location name.","type":"string"},"LocationId":{"description":"The unique store ID in the ServiceClick system","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.Int32]"},"readOnly":true},"LocationName":{"description":"Name of the location","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"},"readOnly":true},"StoreId":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"},"readOnly":true},"Sort":{"description":"Sort resources by the specified property in the response.","type":"string"},"Page":{"format":"int32","description":"Results page number.","type":"integer"},"IsPageSizeDefault":{"default":false,"type":"boolean","readOnly":true},"PageSize":{"format":"int32","description":"Number of objects on the results page. The default and maximum per page is 50.","type":"integer"}}},"ServiceChannel.Services.Messaging.FilterItem[System.Int32]":{"type":"object","properties":{"OperationType":{"enum":["Equal","NotEqual","Greater","Less","Like","StartsWith","GreaterOrEqual","LessOrEqual"],"type":"string"},"LogicalOperationType":{"enum":["Or","And"],"type":"string"},"ConnectedFilterItemName":{"type":"string"},"FilterValue":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.FilterItem[System.String]":{"type":"object","properties":{"OperationType":{"enum":["Equal","NotEqual","Greater","Less","Like","StartsWith","GreaterOrEqual","LessOrEqual"],"type":"string"},"LogicalOperationType":{"enum":["Or","And"],"type":"string"},"ConnectedFilterItemName":{"type":"string"},"FilterValue":{"type":"string"}}},"ServiceChannel.Services.Messaging.Location.GetLocationsWithTotalResponse":{"description":"Response details object.","type":"object","properties":{"Locations":{"description":"Location details.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.Location"}},"TotalCount":{"format":"int64","description":"Total count of all accessible locations unless one of the filters is filled out. For example, specifying the `Id` filter brings out details of the particular location.","type":"integer"}}},"ServiceChannel.Services.Messaging.Location.CreateLocationRequest":{"description":"Object containing the details of a new location.","required":["StoreId","Name"],"type":"object","properties":{"StoreId":{"description":"Numeric location identifier in the client’s system.","type":"string"},"Name":{"description":"Location name.","type":"string"},"Latitude":{"format":"double","description":"Global position. Latitude.","type":"number"},"Longitude":{"format":"double","description":"Global position. Longitude.","type":"number"},"Distance":{"format":"double","description":"Distance from GPS coordinates to the location.","type":"number"},"Address1":{"description":"Additional location address.","type":"string"},"Address2":{"description":"Main location address.","type":"string"},"City":{"description":"Location city.","type":"string"},"State":{"description":"State where the location is placed.","type":"string"},"StateId":{"format":"int32","description":"Numeric identifier of the location’s state.","type":"integer"},"Region":{"description":"Part of the country where the location is placed.","type":"string"},"District":{"description":"Abbreviation of the town or country area where the location is placed.","type":"string"},"Zip":{"description":"Postal code of the location.","type":"string"},"Country":{"description":"Abbreviation of the country name where the location is placed.","type":"string"},"CountryId":{"format":"int32","description":"Numeric identifier of the country of the location.","type":"integer"},"ClosedDate":{"format":"date-time","description":"Last day when the location is open for business.","type":"string"},"OpenDate":{"format":"date-time","description":"First day when the location is open for business.","type":"string"},"Email":{"description":"Email the location can be contacted at.","type":"string"},"Phone":{"description":"Contact phone number of the location.","type":"string"},"Contact":{"description":"Name of the main person to contact at the location.","type":"string"},"FaxNumber":{"description":"Fax number the location can be contacted at.","type":"string"},"LocationTypeId":{"format":"int32","description":"Numeric identifier of the location type.","type":"integer"},"SquareValue":{"format":"double","description":"Square value","type":"number"},"SquareMeasure":{"description":"Square measure","type":"string"}}},"ServiceChannel.Services.Messaging.Location.UpdateLocationExRequest":{"description":"Request object to update location details.","required":["StoreId","Name"],"type":"object","properties":{"StoreId":{"description":"Numeric location identifier in the client’s system.","type":"string"},"Name":{"description":"Location name.","type":"string"},"Latitude":{"format":"double","description":"Global position. Latitude.","type":"number"},"Longitude":{"format":"double","description":"Global position. Longitude.","type":"number"},"Distance":{"format":"double","description":"Distance from GPS coordinates to the location.","type":"number"},"Address1":{"description":"Additional location address.","type":"string"},"Address2":{"description":"Main location address.","type":"string"},"City":{"description":"Location city.","type":"string"},"State":{"description":"State where the location is placed.","type":"string"},"StateId":{"format":"int32","description":"Numeric identifier of the location’s state.","type":"integer"},"Region":{"description":"Part of the country where the location is placed.","type":"string"},"District":{"description":"Abbreviation of the town or country area where the location is placed.","type":"string"},"Zip":{"description":"Postal code of the location.","type":"string"},"Country":{"description":"Abbreviation of the country name where the location is placed.","type":"string"},"CountryId":{"format":"int32","description":"Numeric identifier of the country of the location.","type":"integer"},"ClosedDate":{"format":"date-time","description":"Last day when the location is open for business.","type":"string"},"OpenDate":{"format":"date-time","description":"First day when the location is open for business.","type":"string"},"Email":{"description":"Email the location can be contacted at.","type":"string"},"Phone":{"description":"Contact phone number of the location.","type":"string"},"Contact":{"description":"Name of the main person to contact at the location.","type":"string"},"FaxNumber":{"description":"Fax number the location can be contacted at.","type":"string"},"LocationTypeId":{"format":"int32","description":"Numeric identifier of the location type.","type":"integer"},"SquareValue":{"format":"double","description":"Square value","type":"number"},"SquareMeasure":{"description":"Square measure","type":"string"}}},"ServiceChannel.Services.Messaging.Location.LocationWithTimezoneName":{"description":"LocationWithTimezoneName","type":"object","properties":{"TimezoneName":{"description":"The time zone identifier","type":"string"},"Id":{"format":"int32","description":"Unique location identifier.","type":"integer"},"SubscriberId":{"format":"int32","description":"Unique subscriber identifier.","type":"integer"},"SubscriberName":{"type":"string"},"StoreId":{"description":"Alphanumeric identifier of the store in the client's system. Assigned by and unique per subscriber.","type":"string"},"Name":{"description":"Location name.","type":"string"},"ShortName":{"description":"Shortened location name.","type":"string"},"Latitude":{"format":"double","description":"Global position. Latitude.","type":"number"},"Longitude":{"format":"double","description":"Global position. Longitude.","type":"number"},"Distance":{"format":"double","description":"Distance from GPS coordinate to this location","type":"number"},"Radius":{"format":"double","description":"GPS radius for the location.","type":"number"},"LocationTypeId":{"format":"int32","description":"Numeric identifier of the location type.","type":"integer"},"Address1":{"description":"Additional location address.","type":"string"},"Address2":{"description":"Main location address.","type":"string"},"City":{"description":"Location city.","type":"string"},"State":{"description":"State where the location is situated.","type":"string"},"StateId":{"format":"int32","description":"Numeric identifier of the location’s state.","type":"integer"},"Region":{"description":"Part of the country where the location is situated.","type":"string"},"District":{"description":"Abbreviation of the town or country area where the location is situated.","type":"string"},"Zip":{"description":"Location ZIP or postal code.","type":"string"},"Country":{"description":"Abbreviation of the country name where the location is situated.","type":"string"},"CountryId":{"format":"int32","description":"Numeric identifier of the country of the location.","type":"integer"},"ClosedDate":{"format":"date-time","description":"Last day when the location is open for business.","type":"string"},"OpenDate":{"format":"date-time","description":"First day when the location is open for business.","type":"string"},"Status":{"description":"Status of the location. Possible values: *open*, *closed*.","type":"string"},"Email":{"description":"Email the location can be contacted at.","type":"string"},"FaxNumber":{"description":"Fax number the location can be contacted at.","type":"string"},"Phone":{"description":"Contact phone number of the location.","type":"string"},"Contact":{"description":"Name of the main person to contact at the location.","type":"string"},"HasInventory":{"description":"Indicates whether it’s an inventory location or not. Possible values: *true*, *false*.","default":false,"type":"boolean"},"SquareValue":{"format":"double","description":"Square value of the facility.","type":"number"},"SquareMeasure":{"description":"Unit or system of units for measuring location area.","type":"string"},"TimeZoneInfoId":{"format":"int32","description":"Numeric identifier of the location time zone.","type":"integer"},"TimeZoneShortDescription":{"description":"Location time zone abbreviation.","type":"string"},"TimeZoneMsName":{"description":"Location time zone Microsoft Name. e.g \"Eastern Standard Time\"","type":"string"},"TimeZoneIanaName":{"description":"Location time zone Iana Name. e.g. \"America/New_York\"","type":"string"},"TypeLabel":{"description":"[Inventory location type](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1209106525/Creating+Inventory+Locations?preview=%2F1209106525%2F1205830388%2FSupply-House-Type.png). Possible values: *Location*, *Warehouse*, *Supply House*, *Truck*.","type":"string"},"Supplier":{"description":"Supplier’s location name.","type":"string"},"CountyId":{"format":"int32","description":"County numeric identifier.","type":"integer"},"Notes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.LocationNote.LocationNote"}},"TimeShiftToEST":{"format":"int32","type":"integer"},"AddressTypeId":{"format":"int32","description":"Address format pattern Id","type":"integer"},"FormattedAddress":{"type":"string"},"LocationFormattedAddressTail":{"type":"string"}}},"ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeaderApiModelRequest":{"description":"Object containing the details of the location note.","type":"object","properties":{"Header":{"description":"Name of the existing location note to add, update or delete a note for. The maximum length is 100 characters.","type":"string"},"Value":{"description":"Text of the note a user wants to replace the existing note with. The maximum length is 7000 characters including spaces.","type":"string"}}},"ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeadersApiModelRequest":{"description":"Object containing the details of the location notes.","type":"object","properties":{"Notes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeaderApiModelRequest"}}}},"ServiceChannel.Services.Messaging.Location.GetProviderAssignmentExtendedLocationsResponse":{"type":"object","properties":{"Locations":{"description":"Response details object","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.ProviderAssignmentExtendedLocation"}},"AllLocationsCount":{"format":"int32","description":"Total number of all locations displayed in the response.","type":"integer"},"TrucksCount":{"format":"int32","description":"Number of mobile units that move around locations to fix the broken equipment.","type":"integer"},"LocationsCount":{"format":"int32","description":"Number of retail locations that have inventory.","type":"integer"},"WarehousesCount":{"format":"int32","description":"Number of company-owned locations that supply other locations with parts.","type":"integer"},"SupplyHousesCount":{"format":"int32","description":"Number of non-company-owned locations where goods are purchased from.","type":"integer"}}},"ServiceChannel.Services.Messaging.Location.ProviderAssignmentExtendedLocation":{"type":"object","properties":{"WorkOrdersCount":{"format":"int32","type":"integer"},"Contracts":{"description":"List of Contracts","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Contracts.Contract"}},"Id":{"format":"int32","description":"Unique location identifier.","type":"integer"},"SubscriberId":{"format":"int32","description":"Unique subscriber identifier.","type":"integer"},"SubscriberName":{"type":"string"},"StoreId":{"description":"Alphanumeric identifier of the store in the client's system. Assigned by and unique per subscriber.","type":"string"},"Name":{"description":"Location name.","type":"string"},"ShortName":{"description":"Shortened location name.","type":"string"},"Latitude":{"format":"double","description":"Global position. Latitude.","type":"number"},"Longitude":{"format":"double","description":"Global position. Longitude.","type":"number"},"Distance":{"format":"double","description":"Distance from GPS coordinate to this location","type":"number"},"Radius":{"format":"double","description":"GPS radius for the location.","type":"number"},"LocationTypeId":{"format":"int32","description":"Numeric identifier of the location type.","type":"integer"},"Address1":{"description":"Additional location address.","type":"string"},"Address2":{"description":"Main location address.","type":"string"},"City":{"description":"Location city.","type":"string"},"State":{"description":"State where the location is situated.","type":"string"},"StateId":{"format":"int32","description":"Numeric identifier of the location’s state.","type":"integer"},"Region":{"description":"Part of the country where the location is situated.","type":"string"},"District":{"description":"Abbreviation of the town or country area where the location is situated.","type":"string"},"Zip":{"description":"Location ZIP or postal code.","type":"string"},"Country":{"description":"Abbreviation of the country name where the location is situated.","type":"string"},"CountryId":{"format":"int32","description":"Numeric identifier of the country of the location.","type":"integer"},"ClosedDate":{"format":"date-time","description":"Last day when the location is open for business.","type":"string"},"OpenDate":{"format":"date-time","description":"First day when the location is open for business.","type":"string"},"Status":{"description":"Status of the location. Possible values: *open*, *closed*.","type":"string"},"Email":{"description":"Email the location can be contacted at.","type":"string"},"FaxNumber":{"description":"Fax number the location can be contacted at.","type":"string"},"Phone":{"description":"Contact phone number of the location.","type":"string"},"Contact":{"description":"Name of the main person to contact at the location.","type":"string"},"HasInventory":{"description":"Indicates whether it’s an inventory location or not. Possible values: *true*, *false*.","default":false,"type":"boolean"},"SquareValue":{"format":"double","description":"Square value of the facility.","type":"number"},"SquareMeasure":{"description":"Unit or system of units for measuring location area.","type":"string"},"TimeZoneInfoId":{"format":"int32","description":"Numeric identifier of the location time zone.","type":"integer"},"TimeZoneShortDescription":{"description":"Location time zone abbreviation.","type":"string"},"TimeZoneMsName":{"description":"Location time zone Microsoft Name. e.g \"Eastern Standard Time\"","type":"string"},"TimeZoneIanaName":{"description":"Location time zone Iana Name. e.g. \"America/New_York\"","type":"string"},"TypeLabel":{"description":"[Inventory location type](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1209106525/Creating+Inventory+Locations?preview=%2F1209106525%2F1205830388%2FSupply-House-Type.png). Possible values: *Location*, *Warehouse*, *Supply House*, *Truck*.","type":"string"},"Supplier":{"description":"Supplier’s location name.","type":"string"},"CountyId":{"format":"int32","description":"County numeric identifier.","type":"integer"},"Notes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.LocationNote.LocationNote"}},"TimeShiftToEST":{"format":"int32","type":"integer"},"AddressTypeId":{"format":"int32","description":"Address format pattern Id","type":"integer"},"FormattedAddress":{"type":"string"},"LocationFormattedAddressTail":{"type":"string"}}},"ServiceChannel.Services.Messaging.Location.GetLocationAttachmentsResponse":{"type":"object","properties":{"LocationAttachments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.LocationAttachment"}},"ErrorCode":{"format":"int32","description":"Numeric identifier that determines the nature of an error. Possible values: `0` - success, otherwise - error.","type":"integer"},"Message":{"description":"Defines that the file’s remote storage is unavailable or its URL cannot be found.","type":"string"}}},"ServiceChannel.Services.Messaging.Location.LocationAttachment":{"description":"Attachment object.","type":"object","properties":{"Id":{"format":"int32","description":"Numeric identifier of the location attachment.","type":"integer"},"LocationId":{"format":"int32","description":"Unique ID of the location to which the attachment is added.","type":"integer"},"StoreId":{"description":"StoreId","type":"string"},"FileName":{"description":"Filename of the evacuation plan map attachment.","type":"string"},"FilePath":{"description":"File’s position in the subscriber’s location.","type":"string"},"Description":{"description":"Description of the evacuation plan map attachment added by the user.","type":"string"},"UploadDate":{"format":"date-time","description":"Date and time when the attachment was added.","type":"string"},"UserId":{"format":"int32","description":"ID of the user who added the attachment to the location.","type":"integer"},"UserName":{"description":"Username of the user who added the attachment.","type":"string"},"AttachmentType":{"description":"Numeric identifier of the attachment added. Possible values: `1` - EvacuationPlan.","enum":["EvacuationPlan"],"type":"string"},"GetFileLink":{"type":"string"}}},"ServiceChannel.Services.Messaging.AfterHours.CheckIfLocationIsOpenResponse":{"description":"Stores information whether the location is open or closed.","type":"object","properties":{"IsOpen":{"description":"Defines if the location is open or closed. Possible values: *true*, *false*.","default":false,"type":"boolean"}}},"ServiceChannel.Api.Model.Locations.LocationFilterColumns":{"type":"object","properties":{"SubscriberId":{"format":"int32","type":"integer"},"LocationIds":{"type":"array","items":{"format":"int32","type":"integer"}},"CountryIds":{"type":"array","items":{"format":"int32","type":"integer"}},"Regions":{"type":"array","items":{"type":"string"}},"Districts":{"type":"array","items":{"type":"string"}},"States":{"type":"array","items":{"type":"string"}},"Counties":{"type":"array","items":{"type":"string"}},"Cities":{"type":"array","items":{"type":"string"}},"Page":{"format":"int32","type":"integer"},"CountPerPage":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Location.GetFilteredLocationsRequest":{"description":"Request object to get locations.","type":"object","properties":{"ProviderId":{"format":"int32","description":"Unique provider identifier.","type":"integer"},"LocationIds":{"description":"Unique location identifier.","type":"array","items":{"format":"int32","type":"integer"}},"Name":{"description":"Location name.","type":"string"},"Address":{"description":"Main location address.","type":"string"},"CountryId":{"format":"int32","description":"Numeric identifier of the location country.","type":"integer"},"StateIds":{"description":"Numeric identifier of the location’s state.","type":"array","items":{"format":"int32","type":"integer"}},"City":{"description":"Location city.","type":"string"},"Region":{"description":"Part of the country where the location is situated.","type":"string"},"District":{"description":"Abbreviation of the town or country area where the location is situated.","type":"string"}}},"ServiceChannel.Services.Messaging.Location.LocationShortModel":{"description":"Shortened location details object.","type":"object","properties":{"Id":{"format":"int32","description":"Unique location identifier.","type":"integer"},"StoreId":{"description":"Alphanumeric identifier of the store in the client's system. Assigned by and unique per subscriber.","type":"string"},"Name":{"description":"Location name.","type":"string"},"Address":{"description":"Main location address.","type":"string"},"City":{"description":"Location city.","type":"string"},"State":{"description":"State where the location is situated.","type":"string"},"Zip":{"description":"Location ZIP or postal code.","type":"string"},"Phone":{"description":"Contact phone number of the location.","type":"string"},"Region":{"description":"Part of the country where the location is situated.","type":"string"},"District":{"description":"Abbreviation of the town or country area where the location is situated.","type":"string"},"StateId":{"format":"int32","description":"Numeric identifier of the location’s state.","type":"integer"}}},"ServiceChannel.Services.Messaging.Location.AddUpdateLocationResponse":{"description":"Location note object.","type":"object","properties":{"Id":{"format":"int32","description":"Location note numeric identifier.","type":"integer"}}},"ServiceChannel.Services.Messaging.Location.GetLocationsMobileResponse":{"description":"Response details object.","type":"object","properties":{"Locations":{"description":"Location details.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.LocationForMobile"}},"TotalElements":{"format":"int64","description":"Total number of items on all pages;","type":"integer"},"Page":{"format":"int32","description":"Current page","type":"integer"},"TotalPages":{"format":"int32","description":"Total number of pages available","type":"integer"}}},"ServiceChannel.Services.Messaging.Location.LocationForMobile":{"description":"Location details object for mobile.","type":"object","properties":{"Id":{"format":"int32","description":"Unique location identifier.","type":"integer"},"SubscriberId":{"format":"int32","description":"Unique subscriber identifier.","type":"integer"},"StoreId":{"description":"Alphanumeric identifier of the store in the client's system. Assigned by and unique per subscriber.","type":"string"},"Name":{"description":"Location name.","type":"string"},"Latitude":{"format":"double","description":"Global position. Latitude.","type":"number"},"Longitude":{"format":"double","description":"Global position. Longitude.","type":"number"},"Address1":{"description":"Additional location address.","type":"string"},"Address2":{"description":"Main location address.","type":"string"},"City":{"description":"Location city.","type":"string"},"State":{"description":"State where the location is situated.","type":"string"},"Region":{"description":"Part of the country where the location is situated.","type":"string"},"District":{"description":"Abbreviation of the town or country area where the location is situated.","type":"string"},"Zip":{"description":"Location ZIP or postal code.","type":"string"},"Country":{"description":"Abbreviation of the country name where the location is situated.","type":"string"},"Phone":{"description":"Contact phone number of the location.","type":"string"},"Contact":{"description":"Name of the main person to contact at the location.","type":"string"},"OpenDate":{"format":"date-time","description":"First day when the location is open for business","type":"string"},"CloseDate":{"format":"date-time","description":"Last day when the location is open for business.","type":"string"},"Notes":{"description":"Notes","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.LocationNote.LocationNote"}},"Distance":{"format":"double","description":"Distance between user and location","type":"number"}}},"ServiceChannel.Services.Messaging.Location.GetLocationDistrictsResponse":{"description":"Response details object.","type":"object","properties":{"Districts":{"description":"Districts","type":"array","items":{"type":"string"}},"TotalElements":{"format":"int64","description":"Total number of items on all pages;","type":"integer"},"Page":{"format":"int32","description":"Current page","type":"integer"},"TotalPages":{"format":"int32","description":"Total number of pages available","type":"integer"}}},"ServiceChannel.Services.Messaging.Location.AddressType":{"description":"AddressType","type":"object","properties":{"Id":{"format":"int32","description":"db Id value","type":"integer"},"Pattern":{"description":"Address format pattern","type":"string"}}},"ServiceChannel.Api.Model.Locations.LocationProviderAssignmentsFilter":{"type":"object","properties":{"LocationIds":{"type":"array","items":{"format":"int32","type":"integer"}},"TradeNames":{"type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.Location.LocationProviderAssignmentsResponse":{"type":"object","properties":{"LocationId":{"format":"int32","type":"integer"},"ProviderId":{"format":"int32","type":"integer"},"TradeId":{"format":"int32","type":"integer"},"TradeName":{"type":"string"},"Rank":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Location.GetLocationsByFilterRequest":{"type":"object","properties":{"Locations":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.LocationFilterRequest"}}},"ServiceChannel.Services.Messaging.Location.LocationFilterRequest":{"type":"object","properties":{"LocationIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Location.GetApiLocationResponse":{"type":"object","properties":{"Locations":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.ApiLocationModel"}}}},"ServiceChannel.Services.Messaging.Location.ApiLocationModel":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"StoreId":{"type":"string"},"Name":{"type":"string"},"City":{"type":"string"},"State":{"type":"string"},"Zip":{"type":"string"},"Address1":{"type":"string"},"Address2":{"type":"string"},"CountryCode":{"type":"string"},"IsOpened":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Location.GetLandlordResponsibilityResponse":{"type":"object","properties":{"LordResponsibilities":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.LandlordResponsibilityModel"}}}},"ServiceChannel.Services.Messaging.Location.LandlordResponsibilityModel":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"LocationId":{"format":"int32","type":"integer"},"StoreId":{"type":"string"},"TradeName":{"type":"string"},"CategoryName":{"type":"string"},"OverridePriorityName":{"type":"string"},"OverrideCategoryName":{"type":"string"},"OverrideProviderRank":{"type":"string"},"OverrideNTE":{"type":"string"},"LeaseNote":{"type":"string"},"UpdatedBy":{"type":"string"},"UpdatedDate":{"type":"string"}}},"ServiceChannel.Services.Messaging.Location.CreateLandlordResponsibilityApiRequest":{"type":"object","properties":{"StoreId":{"type":"string"},"TradeName":{"type":"string"},"CategoryName":{"type":"string"},"OverridePriorityName":{"type":"string"},"OverrideCategoryName":{"type":"string"},"OverrideProviderRank":{"type":"string"},"OverrideNTE":{"type":"string"},"LeaseNote":{"type":"string"}}},"ServiceChannel.Services.Messaging.Location.UpdateLandlordResponsibilityApiRequest":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"TradeName":{"type":"string"},"CategoryName":{"type":"string"},"OverridePriorityName":{"type":"string"},"OverrideCategoryName":{"type":"string"},"OverrideProviderRank":{"type":"string"},"OverrideNTE":{"type":"string"},"LeaseNote":{"type":"string"}}},"ServiceChannel.Api.Model.LocationSupply.LocationSupply":{"type":"object","properties":{"Location":{"$ref":"#/definitions/ServiceChannel.Api.Model.LocationSupply.Location"},"SupplyLocations":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.LocationSupply.Location"}}}},"ServiceChannel.Api.Model.LocationSupply.Location":{"type":"object","properties":{"LocationId":{"format":"int32","type":"integer"},"TruckId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.MliConfiguration.Api.MLILevel":{"description":"MLI level object.","type":"object","properties":{"Id":{"format":"int32","description":"Unique numeric identifier of an MLI level.","type":"integer"},"Name":{"description":"MLI level name.","type":"string"}}},"ServiceChannel.Services.Messaging.User.Api.AssignedUser":{"description":"Assigned user object details.","type":"object","properties":{"Id":{"format":"int32","description":"Unique user identifier.","type":"integer"},"UserId":{"description":"Username to log into the system.","type":"string"}}},"ServiceChannel.Services.Messaging.NegotiatedPriceList.NegotiatedPriceList":{"description":"NegotiatedPriceLists","type":"object","properties":{"Id":{"format":"int32","description":"Id","type":"integer"},"PriceListName":{"description":"PriceListName","type":"string"},"EffectiveDate":{"format":"date-time","description":"EffectiveDate","type":"string"},"ExpirationDate":{"format":"date-time","description":"ExpirationDate","type":"string"},"ProviderId":{"format":"int32","description":"ProviderId","type":"integer"},"ProviderName":{"description":"ProviderName","type":"string"},"SubscriberId":{"format":"int32","description":"SubscriberId","type":"integer"},"PriceListParts":{"description":"PriceListParts","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.NegotiatedPriceList.PriceListPart"}},"PriceListFile":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.NegotiatedPriceList.PriceListFile","description":"PriceListFile"},"Regions":{"description":"Regions","type":"array","items":{"type":"string"}},"Districts":{"description":"Districts","type":"array","items":{"type":"string"}},"LocationIds":{"description":"LocationIds","type":"array","items":{"type":"string"}},"CreatedDate":{"format":"date-time","description":"Created Date","type":"string"},"UpdatedDate":{"format":"date-time","description":"Updated Date","type":"string"},"CreatedBy":{"format":"int32","description":"Created By","type":"integer"},"UserName":{"description":"UserName","type":"string"},"UpdatedBy":{"format":"int32","description":"Updated By","type":"integer"},"LNHName":{"description":"LNHName","type":"string"},"LNHValues":{"description":"LNHValues","type":"array","items":{"type":"string"}},"PriceListOtherCharges":{"description":"PriceListOtherCharges","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.NegotiatedPriceList.PriceListOtherCharges"}}}},"ServiceChannel.Services.Messaging.NegotiatedPriceList.PriceListPart":{"description":"PriceListPart","type":"object","properties":{"Id":{"format":"int32","description":"Id","type":"integer"},"PriceListId":{"format":"int32","description":"PriceListId","type":"integer"},"PartName":{"description":"PartName","type":"string"},"Description":{"description":"Description","type":"string"},"UnitOfMeasure":{"description":"UnitOfMeasure","type":"string"},"Price":{"format":"double","description":"Price","type":"number"},"Markup":{"format":"double","description":"Markup","type":"number"},"PartNumber":{"description":"PartNumber","type":"string"},"PriceListName":{"description":"PriceListName","type":"string"},"IsDeleted":{"description":"Is Deleted","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.NegotiatedPriceList.PriceListFile":{"description":"PriceListFile","type":"object","properties":{"Id":{"format":"int32","description":"Id","type":"integer"},"FileName":{"description":"FileName","type":"string"},"FilePath":{"description":"FilePath","type":"string"},"SubscriberId":{"format":"int32","description":"SubscriberId","type":"integer"},"CreatedDate":{"format":"date-time","description":"Created Date","type":"string"},"UpdatedDate":{"format":"date-time","description":"Updated Date","type":"string"},"CreatedBy":{"format":"int32","description":"Created By","type":"integer"},"UpdatedBy":{"format":"int32","description":"Updated By","type":"integer"}}},"ServiceChannel.Services.Messaging.NegotiatedPriceList.PriceListOtherCharges":{"description":"PriceListOtherCharges","type":"object","properties":{"Id":{"format":"int32","description":"Id","type":"integer"},"PriceListId":{"format":"int32","description":"PriceListId","type":"integer"},"Type":{"description":"Type","type":"string"},"Description":{"description":"Description","type":"string"},"UnitOfMeasure":{"description":"UnitOfMeasure","type":"string"},"Price":{"format":"double","description":"Price","type":"number"},"PriceListName":{"description":"PriceListName","type":"string"},"IsDeleted":{"description":"Is Deleted","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Workorders.CreateWoNoteRequest":{"required":["Note"],"type":"object","properties":{"Note":{"description":"Required, Note text","type":"string"},"MailedTo":{"description":"E-mail address(es)","type":"string"},"ActionRequired":{"description":"Action requred flag","default":false,"type":"boolean"},"ScheduledDate":{"format":"date-time","description":"Scheduled Date and Time","type":"string"},"FollowUpDate":{"format":"date-time","type":"string"},"IsFollowUpDateChanged":{"default":false,"type":"boolean"},"AttachmentsIds":{"type":"array","items":{"format":"int32","type":"integer"}},"Visibility":{"format":"int32","description":"Defines which parties can view the note. Visibility also works in Universal Connector where there are three primary parties: Subscriber, External Subscriber, and Provider. \r\n            Possible values:\r\n            `0` — Visible to everyone (Subscriber, External Subscriber, Provider),\r\n            `1` — Not visible to External Subscriber. Visible to Subscriber and Provider,\r\n            `2` — Not visible to Provider. Visible to Subscriber and External Subscriber.\r\n            `3` — Visible to Subscriber only.","type":"integer"},"Actor":{"description":"Actor","type":"string"},"NotifyFollowers":{"description":"If true email alert will be sent to WO Followers","default":false,"type":"boolean"},"DoNotSendEmail":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Notes.GetNotesResponse":{"type":"object","properties":{"Notes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notes.Note"}},"AllNotesCount":{"format":"int32","type":"integer"},"UserNotesCount":{"format":"int32","type":"integer"},"SystemNotesCount":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Notes.Note":{"type":"object","properties":{"Id":{"format":"int32","description":"UID of work order note, can be null","type":"integer"},"Number":{"format":"int32","description":"Note number","type":"integer"},"NoteData":{"description":"Note data","type":"string"},"DateCreated":{"format":"date-time","description":"Date when Note was created","type":"string"},"ScheduledDate":{"format":"date-time","description":"","type":"string"},"FollowUpDate":{"format":"date-time","description":"","type":"string"},"ActionRequired":{"description":"Action Required","default":false,"type":"boolean"},"MailedTo":{"description":"Email","type":"string"},"CreatedBy":{"description":"Describes who created the Note","type":"string"},"CompanyName":{"description":"Subscriber or Provider short name","type":"string"},"Attachments":{"description":"Collection of note attachments","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.Attachment"}},"Visibility":{"format":"byte","type":"string"},"NoteType":{"enum":["SystemNote","UsersNote"],"type":"string"},"IsAttachmentNote":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse":{"description":"The email notification recipient object.","type":"object","properties":{"Id":{"format":"int32","description":"The unique numeric identifier of the user who can be added to the list of email notification recipients.","type":"integer"},"UserName":{"description":"The username of the email notification recipient.","type":"string"},"Email":{"description":"The email address of the notification recipient.","type":"string"},"RecipientType":{"description":"Defines the type of the email notification recipient.","enum":["Undefined","RegularRecipient","Provider","Follower","LocationNoteRecipient"],"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest":{"required":["FollowersList","UserIds"],"type":"object","properties":{"FollowersList":{"description":"Required, Followers List","type":"string"},"UserIds":{"description":"Required, User Ids","type":"string"}}},"ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription":{"required":["Url","Name","EventTypes"],"type":"object","properties":{"Id":{"format":"int32","description":"The unique subscription ID. Generated automatically and cannot be modified.","type":"integer"},"Url":{"description":"The URL to which the events should be delivered.","type":"string"},"Enabled":{"description":"Defines if the subscription is active or inactive.","default":false,"type":"boolean"},"Name":{"description":"The user-friendly name for the subscription.","type":"string"},"EventTypes":{"description":"The list of events to subscribe to. Events within one subscription should belong to one object.","type":"array","items":{"enum":["WorkOrderCreated","WorkOrderNoteAdded","WorkOrderNotePinned","WorkOrderNoteUnpinned","WorkOrderStatusChanged","WorkOrderAttachmentAdded","WorkOrderNumberChanged","WorkOrderPriorityChanged","WorkOrderScheduledDateChanged","WorkOrderTradeChanged","WorkOrderNteChanged","WorkOrderCategoryChanged","WorkOrderProviderChanged","WorkOrderDescriptionChanged","WorkOrderResolutionCreated","RefrigerantWasUsedChanged","WorkOrderResolutionUpdated","WorkOrderResolutionCodeUpdated","WorkOrderRootCauseCodeUpdated","WorkOrderAssetAttached","WorkOrderAssetDetached","WorkOrderAssetValidated","WorkOrderLabelAdded","WorkOrderLabelDeleted","WorkOrderWeatherTypeChanged","WorkOrderIssueChoiceChanged","WorkOrderTechnicianAssigned","WorkOrderTechnicianUnassigned","WorkOrderTechnicianAccepted","WorkOrderTechnicianDeclined","WorkOrderCertifiedTechnicianAssigned","WorkOrderLinksAdded","WorkOrderLinksDeleted","WorkOrderStarAdded","WorkOrderStarRemoved","WorkOrderCheckIn","WorkOrderCheckOut","BadgeScanRequired","InvoiceCreated","InvoiceOpen","InvoiceApproved","InvoiceOnHold","InvoiceReviewed","InvoiceRejected","InvoiceApprovalCodeChanged","InvoiceStarAdded","InvoiceStarRemoved","InvoiceDisputed","InvoiceVoided","InvoicePaid","ProposalCreated","ProposalOpen","ProposalApproved","ProposalOnHold","ProposalRejected","ProposalReviewed","ProposalUserAssigned","ProposalWorkOrderAssigned","ProposalAttachmentAdded","ProposalScheduled","ProposalVoided","ProposalPendingExternalApproval","FbInvitationAccepted","CalendarIntegrationAdded","CalendarIntegrationUpdated","LocationCreated","LocationUpdated","LocationDeleted","LocationNoteHeaderCreated","LocationNoteHeaderUpdated","LocationNoteHeaderDeleted","LocationNotesChanged","SubscriberTradeCreated","SubscriberTradeUpdated","SubscriberTradeDeleted","SubscriberPriorityCreated","SubscriberPriorityUpdated","SubscriberPriorityDeleted","SubscriberStatusCreated","SubscriberStatusUpdated","SubscriberStatusDeleted","SubscriberCategoryCreated","SubscriberCategoryUpdated","SubscriberCategoryDeleted","ProviderTradeAssigned","ProviderTradeUnassigned","LeakRecordCreated","LeakRecordUpdated","LeakRecordDeleted","CheckListResponseAdded","CheckListResponseUpdated","CheckListCreated","CheckListUpdated","CheckListDeleted","IssueListAssigned","AssetCreated","AssetUpdated"],"type":"string"}},"Rules":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionsRules"}}},"ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionsRules":{"description":"The event rules used to receive events matching only certain criteria.","type":"object","properties":{"Trades":{"description":"The trades that the events should belong to.","type":"array","items":{"type":"string"}},"Categories":{"description":"The categories that the events should belong to.","type":"array","items":{"type":"string"}},"Statuses":{"description":"The statuses that the events should belong to.","type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.Notifications.AddHttpNotificationSubscriptionRequest":{"required":["Url","Name","EventTypes"],"type":"object","properties":{"Url":{"description":"The URL to which the events should be delivered.","type":"string"},"Enabled":{"description":"Defines if the subscription is active or inactive.","default":false,"type":"boolean"},"Name":{"description":"The user-friendly name for the subscription.","type":"string"},"EventTypes":{"description":"The list of events to subscribe to. Events within one subscription should belong to one object.","type":"array","items":{"enum":["WorkOrderCreated","WorkOrderNoteAdded","WorkOrderNotePinned","WorkOrderNoteUnpinned","WorkOrderStatusChanged","WorkOrderAttachmentAdded","WorkOrderNumberChanged","WorkOrderPriorityChanged","WorkOrderScheduledDateChanged","WorkOrderTradeChanged","WorkOrderNteChanged","WorkOrderCategoryChanged","WorkOrderProviderChanged","WorkOrderDescriptionChanged","WorkOrderResolutionCreated","RefrigerantWasUsedChanged","WorkOrderResolutionUpdated","WorkOrderResolutionCodeUpdated","WorkOrderRootCauseCodeUpdated","WorkOrderAssetAttached","WorkOrderAssetDetached","WorkOrderAssetValidated","WorkOrderLabelAdded","WorkOrderLabelDeleted","WorkOrderWeatherTypeChanged","WorkOrderIssueChoiceChanged","WorkOrderTechnicianAssigned","WorkOrderTechnicianUnassigned","WorkOrderTechnicianAccepted","WorkOrderTechnicianDeclined","WorkOrderCertifiedTechnicianAssigned","WorkOrderLinksAdded","WorkOrderLinksDeleted","WorkOrderStarAdded","WorkOrderStarRemoved","WorkOrderCheckIn","WorkOrderCheckOut","BadgeScanRequired","InvoiceCreated","InvoiceOpen","InvoiceApproved","InvoiceOnHold","InvoiceReviewed","InvoiceRejected","InvoiceApprovalCodeChanged","InvoiceStarAdded","InvoiceStarRemoved","InvoiceDisputed","InvoiceVoided","InvoicePaid","ProposalCreated","ProposalOpen","ProposalApproved","ProposalOnHold","ProposalRejected","ProposalReviewed","ProposalUserAssigned","ProposalWorkOrderAssigned","ProposalAttachmentAdded","ProposalScheduled","ProposalVoided","ProposalPendingExternalApproval","FbInvitationAccepted","CalendarIntegrationAdded","CalendarIntegrationUpdated","LocationCreated","LocationUpdated","LocationDeleted","LocationNoteHeaderCreated","LocationNoteHeaderUpdated","LocationNoteHeaderDeleted","LocationNotesChanged","SubscriberTradeCreated","SubscriberTradeUpdated","SubscriberTradeDeleted","SubscriberPriorityCreated","SubscriberPriorityUpdated","SubscriberPriorityDeleted","SubscriberStatusCreated","SubscriberStatusUpdated","SubscriberStatusDeleted","SubscriberCategoryCreated","SubscriberCategoryUpdated","SubscriberCategoryDeleted","ProviderTradeAssigned","ProviderTradeUnassigned","LeakRecordCreated","LeakRecordUpdated","LeakRecordDeleted","CheckListResponseAdded","CheckListResponseUpdated","CheckListCreated","CheckListUpdated","CheckListDeleted","IssueListAssigned","AssetCreated","AssetUpdated"],"type":"string"}},"Rules":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionsRules"}}},"ServiceChannel.Services.Messaging.Notifications.AddNotificationSubsciptionResponse":{"type":"object","properties":{"Id":{"format":"int32","description":"The unique subscription ID. Generated automatically and cannot be modified.","type":"integer","readOnly":true}}},"ServiceChannel.Services.Messaging.Notifications.MSBotNotificationSubscriptionResponse":{"description":"MSBotNotificationSubscriptionResponse","type":"object","properties":{"Id":{"format":"int32","description":"Subscription identifier","type":"integer"},"UserId":{"format":"int32","description":"Service Channel User identifier","type":"integer"},"UserEmailAddress":{"description":"Service Channel User Email Address","type":"string"},"SubscriberId":{"format":"int32","description":"Subscriber identifier","type":"integer"},"ProviderId":{"format":"int32","description":"Provider identifier","type":"integer"},"IsEnabled":{"description":"Is Enabled","default":false,"type":"boolean"},"ConversationReference":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.MSBotConversationReference","description":"Conversation Reference"}}},"ServiceChannel.Services.Messaging.Notifications.MSBotConversationReference":{"description":"MSBotConversationReference","type":"object","properties":{"ConversationId":{"description":"Gets or sets channel id","type":"string"},"TenantId":{"description":"Gets or sets conversation's tenant ID","type":"string"},"UserId":{"description":"Gets or sets the user identifier","type":"string"},"UserName":{"description":"Gets or sets user name","type":"string"},"ServiceUrl":{"description":"Gets or sets (Optional) Service endpoint where operations referenced","type":"string"}}},"ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionRequest":{"description":"NotificationSubscriptionRequest","required":["Type","Content"],"type":"object","properties":{"Name":{"description":"The user-friendly name for the subscription.","type":"string"},"IsEnabled":{"description":"Defines if the subscription is active or inactive.","default":false,"type":"boolean"},"Type":{"description":"Notification Subscription Type","enum":["MSTeams"],"type":"string"},"Content":{"$ref":"#/definitions/System.Object","description":"Content"}}},"ServiceChannel.Services.Messaging.Notifications.SigningKeyResponse":{"type":"object","properties":{"Key":{"description":"The current subscriber's or provider's signing key.","type":"string"}}},"ServiceChannel.Services.Messaging.Permission.ProvidersExclusionListResponse":{"description":"ProvidersExclusionListResponse","type":"object","properties":{"ProviderIds":{"description":"Provider ids","type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook":{"required":["Name","Url"],"type":"object","properties":{"Subscriptions":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.WebHookSubscription"}},"Id":{"format":"int32","description":"The unique webhook ID. Generated automatically and cannot be modified.","type":"integer"},"ResetOptions":{"default":false,"type":"boolean"},"Enabled":{"description":"Defines if the webhook is active or inactive.","default":false,"type":"boolean"},"Name":{"description":"The user-friendly name for the webhook.","type":"string"},"Description":{"description":"The description of the webhook.","type":"string"},"Url":{"description":"The URL to which the events should be delivered.","type":"string"}}},"ServiceChannel.Services.Messaging.Notifications.WebHookSubscription":{"required":["Name","EventTypes"],"type":"object","properties":{"Id":{"format":"int32","description":"The unique subscription ID. Generated automatically and cannot be modified.","type":"integer"},"Name":{"description":"The user-friendly name for the subscription.","type":"string"},"EventTypes":{"description":"The list of events to subscribe to. Events within one subscription should belong to one object.","type":"array","items":{"enum":["WorkOrderCreated","WorkOrderNoteAdded","WorkOrderNotePinned","WorkOrderNoteUnpinned","WorkOrderStatusChanged","WorkOrderAttachmentAdded","WorkOrderNumberChanged","WorkOrderPriorityChanged","WorkOrderScheduledDateChanged","WorkOrderTradeChanged","WorkOrderNteChanged","WorkOrderCategoryChanged","WorkOrderProviderChanged","WorkOrderDescriptionChanged","WorkOrderResolutionCreated","RefrigerantWasUsedChanged","WorkOrderResolutionUpdated","WorkOrderResolutionCodeUpdated","WorkOrderRootCauseCodeUpdated","WorkOrderAssetAttached","WorkOrderAssetDetached","WorkOrderAssetValidated","WorkOrderLabelAdded","WorkOrderLabelDeleted","WorkOrderWeatherTypeChanged","WorkOrderIssueChoiceChanged","WorkOrderTechnicianAssigned","WorkOrderTechnicianUnassigned","WorkOrderTechnicianAccepted","WorkOrderTechnicianDeclined","WorkOrderCertifiedTechnicianAssigned","WorkOrderLinksAdded","WorkOrderLinksDeleted","WorkOrderStarAdded","WorkOrderStarRemoved","WorkOrderCheckIn","WorkOrderCheckOut","BadgeScanRequired","InvoiceCreated","InvoiceOpen","InvoiceApproved","InvoiceOnHold","InvoiceReviewed","InvoiceRejected","InvoiceApprovalCodeChanged","InvoiceStarAdded","InvoiceStarRemoved","InvoiceDisputed","InvoiceVoided","InvoicePaid","ProposalCreated","ProposalOpen","ProposalApproved","ProposalOnHold","ProposalRejected","ProposalReviewed","ProposalUserAssigned","ProposalWorkOrderAssigned","ProposalAttachmentAdded","ProposalScheduled","ProposalVoided","ProposalPendingExternalApproval","FbInvitationAccepted","CalendarIntegrationAdded","CalendarIntegrationUpdated","LocationCreated","LocationUpdated","LocationDeleted","LocationNoteHeaderCreated","LocationNoteHeaderUpdated","LocationNoteHeaderDeleted","LocationNotesChanged","SubscriberTradeCreated","SubscriberTradeUpdated","SubscriberTradeDeleted","SubscriberPriorityCreated","SubscriberPriorityUpdated","SubscriberPriorityDeleted","SubscriberStatusCreated","SubscriberStatusUpdated","SubscriberStatusDeleted","SubscriberCategoryCreated","SubscriberCategoryUpdated","SubscriberCategoryDeleted","ProviderTradeAssigned","ProviderTradeUnassigned","LeakRecordCreated","LeakRecordUpdated","LeakRecordDeleted","CheckListResponseAdded","CheckListResponseUpdated","CheckListCreated","CheckListUpdated","CheckListDeleted","IssueListAssigned","AssetCreated","AssetUpdated"],"type":"string"}},"Rules":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionsRules"}}},"ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookRequest":{"required":["Name","Url"],"type":"object","properties":{"Subscriptions":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.NotificationRequestBase"}},"Enabled":{"description":"Defines if the webhook is active or inactive.","default":false,"type":"boolean"},"Name":{"description":"The user-friendly name for the webhook.","type":"string"},"Description":{"description":"The description of the webhook.","type":"string"},"Url":{"description":"The URL to which the events should be delivered.","type":"string"}}},"ServiceChannel.Services.Messaging.Notifications.NotificationRequestBase":{"required":["Name","EventTypes"],"type":"object","properties":{"Name":{"description":"The user-friendly name for the subscription.","type":"string"},"EventTypes":{"description":"The list of events to subscribe to. Events within one subscription should belong to one object.","type":"array","items":{"enum":["WorkOrderCreated","WorkOrderNoteAdded","WorkOrderNotePinned","WorkOrderNoteUnpinned","WorkOrderStatusChanged","WorkOrderAttachmentAdded","WorkOrderNumberChanged","WorkOrderPriorityChanged","WorkOrderScheduledDateChanged","WorkOrderTradeChanged","WorkOrderNteChanged","WorkOrderCategoryChanged","WorkOrderProviderChanged","WorkOrderDescriptionChanged","WorkOrderResolutionCreated","RefrigerantWasUsedChanged","WorkOrderResolutionUpdated","WorkOrderResolutionCodeUpdated","WorkOrderRootCauseCodeUpdated","WorkOrderAssetAttached","WorkOrderAssetDetached","WorkOrderAssetValidated","WorkOrderLabelAdded","WorkOrderLabelDeleted","WorkOrderWeatherTypeChanged","WorkOrderIssueChoiceChanged","WorkOrderTechnicianAssigned","WorkOrderTechnicianUnassigned","WorkOrderTechnicianAccepted","WorkOrderTechnicianDeclined","WorkOrderCertifiedTechnicianAssigned","WorkOrderLinksAdded","WorkOrderLinksDeleted","WorkOrderStarAdded","WorkOrderStarRemoved","WorkOrderCheckIn","WorkOrderCheckOut","BadgeScanRequired","InvoiceCreated","InvoiceOpen","InvoiceApproved","InvoiceOnHold","InvoiceReviewed","InvoiceRejected","InvoiceApprovalCodeChanged","InvoiceStarAdded","InvoiceStarRemoved","InvoiceDisputed","InvoiceVoided","InvoicePaid","ProposalCreated","ProposalOpen","ProposalApproved","ProposalOnHold","ProposalRejected","ProposalReviewed","ProposalUserAssigned","ProposalWorkOrderAssigned","ProposalAttachmentAdded","ProposalScheduled","ProposalVoided","ProposalPendingExternalApproval","FbInvitationAccepted","CalendarIntegrationAdded","CalendarIntegrationUpdated","LocationCreated","LocationUpdated","LocationDeleted","LocationNoteHeaderCreated","LocationNoteHeaderUpdated","LocationNoteHeaderDeleted","LocationNotesChanged","SubscriberTradeCreated","SubscriberTradeUpdated","SubscriberTradeDeleted","SubscriberPriorityCreated","SubscriberPriorityUpdated","SubscriberPriorityDeleted","SubscriberStatusCreated","SubscriberStatusUpdated","SubscriberStatusDeleted","SubscriberCategoryCreated","SubscriberCategoryUpdated","SubscriberCategoryDeleted","ProviderTradeAssigned","ProviderTradeUnassigned","LeakRecordCreated","LeakRecordUpdated","LeakRecordDeleted","CheckListResponseAdded","CheckListResponseUpdated","CheckListCreated","CheckListUpdated","CheckListDeleted","IssueListAssigned","AssetCreated","AssetUpdated"],"type":"string"}},"Rules":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionsRules"}}},"ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookResponse":{"description":"Add WebHook Response","type":"object","properties":{"Id":{"format":"int32","description":"The unique webhook ID. Generated automatically and cannot be modified.","type":"integer"},"SubscriptionsResponses":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData":{"type":"object","properties":{"ids":{"type":"array","items":{"format":"int32","type":"integer"}},"delay":{"format":"float","type":"number"}}},"ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser":{"type":"object","properties":{"Key":{"type":"string"},"IdentityId":{"format":"int32","type":"integer"},"Type":{"type":"string"},"Id":{"format":"int32","type":"integer"},"Pin":{"format":"int32","type":"integer"},"TypeMsg":{"type":"string"},"Url":{"type":"string"},"Login":{"type":"string"},"Password":{"type":"string"},"HttpMethod":{"type":"string"},"Format":{"type":"string"},"Topic":{"type":"string"},"UseEventSystem":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Workorders.WorkOrderPartResponse":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Quantity":{"format":"float","type":"number"},"RecId":{"format":"int32","type":"integer"},"Description":{"type":"string"},"Price":{"format":"double","type":"number"},"Reason":{"type":"string"},"SupplierPartId":{"type":"string"},"SupplierPartAuxiliaryId":{"type":"string"},"DefaultNte":{"format":"double","type":"number"},"NteMultiplier":{"format":"double","type":"number"},"IsSupplierPart":{"default":false,"type":"boolean"},"IsInventoryPart":{"default":false,"type":"boolean"},"InventoryLocationName":{"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.CreateWorkOrderPartsCollectionRequest":{"type":"object","properties":{"Parts":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrderPartRequest"}}}},"ServiceChannel.Services.Messaging.Workorders.CreateWorkOrderPartRequest":{"type":"object","properties":{"Quantity":{"format":"double","type":"number"},"Description":{"type":"string"},"Price":{"format":"double","type":"number"}}},"ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrderPartsCollectionRequest":{"type":"object","properties":{"Parts":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrderPartRequest"}}}},"ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrderPartRequest":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Quantity":{"format":"double","type":"number"},"Description":{"type":"string"},"Price":{"format":"double","type":"number"}}},"ServiceChannel.Services.Messaging.Parts.RefrigerantUsageResponse":{"type":"object","properties":{"TriggerQuantity":{"format":"double","type":"number"},"LeakRate":{"format":"double","type":"number"},"Charge":{"format":"double","type":"number"},"CalculationMethod":{"format":"byte","type":"string"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantBulkChangeRequest":{"type":"object","properties":{"AddItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.AddWorkOrderPartRefrigerantItem"}},"UpdateItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateWorkOrderPartRefrigerantItem"}},"DeleteItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.DeleteWorkOrderPartRefrigerantItem"}},"IsLocalTime":{"default":false,"type":"boolean"},"SubmitQuantityExceeded":{"default":false,"type":"boolean"},"SubmitMoeQtyExceeded":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.AddWorkOrderPartRefrigerantItem":{"type":"object","properties":{"AssetId":{"format":"int32","type":"integer"},"RecId":{"format":"int32","type":"integer"},"Quantity":{"format":"double","type":"number"},"UnitCost":{"format":"double","type":"number"},"IsRefrigerant":{"default":false,"type":"boolean"},"IsInventoryPart":{"default":false,"type":"boolean"},"UseDate":{"format":"date-time","type":"string"},"UseDateStr":{"type":"string"},"ReasonCode":{"format":"int32","type":"integer"},"ReasonCodeId":{"format":"int32","type":"integer"},"PartNumber":{"type":"string"},"PartName":{"type":"string"},"PartGroup":{"type":"string"},"PartGroupId":{"format":"int32","type":"integer"},"SupplierName":{"type":"string"},"Description":{"type":"string"},"RefrigerantChargeOptionsId":{"format":"int32","type":"integer"},"RefrigerantChargeVendor":{"type":"string"},"InventoryLocationId":{"format":"int32","type":"integer"},"InventoryLocationGuid":{"description":"GUID of the inventory location","type":"string"},"InventoryPartId":{"format":"int32","type":"integer"},"RefrigerantUseReason":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantUseReasonCode"},"RefrigerantRemovalStatus":{"enum":["Destroyed","Reused","Reclaimed","Banked","ChargeLost"],"type":"string"},"RefrigerantTypeId":{"format":"int32","type":"integer"},"RefrigerantTypeName":{"type":"string"},"SubmitMoeQtyExceeded":{"default":false,"type":"boolean"},"MoeNumber":{"type":"string"},"IsRetrofit":{"format":"byte","type":"string"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateWorkOrderPartRefrigerantItem":{"type":"object","properties":{"PartId":{"format":"int32","type":"integer"},"Quantity":{"format":"double","type":"number"},"UnitCost":{"format":"double","type":"number"},"IsRefrigerant":{"default":false,"type":"boolean"},"IsInventoryPart":{"default":false,"type":"boolean"},"UseDate":{"format":"date-time","type":"string"},"UseDateStr":{"type":"string"},"ReasonCode":{"format":"int32","type":"integer"},"ReasonCodeId":{"format":"int32","type":"integer"},"PartNumber":{"type":"string"},"PartName":{"type":"string"},"PartGroup":{"type":"string"},"SupplierName":{"type":"string"},"Description":{"type":"string"},"RefrigerantChargeOptionsId":{"format":"int32","type":"integer"},"RefrigerantChargeVendor":{"type":"string"},"InventoryLocationId":{"format":"int32","type":"integer"},"InventoryLocationGuid":{"description":"GUID of the inventory location","type":"string"},"InventoryPartId":{"format":"int32","type":"integer"},"RefrigerantUseReason":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantUseReasonCode"},"SubmitMoeQtyExceeded":{"default":false,"type":"boolean"},"MoeNumber":{"type":"string"},"RecId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.DeleteWorkOrderPartRefrigerantItem":{"type":"object","properties":{"PartId":{"format":"int32","type":"integer"},"InventoryLocationGuid":{"description":"GUID of the inventory location","type":"string"},"DeletionReason":{"format":"byte","type":"string"},"DeletionReasonDescription":{"type":"string"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantUseReasonCode":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Order":{"format":"int32","type":"integer"},"Purpose":{"format":"int32","type":"integer"},"Name":{"type":"string"},"SubscriberId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantResponse":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"AssetId":{"format":"int32","type":"integer"},"TagId":{"type":"string"},"RecId":{"format":"int32","type":"integer"},"CertifiedTechnicianId":{"format":"int32","type":"integer"},"Quantity":{"format":"double","type":"number"},"QuantityMetrics":{"format":"double","type":"number"},"QuantityStr":{"type":"string"},"UnitCost":{"format":"double","type":"number"},"IsRefrigerant":{"default":false,"type":"boolean"},"IsInventoryPart":{"default":false,"type":"boolean"},"UseDate":{"format":"date-time","type":"string"},"ReasonCode":{"format":"int32","type":"integer"},"ReasonCodeId":{"format":"int32","type":"integer"},"PartNumber":{"type":"string"},"Description":{"type":"string"},"WOStatus":{"type":"string"},"ProblemType":{"type":"string"},"InventoryLocationId":{"format":"int32","type":"integer"},"InventoryLocationGuid":{"description":"GUID of inventory part location","type":"string"},"InventoryLocationName":{"type":"string"},"InventoryPartId":{"format":"int32","type":"integer"},"PartName":{"type":"string"},"PartGroup":{"type":"string"},"SupplierName":{"type":"string"},"RefrigerantChargeOptionsId":{"format":"int32","type":"integer"},"RefrigerantChargeVendor":{"type":"string"},"ReasonCodeStr":{"type":"string"},"RefrigerantUsePurpose":{"format":"int32","type":"integer"},"RefrigerantTypeName":{"type":"string"},"RefrigerantTypeId":{"format":"int32","type":"integer"},"IsSupplierPart":{"default":false,"type":"boolean"},"IsConnectorWOPart":{"default":false,"type":"boolean"},"SubscriberTrackingNumber":{"format":"int32","type":"integer"},"SubscriberAssetId":{"format":"int32","type":"integer"},"CreatedByUserId":{"type":"string"},"ModifiedByUserId":{"type":"string"},"IsRetrofit":{"format":"byte","type":"string"},"RefrigerantPartNumber":{"type":"string"},"InventoryLocations":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Inventory.InventoryLocation"}},"SupplierPartId":{"type":"string"}}},"ServiceChannel.Services.Messaging.Inventory.InventoryLocation":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"LocationId":{"format":"int32","type":"integer"},"PartId":{"format":"int32","type":"integer"},"Qty":{"format":"double","type":"number"},"UnitPrice":{"format":"double","type":"number"},"LocationName":{"type":"string"},"StoreId":{"type":"string"},"LocationGuid":{"type":"string"}}},"ServiceChannel.Services.Messaging.Assets.TechnicianAssociatedResponse":{"type":"object","properties":{"IsAssociated":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Proposals.ProposalStatisticsResponse":{"description":"Object of statistics on RFPs and proposals.","type":"object","properties":{"DaysPeriod":{"format":"int32","description":"Time period set as the number of days prior to the current date for which statistics on RFPs and proposals are returned.","type":"integer"},"RFPsWaitingForApproval":{"format":"int32","description":"The total number of RFPs awaiting response for the specified time period.","type":"integer"},"OpenProposals":{"format":"int32","description":"The total number of proposals in the _Open_ status for the specified time period.","type":"integer"},"ApprovedProposalsDaysPeriod":{"format":"int32","description":"Time period set as the number of days prior to the current date for which statistics on approved proposals are returned in `ApprovedProposals`.","type":"integer"},"ApprovedProposals":{"format":"int32","description":"The total number of proposals in the _Approved_ status for the specified time period.","type":"integer"},"WaitingReviewProposals":{"format":"int32","description":"The total number of proposals in the _On Hold_ and _Reviewed_ statuses for the specified time period.","type":"integer"},"RejectedProposals":{"format":"int32","description":"The total number of proposals in the _Rejected_ status for the specified time period.","type":"integer"}}},"ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest":{"description":"The request object to update a proposal status.","type":"object","properties":{"Comment":{"description":"Comment on the proposal status update. The comment is added to the work order note.","type":"string"},"ProviderEmail":{"description":"Provider’s email address to which a notification about the proposal status change is sent. The default is the email address of the provider the proposal is assigned to.","type":"string"},"UserEmail":{"description":"User’s email address to which a notification about the proposal status change is sent. The default is the email address of the current user.","type":"string"},"RejectReasonCodeId":{"format":"int32","description":"Numeric identifier of the reason for rejecting the proposal.\r\n            Pass value to this parameter when sending the *PUT /proposals/{proposalId}/reject* request. To retrieve a list of rejection reason codes and their descriptions, use the *GET /proposals/RejectionReasons* method.","type":"integer"},"ActionSource":{"enum":["Standard","DecisionEngine"],"type":"string"},"ReasonString":{"description":"Reason for approving the proposal.\r\n            Pass value to this parameter when sending the *PUT /proposals/{proposalId}/approve* request. The entered reason is added to the work order note.","type":"string"},"Actor":{"description":"The Actor is added to the work order note.","type":"string"}}},"ServiceChannel.Services.Messaging.Proposals.UpdateProposalsStatusRequest":{"type":"object","properties":{"ProposalId":{"format":"int32","type":"integer"},"Comments":{"type":"string"},"RejectReasonCode":{"format":"int32","type":"integer"},"Email":{"type":"string"}}},"ServiceChannel.Services.Messaging.Proposals.MlpWoRecommendationRequest":{"description":"The request object to escalate a proposal.","required":["Action"],"type":"object","properties":{"Action":{"description":"Proposal escalation action. **Valid values**: *Approve*, *Reject*, *OnHold*, *Return*.","type":"string"},"WoType":{"format":"int32","description":"Work order type. **Valid values**: 0 — *Origin*, 1 — *New*, 2 — *Existing*.","type":"integer"},"TrackingNumber":{"format":"int32","description":"The unique numeric identifier of the work order. Required if the `WoType` is 2 — *Existing*.","type":"integer"},"PoNumber":{"description":"Purchase order number.","type":"string"},"ExistingPoNumber":{"description":"The existing purchase order number. If the `PoNumber` parameter is passed, its value is used instead of `ExistingPoNumber`.","type":"string"},"Category":{"description":"The overall classification of a WO, such as *Maintenance*, *Repair*, or *CAPEX*. Required if the `WoType` is 1 — *New*.\r\n            The value you enter must be a valid category.","type":"string"},"CategoryId":{"format":"int32","description":"Numeric identifier of the category.","type":"integer"},"ApprovalCode":{"description":"Approval code, or GL code, used when approving an invoice.","type":"string"},"Priority":{"description":"Period during which a service provider should check in to perform the requested service. Required if the `WoType` is 1 — *New*.\r\n            The value you enter must be a valid priority.","type":"string"},"Comment":{"description":"Your comment describing why you are escalating the proposal.","type":"string"},"RejectReasonCodeId":{"format":"int32","description":"Numeric identifier of the reason for rejecting the proposal. Don’t pass when escalating the proposal.","type":"integer"},"ReasonString":{"description":"Reason for approving the proposal.","type":"string"},"EmailsToNotify":{"description":"The email address of the user to notify about the proposal escalation. When entering multiple addresses, separate them with a comma or semicolon.","type":"string"},"EmailMyself":{"description":"Defines if the proposal escalation notification is sent to the current user.","default":false,"type":"boolean"},"MyEmail":{"description":"The email address of the current user to which a proposal escalation notification is sent.","type":"string"},"ProposalId":{"format":"int32","description":"The unique numeric identifier of the proposal to escalate.","type":"integer"},"WorkOrderLabel":{"$ref":"#/definitions/ServiceChannel.Api.Model.Label","description":"WorkOrder Label."},"DeleteLabel":{"description":"Is WorkOrder Label to delete.","default":false,"type":"boolean"},"Actor":{"description":"The Actor is added to the work order note.","type":"string"},"AdditionalApprovalCodes":{"description":"The Additional Approval Codes.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ApprovalCodes.AdditionalApprovalCode"}}}},"ServiceChannel.Api.Model.Label":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"WoUrl":{"type":"string"}}},"ServiceChannel.Services.Messaging.ApprovalCodes.AdditionalApprovalCode":{"type":"object","properties":{"Header":{"type":"string"},"Value":{"type":"string"},"SetupId":{"format":"int32","type":"integer"},"LocationId":{"format":"int32","type":"integer"},"DefaultOptionId":{"format":"int32","type":"integer"},"ValueFormat":{"format":"int32","type":"integer"},"EditableAtLineItemLevel":{"format":"int32","type":"integer"},"Options":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ApprovalCodes.AdditionalApprovalCodeOption"}},"DefaultValue":{"type":"string","readOnly":true}}},"ServiceChannel.Services.Messaging.Proposals.AssignUserToProposalRequest":{"description":"The request object to assign a proposal to a user.","required":["UserId"],"type":"object","properties":{"UserId":{"format":"int32","description":"The unique numeric identifier of the user to assign the proposal to.","type":"integer"},"Comments":{"description":"Your comment describing why you are assigning or reassigning the proposal to the specified user.","type":"string"},"UserEmail":{"description":"The email address to send a notification about the assigned proposal to. The default is the email address of the user who is assigned the proposal.","type":"string"},"ReasonString":{"description":"Reason for approving the proposal. Don’t pass when assigning the proposal to a user.","type":"string"},"Note":{"description":"Note added upon assigning or reassigning the proposal.","type":"string"}}},"ServiceChannel.Services.Messaging.Proposals.SearchProposalModel":{"type":"object","properties":{"UserId":{"type":"string"},"CurrentLevelProposal":{"default":false,"type":"boolean"},"WorkOrderId":{"type":"string"},"ProposalId":{"type":"string"},"PurchaseOrderId":{"type":"string"},"ProjectId":{"type":"string"},"Projects":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Projects.Project"}},"DateType":{"enum":["PastMonth","PastThreeMonths","PastYear","Custom"],"type":"string"},"ProposalFilterDateType":{"enum":["ProposalDate","ScheduledDate","ActionDate"],"type":"string"},"ProposalDateFrom":{"format":"date-time","type":"string"},"ProposalDateTo":{"format":"date-time","type":"string"},"ProposalDateFromString":{"type":"string"},"ProposalDateToString":{"type":"string"},"SortBy":{"enum":["DateDesc","DateAsc","ProposalNumber","Trade","LocationId","Provider","Status"],"type":"string"},"ReportWithAttachmentsOnly":{"default":false,"type":"boolean"},"ExcludePropAssociatedWithWo":{"default":false,"type":"boolean"},"Report":{"enum":["Viewable","Printable","Excel"],"type":"string"},"Priorities":{"type":"array","items":{"type":"string"}},"ProposalStatuses":{"type":"array","items":{"enum":["All","Open","OnHold","Reviewed","ApprovedNotScheduled","ApprovedScheduled","Rejected","PendingExt"],"type":"string"}},"CategoriesIdName":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.KeyValue[System.String,System.String]"}},"TradesIdName":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.KeyValue[System.String,System.String]"}},"Locations":{"type":"array","items":{"type":"string"}},"LocationShortNames":{"type":"array","items":{"type":"string"}},"LocationShortAddresses":{"type":"array","items":{"type":"string"}},"LocationCities":{"type":"array","items":{"type":"string"}},"StateIds":{"type":"array","items":{"format":"int32","type":"integer"}},"CountryIds":{"type":"array","items":{"format":"int32","type":"integer"}},"Regions":{"type":"array","items":{"type":"string"}},"Districts":{"type":"array","items":{"type":"string"}},"States":{"type":"array","items":{"type":"string"}},"Countries":{"type":"array","items":{"type":"string"}},"Attributes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.IdNameValue"}},"LocationNoteHeaders":{"type":"array","items":{"type":"string"}},"LineItemReport":{"default":false,"type":"boolean"},"Provider":{"type":"string"},"ChangedProposals":{"type":"array","items":{"format":"int32","type":"integer"}},"ProposalIids":{"type":"string"},"ProposalNumber":{"type":"string"},"ProposalWO":{"type":"string"},"ProviderId":{"format":"int32","type":"integer"},"LocationId":{"format":"int32","type":"integer"},"SaveReport":{"type":"string"},"ALP":{"format":"int32","type":"integer"},"Labels":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.KeyValue[System.String,System.String]"}},"IncludeMlpCategory":{"default":false,"type":"boolean"},"SubscribersIdName":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.KeyValue[System.Int32,System.String]"}},"IsAssignedToMe":{"default":false,"type":"boolean"},"HasAssignee":{"default":false,"type":"boolean"},"IncludeOverrideProposals":{"default":false,"type":"boolean"},"AmountFrom":{"format":"double","type":"number"},"AmountTo":{"format":"double","type":"number"},"StatusesActiveTab":{"type":"string"},"ProposalsIds":{"type":"array","items":{"format":"int32","type":"integer"}},"SortField":{"enum":["LocDate","ProposalNumber","Trade","StoreId","ProviderName","Status","SubscriberName"],"type":"string"},"SortOrder":{"enum":["ASC","DESC"],"type":"string"},"Currency":{"$ref":"#/definitions/ServiceChannel.Api.Model.Currency.Currency"},"Offset":{"format":"int32","type":"integer"},"Count":{"format":"int32","type":"integer"},"Language":{"type":"string"},"AllUsers":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Projects.Project":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"Description":{"type":"string"}}},"ServiceChannel.Api.Model.KeyValue[System.String,System.String]":{"type":"object","properties":{"Key":{"type":"string"},"Value":{"type":"string"}}},"ServiceChannel.Services.Messaging.Proposals.IdNameValue":{"type":"object","properties":{"Id":{"type":"string"},"Name":{"type":"string"},"Value":{"type":"string"}}},"ServiceChannel.Api.Model.KeyValue[System.Int32,System.String]":{"type":"object","properties":{"Key":{"format":"int32","type":"integer"},"Value":{"type":"string"}}},"ServiceChannel.Api.Model.Currency.Currency":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Entity":{"type":"string"},"CurrencyName":{"type":"string"},"NumericCode":{"type":"string"},"AlphabeticCode":{"type":"string"},"Rate":{"format":"double","type":"number"},"DecimalCount":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Users.UserInfo":{"description":"The user details object.","type":"object","properties":{"Id":{"format":"int32","description":"The unique numeric identifier of the user.","type":"integer"},"UserName":{"description":"The username of the user.","type":"string"},"FullName":{"description":"The full name of the user.","type":"string"},"Email":{"description":"The email address of the user.","type":"string"},"LevelInfo":{"$ref":"#/definitions/ServiceChannel.Api.Model.Proposals.MlpLevelSimpleModel","description":"The information on the MLP level the user belongs to."}}},"ServiceChannel.Api.Model.Proposals.MlpLevelSimpleModel":{"type":"object","properties":{"UserId":{"format":"int32","type":"integer"},"LocationIds":{"type":"array","items":{"format":"int32","type":"integer"}},"LevelId":{"format":"int32","type":"integer"},"LevelName":{"type":"string"},"Order":{"format":"int32","type":"integer"},"UsersLocations":{"type":"object","additionalProperties":{"type":"array","items":{"format":"int32","type":"integer"}}},"CategoryChange":{"default":false,"type":"boolean"},"PriorityChange":{"default":false,"type":"boolean"},"CodeChange":{"default":false,"type":"boolean"},"DivisionId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersRequest":{"type":"object","properties":{"ProviderId":{"description":"Numeric id of provider","type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersResponse":{"type":"object","properties":{"IsTrained":{"default":false,"type":"boolean"},"Id":{"format":"int32","description":"Id","type":"integer"},"Name":{"description":"Name","type":"string"},"DoNotDispatch":{"description":"DoNotDispatch enabled?","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Providers.RemoveProviderSubscriberLinkRequest":{"type":"object","properties":{"ProviderId":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Providers.CreateBlankProviderResponse":{"type":"object","properties":{"ProviderId":{"format":"int32","type":"integer"},"UserId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Providers.CreateBlankProviderRequest":{"type":"object","properties":{"UserId":{"pattern":"^$|(\\A\\S+).(\\S).(\\S)\\z","type":"string"},"Email":{"type":"string"},"ProviderName":{"type":"string"},"AuthUserId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Providers.ProviderAccountChangedRequest":{"type":"object","properties":{"ProviderId":{"format":"int64","type":"integer"},"VerificaitonStatus":{"format":"int32","type":"integer"},"IsCreditCardAccepted":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Providers.ProviderInfo":{"type":"object","properties":{"Id":{"format":"int32","description":"Id","type":"integer"},"Name":{"description":"Name","type":"string"},"DoNotDispatch":{"description":"DoNotDispatch enabled?","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Providers.ProviderFeedbackRequest":{"type":"object","properties":{"StarScore":{"format":"int32","description":"StarScore 1..5","type":"integer"},"Comment":{"description":"Comment","type":"string"}}},"ServiceChannel.Services.WebApi.Models.UpdateDispatchSettingModel":{"description":"The model for update isDoNotDispatch value for providers.","type":"object","properties":{"SubscriberId":{"format":"int32","description":"The id of a calling subscriber.\r\n            This id is the one who sets isDoNotDispatch value or is an aggregator of other subscribers.\r\n            If it is the aggregator then subscriberId and subscriberIds from SubscriberProviders pairs do not match.","type":"integer"},"DoNotDispatch":{"description":"The flag to set isDoNotDispatch value for providers.","default":false,"type":"boolean"},"SubscriberIdProviderIds":{"description":"The list of pairs subscriber and providers to set isDoNotDispatch value.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.WebApi.Models.SubscriberIdProviderIdsPair"}}}},"ServiceChannel.Services.WebApi.Models.SubscriberIdProviderIdsPair":{"type":"object","properties":{"SubscriberId":{"format":"int32","type":"integer"},"ProviderIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Providers.GetESignatureSettingsResponse":{"type":"object","properties":{"ElectronicSignaturePermission":{"type":"string"}}},"ServiceChannel.Services.Messaging.Notifications.PushNotificationSubscriptionRequest":{"description":"Subscribe Push Notification Request model","required":["DeviceToken","DeviceType","NotificationType","Application"],"type":"object","properties":{"DeviceToken":{"description":"Required Device Token.","type":"string"},"DeviceType":{"description":"Device type: Android, iOS, Amazon","enum":["Android","iOS","Amazon"],"type":"string"},"NotificationType":{"description":"Notification type: Check In , ....","enum":["CheckIn","CheckOut","BadgeScanRequired"],"type":"string"},"Application":{"description":"Application : ScMobile, FTM, ...","enum":["ScMobile"],"type":"string"},"NotificationRules":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Notifications.NotificationRulesRequest","description":"Filter for Notification Request"}}},"ServiceChannel.Services.Messaging.Equipments.GetAvailableRacksRequest":{"type":"object","properties":{"SubscriberId":{"format":"int32","type":"integer"},"LocationId":{"format":"int32","type":"integer"},"IncludeInactive":{"default":false,"type":"boolean"},"SelectInactiveRackId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.PreferencesRequest":{"type":"object","properties":{"SubscriberId":{"format":"int32","type":"integer"},"ChargeThreshold":{"format":"double","type":"number"},"ComercialRefTriggerRate":{"format":"double","type":"number"},"IndustrialRefTriggerRate":{"format":"double","type":"number"},"HVACTriggerRate":{"format":"double","type":"number"},"OthersTriggerRate":{"format":"double","type":"number"},"CreateDate":{"format":"date-time","type":"string"},"CreateDateStr":{"type":"string","readOnly":true},"UserId":{"format":"int32","type":"integer"},"UserName":{"type":"string"},"MaxThreshold":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.MaxThreshold"},"CalculationMethod":{"format":"byte","type":"string"},"CalculationMethods":{"type":"object","additionalProperties":{"type":"string"}},"UnitsOfMeasure":{"format":"byte","type":"string"},"UnitsOfMeasures":{"type":"object","additionalProperties":{"type":"string"}},"InventoryLocation":{"format":"byte","type":"string"},"InventoryLocationOptions":{"type":"object","additionalProperties":{"type":"string"}},"RefrigerationPriorityName":{"type":"string"},"RefrigerationPriorityNameOptions":{"type":"array","items":{"type":"string"}},"GenerateFollowUpWorkOrders":{"type":"object","additionalProperties":{"type":"string"}},"ChargeThresholdStr":{"type":"string","readOnly":true},"RunCARBReport":{"default":false,"type":"boolean"},"LeakInspectionNTE":{"format":"double","type":"number"},"GenerateFollowUpWorkOrder":{"type":"string"},"MaxLocCount":{"format":"int32","type":"integer"},"RtLimitedApplianceId":{"format":"byte","type":"string"},"RtLimitedApplianceName":{"type":"string"},"RefrigerantTrackingProviderId":{"format":"int32","type":"integer"},"RefrigerantTrackingProviderName":{"type":"string"},"ODSRefrigerantTypes":{"type":"array","items":{"format":"int32","type":"integer"}},"GenerateLeakInspectionOption":{"type":"string"},"CalendarStartDate":{"format":"date-time","type":"string"},"CalendarStartDateStr":{"type":"string","readOnly":true},"EnableCARBInspections":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.MaxThreshold":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"ChargeThreshold":{"format":"double","type":"number"},"ComercialRefTriggerRate":{"format":"double","type":"number"},"IndustrialRefTriggerRate":{"format":"double","type":"number"},"HVACTriggerRate":{"format":"double","type":"number"},"OthersTriggerRate":{"format":"double","type":"number"},"ApplyDate":{"format":"date-time","type":"string"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.CreateUpdateRackConnectionRequest":{"type":"object","properties":{"RackId":{"format":"int32","type":"integer"},"AssetId":{"format":"int32","type":"integer"},"LocationId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Core.InternalRequests.RefrigerantTracking.CheckRefrigerantTrackingRequest":{"type":"object","properties":{"LocationIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Note":{"type":"string"},"RepairDate":{"format":"date-time","type":"string"},"InitialDate":{"format":"date-time","type":"string"},"InitialMethod":{"format":"int32","type":"integer"},"FollowUpDate":{"format":"date-time","type":"string"},"FollowUpMethod":{"format":"int32","type":"integer"},"LeakLocationId":{"format":"int32","type":"integer"},"FaultCodeId":{"format":"int32","type":"integer"},"ActionCodeId":{"format":"int32","type":"integer"},"LeakAreaId":{"format":"int32","type":"integer"},"CurrentTrackingNumber":{"format":"int32","type":"integer"},"CompletedDate":{"format":"date-time","type":"string"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest":{"type":"object","properties":{"EquipmentTypes":{"type":"array","items":{"format":"int32","type":"integer"}},"EquipmentTags":{"type":"array","items":{"type":"string"}},"Locations":{"type":"array","items":{"format":"int32","type":"integer"}},"LeakLocations":{"type":"array","items":{"format":"int32","type":"integer"}},"TrackingNumbers":{"type":"array","items":{"format":"int32","type":"integer"}},"LeakStatusId":{"format":"int32","type":"integer"},"Index":{"format":"int32","type":"integer"},"Count":{"format":"int32","type":"integer"},"DateRangeId":{"format":"int32","type":"integer"},"StartDate":{"format":"date-time","type":"string"},"EndDate":{"format":"date-time","type":"string"},"LeakAreaIds":{"type":"array","items":{"format":"int32","type":"integer"}},"ProviderIds":{"type":"array","items":{"format":"int32","type":"integer"}},"Markets":{"type":"array","items":{"type":"string"}},"Divisions":{"type":"array","items":{"type":"string"}},"ActionCodeIds":{"type":"array","items":{"format":"int32","type":"integer"}},"ReasonCodeIds":{"type":"array","items":{"format":"int32","type":"integer"}},"PartGroups":{"type":"array","items":{"format":"int32","type":"integer"}},"MOENumbers":{"type":"array","items":{"type":"string"}},"UnitOfMeasure":{"format":"byte","type":"string"},"IsExport":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakNoteRequest":{"type":"object","properties":{"LeakRecordId":{"format":"int32","type":"integer"},"Note":{"type":"string"},"Autogenerated":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.LeakDetectorAuditAddUpdateRequest":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"LeakDetectorId":{"format":"int32","type":"integer"},"AlarmSetPoint":{"format":"double","type":"number"},"DetectionLimit":{"format":"double","type":"number"},"RecId":{"format":"int32","type":"integer"},"ServiceDate":{"format":"date-time","type":"string"},"ServiceType":{"enum":["Audit","Inspection"],"type":"string"},"ServiceDescription":{"type":"string"},"LocationId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.ChargeHistoryRequest":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"AssetId":{"format":"int32","type":"integer"},"TagId":{"type":"string"},"TotalCharge":{"format":"double","type":"number"},"TotalChargeStr":{"type":"string"},"ProviderName":{"type":"string"},"EffectiveDate":{"format":"date-time","type":"string"},"InitialCharge":{"default":false,"type":"boolean"},"RefrigerantChargeOptionsId":{"format":"int32","type":"integer"},"TotalRows":{"format":"int32","type":"integer"},"RefrigerantPartNumber":{"type":"string"},"PartNumberId":{"format":"int32","type":"integer"},"TotalChargeMetrics":{"format":"double","type":"number"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantType":{"type":"object","properties":{"InventoryId":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"Name":{"type":"string"},"IsODS":{"default":false,"type":"boolean"},"GwpRefrigerantId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.EditAssetRefrigerantRequest":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"AssetId":{"format":"int32","type":"integer"},"RefrigerantUsageType":{"format":"int32","type":"integer"},"RackId":{"type":"string"},"RackEntityId":{"format":"int32","type":"integer"},"CarbID":{"type":"string"},"IsCarbReporting":{"default":false,"type":"boolean"},"SystemLocation":{"format":"byte","type":"string"},"OperationalStatus":{"format":"byte","type":"string"},"PartNumberId":{"format":"int32","type":"integer"},"RackTypeId":{"format":"int32","type":"integer"},"CurrentCharge":{"format":"double","type":"number"},"CurrentChargeOunces":{"format":"double","type":"number"},"ChargeDescriptionId":{"format":"int32","type":"integer"},"ChargeProviderName":{"type":"string"},"EffectiveChargeDate":{"format":"date-time","type":"string"},"HasLeakDetector":{"default":false,"type":"boolean"},"AssetLeakDetectorId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.LeakRecord.LeakVerifyMethod":{"description":"Leak verification method","type":"object","properties":{"Id":{"format":"int32","description":"Method's id","type":"integer"},"Name":{"description":"Method's name","type":"string"}}},"ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest":{"description":"Request to add or update PmLeakVerifications","type":"object","properties":{"RecId":{"format":"int32","description":"Tracking number","type":"integer"},"Actor":{"description":"Actor","type":"string"},"VerificationMethodsIds":{"description":"Leak verification methods ids","type":"array","items":{"format":"int32","type":"integer"}}}},"System.Web.Http.Results.NotFoundResult":{"type":"object","properties":{"Request":{"$ref":"#/definitions/System.Object","readOnly":true}}},"ServiceChannel.Api.Model.RefrigerantTracking.WOLeakVerificationResponse":{"type":"object","properties":{"LeakVerifications":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.RefrigerantTracking.LeakVerification"}}}},"ServiceChannel.Api.Model.RefrigerantTracking.LeakVerification":{"type":"object","properties":{"RecId":{"format":"int32","type":"integer"},"VerificationMethodId":{"format":"byte","type":"string"},"VerificationMethodName":{"type":"string"},"UserId":{"format":"int32","type":"integer"},"UserName":{"type":"string"},"Actor":{"type":"string"},"ModifiedDate":{"format":"date-time","type":"string"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakImmeasurableRequest":{"type":"object","properties":{"RepairDate":{"format":"date-time","type":"string"},"InitialVerificationDate":{"format":"date-time","type":"string"},"InitialVerificationMethod":{"format":"int32","type":"integer"},"FollowUpVerificationDate":{"format":"date-time","type":"string"},"FollowUpVerificationMethod":{"format":"int32","type":"integer"},"ActionCodeId":{"format":"int32","type":"integer"},"FaultCodeId":{"format":"int32","type":"integer"},"LeakLocationId":{"format":"int32","type":"integer"},"Notes":{"type":"array","items":{"type":"string"}},"RecId":{"format":"int32","type":"integer"},"AssetId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakImmeasurable":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"RepairDate":{"format":"date-time","type":"string"},"InitialVerificationDate":{"format":"date-time","type":"string"},"InitialVerificationMethod":{"format":"int32","type":"integer"},"FollowUpVerificationDate":{"format":"date-time","type":"string"},"FollowUpVerificationMethod":{"format":"int32","type":"integer"},"ActionCodeId":{"format":"int32","type":"integer"},"FaultCodeId":{"format":"int32","type":"integer"},"LeakLocationId":{"format":"int32","type":"integer"},"Notes":{"type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.LeakImmeasurableBulkChangeRequest":{"type":"object","properties":{"AddItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakImmeasurableRequest"}},"UpdateItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakImmeasurable"}},"DeleteItems":{"type":"array","items":{"format":"int32","type":"integer"}},"RecId":{"format":"int32","type":"integer"},"AssetId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.RefrigerantTracking.LeakInspectionComplianceAcknowledgement":{"type":"object","properties":{"TrackingNumber":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.ResolutionCodes.ResolutionCode":{"description":"Resolution code object.","type":"object","properties":{"Key":{"format":"int32","description":"Resolution code identifier.","type":"integer"},"Value":{"description":"Resolution code name.","type":"string"},"HasFreeText":{"description":"Defines whether a user can enter a comment explaining their understanding of the resolution code and specifying what was done on site to solve the issue.","default":false,"type":"boolean"},"Order":{"format":"int32","description":"Order of appearance of a resolution code.","type":"integer"},"AssetCategoryIds":{"description":"Asset category ID. A value populates only if two or more categories are specified in assetCategoryIds in the filter.","type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.ResolutionCodes.UpdateResolutionCodesRequest":{"description":"Request object to add resolution codes to a work order.","type":"object","properties":{"WorkOrderId":{"format":"int32","description":"Unique numeric identifier of the work order to add resolution codes to.","type":"integer"},"ResolutionCodeIds":{"description":"IDs of resolution codes to add to the work order.","type":"array","items":{"format":"int32","type":"integer"}},"ResolutionCodes":{"description":"Details of resolution codes to add to the work order.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ResolutionCodes.CreateWorkOrderResolutionCodeRequest"}}}},"ServiceChannel.Services.Messaging.ResolutionCodes.CreateWorkOrderResolutionCodeRequest":{"description":"Object for details of a resolution code to add to a work order.","type":"object","properties":{"Key":{"format":"int32","description":"ID of the resolution code to associate with the work order.","type":"integer"},"Text":{"description":"Comment explaining your understanding of the resolution code of the work order. \r\n            Enabled for resolution codes with the `HasFreeText` attribute. The maximum length is 100 characters.","type":"string"},"AssetCategoryId":{"format":"int32","description":"Asset category ID to be passed by users with access to asset categories.","type":"integer"}}},"ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderResolutionInfo":{"description":"Object containing the details of resolution codes and root causes of a work order.","type":"object","properties":{"resolutionCodes":{"description":"Resolution codes of a work order.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderResolutionCode"}},"rootCause":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderRootCause","description":"Root cause of a work order."},"rootCauses":{"description":"Root causes of a work order returned for users with access to asset categories.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderRootCause"}}}},"ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderResolutionCode":{"description":"Resolution code object.","type":"object","properties":{"Key":{"format":"int32","description":"Resolution code identifier.","type":"integer"},"Value":{"description":"Resolution code name.","type":"string"},"HasFreeText":{"description":"Defines whether a user can enter a comment explaining their understanding of the resolution code and specifying what was done on site to solve the issue.","default":false,"type":"boolean"},"Text":{"description":"Comment that a technician enters to provide their understanding of the resolution code of a work order explaining what was done on site to solve the issue.\r\n            Comments are enabled for resolution codes with the `HasFreeText` attribute.","type":"string"},"AssetCategoryId":{"format":"int32","description":"Asset category ID specified by a user with access to asset categories.","type":"integer"}}},"ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderRootCause":{"description":"Root cause object.","type":"object","properties":{"Key":{"format":"int32","description":"Root cause identifier.","type":"integer"},"Value":{"description":"Root cause name.","type":"string"},"HasFreeText":{"description":"Defines whether a user can enter a comment explaining their understanding of the root cause and specifying the reason why the problem occurred.","default":false,"type":"boolean"},"Text":{"description":"Comment that a technician enters to provide their understanding of the root cause of a work order explaining the reason why the problem occurred.\r\n            Comments are enabled for root causes with the `HasFreeText` attribute.","type":"string"},"AssetCategoryId":{"format":"int32","description":"Asset category ID specified by a user with access to asset categories.","type":"integer"}}},"ServiceChannel.Services.Messaging.ResolutionCodes.RootCause":{"description":"Root cause object.","type":"object","properties":{"Key":{"format":"int32","description":"Root cause identifier.","type":"integer"},"Value":{"description":"Root cause name.","type":"string"},"HasFreeText":{"description":"Defines whether a user can enter a comment explaining their understanding of the root cause and specifying the reason why the problem occurred.","default":false,"type":"boolean"},"Order":{"format":"int32","description":"Order of appearance of a root cause.","type":"integer"},"AssetCategoryIds":{"description":"Asset category ID. A value populates only if two or more categories are specified in assetCategoryIds in the filter.","type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.ResolutionCodes.UpdateRootCausesRequest":{"description":"Request object to add root causes to a work order.","type":"object","properties":{"WorkOrderId":{"format":"int32","description":"Unique numeric identifier of the work order to add root causes to.","type":"integer"},"RootCauses":{"description":"Details of root causes to add to the work order.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ResolutionCodes.CreateWorkOrderRootCauseRequest"}}}},"ServiceChannel.Services.Messaging.ResolutionCodes.CreateWorkOrderRootCauseRequest":{"description":"Object for details of a root cause to add to a work order.","type":"object","properties":{"Key":{"format":"int32","description":"ID of the root cause to associate with the work order.","type":"integer"},"Text":{"description":"Comment explaining your understanding of the root cause of the work order. Enabled for root causes with the `HasFreeText` attribute. The maximum length is 100 characters.","type":"string"},"AssetCategoryId":{"format":"int32","description":"Asset category ID.","type":"integer"}}},"ServiceChannel.Services.Messaging.ResolutionCodes.UpdateAssetCategoriesRequest":{"description":"Request object to add asset categories to a work order.","type":"object","properties":{"AssetCategoryIds":{"description":"IDs of asset categories to add to a work order.","type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Rfp.CreateRfpRequest":{"description":"The request object to create an RFP.","required":["TradeId","Description","Location","ProviderId"],"type":"object","properties":{"Number":{"description":"The non-unique RFP identifier. The value is generated automatically if not provided. It cannot be modified.","type":"string"},"PONumber":{"description":"Purchase order number.","type":"string"},"WONumber":{"description":"Work order number.","type":"string"},"TradeId":{"format":"int32","description":"The unique trade identifier.","type":"integer"},"Description":{"description":"RFP description.","type":"string"},"Status":{"description":"RFP status.","type":"string"},"Date":{"format":"date-time","description":"The RFP creation date and time. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. The default is the current date and time.","type":"string"},"DateString":{"type":"string"},"DueHrs":{"format":"double","description":"Due time in hours for the provider to respond to the RFP and submit a proposal. The default is 48 hours unless a different value is specified in the `UiCreationRfpDefaultTime` settings group.","type":"number"},"DueDate":{"format":"date-time","description":"Due date and time for the provider to respond to the RFP and submit a proposal. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. If `DueHrs` is passed, the `DueDate` value is `Date` plus `DueHrs`.\r\n            The default is the current date and time plus 48 hours unless a different value is specified in the `UiCreationRfpDefaultTime` settings group.","type":"string"},"DueDateString":{"type":"string"},"Location":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.LocationIdentity","description":"Location identifier"},"Language":{"type":"string"},"ProviderId":{"format":"int32","description":"The unique provider identifier.","type":"integer"},"ResponseDate":{"format":"date-time","description":"Obsolete.","type":"string"},"ProposalNotificationEmail":{"description":"The email address to send the proposal notification to. The default is the email address of the current user specified in the `PropTeamEmail` settings group.","type":"string"},"ProviderEmail":{"description":"The email address of the provider. The default is the email address of the specified provider.","type":"string"},"ProposalTemplateId":{"format":"int32","description":"Obsolete.","type":"integer"},"WorkOrderId":{"format":"int32","description":"The unique numeric identifier of the work order.","type":"integer"},"ProjectId":{"format":"int32","description":"The unique numeric identifier of the project.","type":"integer"}}},"ServiceChannel.Services.Messaging.Location.LocationIdentity":{"description":"The location identifier object","type":"object","properties":{"Id":{"format":"int32","description":"The unique numeric location identifier.","type":"integer"},"StoreId":{"description":"The location identifier in the client system.","type":"string"}}},"ServiceChannel.Services.Messaging.Rfp.AssignRfpRequest":{"description":"The request object to assign an RFP to a provider.","required":["ProviderId"],"type":"object","properties":{"ProviderId":{"format":"int32","description":"The unique numeric identifier of the provider to assign the RFP to.","type":"integer"},"ProviderEmail":{"description":"Provider’s email address to send a notification about the assigned RFP to. The default is the email address of the provider who is assigned the RFP.","type":"string"}}},"ServiceChannel.Services.Messaging.PrimaryRoles.PrimaryRolesInfo":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"SubscriberID":{"format":"int32","type":"integer"},"RoleTitle":{"type":"string"},"DashboardTitle":{"type":"string"},"ServiceRequestDashboard":{"default":false,"type":"boolean"},"ServiceClick":{"default":false,"type":"boolean"},"SupplyClick":{"default":false,"type":"boolean"},"EquipmentModule":{"default":false,"type":"boolean"},"PreventiveMaintenancetModule":{"default":false,"type":"boolean"},"FixxbookLink":{"default":false,"type":"boolean"},"PlaceServiceRequest":{"default":false,"type":"boolean"},"InvoiceFullControl":{"default":false,"type":"boolean"},"InvoiceReadAll":{"default":false,"type":"boolean"},"InvoiceCreate":{"default":false,"type":"boolean"},"InvoiceProcess":{"default":false,"type":"boolean"},"InvoiceReadApprPaid":{"default":false,"type":"boolean"},"ProposalFullControl":{"default":false,"type":"boolean"},"ProposalRead":{"default":false,"type":"boolean"},"ProposalCreate":{"default":false,"type":"boolean"},"ProposalProcess":{"default":false,"type":"boolean"},"ReportsReadEdit":{"default":false,"type":"boolean"},"ReportsRead":{"default":false,"type":"boolean"},"LocationsRead":{"default":false,"type":"boolean"},"EquipmentRead":{"default":false,"type":"boolean"},"ServiceProviderFullControl":{"default":false,"type":"boolean"},"ServiceProviderRead":{"default":false,"type":"boolean"},"ServiceProviderReadEdit":{"default":false,"type":"boolean"},"ServiceProviderRequestFor":{"default":false,"type":"boolean"},"TrackWoPoReadEdit":{"default":false,"type":"boolean"},"TrackWoPoRead":{"default":false,"type":"boolean"},"PowerUser":{"default":false,"type":"boolean"},"AdminUser":{"default":false,"type":"boolean"},"SuperUser":{"default":false,"type":"boolean"},"SiteAuditSetup":{"default":false,"type":"boolean"},"SiteAuditReporter":{"default":false,"type":"boolean"},"ProviewAdmin":{"default":false,"type":"boolean"},"FinancialManager":{"default":false,"type":"boolean"},"FinancialManagerAdmin":{"default":false,"type":"boolean"},"DashboardExpert":{"default":false,"type":"boolean"},"PowerUserLite":{"default":false,"type":"boolean"},"InventoryManager":{"default":false,"type":"boolean"},"DecisionEngineUser":{"default":false,"type":"boolean"},"ProjectManager":{"default":false,"type":"boolean"},"RefrigerantTrackingAdmin":{"default":false,"type":"boolean"},"SiteAccessAdmin":{"default":false,"type":"boolean"},"DashboardAdminUser":{"default":false,"type":"boolean"},"PrivateNetworkAccess":{"default":false,"type":"boolean"},"AdditionalSetupNames":{"type":"string"},"SiteAuditAuditor":{"default":false,"type":"boolean"},"PasswordSelfManagement":{"default":false,"type":"boolean"},"PowerInvoiceUser":{"default":false,"type":"boolean"},"InvoiceAdmin":{"default":false,"type":"boolean"},"EulaSignoff":{"default":false,"type":"boolean"},"WikiEditor":{"default":false,"type":"boolean"},"SiteAccessMobile":{"default":false,"type":"boolean"},"ProgramManager":{"default":false,"type":"boolean"},"LocationAdmin":{"default":false,"type":"boolean"},"PlannedMaintenanceAdmin":{"default":false,"type":"boolean"},"ApprovalCodeEditor":{"default":false,"type":"boolean"},"ProviderAssignmentsEditor":{"default":false,"type":"boolean"},"ProviderAdmin":{"default":false,"type":"boolean"},"SpacesAdmin":{"default":false,"type":"boolean"},"SpacesExternal":{"default":false,"type":"boolean"},"SpacesPlotter":{"default":false,"type":"boolean"},"SpacesMaker":{"default":false,"type":"boolean"},"AssetInventory":{"default":false,"type":"boolean"},"PreventLogin":{"default":false,"type":"boolean"},"SiteAuditEditor":{"default":false,"type":"boolean"},"AddLabels":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data":{"description":"Wrapper for body parameter","type":"object","properties":{"Msg":{"description":"escaped Xml string","type":"string"}}},"ServiceChannel.Services.WebApi.Models.CheckInOutNotificationObject":{"type":"object","properties":{"Object":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.CheckInOutActivity"},"Type":{"type":"string"},"Action":{"type":"string"},"EventType":{"type":"string"}}},"ServiceChannel.Notifications.Objects.CheckInOutActivity":{"type":"object","properties":{"CheckInNotes":{"type":"object","additionalProperties":{"type":"string"}},"SubscriberId":{"format":"int32","type":"integer"},"ProviderId":{"format":"int32","type":"integer"},"LocationId":{"format":"int32","type":"integer"},"CheckinAction":{"enum":["CheckIn","CheckOut"],"type":"string"},"WorkOrderId":{"format":"int32","type":"integer"},"Date":{"format":"date-time","type":"string"},"DateDTO":{"format":"date-time","type":"string"},"User":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.User"},"CallerId":{"type":"string"},"Action":{"type":"string"},"WorkType":{"type":"string"},"WorkorderStatus":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.WorkorderStatusDescriptor"},"ProviderName":{"type":"string"},"Trade":{"type":"string"},"Category":{"type":"string"},"Source":{"type":"string"},"TradeId":{"format":"int32","type":"integer"},"TechsCount":{"format":"int32","type":"integer"},"Location":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Location"}}},"ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject":{"type":"object","properties":{"Object":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.WorkOrder"},"Type":{"type":"string"},"Action":{"type":"string"},"EventType":{"type":"string"}}},"ServiceChannel.Notifications.Objects.WorkOrder":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Number":{"type":"string"},"PurchaseNumber":{"type":"string"},"SubscriberId":{"format":"int32","type":"integer"},"ProviderId":{"format":"int32","type":"integer"},"ProviderName":{"type":"string"},"LocationId":{"format":"int32","type":"integer"},"LocationName":{"type":"string"},"LocationStoreId":{"type":"string"},"Status":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.WorkorderStatusDescriptor"},"Caller":{"type":"string"},"CreatedBy":{"type":"string"},"UpdatedBy":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.User"},"CallDate":{"format":"date-time","type":"string"},"CallDate_DTO":{"format":"date-time","type":"string"},"ReassignDate":{"format":"date-time","type":"string"},"Priority":{"type":"string"},"Trade":{"type":"string"},"ScheduledDate":{"format":"date-time","type":"string"},"AreaId":{"format":"int32","type":"integer"},"AssetType":{"type":"string"},"ProblemType":{"type":"string"},"CreatedDate_DTO":{"format":"date-time","type":"string"},"UpdatedDate":{"format":"date-time","type":"string"},"UpdatedDate_DTO":{"format":"date-time","type":"string"},"ScheduledDate_DTO":{"format":"date-time","type":"string"},"RescheduleReason":{"type":"string"},"CompletedDate":{"format":"date-time","type":"string"},"ExpirationDate":{"format":"date-time","type":"string"},"ExpirationDate_DTO":{"format":"date-time","type":"string"},"Description":{"type":"string"},"Category":{"type":"string"},"Nte":{"format":"double","type":"number"},"Subtotal":{"format":"double","type":"number"},"Tax":{"format":"double","type":"number"},"Tax2Type":{"type":"string"},"Tax2":{"format":"double","type":"number"},"CurrencyAlphabeticalCode":{"type":"string"},"ProblemCode":{"type":"string"},"Resolution":{"type":"string"},"AssetId":{"format":"int32","type":"integer"},"Source":{"type":"string"},"RecallWorkOrder":{"format":"int32","type":"integer"},"Notes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Note"}},"Attachments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Attachment"}},"ProjectId":{"format":"int32","type":"integer"},"Labels":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Label"}},"ResolutionCodes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.ResolutionCodesAndRootCause"}},"ResolutionCodesIds":{"type":"array","items":{"format":"int32","type":"integer"}},"RootCauses":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.ResolutionCodesAndRootCause"}},"LinkedWorOrderIds":{"type":"array","items":{"format":"int32","type":"integer"}},"Assets":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Asset"}},"RefrigerantWasUsed":{"format":"int32","type":"integer"},"WeatherEventId":{"format":"int32","type":"integer"},"Technician":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.Technician"},"IssueChoice":{"$ref":"#/definitions/ServiceChannel.Notifications.Objects.IssueChoice"}}},"ServiceChannel.Services.Messaging.Providers.GetServiceRequestProvidersResponse":{"type":"object","properties":{"Providers":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.ServiceRequestProvider"}}}},"ServiceChannel.Services.Messaging.Providers.ServiceRequestProvider":{"type":"object","properties":{"Rank":{"format":"int32","description":"Rank","type":"integer"},"Category":{"description":"Category","type":"string"},"Priority":{"description":"Priority","type":"string"},"Nte":{"format":"double","description":"Nte","type":"number"},"GeneralEmail":{"description":"General Email","type":"string"},"IsDefault":{"description":"Is Default","default":false,"type":"boolean"},"ServiceRequestEmails":{"description":"ServiceRequestEmails","type":"string"},"Phone":{"type":"string"},"FullName":{"description":"Full Name","type":"string"},"Address1":{"description":"Address1","type":"string"},"Address2":{"description":"Adress2","type":"string"},"City":{"description":"City","type":"string"},"State":{"description":"State","type":"string"},"Zip":{"description":"Zip","type":"string"},"Country":{"description":"Country","type":"string"},"MainContact":{"description":"Main Contact","type":"string"},"DateCreated":{"format":"date-time","description":"Date Created","type":"string"},"LastUserDate":{"description":"Last User Date","type":"string"},"SuperUser":{"description":"SuperUser","type":"string"},"WebSite":{"description":"WebSite","type":"string"},"Email":{"description":"Email","type":"string"},"TaxId":{"description":"Tax Id","type":"string"},"Trade":{"description":"Trade","type":"string"},"ProcessingEmail":{"description":"Processing Email","type":"string"},"FaxNumber":{"description":"Fax Number","type":"string"},"SuiteFloor":{"description":"Suite Floor","type":"string"},"MailInfo":{"description":"Mail Info","type":"string"},"ImageFile":{"description":"Image File","type":"string"},"ReturnMail":{"description":"Return Mail","type":"string"},"MailFrequency":{"format":"int32","description":"Mail Frequency","type":"integer"},"FormId":{"format":"int32","description":"Form Id","type":"integer"},"Pager":{"description":"Pager","type":"string"},"NightRequest":{"format":"int32","description":"NightRequest","type":"integer"},"ShortFormatEmail":{"description":"Short Format Email","type":"string"},"LastTrainingDate":{"format":"date-time","description":"Last Training Date","type":"string"},"LastTrainingDateStr":{"description":"Last Training Date as a string","type":"string"},"IsInternal":{"description":"Is Internal","default":false,"type":"boolean"},"IsOnOffShoreFeatureEnabled":{"description":"Is OnOffShoreFeature Enabled","default":false,"type":"boolean"},"Id":{"format":"int32","description":"Id","type":"integer"},"Name":{"description":"Name","type":"string"},"DoNotDispatch":{"description":"DoNotDispatch enabled?","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoRequest":{"type":"object","properties":{"AreaName":{"description":"Name of the area","type":"string"},"ProblemType":{"description":"Problem type","type":"string"},"EquipmentType":{"description":"Equipment type","type":"string"},"ProblemCode":{"description":"Problem name","type":"string"},"LocationId":{"format":"int32","description":"ID of a location","type":"integer"},"SetupId":{"format":"int32","description":"SetupId","type":"integer"},"CallDate":{"format":"date-time","description":"Call Date","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoResponse":{"type":"object","properties":{"IssueChoice":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceResponse"},"Providers":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.ServiceRequestProvider"}},"ProvidersNotFoundMessage":{"type":"string"},"CallerName":{"type":"string"},"ScheduledDateOffsetFromCallDate":{"format":"int64","type":"integer"},"AssetsInfo":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Assets.AssetsInfoResponse"},"SetupRequestConfirm":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestConfirmResponse"},"SetupRequest":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestResponse"},"Categories":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Category.CategoryResponse"}},"Priorities":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Priorities.PriorityResponse"}},"SetupGeneral":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.DashboardSettings.SetupGeneralResponse"},"UserSettings":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.DashboardSettings.UserSettingsResponse"},"Currency":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Currencies.Currency"},"AreaId":{"format":"int32","type":"integer"},"TradeId":{"format":"int32","type":"integer"},"SetupId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceResponse":{"type":"object","properties":{"ProblemType":{"type":"string"},"EquipmentType":{"type":"string"},"ProblemCode":{"type":"string"},"Trade":{"type":"string"},"Priority":{"type":"string"},"RequireAttachment":{"default":false,"type":"boolean"},"EquipmentId":{"type":"string"},"EquipmentEntry":{"type":"string"},"Category":{"type":"string"},"Comments":{"type":"string"},"TroubleshootingMessage":{"type":"string"},"ProviderRank":{"format":"int32","type":"integer"},"Currency":{"type":"string"},"ApprovalCode":{"type":"string"},"LinkToMedia":{"type":"string"},"AdditionalFields":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.IssueFieldResponse"}},"AllAdditionalFields":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.IssueLists.IssueFieldResponse"}},"IsNewIssueList":{"default":false,"type":"boolean"},"DashOverrideApplied":{"default":false,"type":"boolean"},"Nte":{"type":"string"},"WoLabel":{"type":"string"}}},"ServiceChannel.Services.Messaging.Priorities.PriorityResponse":{"type":"object","properties":{"Id":{"format":"int32","description":"UID of priority. Can be null","type":"integer"},"Name":{"description":"Priority name","type":"string"},"SubscriberId":{"format":"int32","description":"UID of subscriber. Can be null","type":"integer"},"Eta":{"description":"ETA","type":"string"},"SkipNights":{"description":"Skip nights while calculating scheduled date","default":false,"type":"boolean"},"SkipWeekends":{"description":"Skip weekends while calculating scheduled date","default":false,"type":"boolean"},"LocationId":{"format":"int32","description":"If priority is associated with location - assiciated location","type":"integer"},"Trade":{"description":"If priority is associated with trade - assiciated trade","type":"string"},"ScheduledDate":{"format":"date-time","description":"Calculated WO Scheduled Date","type":"string"},"ScheduledDate_DTO":{"format":"date-time","description":"Calculated WO Scheduled Date with time zone offset","type":"string"},"IsSelectable":{"description":"IsSelectable","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.DashboardSettings.SetupGeneralResponse":{"type":"object","properties":{"AllowAddingAttachments":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.DashboardSettings.UserSettingsResponse":{"type":"object","properties":{"MaximumNteAmount":{"format":"double","type":"number"}}},"ServiceChannel.Services.Messaging.IssueLists.IssueFieldResponse":{"type":"object","properties":{"ProblemType":{"description":"Gets or sets the problem type.","type":"string"},"Item":{"description":"Gets or sets the item.","type":"string"},"Problem":{"description":"Gets or sets the problem.","type":"string"},"For":{"description":"Gets or sets the for.","type":"string"},"Id":{"description":"Gets or sets the id.","type":"string"},"Header":{"description":"Gets or sets the header.","type":"string"},"ErrorText":{"description":"Gets or sets the error text.","type":"string"},"AreaName":{"description":"Gets or sets the area name.","type":"string"},"Exclude":{"description":"Gets or sets the exclude.","type":"string"},"Min":{"description":"Gets or sets the min.","type":"string"},"Max":{"description":"Gets or sets the max.","type":"string"},"Step":{"description":"Gets or sets the step.","type":"string"},"Helptip":{"description":"Gets or sets the helptip.","type":"string"},"Type":{"description":"Gets or sets the type.","enum":["textbox","select","size","label"],"type":"string"},"Allow":{"description":"Gets or sets the allow.","enum":["numbers","decimals","all"],"type":"string"},"ExpectedValue":{"description":"Gets or sets the expected value.","type":"string"},"Options":{"description":"Gets or sets the options.","type":"array","items":{"type":"string"}},"Required":{"description":"Determines whether this field is required to fill or not","default":false,"type":"boolean"},"Decisions":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Dashboard.IssueLists.DecisionModel"}},"LinkToMedia":{"type":"string"},"DisableFilter":{"description":"Gets a value indicating whether disable filter.","default":false,"type":"boolean","readOnly":true}}},"ServiceChannel.Api.Model.Dashboard.IssueLists.DecisionModel":{"type":"object","properties":{"OptionValue":{"type":"string"},"NextQuestion":{"type":"string"},"TradeOverride":{"type":"string"},"CategoryOverride":{"type":"string"},"PriorityOverride":{"type":"string"},"NTEOverride":{"type":"string"},"ProviderRankOverride":{"type":"string"},"WoLabelOverride":{"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.Dashboard.Requests.PrimaryAndNotesRecipientsRequest":{"required":["SubscriberId","SetupId","LocationId","ProviderId","Trade"],"type":"object","properties":{"SubscriberId":{"format":"int32","type":"integer"},"SetupId":{"format":"int32","type":"integer"},"LocationId":{"format":"int32","type":"integer"},"ProviderId":{"format":"int32","type":"integer"},"Trade":{"type":"string"}}},"ServiceChannel.Services.Messaging.SingleSignOn.RegisterSsoClientRequest":{"type":"object","properties":{"InvitationKey":{"description":"SSO invitation key to identify user","type":"string"},"ClientIdentifier":{"description":"Unique client id, for. ex. IMEI of the mobile device","type":"string"},"ClientDescription":{"description":"Description, for ex. mobile device description(Brand, Model, Number)","type":"string"}}},"ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternalOld":{"type":"object","properties":{"StartDate":{"format":"date-time","type":"string"},"FinishDate":{"format":"date-time","type":"string"},"Areas":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditAreaExternalOld"}},"WorkOrderIds":{"type":"array","items":{"format":"int32","type":"integer"}},"Emails":{"type":"string"},"SendEmails":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.SiteAudit.AuditAreaExternalOld":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"SortOrder":{"format":"int32","type":"integer"},"CheckLists":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListExternalOld"}},"WorkOrderIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.SiteAudit.CheckListExternalOld":{"type":"object","properties":{"Name":{"type":"string"},"TemplateName":{"type":"string"},"Unlisted":{"default":false,"type":"boolean"},"SortOrder":{"format":"int32","type":"integer"},"WorkOrderIds":{"type":"array","items":{"format":"int32","type":"integer"}},"CheckListItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemExternalOld"}}}},"ServiceChannel.Services.Messaging.SiteAudit.CheckListItemExternalOld":{"type":"object","properties":{"Name":{"type":"string"},"Description":{"type":"string"},"Status":{"format":"int32","type":"integer"},"StatusNumeric":{"format":"int32","type":"integer"},"UseNumericRatingSystem":{"default":false,"type":"boolean"},"Date":{"format":"date-time","type":"string"},"Unlisted":{"default":false,"type":"boolean"},"WorkOrderIds":{"type":"array","items":{"format":"int32","type":"integer"}},"Issues":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditIssueExternal"}},"Quantity":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.QuantityExternal"},"CheckListItemImpact":{"type":"string"},"StatisticItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemStatisticExternal"}}}},"ServiceChannel.Services.Messaging.SiteAudit.AuditIssueExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Description":{"type":"string"},"Date":{"format":"date-time","type":"string"},"Attachments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.IssueAttachmentExternal"}},"Persistent":{"default":false,"type":"boolean"},"UserName":{"type":"string"}}},"ServiceChannel.Services.Messaging.SiteAudit.QuantityExternal":{"type":"object","properties":{"Value":{"format":"int32","type":"integer"},"Unit":{"type":"string"}}},"ServiceChannel.Services.Messaging.SiteAudit.CheckListItemStatisticExternal":{"type":"object","properties":{"CheckListItemId":{"format":"int32","type":"integer"},"Date":{"format":"date-time","type":"string"},"Status":{"format":"int32","type":"integer"},"StatusNumeric":{"format":"int32","type":"integer"},"UseNumericRatingSystem":{"default":false,"type":"boolean"},"WorkOrdersCount":{"format":"int32","type":"integer"},"CommentsCount":{"format":"int32","type":"integer"},"AttachmentsCount":{"format":"int32","type":"integer"},"QuantityCount":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.SiteAudit.IssueAttachmentExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"RemoteName":{"type":"string"},"RemoteNameResized":{"type":"string"},"FileName":{"type":"string"},"ContentUrl":{"type":"string"},"ContentUrlResized":{"type":"string"}}},"ServiceChannel.Services.Messaging.SiteAudit.AuditDataWeightedExternal":{"type":"object","properties":{"StartDate":{"format":"date-time","type":"string"},"FinishDate":{"format":"date-time","type":"string"},"Areas":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditAreaWeightedExternal"}},"WorkOrderIds":{"type":"array","items":{"format":"int32","type":"integer"}},"Emails":{"type":"string"},"SendEmails":{"default":false,"type":"boolean"},"Language":{"type":"string"}}},"ServiceChannel.Services.Messaging.SiteAudit.AuditAreaWeightedExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"SortOrder":{"format":"int32","type":"integer"},"CheckLists":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListWeightedExternal"}},"WorkOrderIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.SiteAudit.CheckListWeightedExternal":{"type":"object","properties":{"Name":{"type":"string"},"TemplateName":{"type":"string"},"Unlisted":{"default":false,"type":"boolean"},"SortOrder":{"format":"int32","type":"integer"},"WorkOrderIds":{"type":"array","items":{"format":"int32","type":"integer"}},"CheckListItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemWeightedExternal"}}}},"ServiceChannel.Services.Messaging.SiteAudit.CheckListItemWeightedExternal":{"type":"object","properties":{"Name":{"type":"string"},"Description":{"type":"string"},"Score":{"format":"int32","type":"integer"},"System":{"enum":["PassFail","Numeric","Weighted","Percentage"],"type":"string"},"Date":{"format":"date-time","type":"string"},"Unlisted":{"default":false,"type":"boolean"},"WorkOrderIds":{"type":"array","items":{"format":"int32","type":"integer"}},"Issues":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditIssueExternal"}},"Quantity":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.QuantityExternal"},"CheckListItemImpact":{"type":"string"},"PassThreshold":{"format":"int32","type":"integer"},"Range":{"type":"array","items":{"format":"int32","type":"integer"}},"StatisticItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemStatisticWeightedExternal"}}}},"ServiceChannel.Services.Messaging.SiteAudit.CheckListItemStatisticWeightedExternal":{"type":"object","properties":{"CheckListItemId":{"format":"int32","type":"integer"},"Date":{"format":"date-time","type":"string"},"Score":{"format":"int32","type":"integer"},"System":{"format":"int32","type":"integer"},"Range":{"type":"array","items":{"format":"int32","type":"integer"}},"WorkOrdersCount":{"format":"int32","type":"integer"},"CommentsCount":{"format":"int32","type":"integer"},"AttachmentsCount":{"format":"int32","type":"integer"},"QuantityCount":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"StoreId":{"format":"int32","type":"integer"},"TemplateTypeId":{"format":"int32","type":"integer"},"StartDate":{"format":"date-time","type":"string"},"FinishDate":{"format":"date-time","type":"string"},"SendEmails":{"default":false,"type":"boolean"},"Emails":{"type":"string"},"Areas":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditAreaRequest"}},"Language":{"type":"string"}}},"ServiceChannel.Services.Messaging.SiteAudit.AuditAreaRequest":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"SortOrder":{"format":"int32","type":"integer"},"CheckLists":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListRequest"}}}},"ServiceChannel.Services.Messaging.SiteAudit.CheckListRequest":{"type":"object","properties":{"Name":{"type":"string"},"Unlisted":{"default":false,"type":"boolean"},"SortOrder":{"format":"int32","type":"integer"},"CheckListItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemRequest"}}}},"ServiceChannel.Services.Messaging.SiteAudit.CheckListItemRequest":{"type":"object","properties":{"Name":{"type":"string"},"Description":{"type":"string"},"Score":{"format":"int32","type":"integer"},"System":{"enum":["PassFail","Numeric","Weighted","Percentage"],"type":"string"},"Range":{"type":"array","items":{"format":"int32","type":"integer"}},"PassThreshold":{"format":"int32","type":"integer"},"Date":{"format":"date-time","type":"string"},"Unlisted":{"default":false,"type":"boolean"},"Issues":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditIssueExternal"}},"Quantity":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.QuantityExternal"},"CheckListItemImpact":{"type":"string"},"WorkOrderIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.SiteAudit.SaveAuditDataResponse":{"type":"object","properties":{"Saved":{"default":false,"type":"boolean"},"Sent":{"type":"string"}}},"ServiceChannel.Services.Messaging.SiteAudit.GetAuditInfo":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"StartDate":{"format":"date-time","type":"string"},"Emails":{"type":"string"},"Areas":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditAreaExternal"}}}},"ServiceChannel.Services.Messaging.SiteAudit.AuditAreaExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"SortOrder":{"format":"int32","type":"integer"},"CheckLists":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListExternal"}}}},"ServiceChannel.Services.Messaging.SiteAudit.CheckListExternal":{"type":"object","properties":{"Name":{"type":"string"},"Unlisted":{"default":false,"type":"boolean"},"SortOrder":{"format":"int32","type":"integer"},"CheckListItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemExternal"}}}},"ServiceChannel.Services.Messaging.SiteAudit.CheckListItemExternal":{"type":"object","properties":{"Name":{"type":"string"},"Description":{"type":"string"},"Score":{"format":"int32","type":"integer"},"System":{"enum":["PassFail","Numeric","Weighted","Percentage"],"type":"string"},"Date":{"format":"date-time","type":"string"},"Unlisted":{"default":false,"type":"boolean"},"Issues":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditIssueExternal"}},"Quantity":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.QuantityExternal"},"CheckListItemImpact":{"type":"string"},"PassThreshold":{"format":"int32","type":"integer"},"Range":{"type":"array","items":{"format":"int32","type":"integer"}},"StatisticItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemStatisticWeightedExternal"}}}},"ServiceChannel.Services.Messaging.SiteAudit.CheckListTemplateExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"SortOrder":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.SiteAudit.CheckListItemDetailsResponse":{"type":"object","properties":{"CheckListItemId":{"format":"int32","type":"integer"},"Workorders":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.WorkOrder"}},"Comments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditIssueExternal"}},"Quantity":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.QuantityExternal"}}},"ServiceChannel.Services.Messaging.SiteAudit.WorkOrder":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"ProblemCode":{"type":"string"},"Priority":{"type":"string"},"ScheduledDate":{"format":"date-time","type":"string"},"Description":{"type":"string"}}},"ServiceChannel.Services.Messaging.SiteAudit.CompletedAuditListResponse":{"type":"object","properties":{"UserName":{"type":"string"},"Locations":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.LocationExternal"}},"TemplateTypes":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditTypeExternal"}},"CompletedAudits":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditInfoExternal"}}}},"ServiceChannel.Services.Messaging.SiteAudit.LocationExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"StoreId":{"type":"string"},"Name":{"type":"string"},"ShortName":{"type":"string"},"Address":{"type":"string"},"City":{"type":"string"},"State":{"type":"string"},"Country":{"type":"string"},"Zip":{"type":"string"}}},"ServiceChannel.Services.Messaging.SiteAudit.AuditTypeExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"Name":{"type":"string"}}},"ServiceChannel.Services.Messaging.SiteAudit.AuditInfoExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"LocationId":{"format":"int32","type":"integer"},"StartDate":{"format":"date-time","type":"string"},"EndDate":{"format":"date-time","type":"string"},"TemplateTypeId":{"format":"int32","type":"integer"},"UserName":{"type":"string"}}},"ServiceChannel.Services.Messaging.SiteAudit.AuditReportExternal":{"description":"The site audit report object. Depending on the features enabled for your company, the object structure may differ from the example below.","type":"object","properties":{"TemplateTypeName":{"description":"The site audit type.","type":"string"},"AuditId":{"format":"int32","description":"The numeric identifier of the site audit report.","type":"integer"},"StoreId":{"description":"The internal identifier of the subscriber’s property.","type":"string"},"LocationName":{"description":"The name of the subscriber’s property.","type":"string"},"Region":{"description":"The region where the property is located.","type":"string"},"District":{"description":"The district where the property is located.","type":"string"},"AreaName":{"description":"The name of the audited area within the location.","type":"string"},"CheckListName":{"description":"The name of the checklist.","type":"string"},"CheckListItemName":{"description":"The name of the checklist item inspected by the auditor.","type":"string"},"CheckListItemDescription":{"description":"Detailed instructions for the auditor on how to check or rate the checklist item.","type":"string"},"Status":{"description":"This field is obsolete. Use field \"Score\" with \"PassThreshold\" and \"RatingSystem\" fields  please.","type":"string"},"Score":{"format":"int32","description":"The score that the auditor gave on the checklist item","type":"integer"},"PassThreshold":{"format":"int32","description":"Pass threshold","type":"integer"},"RatingSystem":{"description":"Rating system","type":"string"},"CheckListItemQuantity":{"description":"The quantity of the checklist item or its cost in dollars depending on the `Unit`.","type":"string"},"Unit":{"description":"The unit of measure of the checklist item: `Quantity` or `Dollars`.","type":"string"},"CheckListDate":{"format":"date-time","description":"The date and time when the auditor completed the audit of the checklist item.","type":"string"},"TimeOffset":{"format":"int32","description":"The UTC offset, or the difference in hours from the UTC time.","type":"integer"},"UserName":{"description":"The username of the auditor who uploaded the completed audit.","type":"string"},"CheckListItemId":{"format":"int32","description":"The numeric identifier of the checklist item.","type":"integer"},"AuditStartDate":{"format":"date-time","description":"The date and time when the auditor started the site audit.","type":"string"},"AuditFinishDate":{"format":"date-time","description":"The date and time when the auditor completed the site audit.","type":"string"},"AuditIssues":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.SiteAudit.AuditReportIssueExternal"}}}},"ServiceChannel.Services.Messaging.SiteAudit.AuditReportIssueExternal":{"description":"The details of issues created by the auditor for the inspected checklist item. Issues are also known as action items.","type":"object","properties":{"IssueType":{"description":"The type of the action item, either `WO` or `Comment`.","type":"string"},"IssueDescription":{"description":"`Comment type`: auditor's comment added to the action item or its attachment. `WO type`: work order description that includes the area, problem type, asset, problem, and auditor’s description of the problem.","type":"string"},"AttachmentPaths":{"description":"The paths to the attachments added to the checklist item.","type":"array","items":{"type":"string"}},"IssueId":{"format":"int32","description":"`Comment type`: numeric identifier of the action item. `WO type`: numeric identifier of the work order, also known as WO tracking number.","type":"integer"},"WorkOrderPriority":{"description":"The name of the work order priority if the action item belongs to the WO type.","type":"string"},"Date":{"format":"date-time","description":"The date and time when the auditor created the action item.","type":"string"}}},"ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfoExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"StoreId":{"format":"int32","type":"integer"},"UserId":{"format":"int32","type":"integer"},"TemplateTypeId":{"format":"int32","type":"integer"},"StartDate":{"format":"date-time","type":"string"},"FinishDate":{"format":"date-time","type":"string"},"FinishDateStr":{"type":"string"},"Areas":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedAuditAreaExternal"}}}},"ServiceChannel.Api.Model.SiteAudit.CompletedAuditAreaExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"SortOrder":{"format":"int32","type":"integer"},"CheckLists":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedCheckListExternal"}}}},"ServiceChannel.Api.Model.SiteAudit.CompletedCheckListExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"Unlisted":{"default":false,"type":"boolean"},"SortOrder":{"format":"int32","type":"integer"},"CheckListItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedCheckListItemExternal"}}}},"ServiceChannel.Api.Model.SiteAudit.CompletedCheckListItemExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"Description":{"type":"string"},"Score":{"format":"int32","type":"integer"},"System":{"format":"int32","type":"integer"},"Date":{"format":"date-time","type":"string"},"DateStr":{"type":"string"},"Unlisted":{"default":false,"type":"boolean"},"CheckListItemImpact":{"type":"string"},"UseNumericRatingSystem":{"default":false,"type":"boolean"},"PassThreshold":{"format":"int32","type":"integer"},"Range":{"type":"array","items":{"format":"int32","type":"integer"}},"Issues":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssueExternal"}},"WorkOrderIds":{"type":"array","items":{"format":"int32","type":"integer"}},"Quantity":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedAuditQuantityExternal"}}},"ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssueExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Date":{"format":"date-time","type":"string"},"DateStr":{"type":"string"},"Description":{"type":"string"},"Persistent":{"default":false,"type":"boolean"},"UserName":{"type":"string"},"Attachments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssueAttachmentExternal"}}}},"ServiceChannel.Api.Model.SiteAudit.CompletedAuditQuantityExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Value":{"format":"int32","type":"integer"},"Unit":{"type":"string"}}},"ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssueAttachmentExternal":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"FileName":{"type":"string"},"RemoteName":{"type":"string"},"RemoteNameResized":{"type":"string"},"ContentType":{"type":"string"},"ContentUrl":{"type":"string"},"ContentUrlResized":{"type":"string"}}},"ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfo":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"StoreId":{"format":"int32","type":"integer"},"TemplateTypeId":{"format":"int32","type":"integer"},"StartDate":{"format":"date-time","type":"string"},"Emails":{"type":"string"},"Language":{"type":"string"},"Areas":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedAuditArea"}}}},"ServiceChannel.Api.Model.SiteAudit.CompletedAuditArea":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"SortOrder":{"format":"int32","type":"integer"},"CheckLists":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedCheckList"}}}},"ServiceChannel.Api.Model.SiteAudit.CompletedCheckList":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"Unlisted":{"default":false,"type":"boolean"},"SortOrder":{"format":"int32","type":"integer"},"CheckListItems":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedCheckListItem"}}}},"ServiceChannel.Api.Model.SiteAudit.CompletedCheckListItem":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"Description":{"type":"string"},"Score":{"format":"int32","type":"integer"},"System":{"format":"int32","type":"integer"},"Date":{"format":"date-time","type":"string"},"Unlisted":{"default":false,"type":"boolean"},"CheckListItemImpact":{"type":"string"},"UseNumericRatingSystem":{"default":false,"type":"boolean"},"PassThreshold":{"format":"int32","type":"integer"},"Range":{"type":"array","items":{"format":"int32","type":"integer"}},"Issues":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssue"}},"WorkOrderIds":{"type":"array","items":{"format":"int32","type":"integer"}},"Quantity":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedAuditQuantity"}}},"ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssue":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Date":{"format":"date-time","type":"string"},"Description":{"type":"string"},"Persistent":{"default":false,"type":"boolean"},"Attachments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssueAttachment"}}}},"ServiceChannel.Api.Model.SiteAudit.CompletedAuditQuantity":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Value":{"format":"int32","type":"integer"},"Unit":{"type":"string"}}},"ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssueAttachment":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"RemoteName":{"type":"string"},"RemoteNameResized":{"type":"string"},"FileName":{"type":"string"}}},"ServiceChannel.Services.Messaging.SiteAudit.UpdatedCompletedAuditResponse":{"type":"object","properties":{"IsSuccess":{"default":false,"type":"boolean"},"UpdatedCompletedAudit":{"$ref":"#/definitions/ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfoExternal"},"Sent":{"type":"string"}}},"ServiceChannel.Services.Messaging.Trade.GetSubscriberTradesResponse":{"type":"object","properties":{"Trades":{"type":"object","additionalProperties":{"type":"string"}}}},"ServiceChannel.Services.Messaging.Subscribers.RegisterSubscriberRequest":{"description":"RegisterSubscriberRequest","required":["Name","Address1","Country","State","City","Zip","Email","Phone","TaxId","IsPersonalTaxId"],"type":"object","properties":{"Name":{"description":"Required Name\r\n            Name - name of the subscriber","type":"string"},"Address1":{"description":"Subscriber Address1","type":"string"},"Address2":{"description":"Subscriber Address2","type":"string"},"Country":{"description":"Subscriber Country","type":"string"},"State":{"description":"Subscriber  State","type":"string"},"City":{"description":"Subscriber City","type":"string"},"Zip":{"description":"Subscriber Zip","type":"string"},"Email":{"description":"Subscriber Email","type":"string"},"Phone":{"description":"Subscriber Phone","type":"string"},"Fax":{"description":"Subscriber Fax","type":"string"},"ContactName":{"description":"Subscriber ContactName","type":"string"},"TaxId":{"description":"TaxId","type":"string"},"IsPersonalTaxId":{"description":"IsPersonalTaxId","default":false,"type":"boolean"},"SysadminContactFixxbook":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.SysadminContactFixxbook"},"TimeFormat":{"type":"string"},"DateFormat":{"type":"string"},"DecimalSeparator":{"type":"string"}}},"ServiceChannel.Services.Messaging.Subscribers.SysadminContactFixxbook":{"description":"SysadminContactFixxbook","type":"object","properties":{"Name":{"description":"Name","type":"string"},"JobTitle":{"description":"JobTitle","type":"string"},"Email":{"description":"Email is used for Login in Fixxbook","type":"string"},"WorkPhone":{"description":"WorkPhone","type":"string"},"MobilePhone":{"description":"MobilePhone","type":"string"},"Fax":{"description":"Fax","type":"string"}}},"ServiceChannel.Services.Messaging.Subscribers.UpdateSubscriberInfoRequest":{"description":"UpdateSubscriberInfoRequest","required":["Name","Email"],"type":"object","properties":{"Name":{"description":"Required Name\r\n            Name - name of the subscriber","type":"string"},"Address1":{"description":"Optional","type":"string"},"Address2":{"description":"Optional","type":"string"},"Country":{"description":"Optional","type":"string"},"State":{"description":"Optional","type":"string"},"City":{"description":"Optional","type":"string"},"Zip":{"description":"Optional","type":"string"},"Email":{"description":"Email Required","type":"string"},"Phone":{"description":"Optional","type":"string"},"Fax":{"description":"Optional","type":"string"},"ContactName":{"description":"Optional","type":"string"},"TimeFormat":{"type":"string"},"DateFormat":{"type":"string"},"DecimalSeparator":{"type":"string"}}},"ServiceChannel.Services.Messaging.Subscribers.GetSubscriberPropertyResponse":{"description":"Defines subscriber's property response structure","type":"object","properties":{"Id":{"format":"int32","description":"Property identifier","type":"integer"},"Name":{"description":"Property name","type":"string"},"Value":{"$ref":"#/definitions/System.Object","description":"Property value"}}},"ServiceChannel.Services.Messaging.Subscribers.DashboardInfo":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"}}},"ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsRequest":{"type":"object","properties":{"SubscriberIds":{"type":"array","items":{"format":"int32","type":"integer"}}}},"ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsResponse":{"type":"object","properties":{"Data":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.SubscribersRegionalSettings"}},"Error":{"type":"string"}}},"ServiceChannel.Services.Messaging.Subscribers.SubscribersRegionalSettings":{"type":"object","properties":{"SubscriberId":{"format":"int32","type":"integer"},"LanguageId":{"format":"int32","type":"integer"},"Language":{"type":"string"},"CultureName":{"type":"string"},"DateFormat":{"type":"string"},"TimeFormat":{"type":"string"},"DecimalSeparator":{"type":"string"}}},"ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyQuestionWithAnswers":{"type":"object","properties":{"SurveyQuestion":{"$ref":"#/definitions/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyQuestion"},"SurveyAnswers":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyAnswer"}}}},"ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyQuestion":{"type":"object","properties":{"Question":{"type":"string"},"Disabled":{"default":false,"type":"boolean"},"Id":{"format":"int32","type":"integer"},"SubscriberId":{"format":"int32","type":"integer"},"UserId":{"format":"int32","type":"integer"}}},"ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyAnswer":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Answer":{"type":"string"},"SortOrder":{"format":"int32","type":"integer"}}},"ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyAnsweredQuestion":{"type":"object","properties":{"WorkorderId":{"format":"int32","type":"integer"},"QuestionId":{"format":"int32","type":"integer"},"AnswerId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.SurveyQuestion.WorkorderAnsweredQuestionResponse":{"type":"object","properties":{"Question":{"type":"string"},"Answer":{"type":"string"}}},"ServiceChannel.Services.Messaging.Template.GetTemplateFilesHistoriesRequest":{"description":"holds request","type":"object","properties":{"FileTypeIds":{"description":"Gets or sets FileTypeId.","type":"array","items":{"format":"int32","type":"integer"}},"Sort":{"description":"Sort resources by the specified property in the response.","type":"string"},"Page":{"format":"int32","description":"Results page number.","type":"integer"},"IsPageSizeDefault":{"default":false,"type":"boolean","readOnly":true},"PageSize":{"format":"int32","description":"Number of objects on the results page. The default and maximum per page is 50.","type":"integer"}}},"ServiceChannel.Services.Messaging.Template.GetTemplateFilesHistoriesResponse":{"description":"holds response","type":"object","properties":{"TemplateFilesHistories":{"description":"Gets or sets Trades.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Template.TemplateFilesHistory"}},"ItemsCount":{"format":"int32","description":"Gets or sets ItemsCount.","type":"integer"},"ErrorCode":{"format":"int32","description":"Numeric identifier that determines the nature of an error. Possible values: `0` - success, otherwise - error.","type":"integer"},"Message":{"description":"Defines that the file’s remote storage is unavailable or its URL cannot be found.","type":"string"}}},"ServiceChannel.Services.Messaging.Template.TemplateFilesHistory":{"type":"object","properties":{"Id":{"format":"int32","description":"Gets or sets Id.","type":"integer"},"FilePath":{"description":"Gets or sets FilePath.","type":"string"},"FileName":{"description":"Gets or sets FileName.","type":"string"},"Description":{"description":"Gets or sets Description.","type":"string"},"ErrorMessage":{"description":"Gets or sets ErrorMessage.","type":"string"},"FileStatus":{"format":"int32","description":"Gets or sets FileStatus. 0 - started 1 - processing; 2 - completed;","type":"integer"},"FileType":{"format":"int32","description":"Gets or sets FileType. 0  - pm_Template file","type":"integer"},"ModifiedDate":{"format":"date-time","description":"Gets or sets ModifiedDate.","type":"string"},"ModifiedBy":{"description":"Gets or sets ModifiedBy.","type":"string"},"CreatedRecords":{"format":"int32","description":"Gets or sets CreatedRecords.","type":"integer"},"UpdatedRecords":{"format":"int32","description":"Gets or sets UpdatedRecords.","type":"integer"},"SubscriberId":{"format":"int32","description":"Gets or sets SubscriberId.","type":"integer"},"DeletedRecords":{"format":"int32","description":"Gets or sets DeletedRecords.","type":"integer"}}},"ServiceChannel.Services.Messaging.Notifications.TestNotificationRequest":{"type":"object","properties":{"Url":{"description":"The URL to which the test event should be delivered.","type":"string"}}},"ServiceChannel.Services.Messaging.Trade.AddTradeRequest":{"description":"Add Trade Request","type":"object","properties":{"Name":{"type":"string"},"Nte":{"format":"float","type":"number"},"PrimaryTrade":{"type":"string"},"AutoReassign":{"default":false,"type":"boolean"},"SkipPrimaryTradeCheck":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Trade.AddTradeResponse":{"description":"Add Trade Response","type":"object","properties":{"Id":{"format":"int32","type":"integer"},"ErrorCode":{"format":"int32","description":"Numeric identifier that determines the nature of an error. Possible values: `0` - success, otherwise - error.","type":"integer"},"Message":{"description":"Defines that the file’s remote storage is unavailable or its URL cannot be found.","type":"string"}}},"ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesRequest":{"type":"object","properties":{"LocationId":{"format":"int32","type":"integer"},"ProviderId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesResponse":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"ErrorCode":{"format":"int32","description":"Numeric identifier that determines the nature of an error. Possible values: `0` - success, otherwise - error.","type":"integer"},"Message":{"description":"Defines that the file’s remote storage is unavailable or its URL cannot be found.","type":"string"}}},"ServiceChannel.Services.Messaging.Trade.TradeWithPrimaryTrade":{"type":"object","properties":{"PrimaryTrade":{"type":"string"},"Id":{"format":"int32","description":"Numeric identifier of the trade.","type":"integer"},"Name":{"description":"Trade name.","type":"string"},"SubscriberId":{"format":"int32","description":"Unique subscriber ID.","type":"integer"}}},"ServiceChannel.Services.Messaging.Tradesmen.CreateTradesmenProfileRequest":{"type":"object","properties":{"FullName":{"description":"Full name of the technician","type":"string"},"CompanyName":{"description":"Name of the provider company","type":"string"},"FixxbookCompanyId":{"format":"int32","description":"Optional.","type":"integer"},"MobileNumber":{"description":"Mobile number of the technician","type":"string"},"Email":{"description":"Email of the technician. Must be unique","type":"string"}}},"ServiceChannel.Services.Messaging.Trucks.TruckRequest":{"required":["TruckId","Name"],"type":"object","properties":{"TruckId":{"type":"string"},"Name":{"type":"string"},"Region":{"type":"string"},"District":{"type":"string"},"Make":{"type":"string"},"Model":{"type":"string"},"Year":{"type":"string"},"License":{"type":"string"},"Vin":{"type":"string"},"HomestoreLocationId":{"format":"int32","type":"integer"},"MainContact":{"type":"string"},"PhoneNumber":{"type":"string"},"FaxNumber":{"type":"string"},"Email":{"type":"string"},"ManagerAuthId":{"format":"int64","type":"integer"},"InventoryProviderId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Trucks.TechTruckRequest":{"required":["AuthTechnicianId"],"type":"object","properties":{"AuthTechnicianId":{"format":"int64","type":"integer"},"TruckId":{"format":"int32","type":"integer"},"AlternativeTruckDescription":{"type":"string"}}},"Twilio.AspNet.Common.SmsRequest":{"type":"object","properties":{"SmsSid":{"type":"string"},"Body":{"type":"string"},"MessageStatus":{"type":"string"},"AccountSid":{"type":"string"},"From":{"type":"string"},"To":{"type":"string"},"FromCity":{"type":"string"},"FromState":{"type":"string"},"FromZip":{"type":"string"},"FromCountry":{"type":"string"},"ToCity":{"type":"string"},"ToState":{"type":"string"},"ToZip":{"type":"string"},"ToCountry":{"type":"string"}}},"ServiceChannel.Services.Messaging.Users.AddUserRequest":{"description":"AddUserRequest class definition","type":"object","properties":{"UserName":{"description":"Gets or sets User name.","pattern":"^$|(\\A\\S+).(\\S).(\\S)\\z","type":"string"},"Id":{"format":"int32","description":"Get or set User's identifier (id)","type":"integer"},"InfoSubscriberId":{"format":"int32","description":"Gets or sets InfoSubscriberId.","type":"integer"},"Password":{"description":"Gets or sets Password.","type":"string"},"Email":{"description":"Gets or sets Email.","type":"string"},"LocationAccess":{"description":"Gets or sets LocationAccess.","type":"string"},"FeedRole":{"description":"Gets or sets FeedRole.","type":"string"},"User":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.User","description":"Gets or sets User."}}},"ServiceChannel.Services.Messaging.Users.GetUserResponse":{"description":"GetUserResponse class definition","type":"object","properties":{"Id":{"format":"int32","description":"Get User's Id","type":"integer"},"InfoSubscriberId":{"format":"int32","description":"Get User's SubscriberId","type":"integer"},"UserName":{"description":"Get User's UserName","type":"string"},"Email":{"description":"Get User's Email","type":"string"},"Password":{"description":"Gets or sets Password.","type":"string"},"FeedRole":{"description":"Get User's FeedRole","type":"string"},"LocationAccess":{"description":"Get User's LocationAccess","type":"string"},"User":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.User","description":"Gets or sets User."}}},"ServiceChannel.Services.Messaging.Users.UpdateUserRequest":{"description":"UpdateUserRequest class definition","type":"object","properties":{"Id":{"format":"int32","description":"Get or set User's identifier (id)","type":"integer"},"InfoSubscriberId":{"format":"int32","description":"Gets or sets InfoSubscriberId.","type":"integer"},"UserName":{"description":"Gets or sets User name.","type":"string"},"Password":{"description":"Gets or sets Password.","type":"string"},"Email":{"description":"Gets or sets Email.","type":"string"},"LocationAccess":{"description":"Gets or sets LocationAccess.","type":"string"},"FeedRole":{"description":"Gets or sets FeedRole.","type":"string"},"User":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.User","description":"Gets or sets User."}}},"ServiceChannel.Services.Messaging.MenuResponse":{"type":"object","properties":{"MainMenu":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.MenuItem"}},"AccountMenu":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.MenuItem"},"LogoUrl":{"type":"string"},"LogoHref":{"type":"string"}}},"ServiceChannel.Services.Messaging.MenuItem":{"type":"object","properties":{"Name":{"type":"string"},"Url":{"type":"string"},"Id":{"enum":["None","Track_WOPO","Console","WorkOrders_WorkOrderList","Proposals","RFPsProposals_CreateProposal","RFPsProposals_ViewProposals","RFPsProposals_ViewProcessRFP","RFPsProposals_ViewProcessBulkRFP","RFPsProposals_MySavedProposalReports","RFPsProposals_ViewProcessProposals","RFPsProposals_CreateRFP","Invoices","PaymentManager","ServiceHealth","Home","CreateServiceRequest_ServiceRequestDashboard","CreateServiceRequest_ClassicServiceRequest","WorkOrders_MySavedLiveReports","WorkOrders_OpenCallsOnly","WorkOrders_InProgressCallsOnly","WorkOrders_OpenAndInProgress","WorkOrders_OpenAndInProgressExcludingPartsOnOrder","WorkOrders_OpenAndInProgressExcludingReferredToFM","WorkOrders_OpenAndInProgressExcludingMaintenance","WorkOrders_CompletedCallsOnly","WorkOrders_InvoicedCallsOnly","WorkOrders_AllCalls","WorkOrders_AllCallsLongFormat","WorkOrders_AllCallsUserAssignment","WorkOrders_ArchiveReports_MySavedArchiveReports","WorkOrders_ArchiveReports_CallHistory","WorkOrders_ArchiveReports_AccrualReport","WorkOrders_ArchiveReports_OriginalETAMmissed","WorkOrders_ArchiveReports_ExcessiveCalls","WorkOrders_AuditReports_DataExtract","QuickView","LocationsAndProviderAssignments","PlannedMaintenance_PMServices","PlannedMaintenance_PMLocations","PlannedMaintenance_PMTemplates","SitePlanningReports","AssetsEquipment_Administration","AssetsEquipment_Summary","AssetsEquipment_ManageAssets","AssetsEquipment_ManageAssetTypes","AssetsEquipment_RefrigerantLeakEvents","AssetsEquipment_ImportedAssets","Inventory","CompliancePrivateNetwork","Admin_LocationSettings_LocationNoteHeaders","Admin_LocationSettings_BusinessHours","Admin_WOProperties_Categories","Admin_WOProperties_Priorities","Admin_WOProperties_Statuses","Admin_WOProperties_TradesNTEs","Admin_Accounting_AdditionalApprovalCodes","Admin_Accounting_GLCodes","Admin_Accounting_ImportGLCodeTemplate","Admin_Invoices_General","Admin_Invoices_MLIConfiguration","Admin_Invoices_AutoApproval","Admin_Proposals_MLPConfiguration","Admin_Proposals_AutoApproval","Admin_Proposals_General","Admin_Proposals_ProposalApproveReasons","Admin_Proposals_ProposalAssignReasons","Admin_Permissions_Users","Admin_Permissions_Mobile","Admin_Permissions_Security","Admin_Permissions_ImpersonateUser","Admin_Permissions_APIIntegration","Admin_Permissions_Webhooks","Admin_Permissions_Notifications","Admin_SiteAccessRules","Admin_SitePlanningSetup","Admin_Providers","Admin_Subscribers","Admin_Connector","Admin_UserAccount","Admin_Tools_Surveys","Admin_Tools_CheckLists","Admin_Tools_Announcements","Admin_Tools_RemapProviders","Admin_Tools_UploadTemplates","Admin_Tools_SuppressionListRemoval","Admin_Tools_QuickView","Admin_QualitySurvey_SurveyQuestions","Admin_QualitySurvey_SurveyReport","Admin_Mobile_CIWO","Admin_Mobile_GPS","Admin_UserManagement","Admin_Locations","ServiceProviders","AnalyticsProView","Logout","ReportAnIssue","MobileAccessCode","HelpLinkForSubscribers","HelpLinkForProviders","ProviderSearch","Projects","Admin_Projects_ApprovalConfiguration","Admin_Projects_TypesAndCategories","Admin_Projects_Config","Admin_Spaces_SpacesManager","Admin_Tools_UniversalConnectorSetup","Spaces_Analytics","Spaces_Dashboard","Spaces_Manager","Spaces_Plotter","Spaces_Viewer","Admin_UniversalConnectorConfig","Admin_IssueListSetup","Admin_DashboardSettings","Admin_Proposals_NewMLPConfiguration"],"type":"string"},"Items":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.MenuItem"}}}},"ServiceChannel.Services.Messaging.ApplicationAccess.FeatureResponse":{"description":"Feature response entity.","type":"object","properties":{"Features":{"description":"Subscribers features set","type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.User.UserLocationNoteRestrictionResponse":{"type":"object","properties":{"Header":{"type":"string"},"Values":{"type":"array","items":{"type":"string"}}}},"ServiceChannel.Services.Messaging.User.UserLocalizationSettings":{"type":"object","properties":{"DateFormat":{"type":"string"},"TimeFormat":{"type":"string"},"DecimalSeparator":{"type":"string"},"Language":{"type":"string"}}},"ServiceChannel.Api.Model.Workorders.WeatherEventType":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"Description":{"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.WorkActivityRequest":{"description":"Request object to update a work activity.","type":"object","properties":{"CheckInDate":{"format":"date-time","description":"The date and time when a technician started work on the service request. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. The default is the current date and time.","type":"string"},"CheckOutDate":{"format":"date-time","description":"The date and time when a technician finished work on the service request. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. The default is the current date and time.","type":"string"},"Name":{"description":"(*Optional*) The name of technician who worked on the service request.","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.WorkActivityPostRequest":{"description":"Request object to create a work activity.","type":"object","properties":{"WorkTypeId":{"format":"int32","description":"The type of activity performed: 1 — *Repair*, 2 — *Travel*. You can pass other values if custom types are set up for the subscriber.","type":"integer"},"CheckInDate":{"format":"date-time","description":"The date and time when a technician started work on the service request. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. The default is the current date and time.","type":"string"},"CheckOutDate":{"format":"date-time","description":"The date and time when a technician finished work on the service request. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. The default is the current date and time.","type":"string"},"Name":{"description":"(*Optional*) The name of technician who worked on the service request.","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.CreateWoRequest":{"description":"CreateWoRequest","required":["ContractInfo","Category","Priority","CallDate","Description","ProblemCode"],"type":"object","properties":{"Number":{"description":"Work Order Number","type":"string"},"PurchaseNumber":{"description":"Purchase Order Number","type":"string"},"HasTruncatedDescription":{"description":"Optional","default":false,"type":"boolean"},"ContractInfo":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.ContractInfo","description":"Required Contract Data Info to define ContractId.\r\n            Describes who, where and what will perform as well as the one who requested work"},"Comment":{"description":"Optional, Gets or sets the comment. Describes comments in work order","type":"string"},"SetupId":{"format":"int32","description":"Optional Dashboard Id, UID of dashboard from which this work order was created\r\n            must be bigger then zero and belong to existing dashboard","type":"integer"},"AssetId":{"format":"int32","description":"Optional Asset, UID of asset, that will be repaired/reinstalled\r\n            must be present and correspond to valid asset if system finds that asset exists for specified LocationId,\r\n            TradeName, IssueRequest.EquipmentType params and asset is required for issue choice specified by IssueRequest,\r\n            SubscriberId and SetupId params","type":"integer"},"ReplaceAsset":{"description":"Optional","default":false,"type":"boolean"},"CallerName":{"description":"Optional, can be empty Caller Name. Name of the person/organization who created work order","type":"string"},"Category":{"description":"Required, not empty Category must be valid category for specified subscriber. Describes what type of work will be performed.\r\n            This definition is broader then TradeName.\r\n            For example if TradeName is \"FLOOR MAINTENANCE\" then Category will be \"Maintenance\"","type":"string"},"CategoryId":{"format":"int32","type":"integer"},"Priority":{"description":"Required, not empty Priority must be valid priority for specified subscriber. Describes work order priority.\r\n            For example \"Normal\", \"Emergency\"","type":"string"},"Nte":{"format":"double","description":"Required Nte value; optional only for users that have no access to change NTE. (decimal number (e.g. 1.00)) - describes maximum amount of money to be spent on work order.\r\n            Must not exceed max amount defined by Subscriber.\r\n            If you specify ExtendedInfo.Tax, ExtendedInfo.Tax2 and ExtendedInfo.Price then Nte must be equal to sum of those three params","type":"number"},"CallDate":{"description":"Required, date when work order was created.","type":"string"},"ScheduledDate":{"description":"Optional, calculated based on CallDate and Priority by default. Date when provider will come to perform work order.\r\n            Must be an actual date (i.e. not 1/1/1900 or 1/1/3001) + must be bigger then CallDate and smaller then ExpirationDate","type":"string"},"CompletedDate":{"description":"Optional, WorkDate when its not completed status.","type":"string"},"ProblemSource":{"description":"Optional, source from which the problem came from","type":"string"},"Description":{"description":"Required problem description, Must not be empty. Overall description of a problem (e.g. \"Coffee machines are broken all over the place - please help!\")","type":"string"},"ProblemCode":{"description":"Required, describes problem similar to Description attribute, but its value is predefined in subscriber's [IssueList].","type":"string"},"RecallWorkOrder":{"format":"int32","description":"Optional,  UID of recalled work order. Work order is set as 'recalled' when subscriber isn't satisfied with work that was done by provider","type":"integer"},"ServiceNowId":{"description":"Optional, Service Now Id","type":"string"},"CurrencyId":{"format":"int32","description":"Optional, UID of currency used to pay for work order. Defaul value is '1' which corresponds to USD.\r\n            Must be bigger then 0 and correspond to valid currency in dashboard which is found by SetupId param","type":"integer"},"FollowupWorkOrder":{"format":"int32","description":"Optional, UID of work order that is created if problem cannot be fully solved in terms of original work order","type":"integer"},"ApprovalCode":{"description":"Optional","type":"string"},"IssueRequestInfo":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.IssueRequest","description":"Optional, describes problem in terms of [Dashboard] application"},"DispatchSettingsInfo":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.DispatchSettings","description":"Describes email notification settings on work order creation"},"Status":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkorderStatus","description":"Status"},"ExtendedInfo":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.ExtendedRequestInfo","description":"Optional, extended status value"},"Attachments":{"description":"Optional, at least one attachement must be present in list if system finds that attachments are required for issue choice specified by IssueRequest,\r\n            SubscriberId and SetupId params","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.AddAttachmentRequest"}},"IgnoreAttachmentsRequiredFlag":{"default":false,"type":"boolean"},"ApiRequest":{"default":false,"type":"boolean"},"Materials":{"description":"Optional","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.Material"}},"MaterialsUsed":{"description":"Optional","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.RefrigerantTracking.AddWorkOrderPartRefrigerantItem"}},"AdditionalFields":{"description":"Interactive troubleshooting additional fileds","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.AdditionalField"}},"IssueListHeaderId":{"format":"int32","description":"Optional. Id in dash_IssueListHeader table","type":"integer"},"ProposedNte":{"format":"double","description":"Optional","type":"number"},"NotifyProvider":{"description":"Optional","default":false,"type":"boolean"},"IsDashboardRequest":{"description":"Optional","default":false,"type":"boolean"},"FloorPlansImagePath":{"description":"Optional","type":"string"},"ProjectId":{"format":"int32","description":"Optional. Project Id from Project Tracker","type":"integer"},"WeatherTypeId":{"format":"int32","description":"Optional. Associate with a specific weather type","type":"integer"},"LabelId":{"format":"int32","description":"Optional, Label Id","type":"integer"},"AdditionalApprovalCodes":{"description":"Additional Approval Codes","type":"object","additionalProperties":{"type":"string"}}}},"ServiceChannel.Services.Messaging.Workorders.ContractInfo":{"description":"ContractInfo (composite object) - describes who, where and what will perform as well as the one who requested work","required":["SubscriberId","LocationId","TradeName"],"type":"object","properties":{"SubscriberId":{"format":"int32","description":"Required for provider request (for subscriber request filled authomatically), must belong to existing subscriber","type":"integer"},"LocationId":{"format":"int32","description":"Required if 'StoreId' not passed, must belong to existing location for specified subscriber.\r\n            Can be Optional, if EquipmentId is supplied in the request, system picks LocationId of the location that equipment belongs to","type":"integer"},"StoreId":{"description":"Optional, can be used instead of 'LocationId'.\r\n            If 'LocationId' not passed system will attempt to find location based on 'SubscriberId' and 'StoreId'\r\n            ('StoreId' is required in this case), it is possible that system won't be able to find location which results in error.\r\n            Many locations can have similar StoreId but LocationId is always unique","type":"string"},"ProviderId":{"format":"int32","description":"Optional (for provider request filled authomatically), if provided - must correspond to a valid provider that has contract\r\n            for specified Subscriber, Location and Trade.\r\n            If not specified the system will attempt to find default provider based on Location, \r\n            Trade and Equipment (if specified). It is possible that system won't be able to find provider which results in error","type":"integer"},"TradeName":{"description":"Required, must be a valid trade for specified subscriber.\r\n            Can be Optional if EquipmentId is supplied in the request, system picks TradeName of the trade that equipment belongs to.\r\n            This definition is narrower then Category. For example if Category is \"Maintenance\" then TradeName will be \"FLOOR MAINTENANCE\"","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.IssueRequest":{"required":["AreaId"],"type":"object","properties":{"AreaId":{"format":"int32","description":"Required, UID of problem area.\r\n             Must be bigger then zero and belong and belong to existing area","type":"integer"},"ExtendedAreaName":{"description":"Optional, area name. Must be not empty","type":"string"},"ProblemType":{"description":"Optional, Type of problem. Must be not empty","type":"string"},"AssetType":{"description":"Optional, type of asset, has predefined values in [IssueList]\r\n            Must be not empty","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.DispatchSettings":{"description":"describes email notification settings on work order creation","type":"object","properties":{"NotificationDisabled":{"description":"Turns on/off email notification when work order is created","default":false,"type":"boolean"},"EmailHeader":{"description":"Email Header","type":"string"},"SendAlertToFM":{"description":"Send Alert To FM","default":false,"type":"boolean"},"ShowLastServiceCall":{"description":"Show Last Service Call","default":false,"type":"boolean"},"IsTest":{"description":"Is Test","default":false,"type":"boolean"},"CcRecipients":{"description":"CC Recipients","type":"string"},"InvalidRecipients":{"description":"Invalid Recipients","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.WorkorderStatus":{"required":["Primary","Extended"],"type":"object","properties":{"Primary":{"description":"Required, primary work order status value","enum":["NotSet","Open","InProgress","Completed","Incomplete"],"type":"string"},"Extended":{"description":"Required, but can be empty. Extended status value","type":"string"},"PrimaryStatusValue":{"type":"string","readOnly":true}}},"ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.ExtendedRequestInfo":{"description":"ExtendedRequestInfo","type":"object","properties":{"ExpirationDate":{"format":"date-time","description":"Optional, Expiration Date","type":"string"},"GracePeriod":{"format":"int32","description":"Optional, Grace Period","type":"integer"},"Tax":{"format":"double","description":"Optional, Tax","type":"number"},"Tax2":{"format":"double","description":"Optional, Tax2","type":"number"},"Tax2Type":{"description":"Optional, Tax2Type","type":"string"},"Price":{"format":"double","description":"Optional, Price","type":"number"},"AutoInvoice":{"description":"Optional, Auto Invoice","default":false,"type":"boolean"},"CallerIdMatch":{"description":"Optional, Caller Id Match","default":false,"type":"boolean"},"AutoComplete":{"description":"Optional, Auto Complete","default":false,"type":"boolean"},"AutoDispatch":{"description":"Optional, Auto Dispatch","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.Material":{"type":"object","properties":{"Quantity":{"format":"float","type":"number"},"Description":{"type":"string"},"Price":{"format":"double","type":"number"},"Reason":{"type":"string"},"SupplierPartId":{"type":"string"},"SupplierPartAuxiliaryId":{"type":"string"},"SupplierName":{"type":"string"},"NteMultiplier":{"format":"double","type":"number"},"DefaultNte":{"format":"double","type":"number"}}},"ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.AdditionalField":{"description":"Service Request Additional Field (Name, Value) pairs","type":"object","properties":{"Name":{"description":"Additional Field Name","type":"string"},"Value":{"description":"Additional Field Value","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.WorkOrderSearchRequest":{"type":"object","properties":{"OtherLocationId":{"description":"UID of location, exact search by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.Int32]"}},"Id":{"description":"UID of work order, exact search by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.Int32]"}},"Category":{"description":"Category of work order, exact search by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"Status":{"description":"Status of work order, exact search by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"ExtendedStatus":{"description":"Extended status of work order, exact search by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"Number":{"description":"Work order number, 'starts with' search criteria by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"ServiceId":{"description":"'starts with' search criteria by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"Priority":{"description":"Priority of work order, exact search by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"PurchaseNumber":{"description":"Purchase number of work order, 'starts with' search criteria by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"Trade":{"description":"Trade, 'starts with' search criteria by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"ScheduledDate":{"description":"Scheduled date","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"ExpirationDate":{"description":"Expiration date","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"CallDate":{"description":"Call date","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"Sort":{"description":"Sort resources by the specified property in the response.","type":"string"},"Page":{"format":"int32","description":"Results page number.","type":"integer"},"IsPageSizeDefault":{"default":false,"type":"boolean","readOnly":true},"PageSize":{"format":"int32","description":"Number of objects on the results page. The default and maximum per page is 50.","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.ChangeWoStatusRequestExt":{"required":["Status"],"type":"object","properties":{"Status":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkorderStatusExt","description":"Required, Work order Status"},"Note":{"description":"Optional, Note","type":"string"},"Actor":{"description":"Optional, Actor","type":"string"},"DeclineReasonId":{"format":"int32","description":"Optional, for OPEN/DECLINED status if DeclineHistoryWO FF is on","type":"integer"},"CustomDeclineReason":{"description":"Optional, for OPEN/DECLINED status if the decline reason has AskCustomReason=true","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.WorkorderStatusExt":{"required":["Primary","Extended"],"type":"object","properties":{"Primary":{"description":"Required, primary work order status value","type":"string"},"Extended":{"description":"Required, but can be empty. Extended status value","type":"string"},"PrimaryStatus":{"description":"Converted to WoPrimaryStatus, primary work order status value","enum":["NotSet","Open","InProgress","Completed","Incomplete"],"type":"string","readOnly":true}}},"ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderStatusResponse":{"type":"object","properties":{"result":{"description":"Last note","type":"string"},"id":{"format":"int32","description":"Unique work order identifier.","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest":{"description":"Request to update the value of a work order parameter.","required":["Value"],"type":"object","properties":{"Value":{"description":"Value of the work order parameter to update.","type":"string"},"Actor":{"description":"Name of the person on whose behalf you are updating the parameter value.","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse":{"description":"Object containing the details of the modified work order.","type":"object","properties":{"id":{"format":"int32","description":"Unique work order identifier.","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.ChangeWoCategoryRequest":{"required":["Value"],"type":"object","properties":{"Value":{"type":"string"},"Actor":{"type":"string"},"Id":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.ChangeWoNteRequest":{"type":"object","properties":{"Details":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.NteDetails"},"CurrencyId":{"format":"int32","description":"Optional, by default current Work Order Currency","type":"integer"},"Value":{"description":"Optionally required(can be calculated automatically by Details), String Value of the NTE amount","type":"string"},"ProviderEmail":{"description":"Provider e-mail","type":"string"},"Actor":{"description":"Optional, Actor","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.NteDetails":{"type":"object","properties":{"Tax":{"format":"double","description":"Optional Tax amount","type":"number"},"Tax2":{"format":"double","description":"Optional Tax2 amount","type":"number"},"Price":{"format":"double","description":"Optional Price amount","type":"number"},"Tax2Type":{"description":"Optional Tax2 type","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrdersProjectApprovalRequest":{"required":["IsApproved","ProjectId"],"type":"object","properties":{"IsApproved":{"default":false,"type":"boolean"},"ProjectId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.CreateWorkOrdersProjectApprovalRequest":{"required":["Nte","ProjectId"],"type":"object","properties":{"Nte":{"format":"double","type":"number"},"ProjectId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.WorkOrderResolutionRequest":{"type":"object","properties":{"Resolution":{"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.ChangeWoProjectIdRequest":{"required":["Value"],"type":"object","properties":{"Value":{"format":"int32","description":"Project Id","type":"integer"},"SendRequestToProjectApi":{"description":"Optional, Send Request To Project Api","default":false,"type":"boolean"},"Actor":{"description":"Optional, Actor","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.ChangeWoWeatherTypeIdRequest":{"required":["Value"],"type":"object","properties":{"Value":{"format":"int32","description":"Weather Type Id (leave blank to delete)","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.IssueChoiceRequest":{"type":"object","properties":{"AreaId":{"format":"int32","type":"integer"},"ProblemType":{"type":"string"},"AssetType":{"type":"string"},"ProblemCode":{"type":"string"},"SetupId":{"format":"int32","type":"integer"},"AdditionalFields":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Data.FieldValue"}},"IsUpdateScrecProblemType":{"default":false,"type":"boolean"}}},"ServiceChannel.Data.FieldValue":{"type":"object","properties":{"Header":{"type":"string"},"Value":{"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.ReassignWORequest":{"description":"Reassign WorkOrder To other Provider","required":["ReasonId","ProviderId"],"type":"object","properties":{"WorkorderId":{"format":"int32","description":"Work order id.","type":"integer"},"Trade":{"description":"Trade","type":"string"},"Problem":{"description":"Problem Description.","type":"string"},"ProblemCode":{"description":"Problem Code.","type":"string"},"CurrencyId":{"format":"int32","description":"Optional, by default current Work Order Currency","type":"integer"},"Nte":{"format":"double","description":"Optional Nte value, by default current Work Order NTE","type":"number"},"GlCode":{"description":"Optional GL code value","type":"string"},"ReasonId":{"format":"int32","description":"Required, Reassignment reason Id.","type":"integer"},"ProviderId":{"format":"int32","description":"Required, Provider id to assign.","type":"integer"},"Category":{"description":"Category.","type":"string"},"Priority":{"description":"Priority","type":"string"},"Note":{"description":"Note","type":"string"},"ProcessName":{"description":"ProcessName","type":"string"},"RequestEmail":{"description":"Request email","type":"string"},"RequestEmailCopy":{"description":"Request email copy to","type":"string"},"NotifyProvider":{"description":"Notify Provider: send email if true","default":false,"type":"boolean"},"AdditionalApprovalCodes":{"description":"Additional approval codes","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.ApprovalCodes.AdditionalApprovalCode"}},"ScheduledDate":{"format":"date-time","description":"Work order scheduled date","type":"string"},"OriginalETA":{"format":"date-time","description":"Original ETA","type":"string"},"RefreshApprovalCodes":{"description":"If true: update Approval Codes","default":false,"type":"boolean"},"RecallWorkOrderId":{"format":"int32","description":"Original work order Id","type":"integer"},"LocationId":{"format":"int32","description":"WO location id","type":"integer"},"PurchaseOrder":{"description":"Purchase Order","type":"string"},"ApiRequest":{"description":"API request","default":false,"type":"boolean"},"Actor":{"description":"Optional, Actor","type":"string"},"LabelId":{"format":"int32","type":"integer"},"Label":{"type":"string"},"DeleteLabel":{"default":false,"type":"boolean"},"CategoryId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.WorkOrderReassignmentReason":{"description":"Work Orders Reassignment reason response","type":"object","properties":{"Id":{"format":"int32","description":"Identifier of reason","type":"integer"},"Name":{"description":"Localized reason Name","type":"string"},"Value":{"description":"Reason value","type":"string"}}},"ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateRequest":{"description":"CheckInRequest","required":["Latitude","Longitude"],"type":"object","properties":{"WorkTypeId":{"format":"int32","description":"Optional, type work Id. 1 - 'Repair', 2 - 'Travel'\r\n            Default value is 1 ('Repair'). Supports custom types.","type":"integer"},"Latitude":{"format":"double","description":"Global position. Latitude","type":"number"},"Longitude":{"format":"double","description":"Global position. Longitude","type":"number"}}},"ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateResponse":{"description":"Check-In Validate Response","type":"object","properties":{"IsBadgeScanRequired":{"description":"Is Badge Scan Required","default":false,"type":"boolean"},"IsLoginTypeAllowed":{"description":"Is Current Login type Allowed to perform check-in action","default":false,"type":"boolean"},"IsOutsideAcceptableTimeframe":{"description":"Is Outside Acceptable Timeframe","default":false,"type":"boolean"},"IsOutsideGeolocation":{"description":"Is Outside Geolocation","default":false,"type":"boolean"},"OutsideOperationalHoursMessage":{"description":"Outside Operational Hours Message","type":"string"},"IsMaskRequired":{"description":"Is Mask Required","default":false,"type":"boolean"},"CheckInOutsideGPSAllowed":{"description":"Is Check In Outside Geolocation Radius Allowed","default":false,"type":"boolean"},"CheckOutOutsideGPSAllowed":{"description":"Is Check Out Outside Geolocation Radius Allowed","default":false,"type":"boolean"},"IsCompliantNonCompliantCheckInEnabled":{"description":"Is Compliant Non-Compliant Check In/Out Enabled","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Workorders.CheckInRequest":{"description":"Check-in request","required":["Latitude","Longitude"],"type":"object","properties":{"WorkTypeId":{"format":"int32","description":"The unique ID of the work type.\r\n            **Possible values:** `1` — Repair, `2` — Travel. Other values are possible when custom types are set up for the subscriber.\r\n            **Default value:** 1.","type":"integer"},"UserId":{"format":"int32","description":"The user ID of the technician that is checking in. Use the same `UserId` for one pair of check-in and check-out records.\r\n            **Default value:** ID of the current user.","type":"integer"},"TechsCount":{"format":"int32","description":"The number of technicians that are checking in.\r\n            **Default value:** 1.","type":"integer"},"Latitude":{"format":"double","description":"The latitude of the technician’s current position.\r\n            Required for the Repair type. Not required for the Travel and custom types as well as for the Repair type when the [XML check-in/out permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#xml-check-inout-permission) is enabled.","type":"number"},"Longitude":{"format":"double","description":"The longitude of the technician’s current position.\r\n            Required for the Repair type. Not required for the Travel and custom types as well as for the Repair type when the [XML check-in/out permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#xml-check-inout-permission) is enabled.","type":"number"},"CheckInTime":{"format":"date-time","description":"The date and time of the check-in. Either indicate in UTC or pass the current time and add the UTC offset.\r\n            You can pass this value only when the [XML check-in/out permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#xml-check-inout-permission) is enabled.\r\n            **Default value:** current date and time.","type":"string"},"Actor":{"description":"Optional, Actor","type":"string"}}},"ServiceChannel.Services.Messaging.CheckInOut.CheckInOutResponse":{"description":"Check In/Out Response","type":"object","properties":{"MechanicId":{"format":"int32","description":"The unique ID of the reported check-in/out action.","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.CheckOutRequest":{"description":"Check-out request","required":["Latitude","Longitude"],"type":"object","properties":{"WorkTypeId":{"format":"int32","description":"The unique ID of the work type.\r\n            **Possible values:** `1` — Repair, `2` — Travel. Other values are possible when custom types are set up for the subscriber.\r\n            **Default value:** 1.","type":"integer"},"PrimaryStatus":{"description":"The status that is set for the WO when checking out.\r\n            Required for the Repair type. Ignored for the Travel and custom types as well when `ActionStatus` = `Cancel`.\r\n            **Default value:** NoStatusChange.","enum":["NoStatusChange","InProgress","Completed","WaitingForQuote","PartsOnOrder","Incomplete"],"type":"string"},"ExtendedStatus":{"description":"The extended status that is set for the WO when checking out.\r\n            Optional for the Repair type. Ignored for the Travel and custom types, when `ActionStatus` = `Cancel`, and for 'Completed' PrimaryStatus (generated automatically).\r\n            Refrigerant WO with 'Completed' PrimaryStatus — special case by RefrigerationTracking feature.","type":"string"},"ActionStatus":{"description":"The status of the activity.\r\n            **Possible values:** `Complete`, `Cancel`. Both values result in recording a check-out.\r\n            `Complete` means that the technician has finished the activity. `Cancel` means the technician needs to pause the activity, for example, to have a break outside of the location. GPS coordinates are not required.\r\n            **Default value:** Complete.","enum":["Complete","Cancel"],"type":"string"},"Resolution":{"description":"The comment entered when checking out. Usually describes what was done during the recorded time. Ignored for the Travel and custom types as well as when `ActionStatus` = `Cancel`.\r\n            **Default value:** empty.","type":"string"},"UserId":{"format":"int32","description":"The user ID of the technician that is checking out. Use the same `UserId` for one pair of check-in and check-out records.\r\n            **Default value:** ID of the current user.","type":"integer"},"TechsCount":{"format":"int32","description":"The number of technicians that are checking out.\r\n            **Default value:** 1.","type":"integer"},"Latitude":{"format":"double","description":"The latitude of the technician’s current position.\r\n            Required for the Repair and Travel type. Not required for custom types, for the Repair and Travel types when the [XML check-in/out permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#xml-check-inout-permission) is enabled, and when `ActionStatus` = `Cancel`.","type":"number"},"Longitude":{"format":"double","description":"The longitude of the technician’s current position.\r\n            Required for the Repair and Travel type. Not required for custom types, for the Repair and Travel types when the [XML check-in/out permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#xml-check-inout-permission) is enabled, and when `ActionStatus` = `Cancel`.","type":"number"},"CheckOutTime":{"format":"date-time","description":"The date and time of the check-out. Either indicate in UTC or pass the current time and add the UTC offset.\r\n            You can pass this value only when the [XML check-in/out permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#xml-check-inout-permission) is enabled.\r\n            **Default value:** current date and time.","type":"string"},"CheckoutAll":{"default":false,"type":"boolean"},"Actor":{"description":"Optional, Actor","type":"string"},"SignatureAttachmentId":{"format":"int32","description":"Optional, SignatureAttachmentId\r\n            **Default value:** null","type":"integer"},"UnableObtainSignatureNoteId":{"format":"int32","description":"Optional, UnableObtainSignatureNoteId\r\n            **Default value:** null","type":"integer"}}},"ServiceChannel.Services.Messaging.CheckListDetails.GetResponsesByWorkOrderResponse":{"description":"Object for checklist responses submitted for a work order.","type":"object","properties":{"Responses":{"description":"Responses to checklist questions submitted for a work order.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponseExtended"}}}},"ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponseExtended":{"description":"Object for checklist response details.","type":"object","properties":{"Pictures":{"description":"Files attached to the checklist response.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.CheckListPictureResponse"}},"Question":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailQuestionsExtendedResponse","description":"Checklist question details."},"QuestionOption":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.CheckListQuestionOptionResponse","description":"Answer option submitted for a question of the **Selector** type."},"IsCurrentChecklist":{"description":"Is current checklist flag.","default":false,"type":"boolean"},"IsFrequencyChecklist":{"description":"Is PM frequency checklist flag.","default":false,"type":"boolean"},"Id":{"format":"int32","description":"Checklist response ID.","type":"integer"},"Answer":{"description":"Answer to a checklist question.","type":"string"},"FreeTextAnswer":{"description":"Comment to an answer option with the `IsConditionalFollowUp` attribute. Answer options are configured for questions of the **Selector** type.","type":"string"},"EntityId":{"format":"int32","description":"ID of the work order the response was submitted for.","type":"integer"},"EntityTypeId":{"format":"int32","description":"ID of the entity the response was submitted for. 0 is returned for work orders.","type":"integer"},"Attempt":{"format":"int32","description":"Order of a technician’s on-site visit when the response was submitted.","type":"integer"},"ProviderId":{"format":"int32","description":"ID of the provider on whose behalf the response was submitted.","type":"integer"},"TechnicianId":{"format":"int32","description":"ID of the technician on whose behalf the response was submitted.","type":"integer"},"UpdatedDate":{"format":"date-time","description":"Date and time when the response was last updated set in EST. The format is `YYYY-MM-DDThh:mm:ss.sss`.","type":"string"},"UpdatedDateStr":{"description":"Date and time when the response was last updated set in the location’s time zone. The format is `Month Day Year hh:mm`.","type":"string"},"UpdatedDateDto":{"format":"date-time","description":"Date and time when the response was last updated set in the location’s time zone with the UTC offset. The format is `YYYY-MM-DDThh:mm:ss.sss±hh:mm`.","type":"string"}}},"ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailQuestionsExtendedResponse":{"description":"Checklist question details.","type":"object","properties":{"CheckListCreatedDate":{"format":"date-time","description":"Date and time when the checklist was created.","type":"string"},"CheckListName":{"description":"Name of the checklist the question belongs to.","type":"string"},"Id":{"format":"int32","description":"Checklist question ID.","type":"integer"},"CheckListId":{"format":"int32","description":"ID of the checklist the question belongs to.","type":"integer"},"Question":{"description":"Checklist question that a technician is prompted to answer when working on a service request.","type":"string"},"ShortDescription":{"description":"Not applicable to checklists.","type":"string"},"AnswerRequired":{"description":"Defines whether answering this checklist question is mandatory.","default":false,"type":"boolean"},"PictureFlag":{"description":"Defines whether a technician is required to upload an attachment when answering the question:\r\n             • 0 — Adding an attachment is optional.\r\n             • 1 — An attachment is not required.\r\n             • 2 — Uploading an attachment is mandatory.","enum":["Optional","No","Required"],"type":"string"},"Sequence":{"format":"int32","description":"Not applicable to checklists.","type":"integer"},"QuestionType":{"description":"[Checklist question type](https://developer.servicechannel.com/guides/checklists/types-of-checklist-questions/):\r\n             • 0 — **Acknowledgement**: Represents an on/off toggle prompting a technician to give a positive or negative response to a question.\r\n             • 1 — **Selector**: Provides multiple configured answer options to choose from.\r\n             • 2 — **Text Entry**: Allows entering a text answer.\r\n             • 4 — **Numeric Input**: Prompts to submit a number as a response.","enum":["CheckBox","RadioButton","TextEntry","TriState","NumericInput"],"type":"string"},"CheckListQuestionOptions":{"description":"Answer options for questions of the Selector type.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.CheckListDetails.CheckListQuestionOptionResponse"}},"AnswerCanPersist":{"description":"Defines whether the answer to this question can persist. If the answer is persistent, the last submitted response populates on the question. A technician can either opt for the current response or update it.","default":false,"type":"boolean"},"CheckListTimingType":{"description":"Defines the checklist segment the question belongs to: 1 — check-in segment, 2 — check-out segment.","enum":["CheckIn","CheckOut"],"type":"string"}}},"ServiceChannel.Services.Messaging.ODataRequest":{"type":"object","properties":{"Expand":{"description":"Expand a navigation property.","type":"string"},"Select":{"description":"Select a set of properties to return.","type":"string"},"Filter":{"description":"Filter a collection of resources addressed by a request URL.","type":"string"},"Orderby":{"description":"Order resources by the specified property in the response.","type":"string"},"Count":{"description":"Include the count of the matching resources in the response.","type":"string"},"Top":{"format":"int32","description":"Return the specified number of items in the response.","type":"integer"},"Skip":{"format":"int32","description":"Skip the specified number of items in the response.","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.WorkOrderSearchBaseRequest":{"type":"object","properties":{"Id":{"description":"UID of work order, exact search by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.Int32]"}},"Category":{"description":"Category of work order, exact search by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"Status":{"description":"Status of work order, exact search by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"ExtendedStatus":{"description":"Extended status of work order, exact search by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"Number":{"description":"Work order number, 'starts with' search criteria by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"ServiceId":{"description":"'starts with' search criteria by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"Priority":{"description":"Priority of work order, exact search by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"PurchaseNumber":{"description":"Purchase number of work order, 'starts with' search criteria by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"Trade":{"description":"Trade, 'starts with' search criteria by default","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"ScheduledDate":{"description":"Scheduled date","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"ExpirationDate":{"description":"Expiration date","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"CallDate":{"description":"Call date","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.FilterItem[System.String]"}},"Sort":{"description":"Sort resources by the specified property in the response.","type":"string"},"Page":{"format":"int32","description":"Results page number.","type":"integer"},"IsPageSizeDefault":{"default":false,"type":"boolean","readOnly":true},"PageSize":{"format":"int32","description":"Number of objects on the results page. The default and maximum per page is 50.","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.WarningWorkOrdersRequest":{"type":"object","properties":{"LocationId":{"format":"int32","type":"integer"},"ProblemCode":{"type":"string"},"Equipment":{"type":"string"},"ProblemType":{"type":"string"},"Trade":{"type":"string"},"Completed":{"default":false,"type":"boolean"},"SubscriberId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.WorkOrderStatisticsResponse":{"description":"Work Orders Statistics responce","type":"object","properties":{"DaysPeriod":{"format":"int32","description":"Period in days, last X days for which Work Orders statistics was collected","type":"integer"},"OpenWo":{"format":"int32","description":"Count of Open/In progress Work Orders","type":"integer"},"RecallWo":{"format":"int32","description":"Count of recall Work Orders","type":"integer"},"NegativeFbWo":{"format":"int32","description":"Count of Work Orders with negative feedback","type":"integer"}}},"ServiceChannel.Services.Messaging.Category.GetCategoriesRequest":{"type":"object","properties":{"SubscriberId":{"format":"int32","description":"This parameter is required only for provider.","type":"integer"},"SortExpr":{"description":"Gets or sets sort expression.","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.GetStatusResponse":{"type":"object","properties":{"Id":{"enum":["NotSet","Open","InProgress","Completed","Incomplete"],"type":"string"},"Name":{"type":"string"},"Extended":{"description":"Extended status value","type":"array","items":{"type":"string"}},"ExtendedStatuses":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkorderExtendedStatus"}},"Constraints":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkorderStatusConstraints"}}}},"ServiceChannel.Services.Messaging.Workorders.WorkorderExtendedStatus":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.WorkorderStatusConstraints":{"type":"object","properties":{"Extended":{"type":"string"},"IsResolutionTextRequired":{"format":"int32","type":"integer"},"IsShippingInfoRequired":{"format":"int32","type":"integer"},"IsResolutionCodesRequired":{"format":"int32","type":"integer"},"IsScheduledDateRequired":{"format":"int32","type":"integer"},"AskForReviews":{"default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Priorities.AddPriorityRequest":{"description":"Holds request.","required":["Name"],"type":"object","properties":{"Name":{"type":"string"},"Eta":{"format":"int32","description":"Optional, ETA","type":"integer"},"SkipNights":{"description":"Optional, Skip Nights","default":false,"type":"boolean"},"SkipWeekends":{"description":"Optional, Skip Weekends","default":false,"type":"boolean"},"SkipWhenClosed":{"description":"Optional, Skip When Closed","default":false,"type":"boolean"},"EtaTimeUnits":{"description":"Optional, Eta Time Units","enum":["Days","Hours","Minutes"],"type":"string"}}},"ServiceChannel.Services.Messaging.Priorities.AddPriorityResponse":{"description":"Holds response.","type":"object","properties":{"Id":{"format":"int32","type":"integer"},"ErrorCode":{"format":"int32","description":"Numeric identifier that determines the nature of an error. Possible values: `0` - success, otherwise - error.","type":"integer"},"Message":{"description":"Defines that the file’s remote storage is unavailable or its URL cannot be found.","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.GetWorkOrderLabelResponse":{"description":"Work order label response","type":"object","properties":{"Items":{"description":"List of work order labels","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelResponse"}},"Total":{"format":"int32","description":"Total count of work order labels","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelResponse":{"description":"Work order label for response","type":"object","properties":{"Id":{"format":"int32","description":"Label id","type":"integer"},"Value":{"description":"Label value","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest":{"type":"object","properties":{"LabelId":{"format":"int32","type":"integer"},"Label":{"type":"string"},"Actor":{"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.WorkOrderServiceNowIdRequest":{"type":"object","properties":{"ServiceNowId":{"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.AddStripeChargeRequest":{"description":"AddStripeCharge request","required":["TokenId","Amount","Currency"],"type":"object","properties":{"TokenId":{"description":"Id of the token returned by stripe api {!:https://stripe.com/docs/}","type":"string"},"Amount":{"format":"double","description":"Amount to charge","type":"number"},"Currency":{"description":"Currency","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.LinkWorkordersRequest":{"description":"Link Workorders Request","type":"object","properties":{"WorkorderIds":{"description":"Array of Workorder Ids to link","type":"array","items":{"format":"int32","type":"integer"}},"UnlinkLinkedWorkorders":{"description":"Unlink linked Workorders if true","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Workorders.UnlinkWorkordersRequest":{"description":"Unlink Workorders Request","type":"object","properties":{"WorkorderIds":{"description":"Array of Workorder Ids to Unlink, \r\n            Required if 'UnlinkAllLinkedWorkorders' is false\r\n            Ignored if 'UnlinkAllLinkedWorkorders' is true","type":"array","items":{"format":"int32","type":"integer"}},"UnlinkAllLinkedWorkorders":{"description":"Unlink all linked Workorders if true, Optional","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Workorders.LeaveFeedbackRequest":{"type":"object","properties":{"StarScore":{"format":"int32","type":"integer"},"Comment":{"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.Dashboard.Requests.SubmitSolvedIssueModel":{"description":"Problem solve model","required":["LocationId","Source"],"type":"object","properties":{"Type":{"enum":["Unknown","DuplicateWorkOrder","DecisionTree","DecisionTreeStop","IssueListMessage"],"type":"string"},"LocationId":{"format":"int32","type":"integer"},"Source":{"type":"string"},"Category":{"type":"string"},"Trade":{"type":"string"},"Priority":{"type":"string"},"ProblemCode":{"type":"string"},"ProblemDescription":{"type":"string"},"WorkOrderId":{"format":"int32","type":"integer"},"NTE":{"format":"double","type":"number"},"CurrencyId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.V4.Workorders.WorkTypeResponse":{"description":"WorkTypeResponse","type":"object","properties":{"Id":{"format":"int32","description":"Id","type":"integer"},"Name":{"description":"Name","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.WorkOrderAnalyticsResponse":{"type":"object","properties":{"IVR":{"description":"Indicates whether the work order has both Check-In and Check-Out records and completes with a Check-Out. **Possible values**: *true*, *false*.","default":false,"type":"boolean"},"SLA":{"description":"Indicates whether the work order met the original ETA. **Possible values**: *true*, *false*, or *null* (if the `Original ETA` or `CheckInTime` is not populated in source data).","default":false,"type":"boolean"},"FirstTimeCompletionFlag":{"format":"int32","description":"Indicates whether the work order was completed on the first visit. **Possible values**: `1` - *Yes*, `0` - *No*.","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.ChangeWoTechnicianCertificateRequest":{"description":"Change Technician Certificate Request","type":"object","properties":{"CertificateId":{"format":"int32","description":"Numeric Id of the technician certificatite","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.AcceptWorkOrderRequest":{"description":"Request model to add a note to the work order while accepting it.","type":"object","properties":{"Note":{"description":"*Optional*. Note text.","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.DeclineWorkOrderRequest":{"description":"Request model to add information about the work order decline","type":"object","properties":{"DeclineReasonId":{"format":"int32","description":"Unique numeric identifier of the work order decline reason. \r\n            <br />**Possible values**: `1` - Can't make ETA, `2` - \tTrade not serviced, `3` - Location not serviced, `4` - Not under warranty, `5` - Other, `6` - NTE too low. \r\n            <br />***Note***: The parameter is required when the *DeclineHistoryWO* feature flag is on.","type":"integer"},"CustomDeclineReason":{"description":"Text explaining the reason for the work order decline. \r\n            <br />***Note***: The parameter is required when the decline reason has AskCustomReason=true.","type":"string"},"Note":{"description":"*Optional*. Note text.","type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.GetGPSRadiusResponse":{"type":"object","properties":{"WorkorderId":{"format":"int32","type":"integer"},"LocationID":{"format":"int32","type":"integer"},"LocLatitude":{"format":"double","type":"number"},"LocLongitude":{"format":"double","type":"number"},"GPSRadius":{"format":"double","type":"number"}}},"ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestNoteRequest":{"description":"Request to create note for a work request","required":["Note"],"type":"object","properties":{"Note":{"description":"Required, Note text","type":"string"},"MailedTo":{"description":"E-mail address(es)","type":"string"},"Visibility":{"format":"int32","type":"integer"},"NotifyFollowers":{"description":"If true email alert will be sent to WO Followers","default":false,"type":"boolean"},"DoNotSendEmail":{"description":"Do Not Send Email flag","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.WorkRequests.AddWorkRequestNoteFollowersRequest":{"required":["FollowersList","UserIds"],"type":"object","properties":{"FollowersList":{"description":"Required, Followers List","type":"string"},"UserIds":{"description":"Required, User Ids","type":"string"}}},"ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestRequest":{"description":"Request to create a work request","type":"object","properties":{"SubscriberId":{"format":"int32","description":"Subscriber Id","type":"integer"},"ProviderId":{"format":"int32","description":"Provider Id","type":"integer"},"EventId":{"description":"Optional. Guid of IoT event. For example, B216E711-420F-4D32-9080-762CBFD4E732","type":"string"},"LocationId":{"format":"int32","description":"Location Id","type":"integer"},"StatusId":{"format":"int32","description":"WorkRequest status Id","type":"integer"},"ExtendedStatusId":{"format":"int32","description":"WorkRequest extended status Id","type":"integer"},"Description":{"description":"Description. Free text.","type":"string"},"TradeId":{"format":"int32","description":"Trade Id","type":"integer"},"CategoryId":{"format":"int32","description":"Catgory Id","type":"integer"},"PriorityId":{"format":"int32","description":"Priority Id","type":"integer"},"Caller":{"description":"Optional. Caller","type":"string"},"CallDate":{"description":"Call date. In UTC","type":"string"},"ScheduledDate":{"description":"Optional. Scheduled date. In UTC","type":"string"},"AssetId":{"format":"int32","description":"Optional. Asset Id","type":"integer"},"Nte":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestNteRequest","description":"Optional. NTE info"},"Issue":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestIssueRequest","description":"Issue info"},"Attachments":{"description":"Optional. Attachments","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestAttachmentRequest"}}}},"ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestNteRequest":{"description":"Request to set NTE for a work request","type":"object","properties":{"Value":{"format":"double","description":"Value","type":"number"},"CurrencyId":{"format":"int32","description":"Currency Id","type":"integer"}}},"ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestIssueRequest":{"description":"Request to set issue parameters for a work request","type":"object","properties":{"AreaId":{"format":"int32","description":"Area Id","type":"integer"},"ProblemType":{"description":"Problem type","type":"string"},"Equipment":{"description":"Equipment","type":"string"},"ProblemCode":{"description":"Problem code","type":"string"},"SetupId":{"format":"int32","description":"Setup(dashboard) Id","type":"integer"}}},"ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestAttachmentRequest":{"description":"Request to add attachments to a work request","type":"object","properties":{"Description":{"description":"Description","type":"string"},"FileName":{"description":"File name of a uploaded attachment. For example, #workorders/0DD13443-EAF4-4A1D-930B-992EFC8ED3E0","type":"string"},"OriginalName":{"description":"Original file name. For example, my-file.pdf","type":"string"},"Visibility":{"format":"int32","description":"Visibility","type":"integer"}}},"ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestResponse":{"description":"Response for work request creation","type":"object","properties":{"Id":{"format":"int32","description":"Id of the created work request","type":"integer"}}},"ServiceChannel.Services.Messaging.WorkRequests.WorkRequest":{"description":"Work Request","type":"object","properties":{"Id":{"format":"int32","description":"Id","type":"integer"},"SubscriberId":{"format":"int32","description":"Subscriber Id","type":"integer"},"SubscriberShortName":{"description":"Subscriber Short Name","type":"string"},"ProviderId":{"format":"int32","description":"Provider Id","type":"integer"},"ProviderShortName":{"description":"Provider Short Name","type":"string"},"LocationId":{"format":"int32","description":"Location Id","type":"integer"},"LocationStoreId":{"description":"Location Store Id","type":"string"},"EventId":{"description":"Event Id","type":"string"},"StatusId":{"format":"int32","description":"Status Id","type":"integer"},"StatusName":{"description":"Status Name","type":"string"},"ExtendedStatusId":{"format":"int32","description":"Extended Status Id","type":"integer"},"ExtendedStatusName":{"description":"Extended Status Name","type":"string"},"ClosedReasonId":{"format":"int32","description":"Closed Reason Id","type":"integer"},"ClosedReasonName":{"description":"Closed Reason Name","type":"string"},"Description":{"description":"Description","type":"string"},"TradeId":{"format":"int32","description":"Trade Id","type":"integer"},"TradeName":{"description":"Trade Name","type":"string"},"CategoryId":{"format":"int32","description":"Category Id","type":"integer"},"CategoryName":{"description":"Category Name","type":"string"},"PriorityId":{"format":"int32","description":"Priority Id","type":"integer"},"PriorityName":{"description":"Priority Name","type":"string"},"Caller":{"description":"Caller","type":"string"},"CallDate":{"format":"date-time","description":"Call Date","type":"string"},"ClosedDate":{"format":"date-time","description":"Closed Date","type":"string"},"ScheduledDate":{"format":"date-time","description":"Scheduled Date","type":"string"},"WorkOrderId":{"format":"int32","description":"Work Order Id","type":"integer"},"AssetId":{"format":"int32","description":"Asset Id","type":"integer"},"Nte":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.WorkRequestNte","description":"NTE"},"Issue":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.WorkRequests.WorkRequestIssue","description":"Issue information"}}},"ServiceChannel.Services.Messaging.WorkRequests.WorkRequestNte":{"description":"Work Request Nte","type":"object","properties":{"Value":{"format":"double","description":"Value","type":"number"},"CurrencyId":{"format":"int32","description":"Currency Id","type":"integer"},"CurrencyAlphabeticCode":{"description":"Currency Alphabetic Code","type":"string"}}},"ServiceChannel.Services.Messaging.WorkRequests.WorkRequestIssue":{"description":"Work Request Issue","type":"object","properties":{"AreaId":{"format":"int32","description":"Area Id","type":"integer"},"AreaName":{"description":"Area Name","type":"string"},"ProblemType":{"description":"Problem Type","type":"string"},"Equipment":{"description":"Equipment","type":"string"},"ProblemCode":{"description":"Problem Code","type":"string"},"SetupId":{"format":"int32","description":"Setup Id","type":"integer"}}},"ServiceChannel.Services.Messaging.WorkRequests.UpdateWorkRequestRequest":{"description":"Request to update a work request properties","type":"object","properties":{"StatusId":{"format":"int32","description":"Status Id","type":"integer"},"ExtendedStatusId":{"format":"int32","description":"Extended Status Id","type":"integer"},"ClosedReasonId":{"format":"int32","description":"Closed Reason Id","type":"integer"},"WorkOrderId":{"format":"int32","description":"Work Order Id","type":"integer"},"PriorityId":{"format":"int32","description":"Priority Id","type":"integer"},"CategoryId":{"format":"int32","description":"Category Id","type":"integer"},"ScheduledDate":{"description":"Scheduled date","type":"string"},"Description":{"description":"Description","type":"string"},"TradeId":{"format":"int32","description":"Trade Id","type":"integer"},"NTE":{"format":"double","description":"NTE value","type":"number"}}},"ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStatusRequest":{"description":"Request to change a work request status","type":"object","properties":{"StatusId":{"format":"int32","description":"WorkRequest status Id","type":"integer"},"ExtendedStatusId":{"format":"int32","description":"WorkRequest extended status Id","type":"integer"}}},"ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestNteRequest":{"description":"Request to change NTE for a work request","type":"object","properties":{"Value":{"format":"double","description":"Value","type":"number"},"CurrencyId":{"format":"int32","description":"Currency Id","type":"integer"}}},"ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStringFieldsRequest":{"description":"Request to update the value of a work request parameter.","type":"object","properties":{"Value":{"description":"Value of the work request parameter to update.","type":"string"}}},"ServiceChannel.Services.Messaging.WorkRequests.ReassignWorkRequestRequest":{"description":"Reassign Work Request to other Provider","type":"object","properties":{"ProviderId":{"format":"int32","description":"Provider id to assign.","type":"integer"},"TradeId":{"format":"int32","description":"Optional, by default current Work Request Trade","type":"integer"},"CurrencyId":{"format":"int32","description":"Optional, by default current Work Request Currency","type":"integer"},"Nte":{"format":"double","description":"Optional Nte value, by default current Work Request NTE","type":"number"},"PriorityId":{"format":"int32","description":"Optional, by default current Work Request Priority","type":"integer"},"ScheduledDate":{"description":"Optional, by default current Work Request ScheduledDate","type":"string"},"CategoryId":{"format":"int32","description":"Optional, by default current Work Request Category","type":"integer"},"Description":{"description":"Optional","type":"string"}}},"ServiceChannel.Services.Messaging.WorkRequests.SearchWorkRequestRequest":{"description":"Object to perform search for work requests","type":"object","properties":{"Ids":{"description":"Ids","type":"array","items":{"format":"int32","type":"integer"}},"SubscriberIds":{"description":"Subscriber Ids","type":"array","items":{"format":"int32","type":"integer"}},"ProviderIds":{"description":"Provider Ids","type":"array","items":{"format":"int32","type":"integer"}},"LocationIds":{"description":"Location Ids","type":"array","items":{"format":"int32","type":"integer"}},"CategoryIds":{"description":"Category Ids","type":"array","items":{"format":"int32","type":"integer"}},"StatusIds":{"description":"Status Ids","type":"array","items":{"format":"int32","type":"integer"}},"ExtendedStatusIds":{"description":"Extended Status Ids","type":"array","items":{"format":"int32","type":"integer"}},"PriorityIds":{"description":"Priority Ids","type":"array","items":{"format":"int32","type":"integer"}},"TradeIds":{"description":"Trade Ids","type":"array","items":{"format":"int32","type":"integer"}},"ClosedReasonIds":{"description":"Closed Reason Ids","type":"array","items":{"format":"int32","type":"integer"}},"EventIds":{"description":"Event Ids","type":"array","items":{"type":"string"}},"WorkOrderIds":{"description":"Work Order Ids","type":"array","items":{"format":"int32","type":"integer"}},"AssetIds":{"description":"Asset Ids","type":"array","items":{"format":"int32","type":"integer"}},"CallDateFrom":{"description":"Minimum Call Date","type":"string"},"CallDateTo":{"description":"Maximum Call Date","type":"string"},"ScheduledDateFrom":{"description":"Minimum Scheduled Date","type":"string"},"ScheduledDateTo":{"description":"Maximum Scheduled Date","type":"string"},"ClosedDateFrom":{"description":"Minimum Closed Date","type":"string"},"ClosedDateTo":{"description":"Maximum Closed Date","type":"string"},"SortField":{"description":"Sort Field","enum":["Id","CallDate","ScheduledDate","ClosedDate"],"type":"string"},"SortDirection":{"description":"Sort direction","enum":["Asc","Desc"],"type":"string"},"Page":{"format":"int32","description":"Page. Zero based","type":"integer"},"PageSize":{"format":"int32","description":"Page Size","type":"integer"}}},"ServiceChannel.Services.Messaging.Rfp.Rfp":{"type":"object","properties":{"Id":{"format":"int32","description":"Gets or sets Id.","type":"integer"},"Number":{"description":"Gets or sets Rfp Number.","type":"string"},"CreatedDate":{"format":"date-time","description":"Gets or sets Rfp Created Date.","type":"string"},"CreatedDateDTO":{"format":"date-time","type":"string"},"Date":{"format":"date-time","description":"Gets or sets Rfp Date.","type":"string"},"DateDTO":{"format":"date-time","type":"string"},"UpdatedDate":{"format":"date-time","description":"Last Update Date","type":"string"},"UpdatedDateDTO":{"format":"date-time","type":"string"},"UserId":{"format":"int32","description":"Gets or sets UserId.","type":"integer"},"WaitingForPrpEmail":{"description":"Gets or sets WaitingForPrpEmail.","type":"string"},"ProviderEmail":{"description":"Gets or sets ProviderEmail.","type":"string"},"Description":{"description":"Gets or sets Description.","type":"string"},"DueHrs":{"format":"double","description":"Gets or sets DueHrs.","type":"number"},"DueDate":{"format":"date-time","description":"Gets or sets DueDate.","type":"string"},"DueDateDTO":{"format":"date-time","type":"string"},"Status":{"description":"Gets or sets Status.","type":"string"},"Location":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.Location"},"Provider":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.Provider","description":"provider"},"Subscriber":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.Subscriber"},"Trade":{"type":"string"},"TradeId":{"format":"int32","type":"integer"},"WorkOrder":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"},"Proposals":{"description":"Gets or sets proposal collection.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.ProposalInfo"}},"Attachments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.Attachment"}},"BatchRfpNumber":{"type":"string"}}},"ServiceChannel.Services.Messaging.Proposals.ProposalInfo":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Number":{"type":"string"},"Description":{"type":"string"},"Description2":{"type":"string"},"Comments":{"type":"string"},"Location":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.Location"},"Provider":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.Provider"},"Subscriber":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.Subscriber"},"Trade":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.Trade"},"WorkOrder":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkOrder"},"Currency":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Currencies.Currency"},"RFP":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Rfp.Rfp"},"CreatedDate":{"format":"date-time","type":"string"},"CreatedDate_dto":{"format":"date-time","type":"string"},"CreatedBy":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.UserInfo"},"SubmittedTo":{"type":"string"},"Status":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.ProposalStatus"},"Attachments":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Attachments.Attachment"}},"AssignedTo":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.UserInfo"},"ScheduledDate":{"format":"date-time","type":"string"},"ScheduledDateDto":{"format":"date-time","type":"string"},"AmountCategories":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.ProposalCategoryInfo"}},"UpdatedDate":{"format":"date-time","description":"Updated Date","type":"string"},"UpdatedDateDto":{"format":"date-time","type":"string"},"Recommendation":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.ProposalRecommendation"},"Amount":{"format":"double","type":"number"},"AssignedFromLevel":{"type":"string"},"AssignedToLevel":{"type":"string"},"LevelsEscalateTo":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.EscalateTo"}},"Actions":{"type":"array","items":{"type":"string"}},"MlpRecommendations":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Proposals.MlpRecommendation"}},"MlpRecommendation":{"$ref":"#/definitions/ServiceChannel.Api.Model.Proposals.MlpRecommendation"},"CurrentProposalMlpRuleSetId":{"format":"int32","type":"integer"},"CurrentProposalMlpRuleSetName":{"type":"string"},"CurrentProposalMlpLevelId":{"format":"int32","type":"integer"},"CurrentProposalMlpLevelName":{"type":"string"},"PoNumber":{"type":"string"},"IsMlpLimitOverrun":{"default":false,"type":"boolean"},"NextLevelEmpty":{"default":false,"type":"boolean"},"Project":{"$ref":"#/definitions/ServiceChannel.Api.Model.Proposals.ProposalProjectSimpleModel"}}},"ServiceChannel.Services.Messaging.Proposals.ProposalStatus":{"type":"object","properties":{"Primary":{"type":"string"},"Extended":{"type":"string"},"ModifiedDate":{"format":"date-time","type":"string"},"ModifiedDate_dto":{"format":"date-time","type":"string"},"ModifiedBy":{"type":"string"}}},"ServiceChannel.Services.Messaging.Proposals.ProposalCategoryInfo":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"TotalCost":{"format":"double","type":"number"}}},"ServiceChannel.Services.Messaging.Proposals.ProposalRecommendation":{"type":"object","properties":{"RecommendationType":{"enum":["None","StrongApprove","Approve","Reject","StrongReject"],"type":"string"},"RecommendationAmounts":{"type":"array","items":{"format":"int64","type":"integer"}},"Currency":{"type":"string"},"Score":{"enum":["None","APlus","A","B","C","D"],"type":"string"},"NegativeFeedbacksRecallsPercent":{"format":"double","type":"number"},"ProviderCompliancePercent":{"format":"double","type":"number"},"ProposalId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Proposals.EscalateTo":{"type":"object","properties":{"Action":{"type":"string"},"EscalateToLevel":{"type":"string"},"EscalateToLevelId":{"format":"int32","type":"integer"},"SkippedOverLimit":{"default":false,"type":"boolean"},"HasActiveUsers":{"default":false,"type":"boolean"},"DisabledUserIds":{"type":"array","items":{"format":"int32","type":"integer"}},"EscalateToLevelRule":{"$ref":"#/definitions/ServiceChannel.Api.Model.Proposals.MlpLevelRule"}}},"ServiceChannel.Api.Model.Proposals.MlpRecommendation":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"ProposalId":{"format":"int32","type":"integer"},"UserId":{"format":"int32","type":"integer"},"Status":{"type":"string"},"WoType":{"enum":["Origin","New","Existing"],"type":"string"},"OriginalTrackingNumber":{"format":"int32","type":"integer"},"SelectedTrackingNumber":{"format":"int32","type":"integer"},"GeneratedTrackingNumber":{"format":"int32","type":"integer"},"PoNumber":{"type":"string"},"Category":{"type":"string"},"CategoryId":{"format":"int32","type":"integer"},"ApprovalCode":{"type":"string"},"Priority":{"type":"string"},"RejectCodeId":{"format":"int32","type":"integer"},"ApprovalReason":{"type":"string"},"EmailsToNotify":{"type":"string"},"Applied":{"default":false,"type":"boolean"},"EmailMyself":{"default":false,"type":"boolean"},"MyEmail":{"type":"string"},"NotSavedRecommendation":{"default":false,"type":"boolean"},"WorkOrderLabel":{"$ref":"#/definitions/ServiceChannel.Api.Model.Label"},"Comment":{"type":"string"}}},"ServiceChannel.Api.Model.Proposals.ProposalProjectSimpleModel":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"}}},"ServiceChannel.Api.Model.Proposals.MlpLevelRule":{"type":"object","properties":{"LevelId":{"format":"int32","type":"integer"},"Actions":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Api.Model.Proposals.MlpRuleAction"}},"LevelName":{"type":"string"},"ForwardTo":{"format":"int32","type":"integer","readOnly":true},"Override":{"default":false,"type":"boolean"},"SkipOverLimit":{"default":false,"type":"boolean"},"ActionNotification":{"default":false,"type":"boolean"},"Action":{"type":"string"},"StatusTo":{"type":"string"},"AutoEscalate":{"format":"int32","type":"integer"},"Limit":{"format":"double","type":"number"},"RuleOrder":{"format":"int32","type":"integer"},"ForwardToName":{"type":"string"}}},"ServiceChannel.Api.Model.Proposals.MlpRuleAction":{"type":"object","properties":{"Name":{"type":"string"},"Limit":{"format":"double","type":"number"},"ForwardTo":{"format":"int32","type":"integer"},"ForwardToLevelName":{"type":"string"},"EndStatus":{"type":"string"},"AutoEscalateInDays":{"format":"int32","type":"integer"},"EntryLevel":{"default":false,"type":"boolean"},"CodeChange":{"default":false,"type":"boolean"},"CategoryChange":{"default":false,"type":"boolean"},"LevelId":{"format":"int32","type":"integer"},"LevelName":{"type":"string"},"RuleNumber":{"format":"int32","type":"integer"},"RuleOrder":{"format":"int32","type":"integer"},"Id":{"format":"int32","type":"integer"},"RuleSetId":{"format":"int32","type":"integer"},"Override":{"default":false,"type":"boolean"},"SkipOverLimit":{"default":false,"type":"boolean"},"ActionNotification":{"default":false,"type":"boolean"},"LocationId":{"format":"int32","type":"integer"},"UserId":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Workorders.WorkActivity":{"description":"Work activity object.","type":"object","properties":{"Id":{"format":"int32","description":"The unique numeric identifier of the work activity.","type":"integer"},"WorkOrderId":{"format":"int32","description":"The unique numeric identifier of the work order for which the work activity was reported.","type":"integer"},"TimeIn":{"format":"date-time","description":"The date and time when the technician started work on the service request.","type":"string"},"TimeOut":{"format":"date-time","description":"The date and time when the technician finished work on the service request.","type":"string"},"IsTimeEdited":{"description":"Indicates if the time of the labor performed was modified.","default":false,"type":"boolean"},"User":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.UserInfo","description":"The detailed info about the user who performed a check-in."},"CallerId":{"description":"Possible values:\r\n            a) The GPS coordinates of the location where the technician performed the most recent action — either check-in or check-out — via the ServiceChannel Provider mobile app.\r\n            b) The phone number of the technician from which they performed the most recent action — either check-in or check-out — using the IVR (Interactive Voice Response) system.\r\n            c) Null value if the work activity was entered manually.","type":"string"},"ResolutionCode":{"description":"The most recent status assigned to the work order by the technician.","type":"string"},"WorkType":{"description":"The type of activity performed: *Repair* or *Travel*. Other values may be returned if custom types are set up for the subscriber.","type":"string"},"HasCheckInInfo":{"description":"Indicates if a check-in was performed for the work activity.","default":false,"type":"boolean"},"HasCheckListResponse":{"description":"Indicates if the technician answered checklist questions.","default":false,"type":"boolean"},"TechsCount":{"format":"int32","description":"The number of technicians who performed the work.","type":"integer"},"Name":{"description":"The technician performed the work.","type":"string"},"CreatedBy":{"format":"int32","description":"The user who created the labor.","type":"integer"}}},"ServiceChannel.Services.Messaging.Providers.ReviewedProvider":{"description":"A provider entity with common reviews information\r\n            and the current user feedback","type":"object","properties":{"ReviewsInfo":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.ReviewsInfo","description":"Stores common provider reviews information."},"MyFeedback":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.ProviderFeedback","description":"Stores a feedback left by the current user."},"Phone":{"type":"string"},"FullName":{"description":"Full Name","type":"string"},"Address1":{"description":"Address1","type":"string"},"Address2":{"description":"Adress2","type":"string"},"City":{"description":"City","type":"string"},"State":{"description":"State","type":"string"},"Zip":{"description":"Zip","type":"string"},"Country":{"description":"Country","type":"string"},"MainContact":{"description":"Main Contact","type":"string"},"DateCreated":{"format":"date-time","description":"Date Created","type":"string"},"LastUserDate":{"description":"Last User Date","type":"string"},"SuperUser":{"description":"SuperUser","type":"string"},"WebSite":{"description":"WebSite","type":"string"},"Email":{"description":"Email","type":"string"},"TaxId":{"description":"Tax Id","type":"string"},"Trade":{"description":"Trade","type":"string"},"ProcessingEmail":{"description":"Processing Email","type":"string"},"FaxNumber":{"description":"Fax Number","type":"string"},"SuiteFloor":{"description":"Suite Floor","type":"string"},"MailInfo":{"description":"Mail Info","type":"string"},"ImageFile":{"description":"Image File","type":"string"},"ReturnMail":{"description":"Return Mail","type":"string"},"MailFrequency":{"format":"int32","description":"Mail Frequency","type":"integer"},"FormId":{"format":"int32","description":"Form Id","type":"integer"},"Pager":{"description":"Pager","type":"string"},"NightRequest":{"format":"int32","description":"NightRequest","type":"integer"},"ShortFormatEmail":{"description":"Short Format Email","type":"string"},"LastTrainingDate":{"format":"date-time","description":"Last Training Date","type":"string"},"LastTrainingDateStr":{"description":"Last Training Date as a string","type":"string"},"IsInternal":{"description":"Is Internal","default":false,"type":"boolean"},"IsOnOffShoreFeatureEnabled":{"description":"Is OnOffShoreFeature Enabled","default":false,"type":"boolean"},"Id":{"format":"int32","description":"Id","type":"integer"},"Name":{"description":"Name","type":"string"},"DoNotDispatch":{"description":"DoNotDispatch enabled?","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Feedback.ReviewsInfo":{"description":"A container to hold common provider reviews information.","type":"object","properties":{"AverageRating":{"format":"double","description":"An average rating based on some reviews.","type":"number"},"ReviewsNumber":{"format":"int32","description":"A reviews number.","type":"integer"},"RecentReviewDate":{"format":"date-time","description":"A recent review date","type":"string"}}},"ServiceChannel.Services.Messaging.Feedback.ProviderFeedback":{"description":"A feedback given to a certain provider.","type":"object","properties":{"Id":{"format":"int32","description":"Gets or sets a feedback id.","type":"integer"},"StarScore":{"format":"int32","description":"Gets or sets a star score.","type":"integer"},"Comment":{"description":"Gets or sets a comment.","type":"string"},"Date":{"format":"date-time","description":"Gets or sets a date when the feedback was left.","type":"string"}}},"ServiceChannel.Services.Messaging.Providers.DetailedProvider":{"description":"Provider with detailed information according to the current subscriber.","type":"object","properties":{"Contracts":{"description":"Contracts provider working at for the current subscriber.","type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Contracts.Contract"}},"ReviewsInfo":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.ReviewsInfo","description":"Provider reviews information."},"MyProviderReview":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.UserReview","description":"My review for the current provider."},"ContactEmail":{"description":"Provider Contact email.","type":"string"},"Phone":{"type":"string"},"FullName":{"description":"Full Name","type":"string"},"Address1":{"description":"Address1","type":"string"},"Address2":{"description":"Adress2","type":"string"},"City":{"description":"City","type":"string"},"State":{"description":"State","type":"string"},"Zip":{"description":"Zip","type":"string"},"Country":{"description":"Country","type":"string"},"MainContact":{"description":"Main Contact","type":"string"},"DateCreated":{"format":"date-time","description":"Date Created","type":"string"},"LastUserDate":{"description":"Last User Date","type":"string"},"SuperUser":{"description":"SuperUser","type":"string"},"WebSite":{"description":"WebSite","type":"string"},"Email":{"description":"Email","type":"string"},"TaxId":{"description":"Tax Id","type":"string"},"Trade":{"description":"Trade","type":"string"},"ProcessingEmail":{"description":"Processing Email","type":"string"},"FaxNumber":{"description":"Fax Number","type":"string"},"SuiteFloor":{"description":"Suite Floor","type":"string"},"MailInfo":{"description":"Mail Info","type":"string"},"ImageFile":{"description":"Image File","type":"string"},"ReturnMail":{"description":"Return Mail","type":"string"},"MailFrequency":{"format":"int32","description":"Mail Frequency","type":"integer"},"FormId":{"format":"int32","description":"Form Id","type":"integer"},"Pager":{"description":"Pager","type":"string"},"NightRequest":{"format":"int32","description":"NightRequest","type":"integer"},"ShortFormatEmail":{"description":"Short Format Email","type":"string"},"LastTrainingDate":{"format":"date-time","description":"Last Training Date","type":"string"},"LastTrainingDateStr":{"description":"Last Training Date as a string","type":"string"},"IsInternal":{"description":"Is Internal","default":false,"type":"boolean"},"IsOnOffShoreFeatureEnabled":{"description":"Is OnOffShoreFeature Enabled","default":false,"type":"boolean"},"Id":{"format":"int32","description":"Id","type":"integer"},"Name":{"description":"Name","type":"string"},"DoNotDispatch":{"description":"DoNotDispatch enabled?","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Feedback.UserReview":{"description":"A container to hold user review information.","type":"object","properties":{"Id":{"format":"int32","description":"Review id","type":"integer"},"StarScore":{"format":"int32","description":"User's star score","type":"integer"},"ReviewedDate":{"format":"date-time","description":"Date of last changes of user review in database","type":"string"},"Comment":{"description":"Review comment","type":"string"}}},"ServiceChannel.Services.Messaging.Providers.ExtendedReviewedProvider":{"description":"A provider entity with common reviews information","type":"object","properties":{"ReviewsInfo":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.ReviewsInfo","description":"Stores common provider reviews information."},"MyProviderReview":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Feedback.UserReview","description":"Whether the provider has the current user review or not."},"AnyMyReviews":{"description":"Whether the provider has any reviews with current user","default":false,"type":"boolean"},"Trades":{"description":"Trades which the provider serves for the current subscriber.","type":"array","items":{"type":"string"}},"Phone":{"type":"string"},"FullName":{"description":"Full Name","type":"string"},"Address1":{"description":"Address1","type":"string"},"Address2":{"description":"Adress2","type":"string"},"City":{"description":"City","type":"string"},"State":{"description":"State","type":"string"},"Zip":{"description":"Zip","type":"string"},"Country":{"description":"Country","type":"string"},"MainContact":{"description":"Main Contact","type":"string"},"DateCreated":{"format":"date-time","description":"Date Created","type":"string"},"LastUserDate":{"description":"Last User Date","type":"string"},"SuperUser":{"description":"SuperUser","type":"string"},"WebSite":{"description":"WebSite","type":"string"},"Email":{"description":"Email","type":"string"},"TaxId":{"description":"Tax Id","type":"string"},"Trade":{"description":"Trade","type":"string"},"ProcessingEmail":{"description":"Processing Email","type":"string"},"FaxNumber":{"description":"Fax Number","type":"string"},"SuiteFloor":{"description":"Suite Floor","type":"string"},"MailInfo":{"description":"Mail Info","type":"string"},"ImageFile":{"description":"Image File","type":"string"},"ReturnMail":{"description":"Return Mail","type":"string"},"MailFrequency":{"format":"int32","description":"Mail Frequency","type":"integer"},"FormId":{"format":"int32","description":"Form Id","type":"integer"},"Pager":{"description":"Pager","type":"string"},"NightRequest":{"format":"int32","description":"NightRequest","type":"integer"},"ShortFormatEmail":{"description":"Short Format Email","type":"string"},"LastTrainingDate":{"format":"date-time","description":"Last Training Date","type":"string"},"LastTrainingDateStr":{"description":"Last Training Date as a string","type":"string"},"IsInternal":{"description":"Is Internal","default":false,"type":"boolean"},"IsOnOffShoreFeatureEnabled":{"description":"Is OnOffShoreFeature Enabled","default":false,"type":"boolean"},"Id":{"format":"int32","description":"Id","type":"integer"},"Name":{"description":"Name","type":"string"},"DoNotDispatch":{"description":"DoNotDispatch enabled?","default":false,"type":"boolean"}}},"ServiceChannel.Services.Messaging.Proposals.ProposalCategory":{"type":"object","properties":{"IsLocked":{"default":false,"type":"boolean"},"DefaultHideDetails":{"default":false,"type":"boolean"},"Description":{"type":"string"},"IsActive":{"default":false,"type":"boolean"},"SortOrder":{"format":"int32","type":"integer"},"Columns":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.ProposalCategoryColumn"}},"Rows":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.ProposalCategoryRow"}},"Questions":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.ProposalQuestion"}},"Id":{"format":"int32","type":"integer"},"Name":{"type":"string"},"TotalCost":{"format":"double","type":"number"}}},"ServiceChannel.Services.Messaging.Proposals.ProposalCategoryColumn":{"type":"object","properties":{"DataField":{"type":"string"},"DataType":{"type":"string"},"IsDescriptionColumn":{"default":false,"type":"boolean"},"IsMarkUpColumn":{"default":false,"type":"boolean"},"IsUserReservedColumn":{"default":false,"type":"boolean"},"Name":{"type":"string"},"Description":{"type":"string"},"IsActive":{"default":false,"type":"boolean"},"SortOrder":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.Proposals.ProposalCategoryRow":{"type":"object","properties":{"Required":{"default":false,"type":"boolean"},"HideDetails":{"default":false,"type":"boolean"},"TotalCost":{"format":"double","type":"number"},"ServiceType":{"type":"string"},"Name":{"type":"string"},"Description":{"type":"string"},"IsActive":{"default":false,"type":"boolean"},"SortOrder":{"format":"int32","type":"integer"},"Quantity1":{"format":"double","type":"number"},"Quantity2":{"format":"int32","type":"integer"},"UnitCost":{"format":"double","type":"number"},"UnitOfMeasure":{"type":"string"},"ExtendedCost":{"format":"double","type":"number"},"Craft":{"type":"string"},"RepairCategory":{"type":"string"},"RepairType":{"type":"string"},"MaterialThickness":{"type":"string"},"Markup":{"format":"double","type":"number"},"PriceList":{"type":"string"},"PartNumber":{"type":"string"},"PartName":{"type":"string"},"VAT":{"type":"string"},"FeesType":{"type":"string"}}},"ServiceChannel.Services.Messaging.Proposals.ProposalQuestion":{"type":"object","properties":{"IsRequired":{"default":false,"type":"boolean"},"IsMultipleChoiceAllowed":{"default":false,"type":"boolean"},"AnswerType":{"type":"string"},"TextValue":{"type":"string"},"Name":{"type":"string"},"Description":{"type":"string"},"IsActive":{"default":false,"type":"boolean"},"SortOrder":{"format":"int32","type":"integer"},"Options":{"type":"array","items":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Proposals.ProposalQuestionOption"}}}},"ServiceChannel.Services.Messaging.Proposals.ProposalQuestionOption":{"type":"object","properties":{"IsDefault":{"default":false,"type":"boolean"},"AnswerTextValue":{"type":"string"},"IsChosen":{"default":false,"type":"boolean"},"Name":{"type":"string"},"Description":{"type":"string"},"IsActive":{"default":false,"type":"boolean"},"SortOrder":{"format":"int32","type":"integer"}}},"ServiceChannel.Services.Messaging.ProviderAssignments.ProviderAssignment":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Rank":{"format":"int32","type":"integer"},"CreatedDate":{"format":"date-time","type":"string"},"UpdatedDate":{"format":"date-time","type":"string"},"Provider":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Providers.Provider"},"Subscriber":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Subscribers.Subscriber"},"Trade":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Trade.Trade"},"Location":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Location.Location"}}},"Amazon.Runtime.Internal.ErrorResponse":{"type":"object","properties":{"Type":{"enum":["Sender","Receiver","Unknown"],"type":"string"},"Code":{"type":"string"},"Message":{"type":"string"},"RequestId":{"type":"string"},"InnerException":{"$ref":"#/definitions/System.Object"},"StatusCode":{"enum":["Continue","SwitchingProtocols","OK","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultipleChoices","Ambiguous","MovedPermanently","Moved","Found","Redirect","SeeOther","RedirectMethod","NotModified","UseProxy","Unused","TemporaryRedirect","RedirectKeepVerb","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","RequestEntityTooLarge","RequestUriTooLong","UnsupportedMediaType","RequestedRangeNotSatisfiable","ExpectationFailed","UpgradeRequired","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported"],"type":"string"}}},"ServiceChannel.Services.Messaging.Workorders.CheckInIActivity":{"type":"object","properties":{"Id":{"format":"int32","type":"integer"},"Date":{"format":"date-time","type":"string"},"Dto":{"format":"date-time","type":"string"},"User":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Users.UserInfo"},"CallerId":{"type":"string"},"Action":{"type":"string"},"StatusChangedTo":{"$ref":"#/definitions/ServiceChannel.Services.Messaging.Workorders.WorkorderStatusDescriptor"},"WorkType":{"type":"string"},"StatusNew":{"type":"string"},"Dnis":{"type":"string"},"CheckInOutType":{"enum":["Common","Ivr","Gps"],"type":"string"},"SignatureAttachmentId":{"format":"int32","type":"integer"},"SignatureAttachmentName":{"type":"string"},"SignatureAttachmentFullName":{"type":"string"},"UnableObtainSignatureNoteId":{"format":"int32","type":"integer"},"UnableObtainSignatureNote":{"type":"string"}}},"System.Net.Http.ByteArrayContent":{"type":"object","properties":{"Headers":{"type":"array","items":{"$ref":"#/definitions/System.Collections.Generic.KeyValuePair[System.String,System.Collections.Generic.IEnumerable[System.String]]"},"readOnly":true}}},"System.Collections.Generic.KeyValuePair[System.String,System.Collections.Generic.IEnumerable[System.String]]":{"type":"object","properties":{"Key":{"type":"string","readOnly":true},"Value":{"type":"array","items":{"type":"string"},"readOnly":true}}}},"securityDefinitions":{"oauth2":{"type":"oauth2","description":"OAuth2 Authorization","flow":"accessCode","authorizationUrl":"https://sb2login.servicechannel.com/oauth/authorize","tokenUrl":"https://sb2login.servicechannel.com/oauth/token","scopes":{}}},"security":[{"oauth2":[]}]}