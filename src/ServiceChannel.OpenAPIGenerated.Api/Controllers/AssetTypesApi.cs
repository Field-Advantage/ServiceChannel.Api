/*
 * ServiceChannel API - v.3
 *
 * The ServiceChannel API is a RESTful and stateless API. It accepts standard HTTP verbs and supports OAuth 2.0 for authorizing requests.      Our API returns common HTTP status codes as well as JSON encapsulated data.      See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/) for the intro to ServiceChannel API.<br>      <h3>Authentication and Authorization</h3>You should have a ServiceChannel account, register your application, and obtain `access_token` to integrate with our API.      See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/) for more information.      To use this API playground, click **Authorize** and sign in to ServiceChannel.<br>      <h3>Environment</h3> All calls in this API Reference point to the **SB2 environment**.      See [Environments](https://developer.servicechannel.com/basics/general/environments/) for more information.<br>      <h3>API Version</h3>The current stable version of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix that should be present.      When you omit the version prefix, calls point to the minimum supported version of the API.      We recommend you to always specify the API version to avoid possible errors.
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using ServiceChannel.OpenAPIGenerated.Api.Attributes;
using ServiceChannel.OpenAPIGenerated.Api.Models;

namespace ServiceChannel.OpenAPIGenerated.Api.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class AssetTypesApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <response code="200">Request succeeded and the requested information is in the response.</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        [HttpGet]
        [Route("/v3/AssetTypes")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<SCServiceChannelServicesMessagingAssetsAssetType>))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypes();

        /// <summary>
        /// Get Asset Types For Create By TradeId
        /// </summary>
        /// <param name="tradeId"></param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        [HttpGet]
        [Route("/v3/AssetTypes/asettypes/AssetTypesForCreate")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Object))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesAsettypesAssetTypesForCreatetradeIdtradeId([FromQuery (Name = "tradeId")][Required()]int tradeId);

        /// <summary>
        /// Get Asset Type Brands
        /// </summary>
        /// <param name="assetTypeId"></param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        [HttpGet]
        [Route("/v3/AssetTypes/asettypes/GetAssetTypeBrandsAsync/{assetTypeId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Object))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesAsettypesGetAssetTypeBrandsAsyncassetTypeId([FromRoute (Name = "assetTypeId")][Required]int assetTypeId);

        /// <summary>
        /// Get Asset Types With Create Permission
        /// </summary>
        /// <param name="subscriberId"></param>
        /// <param name="tradeId"></param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        [HttpGet]
        [Route("/v3/AssetTypes/asettypes/GetAssetTypesWithCreatePermission")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Object))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesAsettypesGetAssetTypesWithCreatePermissionsubscriberIdsubscriberIdtradeIdtradeId([FromQuery (Name = "subscriberId")][Required()]int subscriberId, [FromQuery (Name = "tradeId")]int? tradeId);

        /// <summary>
        /// Get Primary Asset Type Brands
        /// </summary>
        /// <param name="primaryAssetTypeId"></param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        [HttpGet]
        [Route("/v3/AssetTypes/asettypes/GetPrimaryAssetTypeBrandsAsync/{primaryAssetTypeId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Object))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesAsettypesGetPrimaryAssetTypeBrandsAsyncprimaryAssetTypeId([FromRoute (Name = "primaryAssetTypeId")][Required]int primaryAssetTypeId);

        /// <summary>
        /// Get Primary Asset Types
        /// </summary>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        [HttpGet]
        [Route("/v3/AssetTypes/asettypes/GetPrimaryAssetTypesAsync")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Object))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesAsettypesGetPrimaryAssetTypesAsync();

        /// <summary>
        /// Update an asset type meter
        /// </summary>
        /// <remarks>Modifies information of an already existing asset type meter.              &lt;br /&gt;**Note**. All request parameters should be filled out: those you want to add or edit along with the parameters you want to leave unchanged.              &lt;br /&gt;**Example Request**                                   PUT /AssetTypes/AssetTypeMeter                     {                         \&quot;Id\&quot;: 16,                         \&quot;Name\&quot;: \&quot;Music System\&quot;,                         \&quot;MaxValue\&quot;: \&quot;500.00\&quot;,                         \&quot;Notes\&quot;: ,                         \&quot;Inactive\&quot;: false,                         \&quot;EditOnWO\&quot;: true,                         \&quot;AssetTypeId\&quot;: 7632,                         \&quot;UnitOfMeasure\&quot;: 250                     }</remarks>
        /// <param name="request">Request to add or update the asset type meter details.</param>
        /// <response code="200">The asset type meter is successfully updated.</response>
        /// <response code="400">The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.              &lt;br/&gt; Failed to Update Asset Type Meter</response>
        /// <response code="500">The server was unable to complete the request due to an internal error.              &lt;br/&gt;Error codes:              501 — Object reference not set to an instance of an object</response>
        [HttpPut]
        [Route("/v3/AssetTypes/AssetTypeMeter")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesAssetTypeMeter([FromBody]SCServiceChannelServicesMessagingAssetsAssetTypeMeterRequestItem request);

        /// <summary>
        /// Add an asset type meter
        /// </summary>
        /// <remarks>Creates a new asset type meter for a particular asset type for the current subscriber.</remarks>
        /// <param name="request">Request to add an asset type meter.               &lt;br /&gt;Pass the following parameters in the request:              &lt;br /&gt; • **Id** (*Required*). Enter 0 or null so that when the asset type meter is created the system can assign a unique numeric ID to it.              &lt;br /&gt; • **Name** (*Required*). Name of an asset type meter.              &lt;br /&gt; • **Notes**. Comments provided by a user who added the asset type meter.              &lt;br /&gt; • **Inactive**. Set the asset type meter to the active on inactive status. Valid values: *true*, *false* or 1 - true, 0 - false.              &lt;br /&gt; • **EditOnWO**. Define whether technicians are allowed to enter data on work orders for the asset. Valid values: *true*, *false* or 1 - true, 0 - false.              &lt;br /&gt; • **AssetTypeId** (*Required*). ID of an asset type to assign the meter to.              &lt;br /&gt; • **UnitOfMeasure** (*Required*). Unique numeric identifier of a unit of measurement in the system.</param>
        /// <response code="200">The asset type meter is successfully added.</response>
        /// <response code="400">The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.              &lt;br/&gt; Failed to Create Asset Type Meter</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions</response>
        /// <response code="500">The server was unable to complete the request due to an internal error.              &lt;br/&gt;Error codes:              501 — Object reference not set to an instance of an object</response>
        [HttpPost]
        [Route("/v3/AssetTypes/AssetTypeMeter")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesAssetTypeMeter_0([FromBody]SCServiceChannelServicesMessagingAssetsAssetTypeMeterRequestItem request);

        /// <summary>
        /// Get an asset type meter details
        /// </summary>
        /// <remarks>Returns the details of the specified asset type meter for the current subscriber.</remarks>
        /// <param name="assetTypeMeterId">Unique numeric identifier of the asset type meter you want to get the details of.              &lt;br /&gt;Pass the [GET /AssetTypes/AssetTypeMeters/{assetTypeId}](https://developer.servicechannel.com/swagger/ui/index?version&#x3D;3#/AssetTypes/GETv3_AssetTypes_AssetTypeMeters__assetTypeId_) method to acquire an ID of an asset type meter.</param>
        /// <response code="200">The asset type meter details are in the response.</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions</response>
        /// <response code="404">The request URI is incorrect, or the resource does not exist.</response>
        [HttpGet]
        [Route("/v3/AssetTypes/AssetTypeMeter/{assetTypeMeterId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(SCServiceChannelServicesMessagingAssetsAssetTypeMeterResponseItem))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesAssetTypeMeterassetTypeMeterId([FromRoute (Name = "assetTypeMeterId")][Required]int assetTypeMeterId);

        /// <summary>
        /// Get asset type meters
        /// </summary>
        /// <remarks>Returns a list of meters and their parameters associated with an asset type and created by the current subscriber.              &lt;br /&gt;You can get the details for a particular level by using the [GET/AssetTypes/AssetTypeMeter/{assetTypeMeterId}](https://developer.servicechannel.com/swagger/ui/index?version&#x3D;3#/AssetTypes/GETv3_AssetTypes_AssetTypeMeter__assetTypeMeterId_) method.              &lt;br /&gt;Learn more about [asset meter reading](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/834469973/Asset+Meter+Reading) in ServiceChannel University.</remarks>
        /// <param name="assetTypeId">Unique numeric identifier of the asset type you want to get information on. Send the [GET /AssetTypes](https://developer.servicechannel.com/swagger/ui/index?version&#x3D;3#/AssetTypes/GETv3_AssetTypes) request to get an asset type ID.</param>
        /// <response code="200">The requested asset type meters are in the response.</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions</response>
        /// <response code="404">The request URI is incorrect, or the resource does not exist.</response>
        [HttpGet]
        [Route("/v3/AssetTypes/AssetTypeMeters/{assetTypeId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<SCServiceChannelServicesMessagingAssetsAssetTypeMeterResponseItem>))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesAssetTypeMetersassetTypeId([FromRoute (Name = "assetTypeId")][Required]int assetTypeId);

        /// <summary>
        /// Get asset categories by tradeId
        /// </summary>
        /// <remarks>Returns a list of asset categories associated with the specified trade.              &lt;br /&gt;              ***Note***:  This method retrieves asset categories from the standardized list, that is why asset categories may contain asset types and may not. To get asset categories containing asset types that belong to the certain trade, pass the [POST /AssetTypes/GetSubscriberAssetTypeCategories](https://developer.servicechannel.com/swagger/ui/index?version&#x3D;3#/AssetTypes/POSTv3_AssetTypes_GetSubscriberAssetTypeCategories) method.              &lt;br /&gt;              For more information, refer to [Adding Asset Category and Asset Types](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/2523693743/Adding+Asset+Category+and+Asset+Types) in ServiceChannel University.</remarks>
        /// <param name="tradeId">Unique numeric identifier of the trade.               Pass the [GET / AssetTypes](https://developer.servicechannel.com/swagger/ui/index?version&#x3D;3#/AssetTypes/GETv3_AssetTypes) or [GET /assets/{assetId}](https://developer.servicechannel.com/swagger/ui/index?version&#x3D;3#/Assets/GETv3_assets__assetId__locationId__locationId__storeId__storeId__tagId__tagId__trackingNumber__trackingNumber_) method to retrieve &#x60;tradeId&#x60;.</param>
        /// <response code="200">Asset categories are in the response.</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions</response>
        /// <response code="404">The request URI is incorrect, or the resource does not exist.</response>
        /// <response code="500">Something went wrong, and the server was unable to complete your request.              &lt;br/&gt;Error codes:              501 — Object reference is not set to an instance of an object</response>
        [HttpGet]
        [Route("/v3/AssetTypes/AssetTypes/AssetCategoriesByTradeId/{tradeId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<SCServiceChannelServicesMessagingAssetsAssetTypeCategory>))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesAssetTypesAssetCategoriesByTradeIdtradeId([FromRoute (Name = "tradeId")][Required]int tradeId);

        /// <summary>
        /// Add AssetTypeGroup Attachments
        /// </summary>
        /// <param name="assetGroupId"></param>
        /// <param name="file">File to attach to AssetTypeGroup</param>
        /// <response code="200">Created indicates that the request resulted in a new resource created before the response was sent.</response>
        /// <response code="400">Bad Request - the request could not be executed or was missing required parameters.              &lt;br/&gt;Error codes:              502 — AssetTypeGroup Not found;              503 — Bad Request;</response>
        /// <response code="401">Indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        /// <response code="500">Indicates that a generic error has occurred on the server.</response>
        [HttpPost]
        [Route("/v3/AssetTypes/assets/{assetGroupId}/groupattachments")]
        [Consumes("multipart/form-data")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(SCServiceChannelServicesMessagingAssetsAddAssetTypeGroupAttachmentResponse))]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesAssetsassetGroupIdGroupattachments([FromRoute (Name = "assetGroupId")][Required]int assetGroupId, [Required()]IFormFile file);

        /// <summary>
        /// 
        /// </summary>
        /// <param name="ids"></param>
        /// <response code="200">Request succeeded and the requested information is in the response.</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        [HttpGet]
        [Route("/v3/AssetTypes/byids")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(SCServiceChannelServicesMessagingAssetsAssetType))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesByidsids0ids0ids1ids1([FromQuery (Name = "ids")][Required()]List<int> ids);

        /// <summary>
        /// 
        /// </summary>
        /// <param name="assetTypeId"></param>
        /// <response code="200">Request succeeded and the requested information is in the response.</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        /// <response code="404">Bad Request - the request could not be understood or was missing required parameters.              &lt;br/&gt;Error codes:              502 — Asset Type not found.</response>
        [HttpGet]
        [Route("/v3/AssetTypes/GetAssetTypeAttributes/{assetTypeId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<SCServiceChannelServicesMessagingAssetsAssetTypeAttributeExternal>))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesGetAssetTypeAttributesassetTypeId([FromRoute (Name = "assetTypeId")][Required]int assetTypeId);

        /// <summary>
        /// Get asset categories by AssetIds
        /// </summary>
        /// <remarks>Returns an asset category that contains the specified asset.</remarks>
        /// <param name="request">Request model to retrieve a list of asset categories.</param>
        /// <response code="200">Asset categories are in the response.</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions</response>
        /// <response code="500">Something went wrong, and the server was unable to complete your request.              &lt;br/&gt;Error codes:              501 — Object reference not set to an instance of an object              501 — Unable to create a null constant value. Only entity types, enumeration types, or primitive types are supported in this context</response>
        [HttpPost]
        [Route("/v3/AssetTypes/GetAssetTypeCategoriesByAssetIds")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Dictionary<string, SCServiceChannelServicesMessagingAssetsAssetTypeCategory>))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesGetAssetTypeCategoriesByAssetIds([FromBody]SCServiceChannelServicesMessagingGetByIdsRequest request);

        /// <summary>
        /// Get asset categories by Ids
        /// </summary>
        /// <remarks>Returns asset categories names based on their numeric identifiers.              &lt;br /&gt;              ***Note***: To get all asset categories, send the request without specifying any Id. Asset categories from the list may contain asset types or may be empty, as this method retrieves asset categories from the standardized list.</remarks>
        /// <param name="request">Request model to retrieve asset categories names.</param>
        /// <response code="200">Asset categories names are in the response.</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions</response>
        /// <response code="500">Something went wrong, and the server was unable to complete your request.              &lt;br/&gt;Error codes:              501 — Object reference is not set to an instance of an object</response>
        [HttpPost]
        [Route("/v3/AssetTypes/GetAssetTypeCategoriesByIds")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(SCServiceChannelServicesMessagingAssetsAssetTypeCategory))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesGetAssetTypeCategoriesByIds([FromBody]SCServiceChannelServicesMessagingGetByIdsRequest request);

        /// <summary>
        /// Get asset type groups by SubscriberId
        /// </summary>
        /// <remarks>Returns a list of asset type groups for the specified subscriber.</remarks>
        /// <param name="subscriberId">Unique numeric identifier of the subscriber.</param>
        /// <response code="200">Asset type groups are in the response.</response>
        /// <response code="400">The request was not accepted due to bad syntax, missing parameters, insufficient data, etc.              &lt;br/&gt;Error codes:              503 — Bad Request</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions</response>
        /// <response code="500">Something went wrong, and the server was unable to complete your request.              &lt;br/&gt;Error codes:              501 — Object reference is not set to an instance of an object</response>
        [HttpGet]
        [Route("/v3/AssetTypes/GetAssetTypeGroups")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<SCServiceChannelServicesMessagingAssetTypesAssetTypeGroup>))]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesGetAssetTypeGroupssubscriberIdsubscriberId([FromQuery (Name = "subscriberId")]int? subscriberId);

        /// <summary>
        /// 
        /// </summary>
        /// <param name="assetTypeId"></param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        /// <response code="404">Bad Request - the request could not be understood or was missing required parameters.              &lt;br/&gt;Error codes:              502 — Asset Type not found.</response>
        [HttpGet]
        [Route("/v3/AssetTypes/GetAssetTypeTrades/{assetTypeId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Object))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesGetAssetTypeTradesassetTypeId([FromRoute (Name = "assetTypeId")][Required]int assetTypeId);

        /// <summary>
        /// 
        /// </summary>
        /// <param name="subscriberId"></param>
        /// <param name="tradeId"></param>
        /// <response code="200">Request succeeded and the requested information is in the response.</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        /// <response code="404">Bad Request - the request could not be understood or was missing required parameters.              &lt;br/&gt;Error codes:              502 — Asset Types not found.</response>
        [HttpGet]
        [Route("/v3/AssetTypes/GetAssetTypesAvailableForSubscriber/{subscriberId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<SCServiceChannelServicesMessagingAssetsAssetType>))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesGetAssetTypesAvailableForSubscribersubscriberIdtradeIdtradeId([FromRoute (Name = "subscriberId")][Required]int subscriberId, [FromQuery (Name = "tradeId")]int? tradeId);

        /// <summary>
        /// 
        /// </summary>
        /// <param name="request"></param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        /// <response code="404">Bad Request - the request could not be understood or was missing required parameters.              &lt;br/&gt;Error codes:              502 — Asset Type not found.</response>
        [HttpPost]
        [Route("/v3/AssetTypes/GetAssetTypesByLocation")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Object))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesGetAssetTypesByLocation([FromBody]SCServiceChannelServicesCoreInternalRequestsAssetsGetAssetTypesByLocationRequestInternal request);

        /// <summary>
        /// Get asset categories by SubscriberId and TradeNames
        /// </summary>
        /// <remarks>Returns an asset category containing asset types that belong to the specified trade for the specified subscriber.              &lt;br /&gt;              ***Note***: &#x60;TradeNames&#x60; is an optional parameter. When you skip it, the response shows all asset categories containing asset types.</remarks>
        /// <param name="request">Request model to retrieve a list of asset categories.</param>
        /// <response code="200">Asset categories are in the response.</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions</response>
        /// <response code="500">Something went wrong, and the server was unable to complete your request.              &lt;br/&gt;Error codes:              501 — Object reference is not set to an instance of an object              501 — Value cannot be null</response>
        [HttpPost]
        [Route("/v3/AssetTypes/GetSubscriberAssetTypeCategories")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(SCServiceChannelServicesMessagingAssetsAssetTypeCategory))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesGetSubscriberAssetTypeCategories([FromBody]SCServiceChannelServicesMessagingAssetsGetSubscriberAssetCategoriesRequest request);

        /// <summary>
        /// 
        /// </summary>
        /// <param name="req"></param>
        /// <response code="201">Request succeeded and the requested information is in the response.</response>
        /// <response code="400">Bad Request - the request could not be understood or was missing required parameters.              &lt;br/&gt;Error codes:              3100 — Asset Type Name is already in use.              3106 — Asset Type Name is Missing.              703 — Primary trade not found.</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        [HttpPost]
        [Route("/v3/AssetTypes")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 201, type: typeof(SCServiceChannelServicesMessagingAssetsAddAssetTypeResponse))]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypes_0([FromBody]SCServiceChannelServicesMessagingAssetsAddAssetTypeRequest req);

        /// <summary>
        /// 
        /// </summary>
        /// <param name="assetTypeId"></param>
        /// <response code="200">Request succeeded and the requested information is in the response.</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        /// <response code="404">Bad Request - the request could not be understood or was missing required parameters.              &lt;br/&gt;Error codes:              502 — Asset Type not found.</response>
        [HttpGet]
        [Route("/v3/AssetTypes/{assetTypeId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(SCServiceChannelServicesMessagingAssetsAssetType))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesassetTypeId([FromRoute (Name = "assetTypeId")][Required]int assetTypeId);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Update Asset Type              Don&#39;t specify AdditiolanTrades if no changes in Additiolan Trades needed              Set AdditiolanTrades &#x3D; [] to delete existing Additiolan Trades for asset type              If AdditiolanTrades contains records then these trades will be set as Additional Trades to asset type.</remarks>
        /// <param name="assetTypeId"></param>
        /// <param name="type"></param>
        /// <response code="200">Request succeeded and the requested information is in the response.</response>
        /// <response code="400">Bad Request - the request could not be understood or was missing required parameters.              &lt;br/&gt;Error codes:              3101 — Asset Type Doesn&#39;t Exist!.              3102 — Asset Type already contains assets. Refrigerant Purpose can not be changed!              703 — Trade not found.</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              504 — API call rejected by security permissions;</response>
        [HttpPut]
        [Route("/v3/AssetTypes/{assetTypeId}")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesassetTypeId_0([FromRoute (Name = "assetTypeId")][Required]int assetTypeId, [FromBody]SCServiceChannelServicesMessagingAssetsAssetType type);

        /// <summary>
        /// 
        /// </summary>
        /// <param name="assetTypeId"></param>
        /// <response code="200">Request succeeded and the requested information is in the response.</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              502 — Asset Type not found.              3103 — Failed to delete asset type              3104 — Failed to delete asset type. Existing assets found.              3108 — Failed to delete asset type. Existing proposals found.              3105 — Cant modify asset type ParentId.              504 — API call rejected by security permissions;</response>
        [HttpDelete]
        [Route("/v3/AssetTypes/{assetTypeId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> AssetTypesassetTypeId_1([FromRoute (Name = "assetTypeId")][Required]int assetTypeId);
    }
}
