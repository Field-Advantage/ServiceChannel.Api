/*
 * ServiceChannel API - v.3
 *
 * The ServiceChannel API is a RESTful and stateless API. It accepts standard HTTP verbs and supports OAuth 2.0 for authorizing requests.      Our API returns common HTTP status codes as well as JSON encapsulated data.      See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/) for the intro to ServiceChannel API.<br>      <h3>Authentication and Authorization</h3>You should have a ServiceChannel account, register your application, and obtain `access_token` to integrate with our API.      See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/) for more information.      To use this API playground, click **Authorize** and sign in to ServiceChannel.<br>      <h3>Environment</h3> All calls in this API Reference point to the **SB2 environment**.      See [Environments](https://developer.servicechannel.com/basics/general/environments/) for more information.<br>      <h3>API Version</h3>The current stable version of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix that should be present.      When you omit the version prefix, calls point to the minimum supported version of the API.      We recommend you to always specify the API version to avoid possible errors.
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using ServiceChannel.OpenAPIGenerated.Api.Attributes;
using ServiceChannel.OpenAPIGenerated.Api.Models;

namespace ServiceChannel.OpenAPIGenerated.Api.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class SiteAuditApiController : ControllerBase
    { 
        /// <summary>
        /// Save completed audit to the database
        /// </summary>
        /// <param name="request">Request object</param>
        /// <response code="200">The audit info for the requested location is provided in the response.</response>
        /// <response code="400">The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.              &lt;br/&gt;Error codes:              1010 - Invalid site audit parameters</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 - Missing or incorrect authentication credentials</response>
        /// <response code="500">The server was unable to complete the request due to an internal error.              &lt;br/&gt;Error codes:              501 - Unspecified internal server error occurred</response>
        [HttpPost]
        [Route("/v3/subscribers/current/locations/auditInfo")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(SCServiceChannelServicesMessagingSiteAuditSaveAuditDataResponse))]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> SubscribersCurrentLocationsAuditInfo([FromBody]SCServiceChannelServicesMessagingSiteAuditAuditDataExternal request);

        /// <summary>
        /// Get checklist templates by audit template.
        /// </summary>
        /// <param name="templateId">Audit type identifier</param>
        /// <response code="200">Checklist templates are provided in the response.</response>
        /// <response code="400">The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.              &lt;br/&gt;Error codes:              1010 - Invalid site audit parameters</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 - Missing or incorrect authentication credentials</response>
        /// <response code="500">The server was unable to complete the request due to an internal error.              &lt;br/&gt;Error codes:              501 - Unspecified internal server error occurred</response>
        [HttpGet]
        [Route("/v3/subscribers/current/locations/auditinfo/checklist/templates")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<SCServiceChannelServicesMessagingSiteAuditCheckListTemplateExternal>))]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> SubscribersCurrentLocationsAuditinfoChecklistTemplatestemplateIdtemplateId([FromQuery (Name = "templateId")][Required()]int templateId);

        /// <summary>
        /// Get checklistitem templates by audit template.
        /// </summary>
        /// <param name="templateId">Audit type identifier</param>
        /// <param name="checkListTemplateId">Check list template identifier</param>
        /// <response code="200">Checklist templates are provided in the response.</response>
        /// <response code="400">The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.              &lt;br/&gt;Error codes:              1010 - Invalid site audit parameters</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 - Missing or incorrect authentication credentials</response>
        /// <response code="500">The server was unable to complete the request due to an internal error.              &lt;br/&gt;Error codes:              501 - Unspecified internal server error occurred</response>
        [HttpGet]
        [Route("/v3/subscribers/current/locations/auditinfo/checklistitem/templates")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<SCServiceChannelServicesMessagingSiteAuditCheckListItemExternal>))]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> SubscribersCurrentLocationsAuditinfoChecklistitemTemplatestemplateIdtemplateIdcheckListTemplateIdcheckListTemplateId([FromQuery (Name = "templateId")][Required()]int templateId, [FromQuery (Name = "checkListTemplateId")]int? checkListTemplateId);

        /// <summary>
        /// Get audit data for specified location and audit type without template information
        /// </summary>
        /// <remarks>Setup data for areas-checklist-checklistItems relationship data are not provided in this method.</remarks>
        /// <param name="locationId">Location identifier</param>
        /// <param name="templateId">Audit type identifier</param>
        /// <response code="200">The audit info for the requested location is provided in the response.</response>
        /// <response code="400">The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.              &lt;br/&gt;Error codes:              1010 - Invalid site audit parameters</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 - Missing or incorrect authentication credentials</response>
        /// <response code="500">The server was unable to complete the request due to an internal error.              &lt;br/&gt;Error codes:              501 - Unspecified internal server error occurred</response>
        [HttpGet]
        [Route("/v3/subscribers/current/locations/auditinfo")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(SCServiceChannelServicesMessagingSiteAuditGetAuditInfo))]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> SubscribersCurrentLocationsAuditinfolocationIdlocationIdtemplateIdtemplateId([FromQuery (Name = "locationId")][Required()]int locationId, [FromQuery (Name = "templateId")][Required()]int templateId);

        /// <summary>
        /// Get available audit types for specified location
        /// </summary>
        /// <param name="locationId">Location identifier</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v3/subscribers/current/locations/{locationId}/siteaudit/templateTypes")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Object))]
        public abstract Task<IActionResult> SubscribersCurrentLocationslocationIdSiteauditTemplateTypes([FromRoute (Name = "locationId")][Required]int locationId);

        /// <summary>
        /// Get audit data for specified location and audit type
        /// </summary>
        /// <remarks>Audit can be created from:              - completed audit data              - setup (templates) data              - mixed completed + setup              How audit data is combined depends on the loaded setup file to the system and/or availability               of previous finished audit data.</remarks>
        /// <param name="locationId">Location identifier</param>
        /// <param name="templateTypeId">Audit type identifier</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v3/subscribers/current/locations/{locationId}/siteaudit/templateTypes/{templateTypeId}/auditInfo")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Object))]
        public abstract Task<IActionResult> SubscribersCurrentLocationslocationIdSiteauditTemplateTypestemplateTypeIdAuditInfo([FromRoute (Name = "locationId")][Required]int locationId, [FromRoute (Name = "templateTypeId")][Required]int templateTypeId);

        /// <summary>
        /// Get audit data for specified location and audit type for new templates
        /// </summary>
        /// <remarks>Audit can be created from:              - completed audit data              - setup (templates) data              - mixed completed + setup              How audit data is combined depends on the loaded setup file to the system and/or availability               of previous finished audit data.</remarks>
        /// <param name="locationId">Location identifier</param>
        /// <param name="templateTypeId">Audit type identifier</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v3/subscribers/current/locations/{locationId}/siteaudit/templateTypes/{templateTypeId}/auditInfoWeighted")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Object))]
        public abstract Task<IActionResult> SubscribersCurrentLocationslocationIdSiteauditTemplateTypestemplateTypeIdAuditInfoWeighted([FromRoute (Name = "locationId")][Required]int locationId, [FromRoute (Name = "templateTypeId")][Required]int templateTypeId);

        /// <summary>
        /// Post (save) completed audit of new type to the database
        /// </summary>
        /// <param name="locationId">Location identifier</param>
        /// <param name="templateTypeId">Audit type identifier</param>
        /// <param name="request">Completed audit data</param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v3/subscribers/current/locations/{locationId}/siteaudit/templateTypes/{templateTypeId}/auditInfoWeighted")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Object))]
        public abstract Task<IActionResult> SubscribersCurrentLocationslocationIdSiteauditTemplateTypestemplateTypeIdAuditInfoWeighted_0([FromRoute (Name = "locationId")][Required]int locationId, [FromRoute (Name = "templateTypeId")][Required]int templateTypeId, [FromBody]SCServiceChannelServicesMessagingSiteAuditAuditDataWeightedExternal request);

        /// <summary>
        /// Post (save) completed audit to the database
        /// </summary>
        /// <param name="locationId">Location identifier</param>
        /// <param name="templateTypeId">Audit type identifier</param>
        /// <param name="request">Completed audit data</param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v3/subscribers/current/locations/{locationId}/siteaudit/templateTypes/{templateTypeId}/auditInfo")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Object))]
        public abstract Task<IActionResult> SubscribersCurrentLocationslocationIdSiteauditTemplateTypestemplateTypeIdAuditInfo_0([FromRoute (Name = "locationId")][Required]int locationId, [FromRoute (Name = "templateTypeId")][Required]int templateTypeId, [FromBody]SCServiceChannelServicesMessagingSiteAuditAuditDataExternalOld request);

        /// <summary>
        /// Get list of completed audits for current subscriber
        /// </summary>
        /// <param name="daysPeriod">Number of days in the past from now</param>
        /// <response code="200">The requested completed audit list is in the response.</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 - Missing or incorrect authentication credentials</response>
        /// <response code="500">The server was unable to complete the request due to an internal error.              &lt;br/&gt;Error codes:              501 - Unspecified internal server error occurred</response>
        [HttpGet]
        [Route("/v3/subscribers/current/siteaudit/audits/completed")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(SCServiceChannelServicesMessagingSiteAuditCompletedAuditListResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> SubscribersCurrentSiteauditAuditsCompleteddaysPerioddaysPeriod([FromQuery (Name = "daysPeriod")]int? daysPeriod);

        /// <summary>
        /// Get details for specified checklist item
        /// </summary>
        /// <remarks>Details include:              - comments with attachments              - workorders              - quantity</remarks>
        /// <param name="checkListItemId">Identifier of checklist item</param>
        /// <response code="200">The requested completed audit list is in the response.</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 - Missing or incorrect authentication credentials</response>
        /// <response code="500">The server was unable to complete the request due to an internal error.              &lt;br/&gt;Error codes:              501 - Unspecified internal server error occurred</response>
        [HttpGet]
        [Route("/v3/subscribers/current/siteaudit/checkListItems/{checkListItemId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(SCServiceChannelServicesMessagingSiteAuditCheckListItemDetailsResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> SubscribersCurrentSiteauditCheckListItemscheckListItemId([FromRoute (Name = "checkListItemId")][Required]int checkListItemId);

        /// <summary>
        /// Update completed audit info
        /// </summary>
        /// <param name="request">Completed audit info</param>
        /// <response code="200">The site audit info is successfully updated.</response>
        /// <response code="400">The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.              &lt;br/&gt;Error codes:              608 - Do not have access to the location.              1007 - Template type is inactive.              1009 - Unexpected error</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 - Missing or incorrect authentication credentials</response>
        /// <response code="404">The requested resource does not exist on the server.              &lt;br/&gt;Error codes:              1008 - Audit not found</response>
        /// <response code="500">The server was unable to complete the request due to an internal error.              &lt;br/&gt;Error codes:              501 - Unspecified internal server error occurred</response>
        [HttpPut]
        [Route("/v3/subscribers/current/siteaudit/completed")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(SCServiceChannelServicesMessagingSiteAuditUpdatedCompletedAuditResponse))]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> SubscribersCurrentSiteauditCompleted([FromBody]SCServiceChannelApiModelSiteAuditCompletedAuditInfo request);

        /// <summary>
        /// Get completed audit info
        /// </summary>
        /// <param name="auditId">The numeric identifier of the site audit info to return.</param>
        /// <response code="200">The requested site audit info is in the response.</response>
        /// <response code="400">The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.              &lt;br/&gt;Error codes:              608 - Do not have access to the location</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 - Missing or incorrect authentication credentials</response>
        /// <response code="404">The requested resource does not exist on the server.              &lt;br/&gt;Error codes:              1008 - Audit not found</response>
        /// <response code="500">The server was unable to complete the request due to an internal error.              &lt;br/&gt;Error codes:              501 - Unspecified internal server error occurred</response>
        [HttpGet]
        [Route("/v3/subscribers/current/siteaudit/completed/{auditId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(SCServiceChannelApiModelSiteAuditCompletedAuditInfoExternal))]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> SubscribersCurrentSiteauditCompletedauditId([FromRoute (Name = "auditId")][Required]int auditId);

        /// <summary>
        /// Get site audit reports
        /// </summary>
        /// <remarks>Returns a site audit report, its part, or several reports for the current subscriber.              &lt;br /&gt;**Required parameters:**               • **Option 1**. &#x60;auditId&#x60;. Use to get a site audit report by ID.               • **Option 2**. The combination of &#x60;fromDate&#x60; and &#x60;toDate&#x60;. Use to get site audit reports for a specific period.              &lt;br /&gt;***Note:*** Site audit reports are also known as *site planning reports* or just *audits*. See [Site Planning Manager](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/551059548/Site+Planning+Manager) for more info.</remarks>
        /// <param name="auditId">The numeric identifier of the site audit report to return.</param>
        /// <param name="fromDate">The date from which you want to return site audit reports. The format is &#x60;YYYY-MM-DDThh:mm:ss.sssZ&#x60;.</param>
        /// <param name="toDate">The date until which you want to return site audit reports. The format is &#x60;YYYY-MM-DDThh:mm:ss.sssZ&#x60;.</param>
        /// <param name="country">The two-letter [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the location country.</param>
        /// <param name="locationId">The numeric identifier of the subscriber&#39;s property.</param>
        /// <param name="area">The audited area within the location.</param>
        /// <response code="200">The requested site audit reports are in the response.</response>
        /// <response code="400">The request is not accepted due to bad syntax, missing parameters, insufficient data, etc.              &lt;br/&gt;Error codes:              1010 - Invalid site audit parameters</response>
        /// <response code="401">The request is not authorized.              &lt;br/&gt;Error codes:              504 - Missing or incorrect authentication credentials</response>
        /// <response code="500">The server was unable to complete the request due to an internal error.              &lt;br/&gt;Error codes:              501 - Unspecified internal server error occurred</response>
        [HttpGet]
        [Route("/v3/subscribers/current/siteaudit/report")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<SCServiceChannelServicesMessagingSiteAuditAuditReportExternal>))]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> SubscribersCurrentSiteauditReportauditIdauditIdfromDatefromDatetoDatetoDatecountrycountrylocationIdlocationIdareaarea([FromQuery (Name = "auditId")]int? auditId, [FromQuery (Name = "fromDate")]DateTime? fromDate, [FromQuery (Name = "toDate")]DateTime? toDate, [FromQuery (Name = "country")]string? country, [FromQuery (Name = "locationId")]int? locationId, [FromQuery (Name = "area")]string? area);
    }
}
