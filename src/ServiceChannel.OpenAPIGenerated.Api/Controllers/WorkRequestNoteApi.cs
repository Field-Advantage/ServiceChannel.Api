/*
 * ServiceChannel API - v.3
 *
 * The ServiceChannel API is a RESTful and stateless API. It accepts standard HTTP verbs and supports OAuth 2.0 for authorizing requests.      Our API returns common HTTP status codes as well as JSON encapsulated data.      See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/) for the intro to ServiceChannel API.<br>      <h3>Authentication and Authorization</h3>You should have a ServiceChannel account, register your application, and obtain `access_token` to integrate with our API.      See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/) for more information.      To use this API playground, click **Authorize** and sign in to ServiceChannel.<br>      <h3>Environment</h3> All calls in this API Reference point to the **SB2 environment**.      See [Environments](https://developer.servicechannel.com/basics/general/environments/) for more information.<br>      <h3>API Version</h3>The current stable version of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix that should be present.      When you omit the version prefix, calls point to the minimum supported version of the API.      We recommend you to always specify the API version to avoid possible errors.
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using ServiceChannel.OpenAPIGenerated.Api.Attributes;
using ServiceChannel.OpenAPIGenerated.Api.Models;

namespace ServiceChannel.OpenAPIGenerated.Api.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class WorkRequestNoteApiController : ControllerBase
    { 
        /// <summary>
        /// Creates a work request note
        /// </summary>
        /// <remarks>*In limited availability phase.*              &lt;br /&gt;Returns Note Id for successful request.</remarks>
        /// <param name="workrequestId">Numeric Id of the Work request to perform action with.</param>
        /// <param name="noteRequest">The note request model.</param>
        /// <response code="201">Created indicates that the request resulted in a new resource created before the response was sent.</response>
        /// <response code="400">Bad Request - the request could not be understood or was missing required parameters.              &lt;br/&gt;Error codes:              &lt;br/&gt; 100 - You don&#39;t have location access to perform this operation;              &lt;br/&gt; 503 - Validation fails. Invalid WorkRequest Id or Note value;              &lt;br/&gt; 8020 - Invalid work request identifier.Returned if workrequestId is &amp;lt;&#x3D; 0;</response>
        /// <response code="401">Indicates that the requested resource requires authentication.              &lt;br/&gt;Error codes:              &lt;br/&gt; 504 - API call rejected by security permissions;</response>
        /// <response code="500">Indicates that a generic error has occurred on the server.</response>
        [HttpPost]
        [Route("/v3/workrequests/{workrequestId}/notes")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> WorkrequestsworkrequestIdNotes([FromRoute (Name = "workrequestId")][Required]int workrequestId, [FromBody]SCServiceChannelServicesMessagingWorkRequestsCreateWorkRequestNoteRequest noteRequest);

        /// <summary>
        /// Add Followers to Work request
        /// </summary>
        /// <remarks>*In limited availability phase.*              &lt;br /&gt;Returns status \&quot;OK\&quot; for successful request.</remarks>
        /// <param name="workrequestId">Numeric Id of the Work request to perform action with.</param>
        /// <param name="request">The request model to perform action with.</param>
        /// <response code="200">Created indicates that the request resulted in a new resource created before the response was sent.</response>
        /// <response code="400">Bad Request - the request could not be understood or was missing required parameters.&lt;br&gt;Error codes:&lt;br&gt;503 - Request data is empty;&lt;br&gt;There is no followers in request;&lt;br&gt;Empty tracking number (workrequest Id);</response>
        /// <response code="404">Indicates that the requested resource does not exist on the server.</response>
        [HttpPost]
        [Route("/v3/workrequests/{workrequestId}/notes/followers")]
        [Consumes("application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> WorkrequestsworkrequestIdNotesFollowers([FromRoute (Name = "workrequestId")][Required]int workrequestId, [FromBody]SCServiceChannelServicesMessagingWorkRequestsAddWorkRequestNoteFollowersRequest request);

        /// <summary>
        /// Remove Follower from Work request
        /// </summary>
        /// <remarks>*In limited availability phase.*              &lt;br /&gt;Returns status \&quot;OK\&quot; for successful request.</remarks>
        /// <param name="workrequestId">Numeric Id of the Work request to perform action with.</param>
        /// <param name="email">Follower email.</param>
        /// <response code="200">Indicates that the request succeeded and that the requested information is in the response.</response>
        /// <response code="400">Bad Request - the request could not be understood or was missing required parameters.&lt;br&gt;Error codes:&lt;br&gt;503 - Request data is empty;&lt;br&gt;There is no followers in request;&lt;br&gt;Empty tracking number (workorder Id);</response>
        /// <response code="404">Indicates that the requested resource does not exist on the server.</response>
        [HttpDelete]
        [Route("/v3/workrequests/{workrequestId}/notes/followers")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> WorkrequestsworkrequestIdNotesFollowersemailemail([FromRoute (Name = "workrequestId")][Required]int workrequestId, [FromQuery (Name = "email")][Required()]string email);

        /// <summary>
        /// Work request Notes Collection
        /// </summary>
        /// <remarks>*In limited availability phase.*              &lt;br /&gt;Returns list of work request notes, sorted descending by creation date.</remarks>
        /// <param name="workrequestId">Numeric Id of the Work request to perform action with.</param>
        /// <param name="pageNumber">Page number.</param>
        /// <param name="pageSize">Page size.</param>
        /// <response code="200">Request succeeded and the requested information is in the response.</response>
        /// <response code="400">Bad Request - the request could not be understood or was missing required parameters.              &lt;br/&gt;Error codes:              &lt;br/&gt; 8020 - Invalid work request identifier. Returned if workrequestId is &amp;lt;&#x3D; 0;              &lt;br/&gt; 922 - Invalid paging parameter. Returned if paging parameter doesn&#39;t correspond to valid format;              &lt;br/&gt; 100 - You don&#39;t have location access to perform this operation;</response>
        /// <response code="401">Unauthorized indicates that the requested resource requires authentication.&lt;br&gt;Error codes:&lt;br&gt; 504 - API call rejected by security permissions;</response>
        [HttpGet]
        [Route("/v3/workrequests/{workrequestId}/notes")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(SCServiceChannelServicesMessagingErrorResponse))]
        public abstract Task<IActionResult> WorkrequestsworkrequestIdNotespageNumberpageNumberpageSizepageSize([FromRoute (Name = "workrequestId")][Required]int workrequestId, [FromQuery (Name = "pageNumber")][Required()]int pageNumber, [FromQuery (Name = "pageSize")][Required()]int pageSize);
    }
}
