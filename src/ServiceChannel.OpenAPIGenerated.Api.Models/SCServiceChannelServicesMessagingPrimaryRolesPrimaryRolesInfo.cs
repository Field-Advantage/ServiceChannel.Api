/*
 * ServiceChannel API - v.3
 *
 * The ServiceChannel API is a RESTful and stateless API. It accepts standard HTTP verbs and supports OAuth 2.0 for authorizing requests.      Our API returns common HTTP status codes as well as JSON encapsulated data.      See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/) for the intro to ServiceChannel API.<br>      <h3>Authentication and Authorization</h3>You should have a ServiceChannel account, register your application, and obtain `access_token` to integrate with our API.      See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/) for more information.      To use this API playground, click **Authorize** and sign in to ServiceChannel.<br>      <h3>Environment</h3> All calls in this API Reference point to the **SB2 environment**.      See [Environments](https://developer.servicechannel.com/basics/general/environments/) for more information.<br>      <h3>API Version</h3>The current stable version of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix that should be present.      When you omit the version prefix, calls point to the minimum supported version of the API.      We recommend you to always specify the API version to avoid possible errors.
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using ServiceChannel.OpenAPIGenerated.Api.Converters;

namespace ServiceChannel.OpenAPIGenerated.Api.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public class SCServiceChannelServicesMessagingPrimaryRolesPrimaryRolesInfo : IEquatable<SCServiceChannelServicesMessagingPrimaryRolesPrimaryRolesInfo>
    {
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="Id", EmitDefaultValue=true)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets SubscriberID
        /// </summary>
        [DataMember(Name="SubscriberID", EmitDefaultValue=true)]
        public int SubscriberID { get; set; }

        /// <summary>
        /// Gets or Sets RoleTitle
        /// </summary>
        [DataMember(Name="RoleTitle", EmitDefaultValue=false)]
        public string RoleTitle { get; set; }

        /// <summary>
        /// Gets or Sets DashboardTitle
        /// </summary>
        [DataMember(Name="DashboardTitle", EmitDefaultValue=false)]
        public string DashboardTitle { get; set; }

        /// <summary>
        /// Gets or Sets ServiceRequestDashboard
        /// </summary>
        [DataMember(Name="ServiceRequestDashboard", EmitDefaultValue=true)]
        public bool ServiceRequestDashboard { get; set; } = false;

        /// <summary>
        /// Gets or Sets ServiceClick
        /// </summary>
        [DataMember(Name="ServiceClick", EmitDefaultValue=true)]
        public bool ServiceClick { get; set; } = false;

        /// <summary>
        /// Gets or Sets SupplyClick
        /// </summary>
        [DataMember(Name="SupplyClick", EmitDefaultValue=true)]
        public bool SupplyClick { get; set; } = false;

        /// <summary>
        /// Gets or Sets EquipmentModule
        /// </summary>
        [DataMember(Name="EquipmentModule", EmitDefaultValue=true)]
        public bool EquipmentModule { get; set; } = false;

        /// <summary>
        /// Gets or Sets PreventiveMaintenancetModule
        /// </summary>
        [DataMember(Name="PreventiveMaintenancetModule", EmitDefaultValue=true)]
        public bool PreventiveMaintenancetModule { get; set; } = false;

        /// <summary>
        /// Gets or Sets FixxbookLink
        /// </summary>
        [DataMember(Name="FixxbookLink", EmitDefaultValue=true)]
        public bool FixxbookLink { get; set; } = false;

        /// <summary>
        /// Gets or Sets PlaceServiceRequest
        /// </summary>
        [DataMember(Name="PlaceServiceRequest", EmitDefaultValue=true)]
        public bool PlaceServiceRequest { get; set; } = false;

        /// <summary>
        /// Gets or Sets InvoiceFullControl
        /// </summary>
        [DataMember(Name="InvoiceFullControl", EmitDefaultValue=true)]
        public bool InvoiceFullControl { get; set; } = false;

        /// <summary>
        /// Gets or Sets InvoiceReadAll
        /// </summary>
        [DataMember(Name="InvoiceReadAll", EmitDefaultValue=true)]
        public bool InvoiceReadAll { get; set; } = false;

        /// <summary>
        /// Gets or Sets InvoiceCreate
        /// </summary>
        [DataMember(Name="InvoiceCreate", EmitDefaultValue=true)]
        public bool InvoiceCreate { get; set; } = false;

        /// <summary>
        /// Gets or Sets InvoiceProcess
        /// </summary>
        [DataMember(Name="InvoiceProcess", EmitDefaultValue=true)]
        public bool InvoiceProcess { get; set; } = false;

        /// <summary>
        /// Gets or Sets InvoiceReadApprPaid
        /// </summary>
        [DataMember(Name="InvoiceReadApprPaid", EmitDefaultValue=true)]
        public bool InvoiceReadApprPaid { get; set; } = false;

        /// <summary>
        /// Gets or Sets ProposalFullControl
        /// </summary>
        [DataMember(Name="ProposalFullControl", EmitDefaultValue=true)]
        public bool ProposalFullControl { get; set; } = false;

        /// <summary>
        /// Gets or Sets ProposalRead
        /// </summary>
        [DataMember(Name="ProposalRead", EmitDefaultValue=true)]
        public bool ProposalRead { get; set; } = false;

        /// <summary>
        /// Gets or Sets ProposalCreate
        /// </summary>
        [DataMember(Name="ProposalCreate", EmitDefaultValue=true)]
        public bool ProposalCreate { get; set; } = false;

        /// <summary>
        /// Gets or Sets ProposalProcess
        /// </summary>
        [DataMember(Name="ProposalProcess", EmitDefaultValue=true)]
        public bool ProposalProcess { get; set; } = false;

        /// <summary>
        /// Gets or Sets ReportsReadEdit
        /// </summary>
        [DataMember(Name="ReportsReadEdit", EmitDefaultValue=true)]
        public bool ReportsReadEdit { get; set; } = false;

        /// <summary>
        /// Gets or Sets ReportsRead
        /// </summary>
        [DataMember(Name="ReportsRead", EmitDefaultValue=true)]
        public bool ReportsRead { get; set; } = false;

        /// <summary>
        /// Gets or Sets LocationsRead
        /// </summary>
        [DataMember(Name="LocationsRead", EmitDefaultValue=true)]
        public bool LocationsRead { get; set; } = false;

        /// <summary>
        /// Gets or Sets EquipmentRead
        /// </summary>
        [DataMember(Name="EquipmentRead", EmitDefaultValue=true)]
        public bool EquipmentRead { get; set; } = false;

        /// <summary>
        /// Gets or Sets ServiceProviderFullControl
        /// </summary>
        [DataMember(Name="ServiceProviderFullControl", EmitDefaultValue=true)]
        public bool ServiceProviderFullControl { get; set; } = false;

        /// <summary>
        /// Gets or Sets ServiceProviderRead
        /// </summary>
        [DataMember(Name="ServiceProviderRead", EmitDefaultValue=true)]
        public bool ServiceProviderRead { get; set; } = false;

        /// <summary>
        /// Gets or Sets ServiceProviderReadEdit
        /// </summary>
        [DataMember(Name="ServiceProviderReadEdit", EmitDefaultValue=true)]
        public bool ServiceProviderReadEdit { get; set; } = false;

        /// <summary>
        /// Gets or Sets ServiceProviderRequestFor
        /// </summary>
        [DataMember(Name="ServiceProviderRequestFor", EmitDefaultValue=true)]
        public bool ServiceProviderRequestFor { get; set; } = false;

        /// <summary>
        /// Gets or Sets TrackWoPoReadEdit
        /// </summary>
        [DataMember(Name="TrackWoPoReadEdit", EmitDefaultValue=true)]
        public bool TrackWoPoReadEdit { get; set; } = false;

        /// <summary>
        /// Gets or Sets TrackWoPoRead
        /// </summary>
        [DataMember(Name="TrackWoPoRead", EmitDefaultValue=true)]
        public bool TrackWoPoRead { get; set; } = false;

        /// <summary>
        /// Gets or Sets PowerUser
        /// </summary>
        [DataMember(Name="PowerUser", EmitDefaultValue=true)]
        public bool PowerUser { get; set; } = false;

        /// <summary>
        /// Gets or Sets AdminUser
        /// </summary>
        [DataMember(Name="AdminUser", EmitDefaultValue=true)]
        public bool AdminUser { get; set; } = false;

        /// <summary>
        /// Gets or Sets SuperUser
        /// </summary>
        [DataMember(Name="SuperUser", EmitDefaultValue=true)]
        public bool SuperUser { get; set; } = false;

        /// <summary>
        /// Gets or Sets SiteAuditSetup
        /// </summary>
        [DataMember(Name="SiteAuditSetup", EmitDefaultValue=true)]
        public bool SiteAuditSetup { get; set; } = false;

        /// <summary>
        /// Gets or Sets SiteAuditReporter
        /// </summary>
        [DataMember(Name="SiteAuditReporter", EmitDefaultValue=true)]
        public bool SiteAuditReporter { get; set; } = false;

        /// <summary>
        /// Gets or Sets ProviewAdmin
        /// </summary>
        [DataMember(Name="ProviewAdmin", EmitDefaultValue=true)]
        public bool ProviewAdmin { get; set; } = false;

        /// <summary>
        /// Gets or Sets FinancialManager
        /// </summary>
        [DataMember(Name="FinancialManager", EmitDefaultValue=true)]
        public bool FinancialManager { get; set; } = false;

        /// <summary>
        /// Gets or Sets FinancialManagerAdmin
        /// </summary>
        [DataMember(Name="FinancialManagerAdmin", EmitDefaultValue=true)]
        public bool FinancialManagerAdmin { get; set; } = false;

        /// <summary>
        /// Gets or Sets DashboardExpert
        /// </summary>
        [DataMember(Name="DashboardExpert", EmitDefaultValue=true)]
        public bool DashboardExpert { get; set; } = false;

        /// <summary>
        /// Gets or Sets PowerUserLite
        /// </summary>
        [DataMember(Name="PowerUserLite", EmitDefaultValue=true)]
        public bool PowerUserLite { get; set; } = false;

        /// <summary>
        /// Gets or Sets InventoryManager
        /// </summary>
        [DataMember(Name="InventoryManager", EmitDefaultValue=true)]
        public bool InventoryManager { get; set; } = false;

        /// <summary>
        /// Gets or Sets DecisionEngineUser
        /// </summary>
        [DataMember(Name="DecisionEngineUser", EmitDefaultValue=true)]
        public bool DecisionEngineUser { get; set; } = false;

        /// <summary>
        /// Gets or Sets ProjectManager
        /// </summary>
        [DataMember(Name="ProjectManager", EmitDefaultValue=true)]
        public bool ProjectManager { get; set; } = false;

        /// <summary>
        /// Gets or Sets RefrigerantTrackingAdmin
        /// </summary>
        [DataMember(Name="RefrigerantTrackingAdmin", EmitDefaultValue=true)]
        public bool RefrigerantTrackingAdmin { get; set; } = false;

        /// <summary>
        /// Gets or Sets SiteAccessAdmin
        /// </summary>
        [DataMember(Name="SiteAccessAdmin", EmitDefaultValue=true)]
        public bool SiteAccessAdmin { get; set; } = false;

        /// <summary>
        /// Gets or Sets DashboardAdminUser
        /// </summary>
        [DataMember(Name="DashboardAdminUser", EmitDefaultValue=true)]
        public bool DashboardAdminUser { get; set; } = false;

        /// <summary>
        /// Gets or Sets PrivateNetworkAccess
        /// </summary>
        [DataMember(Name="PrivateNetworkAccess", EmitDefaultValue=true)]
        public bool PrivateNetworkAccess { get; set; } = false;

        /// <summary>
        /// Gets or Sets AdditionalSetupNames
        /// </summary>
        [DataMember(Name="AdditionalSetupNames", EmitDefaultValue=false)]
        public string AdditionalSetupNames { get; set; }

        /// <summary>
        /// Gets or Sets SiteAuditAuditor
        /// </summary>
        [DataMember(Name="SiteAuditAuditor", EmitDefaultValue=true)]
        public bool SiteAuditAuditor { get; set; } = false;

        /// <summary>
        /// Gets or Sets PasswordSelfManagement
        /// </summary>
        [DataMember(Name="PasswordSelfManagement", EmitDefaultValue=true)]
        public bool PasswordSelfManagement { get; set; } = false;

        /// <summary>
        /// Gets or Sets PowerInvoiceUser
        /// </summary>
        [DataMember(Name="PowerInvoiceUser", EmitDefaultValue=true)]
        public bool PowerInvoiceUser { get; set; } = false;

        /// <summary>
        /// Gets or Sets InvoiceAdmin
        /// </summary>
        [DataMember(Name="InvoiceAdmin", EmitDefaultValue=true)]
        public bool InvoiceAdmin { get; set; } = false;

        /// <summary>
        /// Gets or Sets EulaSignoff
        /// </summary>
        [DataMember(Name="EulaSignoff", EmitDefaultValue=true)]
        public bool EulaSignoff { get; set; } = false;

        /// <summary>
        /// Gets or Sets WikiEditor
        /// </summary>
        [DataMember(Name="WikiEditor", EmitDefaultValue=true)]
        public bool WikiEditor { get; set; } = false;

        /// <summary>
        /// Gets or Sets SiteAccessMobile
        /// </summary>
        [DataMember(Name="SiteAccessMobile", EmitDefaultValue=true)]
        public bool SiteAccessMobile { get; set; } = false;

        /// <summary>
        /// Gets or Sets ProgramManager
        /// </summary>
        [DataMember(Name="ProgramManager", EmitDefaultValue=true)]
        public bool ProgramManager { get; set; } = false;

        /// <summary>
        /// Gets or Sets LocationAdmin
        /// </summary>
        [DataMember(Name="LocationAdmin", EmitDefaultValue=true)]
        public bool LocationAdmin { get; set; } = false;

        /// <summary>
        /// Gets or Sets PlannedMaintenanceAdmin
        /// </summary>
        [DataMember(Name="PlannedMaintenanceAdmin", EmitDefaultValue=true)]
        public bool PlannedMaintenanceAdmin { get; set; } = false;

        /// <summary>
        /// Gets or Sets ApprovalCodeEditor
        /// </summary>
        [DataMember(Name="ApprovalCodeEditor", EmitDefaultValue=true)]
        public bool ApprovalCodeEditor { get; set; } = false;

        /// <summary>
        /// Gets or Sets ProviderAssignmentsEditor
        /// </summary>
        [DataMember(Name="ProviderAssignmentsEditor", EmitDefaultValue=true)]
        public bool ProviderAssignmentsEditor { get; set; } = false;

        /// <summary>
        /// Gets or Sets ProviderAdmin
        /// </summary>
        [DataMember(Name="ProviderAdmin", EmitDefaultValue=true)]
        public bool ProviderAdmin { get; set; } = false;

        /// <summary>
        /// Gets or Sets SpacesAdmin
        /// </summary>
        [DataMember(Name="SpacesAdmin", EmitDefaultValue=true)]
        public bool SpacesAdmin { get; set; } = false;

        /// <summary>
        /// Gets or Sets SpacesExternal
        /// </summary>
        [DataMember(Name="SpacesExternal", EmitDefaultValue=true)]
        public bool SpacesExternal { get; set; } = false;

        /// <summary>
        /// Gets or Sets SpacesPlotter
        /// </summary>
        [DataMember(Name="SpacesPlotter", EmitDefaultValue=true)]
        public bool SpacesPlotter { get; set; } = false;

        /// <summary>
        /// Gets or Sets SpacesMaker
        /// </summary>
        [DataMember(Name="SpacesMaker", EmitDefaultValue=true)]
        public bool SpacesMaker { get; set; } = false;

        /// <summary>
        /// Gets or Sets AssetInventory
        /// </summary>
        [DataMember(Name="AssetInventory", EmitDefaultValue=true)]
        public bool AssetInventory { get; set; } = false;

        /// <summary>
        /// Gets or Sets PreventLogin
        /// </summary>
        [DataMember(Name="PreventLogin", EmitDefaultValue=true)]
        public bool PreventLogin { get; set; } = false;

        /// <summary>
        /// Gets or Sets SiteAuditEditor
        /// </summary>
        [DataMember(Name="SiteAuditEditor", EmitDefaultValue=true)]
        public bool SiteAuditEditor { get; set; } = false;

        /// <summary>
        /// Gets or Sets AddLabels
        /// </summary>
        [DataMember(Name="AddLabels", EmitDefaultValue=true)]
        public bool AddLabels { get; set; } = false;

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SCServiceChannelServicesMessagingPrimaryRolesPrimaryRolesInfo {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  SubscriberID: ").Append(SubscriberID).Append("\n");
            sb.Append("  RoleTitle: ").Append(RoleTitle).Append("\n");
            sb.Append("  DashboardTitle: ").Append(DashboardTitle).Append("\n");
            sb.Append("  ServiceRequestDashboard: ").Append(ServiceRequestDashboard).Append("\n");
            sb.Append("  ServiceClick: ").Append(ServiceClick).Append("\n");
            sb.Append("  SupplyClick: ").Append(SupplyClick).Append("\n");
            sb.Append("  EquipmentModule: ").Append(EquipmentModule).Append("\n");
            sb.Append("  PreventiveMaintenancetModule: ").Append(PreventiveMaintenancetModule).Append("\n");
            sb.Append("  FixxbookLink: ").Append(FixxbookLink).Append("\n");
            sb.Append("  PlaceServiceRequest: ").Append(PlaceServiceRequest).Append("\n");
            sb.Append("  InvoiceFullControl: ").Append(InvoiceFullControl).Append("\n");
            sb.Append("  InvoiceReadAll: ").Append(InvoiceReadAll).Append("\n");
            sb.Append("  InvoiceCreate: ").Append(InvoiceCreate).Append("\n");
            sb.Append("  InvoiceProcess: ").Append(InvoiceProcess).Append("\n");
            sb.Append("  InvoiceReadApprPaid: ").Append(InvoiceReadApprPaid).Append("\n");
            sb.Append("  ProposalFullControl: ").Append(ProposalFullControl).Append("\n");
            sb.Append("  ProposalRead: ").Append(ProposalRead).Append("\n");
            sb.Append("  ProposalCreate: ").Append(ProposalCreate).Append("\n");
            sb.Append("  ProposalProcess: ").Append(ProposalProcess).Append("\n");
            sb.Append("  ReportsReadEdit: ").Append(ReportsReadEdit).Append("\n");
            sb.Append("  ReportsRead: ").Append(ReportsRead).Append("\n");
            sb.Append("  LocationsRead: ").Append(LocationsRead).Append("\n");
            sb.Append("  EquipmentRead: ").Append(EquipmentRead).Append("\n");
            sb.Append("  ServiceProviderFullControl: ").Append(ServiceProviderFullControl).Append("\n");
            sb.Append("  ServiceProviderRead: ").Append(ServiceProviderRead).Append("\n");
            sb.Append("  ServiceProviderReadEdit: ").Append(ServiceProviderReadEdit).Append("\n");
            sb.Append("  ServiceProviderRequestFor: ").Append(ServiceProviderRequestFor).Append("\n");
            sb.Append("  TrackWoPoReadEdit: ").Append(TrackWoPoReadEdit).Append("\n");
            sb.Append("  TrackWoPoRead: ").Append(TrackWoPoRead).Append("\n");
            sb.Append("  PowerUser: ").Append(PowerUser).Append("\n");
            sb.Append("  AdminUser: ").Append(AdminUser).Append("\n");
            sb.Append("  SuperUser: ").Append(SuperUser).Append("\n");
            sb.Append("  SiteAuditSetup: ").Append(SiteAuditSetup).Append("\n");
            sb.Append("  SiteAuditReporter: ").Append(SiteAuditReporter).Append("\n");
            sb.Append("  ProviewAdmin: ").Append(ProviewAdmin).Append("\n");
            sb.Append("  FinancialManager: ").Append(FinancialManager).Append("\n");
            sb.Append("  FinancialManagerAdmin: ").Append(FinancialManagerAdmin).Append("\n");
            sb.Append("  DashboardExpert: ").Append(DashboardExpert).Append("\n");
            sb.Append("  PowerUserLite: ").Append(PowerUserLite).Append("\n");
            sb.Append("  InventoryManager: ").Append(InventoryManager).Append("\n");
            sb.Append("  DecisionEngineUser: ").Append(DecisionEngineUser).Append("\n");
            sb.Append("  ProjectManager: ").Append(ProjectManager).Append("\n");
            sb.Append("  RefrigerantTrackingAdmin: ").Append(RefrigerantTrackingAdmin).Append("\n");
            sb.Append("  SiteAccessAdmin: ").Append(SiteAccessAdmin).Append("\n");
            sb.Append("  DashboardAdminUser: ").Append(DashboardAdminUser).Append("\n");
            sb.Append("  PrivateNetworkAccess: ").Append(PrivateNetworkAccess).Append("\n");
            sb.Append("  AdditionalSetupNames: ").Append(AdditionalSetupNames).Append("\n");
            sb.Append("  SiteAuditAuditor: ").Append(SiteAuditAuditor).Append("\n");
            sb.Append("  PasswordSelfManagement: ").Append(PasswordSelfManagement).Append("\n");
            sb.Append("  PowerInvoiceUser: ").Append(PowerInvoiceUser).Append("\n");
            sb.Append("  InvoiceAdmin: ").Append(InvoiceAdmin).Append("\n");
            sb.Append("  EulaSignoff: ").Append(EulaSignoff).Append("\n");
            sb.Append("  WikiEditor: ").Append(WikiEditor).Append("\n");
            sb.Append("  SiteAccessMobile: ").Append(SiteAccessMobile).Append("\n");
            sb.Append("  ProgramManager: ").Append(ProgramManager).Append("\n");
            sb.Append("  LocationAdmin: ").Append(LocationAdmin).Append("\n");
            sb.Append("  PlannedMaintenanceAdmin: ").Append(PlannedMaintenanceAdmin).Append("\n");
            sb.Append("  ApprovalCodeEditor: ").Append(ApprovalCodeEditor).Append("\n");
            sb.Append("  ProviderAssignmentsEditor: ").Append(ProviderAssignmentsEditor).Append("\n");
            sb.Append("  ProviderAdmin: ").Append(ProviderAdmin).Append("\n");
            sb.Append("  SpacesAdmin: ").Append(SpacesAdmin).Append("\n");
            sb.Append("  SpacesExternal: ").Append(SpacesExternal).Append("\n");
            sb.Append("  SpacesPlotter: ").Append(SpacesPlotter).Append("\n");
            sb.Append("  SpacesMaker: ").Append(SpacesMaker).Append("\n");
            sb.Append("  AssetInventory: ").Append(AssetInventory).Append("\n");
            sb.Append("  PreventLogin: ").Append(PreventLogin).Append("\n");
            sb.Append("  SiteAuditEditor: ").Append(SiteAuditEditor).Append("\n");
            sb.Append("  AddLabels: ").Append(AddLabels).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            var options = new JsonSerializerOptions
            {
                WriteIndented = true
            };

            return JsonSerializer.Serialize(this, options);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((SCServiceChannelServicesMessagingPrimaryRolesPrimaryRolesInfo)obj);
        }

        /// <summary>
        /// Returns true if SCServiceChannelServicesMessagingPrimaryRolesPrimaryRolesInfo instances are equal
        /// </summary>
        /// <param name="other">Instance of SCServiceChannelServicesMessagingPrimaryRolesPrimaryRolesInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SCServiceChannelServicesMessagingPrimaryRolesPrimaryRolesInfo other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    
                    Id.Equals(other.Id)
                ) && 
                (
                    SubscriberID == other.SubscriberID ||
                    
                    SubscriberID.Equals(other.SubscriberID)
                ) && 
                (
                    RoleTitle == other.RoleTitle ||
                    RoleTitle != null &&
                    RoleTitle.Equals(other.RoleTitle)
                ) && 
                (
                    DashboardTitle == other.DashboardTitle ||
                    DashboardTitle != null &&
                    DashboardTitle.Equals(other.DashboardTitle)
                ) && 
                (
                    ServiceRequestDashboard == other.ServiceRequestDashboard ||
                    
                    ServiceRequestDashboard.Equals(other.ServiceRequestDashboard)
                ) && 
                (
                    ServiceClick == other.ServiceClick ||
                    
                    ServiceClick.Equals(other.ServiceClick)
                ) && 
                (
                    SupplyClick == other.SupplyClick ||
                    
                    SupplyClick.Equals(other.SupplyClick)
                ) && 
                (
                    EquipmentModule == other.EquipmentModule ||
                    
                    EquipmentModule.Equals(other.EquipmentModule)
                ) && 
                (
                    PreventiveMaintenancetModule == other.PreventiveMaintenancetModule ||
                    
                    PreventiveMaintenancetModule.Equals(other.PreventiveMaintenancetModule)
                ) && 
                (
                    FixxbookLink == other.FixxbookLink ||
                    
                    FixxbookLink.Equals(other.FixxbookLink)
                ) && 
                (
                    PlaceServiceRequest == other.PlaceServiceRequest ||
                    
                    PlaceServiceRequest.Equals(other.PlaceServiceRequest)
                ) && 
                (
                    InvoiceFullControl == other.InvoiceFullControl ||
                    
                    InvoiceFullControl.Equals(other.InvoiceFullControl)
                ) && 
                (
                    InvoiceReadAll == other.InvoiceReadAll ||
                    
                    InvoiceReadAll.Equals(other.InvoiceReadAll)
                ) && 
                (
                    InvoiceCreate == other.InvoiceCreate ||
                    
                    InvoiceCreate.Equals(other.InvoiceCreate)
                ) && 
                (
                    InvoiceProcess == other.InvoiceProcess ||
                    
                    InvoiceProcess.Equals(other.InvoiceProcess)
                ) && 
                (
                    InvoiceReadApprPaid == other.InvoiceReadApprPaid ||
                    
                    InvoiceReadApprPaid.Equals(other.InvoiceReadApprPaid)
                ) && 
                (
                    ProposalFullControl == other.ProposalFullControl ||
                    
                    ProposalFullControl.Equals(other.ProposalFullControl)
                ) && 
                (
                    ProposalRead == other.ProposalRead ||
                    
                    ProposalRead.Equals(other.ProposalRead)
                ) && 
                (
                    ProposalCreate == other.ProposalCreate ||
                    
                    ProposalCreate.Equals(other.ProposalCreate)
                ) && 
                (
                    ProposalProcess == other.ProposalProcess ||
                    
                    ProposalProcess.Equals(other.ProposalProcess)
                ) && 
                (
                    ReportsReadEdit == other.ReportsReadEdit ||
                    
                    ReportsReadEdit.Equals(other.ReportsReadEdit)
                ) && 
                (
                    ReportsRead == other.ReportsRead ||
                    
                    ReportsRead.Equals(other.ReportsRead)
                ) && 
                (
                    LocationsRead == other.LocationsRead ||
                    
                    LocationsRead.Equals(other.LocationsRead)
                ) && 
                (
                    EquipmentRead == other.EquipmentRead ||
                    
                    EquipmentRead.Equals(other.EquipmentRead)
                ) && 
                (
                    ServiceProviderFullControl == other.ServiceProviderFullControl ||
                    
                    ServiceProviderFullControl.Equals(other.ServiceProviderFullControl)
                ) && 
                (
                    ServiceProviderRead == other.ServiceProviderRead ||
                    
                    ServiceProviderRead.Equals(other.ServiceProviderRead)
                ) && 
                (
                    ServiceProviderReadEdit == other.ServiceProviderReadEdit ||
                    
                    ServiceProviderReadEdit.Equals(other.ServiceProviderReadEdit)
                ) && 
                (
                    ServiceProviderRequestFor == other.ServiceProviderRequestFor ||
                    
                    ServiceProviderRequestFor.Equals(other.ServiceProviderRequestFor)
                ) && 
                (
                    TrackWoPoReadEdit == other.TrackWoPoReadEdit ||
                    
                    TrackWoPoReadEdit.Equals(other.TrackWoPoReadEdit)
                ) && 
                (
                    TrackWoPoRead == other.TrackWoPoRead ||
                    
                    TrackWoPoRead.Equals(other.TrackWoPoRead)
                ) && 
                (
                    PowerUser == other.PowerUser ||
                    
                    PowerUser.Equals(other.PowerUser)
                ) && 
                (
                    AdminUser == other.AdminUser ||
                    
                    AdminUser.Equals(other.AdminUser)
                ) && 
                (
                    SuperUser == other.SuperUser ||
                    
                    SuperUser.Equals(other.SuperUser)
                ) && 
                (
                    SiteAuditSetup == other.SiteAuditSetup ||
                    
                    SiteAuditSetup.Equals(other.SiteAuditSetup)
                ) && 
                (
                    SiteAuditReporter == other.SiteAuditReporter ||
                    
                    SiteAuditReporter.Equals(other.SiteAuditReporter)
                ) && 
                (
                    ProviewAdmin == other.ProviewAdmin ||
                    
                    ProviewAdmin.Equals(other.ProviewAdmin)
                ) && 
                (
                    FinancialManager == other.FinancialManager ||
                    
                    FinancialManager.Equals(other.FinancialManager)
                ) && 
                (
                    FinancialManagerAdmin == other.FinancialManagerAdmin ||
                    
                    FinancialManagerAdmin.Equals(other.FinancialManagerAdmin)
                ) && 
                (
                    DashboardExpert == other.DashboardExpert ||
                    
                    DashboardExpert.Equals(other.DashboardExpert)
                ) && 
                (
                    PowerUserLite == other.PowerUserLite ||
                    
                    PowerUserLite.Equals(other.PowerUserLite)
                ) && 
                (
                    InventoryManager == other.InventoryManager ||
                    
                    InventoryManager.Equals(other.InventoryManager)
                ) && 
                (
                    DecisionEngineUser == other.DecisionEngineUser ||
                    
                    DecisionEngineUser.Equals(other.DecisionEngineUser)
                ) && 
                (
                    ProjectManager == other.ProjectManager ||
                    
                    ProjectManager.Equals(other.ProjectManager)
                ) && 
                (
                    RefrigerantTrackingAdmin == other.RefrigerantTrackingAdmin ||
                    
                    RefrigerantTrackingAdmin.Equals(other.RefrigerantTrackingAdmin)
                ) && 
                (
                    SiteAccessAdmin == other.SiteAccessAdmin ||
                    
                    SiteAccessAdmin.Equals(other.SiteAccessAdmin)
                ) && 
                (
                    DashboardAdminUser == other.DashboardAdminUser ||
                    
                    DashboardAdminUser.Equals(other.DashboardAdminUser)
                ) && 
                (
                    PrivateNetworkAccess == other.PrivateNetworkAccess ||
                    
                    PrivateNetworkAccess.Equals(other.PrivateNetworkAccess)
                ) && 
                (
                    AdditionalSetupNames == other.AdditionalSetupNames ||
                    AdditionalSetupNames != null &&
                    AdditionalSetupNames.Equals(other.AdditionalSetupNames)
                ) && 
                (
                    SiteAuditAuditor == other.SiteAuditAuditor ||
                    
                    SiteAuditAuditor.Equals(other.SiteAuditAuditor)
                ) && 
                (
                    PasswordSelfManagement == other.PasswordSelfManagement ||
                    
                    PasswordSelfManagement.Equals(other.PasswordSelfManagement)
                ) && 
                (
                    PowerInvoiceUser == other.PowerInvoiceUser ||
                    
                    PowerInvoiceUser.Equals(other.PowerInvoiceUser)
                ) && 
                (
                    InvoiceAdmin == other.InvoiceAdmin ||
                    
                    InvoiceAdmin.Equals(other.InvoiceAdmin)
                ) && 
                (
                    EulaSignoff == other.EulaSignoff ||
                    
                    EulaSignoff.Equals(other.EulaSignoff)
                ) && 
                (
                    WikiEditor == other.WikiEditor ||
                    
                    WikiEditor.Equals(other.WikiEditor)
                ) && 
                (
                    SiteAccessMobile == other.SiteAccessMobile ||
                    
                    SiteAccessMobile.Equals(other.SiteAccessMobile)
                ) && 
                (
                    ProgramManager == other.ProgramManager ||
                    
                    ProgramManager.Equals(other.ProgramManager)
                ) && 
                (
                    LocationAdmin == other.LocationAdmin ||
                    
                    LocationAdmin.Equals(other.LocationAdmin)
                ) && 
                (
                    PlannedMaintenanceAdmin == other.PlannedMaintenanceAdmin ||
                    
                    PlannedMaintenanceAdmin.Equals(other.PlannedMaintenanceAdmin)
                ) && 
                (
                    ApprovalCodeEditor == other.ApprovalCodeEditor ||
                    
                    ApprovalCodeEditor.Equals(other.ApprovalCodeEditor)
                ) && 
                (
                    ProviderAssignmentsEditor == other.ProviderAssignmentsEditor ||
                    
                    ProviderAssignmentsEditor.Equals(other.ProviderAssignmentsEditor)
                ) && 
                (
                    ProviderAdmin == other.ProviderAdmin ||
                    
                    ProviderAdmin.Equals(other.ProviderAdmin)
                ) && 
                (
                    SpacesAdmin == other.SpacesAdmin ||
                    
                    SpacesAdmin.Equals(other.SpacesAdmin)
                ) && 
                (
                    SpacesExternal == other.SpacesExternal ||
                    
                    SpacesExternal.Equals(other.SpacesExternal)
                ) && 
                (
                    SpacesPlotter == other.SpacesPlotter ||
                    
                    SpacesPlotter.Equals(other.SpacesPlotter)
                ) && 
                (
                    SpacesMaker == other.SpacesMaker ||
                    
                    SpacesMaker.Equals(other.SpacesMaker)
                ) && 
                (
                    AssetInventory == other.AssetInventory ||
                    
                    AssetInventory.Equals(other.AssetInventory)
                ) && 
                (
                    PreventLogin == other.PreventLogin ||
                    
                    PreventLogin.Equals(other.PreventLogin)
                ) && 
                (
                    SiteAuditEditor == other.SiteAuditEditor ||
                    
                    SiteAuditEditor.Equals(other.SiteAuditEditor)
                ) && 
                (
                    AddLabels == other.AddLabels ||
                    
                    AddLabels.Equals(other.AddLabels)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    
                    hashCode = hashCode * 59 + SubscriberID.GetHashCode();
                    if (RoleTitle != null)
                    hashCode = hashCode * 59 + RoleTitle.GetHashCode();
                    if (DashboardTitle != null)
                    hashCode = hashCode * 59 + DashboardTitle.GetHashCode();
                    
                    hashCode = hashCode * 59 + ServiceRequestDashboard.GetHashCode();
                    
                    hashCode = hashCode * 59 + ServiceClick.GetHashCode();
                    
                    hashCode = hashCode * 59 + SupplyClick.GetHashCode();
                    
                    hashCode = hashCode * 59 + EquipmentModule.GetHashCode();
                    
                    hashCode = hashCode * 59 + PreventiveMaintenancetModule.GetHashCode();
                    
                    hashCode = hashCode * 59 + FixxbookLink.GetHashCode();
                    
                    hashCode = hashCode * 59 + PlaceServiceRequest.GetHashCode();
                    
                    hashCode = hashCode * 59 + InvoiceFullControl.GetHashCode();
                    
                    hashCode = hashCode * 59 + InvoiceReadAll.GetHashCode();
                    
                    hashCode = hashCode * 59 + InvoiceCreate.GetHashCode();
                    
                    hashCode = hashCode * 59 + InvoiceProcess.GetHashCode();
                    
                    hashCode = hashCode * 59 + InvoiceReadApprPaid.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProposalFullControl.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProposalRead.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProposalCreate.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProposalProcess.GetHashCode();
                    
                    hashCode = hashCode * 59 + ReportsReadEdit.GetHashCode();
                    
                    hashCode = hashCode * 59 + ReportsRead.GetHashCode();
                    
                    hashCode = hashCode * 59 + LocationsRead.GetHashCode();
                    
                    hashCode = hashCode * 59 + EquipmentRead.GetHashCode();
                    
                    hashCode = hashCode * 59 + ServiceProviderFullControl.GetHashCode();
                    
                    hashCode = hashCode * 59 + ServiceProviderRead.GetHashCode();
                    
                    hashCode = hashCode * 59 + ServiceProviderReadEdit.GetHashCode();
                    
                    hashCode = hashCode * 59 + ServiceProviderRequestFor.GetHashCode();
                    
                    hashCode = hashCode * 59 + TrackWoPoReadEdit.GetHashCode();
                    
                    hashCode = hashCode * 59 + TrackWoPoRead.GetHashCode();
                    
                    hashCode = hashCode * 59 + PowerUser.GetHashCode();
                    
                    hashCode = hashCode * 59 + AdminUser.GetHashCode();
                    
                    hashCode = hashCode * 59 + SuperUser.GetHashCode();
                    
                    hashCode = hashCode * 59 + SiteAuditSetup.GetHashCode();
                    
                    hashCode = hashCode * 59 + SiteAuditReporter.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProviewAdmin.GetHashCode();
                    
                    hashCode = hashCode * 59 + FinancialManager.GetHashCode();
                    
                    hashCode = hashCode * 59 + FinancialManagerAdmin.GetHashCode();
                    
                    hashCode = hashCode * 59 + DashboardExpert.GetHashCode();
                    
                    hashCode = hashCode * 59 + PowerUserLite.GetHashCode();
                    
                    hashCode = hashCode * 59 + InventoryManager.GetHashCode();
                    
                    hashCode = hashCode * 59 + DecisionEngineUser.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProjectManager.GetHashCode();
                    
                    hashCode = hashCode * 59 + RefrigerantTrackingAdmin.GetHashCode();
                    
                    hashCode = hashCode * 59 + SiteAccessAdmin.GetHashCode();
                    
                    hashCode = hashCode * 59 + DashboardAdminUser.GetHashCode();
                    
                    hashCode = hashCode * 59 + PrivateNetworkAccess.GetHashCode();
                    if (AdditionalSetupNames != null)
                    hashCode = hashCode * 59 + AdditionalSetupNames.GetHashCode();
                    
                    hashCode = hashCode * 59 + SiteAuditAuditor.GetHashCode();
                    
                    hashCode = hashCode * 59 + PasswordSelfManagement.GetHashCode();
                    
                    hashCode = hashCode * 59 + PowerInvoiceUser.GetHashCode();
                    
                    hashCode = hashCode * 59 + InvoiceAdmin.GetHashCode();
                    
                    hashCode = hashCode * 59 + EulaSignoff.GetHashCode();
                    
                    hashCode = hashCode * 59 + WikiEditor.GetHashCode();
                    
                    hashCode = hashCode * 59 + SiteAccessMobile.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProgramManager.GetHashCode();
                    
                    hashCode = hashCode * 59 + LocationAdmin.GetHashCode();
                    
                    hashCode = hashCode * 59 + PlannedMaintenanceAdmin.GetHashCode();
                    
                    hashCode = hashCode * 59 + ApprovalCodeEditor.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProviderAssignmentsEditor.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProviderAdmin.GetHashCode();
                    
                    hashCode = hashCode * 59 + SpacesAdmin.GetHashCode();
                    
                    hashCode = hashCode * 59 + SpacesExternal.GetHashCode();
                    
                    hashCode = hashCode * 59 + SpacesPlotter.GetHashCode();
                    
                    hashCode = hashCode * 59 + SpacesMaker.GetHashCode();
                    
                    hashCode = hashCode * 59 + AssetInventory.GetHashCode();
                    
                    hashCode = hashCode * 59 + PreventLogin.GetHashCode();
                    
                    hashCode = hashCode * 59 + SiteAuditEditor.GetHashCode();
                    
                    hashCode = hashCode * 59 + AddLabels.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(SCServiceChannelServicesMessagingPrimaryRolesPrimaryRolesInfo left, SCServiceChannelServicesMessagingPrimaryRolesPrimaryRolesInfo right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(SCServiceChannelServicesMessagingPrimaryRolesPrimaryRolesInfo left, SCServiceChannelServicesMessagingPrimaryRolesPrimaryRolesInfo right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
