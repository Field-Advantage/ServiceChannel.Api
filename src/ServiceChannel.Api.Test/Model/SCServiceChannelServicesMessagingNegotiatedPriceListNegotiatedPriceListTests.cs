/*
 * ServiceChannel API - v.3
 *
 * The ServiceChannel API is a RESTful and stateless API. It accepts standard HTTP verbs and supports OAuth 2.0 for authorizing requests.      Our API returns common HTTP status codes as well as JSON encapsulated data.      See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/) for the intro to ServiceChannel API.<br>      <h3>Authentication and Authorization</h3>You should have a ServiceChannel account, register your application, and obtain `access_token` to integrate with our API.      See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/) for more information.      To use this API playground, click **Authorize** and sign in to ServiceChannel.<br>      <h3>Environment</h3> All calls in this API Reference point to the **SB2 environment**.      See [Environments](https://developer.servicechannel.com/basics/general/environments/) for more information.<br>      <h3>API Version</h3>The current stable version of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix that should be present.      When you omit the version prefix, calls point to the minimum supported version of the API.      We recommend you to always specify the API version to avoid possible errors.
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ServiceChannel.Api.Model;
using ServiceChannel.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ServiceChannel.Api.Test.Model
{
    /// <summary>
    ///  Class for testing SCServiceChannelServicesMessagingNegotiatedPriceListNegotiatedPriceList
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SCServiceChannelServicesMessagingNegotiatedPriceListNegotiatedPriceListTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SCServiceChannelServicesMessagingNegotiatedPriceListNegotiatedPriceList
        //private SCServiceChannelServicesMessagingNegotiatedPriceListNegotiatedPriceList instance;

        public SCServiceChannelServicesMessagingNegotiatedPriceListNegotiatedPriceListTests()
        {
            // TODO uncomment below to create an instance of SCServiceChannelServicesMessagingNegotiatedPriceListNegotiatedPriceList
            //instance = new SCServiceChannelServicesMessagingNegotiatedPriceListNegotiatedPriceList();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SCServiceChannelServicesMessagingNegotiatedPriceListNegotiatedPriceList
        /// </summary>
        [Fact]
        public void SCServiceChannelServicesMessagingNegotiatedPriceListNegotiatedPriceListInstanceTest()
        {
            // TODO uncomment below to test "IsType" SCServiceChannelServicesMessagingNegotiatedPriceListNegotiatedPriceList
            //Assert.IsType<SCServiceChannelServicesMessagingNegotiatedPriceListNegotiatedPriceList>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'PriceListName'
        /// </summary>
        [Fact]
        public void PriceListNameTest()
        {
            // TODO unit test for the property 'PriceListName'
        }
        /// <summary>
        /// Test the property 'EffectiveDate'
        /// </summary>
        [Fact]
        public void EffectiveDateTest()
        {
            // TODO unit test for the property 'EffectiveDate'
        }
        /// <summary>
        /// Test the property 'ExpirationDate'
        /// </summary>
        [Fact]
        public void ExpirationDateTest()
        {
            // TODO unit test for the property 'ExpirationDate'
        }
        /// <summary>
        /// Test the property 'ProviderId'
        /// </summary>
        [Fact]
        public void ProviderIdTest()
        {
            // TODO unit test for the property 'ProviderId'
        }
        /// <summary>
        /// Test the property 'ProviderName'
        /// </summary>
        [Fact]
        public void ProviderNameTest()
        {
            // TODO unit test for the property 'ProviderName'
        }
        /// <summary>
        /// Test the property 'SubscriberId'
        /// </summary>
        [Fact]
        public void SubscriberIdTest()
        {
            // TODO unit test for the property 'SubscriberId'
        }
        /// <summary>
        /// Test the property 'PriceListParts'
        /// </summary>
        [Fact]
        public void PriceListPartsTest()
        {
            // TODO unit test for the property 'PriceListParts'
        }
        /// <summary>
        /// Test the property 'PriceListFile'
        /// </summary>
        [Fact]
        public void PriceListFileTest()
        {
            // TODO unit test for the property 'PriceListFile'
        }
        /// <summary>
        /// Test the property 'Regions'
        /// </summary>
        [Fact]
        public void RegionsTest()
        {
            // TODO unit test for the property 'Regions'
        }
        /// <summary>
        /// Test the property 'Districts'
        /// </summary>
        [Fact]
        public void DistrictsTest()
        {
            // TODO unit test for the property 'Districts'
        }
        /// <summary>
        /// Test the property 'LocationIds'
        /// </summary>
        [Fact]
        public void LocationIdsTest()
        {
            // TODO unit test for the property 'LocationIds'
        }
        /// <summary>
        /// Test the property 'CreatedDate'
        /// </summary>
        [Fact]
        public void CreatedDateTest()
        {
            // TODO unit test for the property 'CreatedDate'
        }
        /// <summary>
        /// Test the property 'UpdatedDate'
        /// </summary>
        [Fact]
        public void UpdatedDateTest()
        {
            // TODO unit test for the property 'UpdatedDate'
        }
        /// <summary>
        /// Test the property 'CreatedBy'
        /// </summary>
        [Fact]
        public void CreatedByTest()
        {
            // TODO unit test for the property 'CreatedBy'
        }
        /// <summary>
        /// Test the property 'UserName'
        /// </summary>
        [Fact]
        public void UserNameTest()
        {
            // TODO unit test for the property 'UserName'
        }
        /// <summary>
        /// Test the property 'UpdatedBy'
        /// </summary>
        [Fact]
        public void UpdatedByTest()
        {
            // TODO unit test for the property 'UpdatedBy'
        }
        /// <summary>
        /// Test the property 'LNHName'
        /// </summary>
        [Fact]
        public void LNHNameTest()
        {
            // TODO unit test for the property 'LNHName'
        }
        /// <summary>
        /// Test the property 'LNHValues'
        /// </summary>
        [Fact]
        public void LNHValuesTest()
        {
            // TODO unit test for the property 'LNHValues'
        }
        /// <summary>
        /// Test the property 'PriceListOtherCharges'
        /// </summary>
        [Fact]
        public void PriceListOtherChargesTest()
        {
            // TODO unit test for the property 'PriceListOtherCharges'
        }

    }

}
