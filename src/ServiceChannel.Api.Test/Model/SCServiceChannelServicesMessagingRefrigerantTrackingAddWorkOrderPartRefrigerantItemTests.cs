/*
 * ServiceChannel API - v.3
 *
 * The ServiceChannel API is a RESTful and stateless API. It accepts standard HTTP verbs and supports OAuth 2.0 for authorizing requests.      Our API returns common HTTP status codes as well as JSON encapsulated data.      See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/) for the intro to ServiceChannel API.<br>      <h3>Authentication and Authorization</h3>You should have a ServiceChannel account, register your application, and obtain `access_token` to integrate with our API.      See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/) for more information.      To use this API playground, click **Authorize** and sign in to ServiceChannel.<br>      <h3>Environment</h3> All calls in this API Reference point to the **SB2 environment**.      See [Environments](https://developer.servicechannel.com/basics/general/environments/) for more information.<br>      <h3>API Version</h3>The current stable version of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix that should be present.      When you omit the version prefix, calls point to the minimum supported version of the API.      We recommend you to always specify the API version to avoid possible errors.
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ServiceChannel.Api.Model;
using ServiceChannel.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ServiceChannel.Api.Test.Model
{
    /// <summary>
    ///  Class for testing SCServiceChannelServicesMessagingRefrigerantTrackingAddWorkOrderPartRefrigerantItem
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SCServiceChannelServicesMessagingRefrigerantTrackingAddWorkOrderPartRefrigerantItemTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SCServiceChannelServicesMessagingRefrigerantTrackingAddWorkOrderPartRefrigerantItem
        //private SCServiceChannelServicesMessagingRefrigerantTrackingAddWorkOrderPartRefrigerantItem instance;

        public SCServiceChannelServicesMessagingRefrigerantTrackingAddWorkOrderPartRefrigerantItemTests()
        {
            // TODO uncomment below to create an instance of SCServiceChannelServicesMessagingRefrigerantTrackingAddWorkOrderPartRefrigerantItem
            //instance = new SCServiceChannelServicesMessagingRefrigerantTrackingAddWorkOrderPartRefrigerantItem();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SCServiceChannelServicesMessagingRefrigerantTrackingAddWorkOrderPartRefrigerantItem
        /// </summary>
        [Fact]
        public void SCServiceChannelServicesMessagingRefrigerantTrackingAddWorkOrderPartRefrigerantItemInstanceTest()
        {
            // TODO uncomment below to test "IsType" SCServiceChannelServicesMessagingRefrigerantTrackingAddWorkOrderPartRefrigerantItem
            //Assert.IsType<SCServiceChannelServicesMessagingRefrigerantTrackingAddWorkOrderPartRefrigerantItem>(instance);
        }


        /// <summary>
        /// Test the property 'AssetId'
        /// </summary>
        [Fact]
        public void AssetIdTest()
        {
            // TODO unit test for the property 'AssetId'
        }
        /// <summary>
        /// Test the property 'RecId'
        /// </summary>
        [Fact]
        public void RecIdTest()
        {
            // TODO unit test for the property 'RecId'
        }
        /// <summary>
        /// Test the property 'Quantity'
        /// </summary>
        [Fact]
        public void QuantityTest()
        {
            // TODO unit test for the property 'Quantity'
        }
        /// <summary>
        /// Test the property 'UnitCost'
        /// </summary>
        [Fact]
        public void UnitCostTest()
        {
            // TODO unit test for the property 'UnitCost'
        }
        /// <summary>
        /// Test the property 'IsRefrigerant'
        /// </summary>
        [Fact]
        public void IsRefrigerantTest()
        {
            // TODO unit test for the property 'IsRefrigerant'
        }
        /// <summary>
        /// Test the property 'IsInventoryPart'
        /// </summary>
        [Fact]
        public void IsInventoryPartTest()
        {
            // TODO unit test for the property 'IsInventoryPart'
        }
        /// <summary>
        /// Test the property 'UseDate'
        /// </summary>
        [Fact]
        public void UseDateTest()
        {
            // TODO unit test for the property 'UseDate'
        }
        /// <summary>
        /// Test the property 'UseDateStr'
        /// </summary>
        [Fact]
        public void UseDateStrTest()
        {
            // TODO unit test for the property 'UseDateStr'
        }
        /// <summary>
        /// Test the property 'ReasonCode'
        /// </summary>
        [Fact]
        public void ReasonCodeTest()
        {
            // TODO unit test for the property 'ReasonCode'
        }
        /// <summary>
        /// Test the property 'ReasonCodeId'
        /// </summary>
        [Fact]
        public void ReasonCodeIdTest()
        {
            // TODO unit test for the property 'ReasonCodeId'
        }
        /// <summary>
        /// Test the property 'PartNumber'
        /// </summary>
        [Fact]
        public void PartNumberTest()
        {
            // TODO unit test for the property 'PartNumber'
        }
        /// <summary>
        /// Test the property 'PartName'
        /// </summary>
        [Fact]
        public void PartNameTest()
        {
            // TODO unit test for the property 'PartName'
        }
        /// <summary>
        /// Test the property 'PartGroup'
        /// </summary>
        [Fact]
        public void PartGroupTest()
        {
            // TODO unit test for the property 'PartGroup'
        }
        /// <summary>
        /// Test the property 'PartGroupId'
        /// </summary>
        [Fact]
        public void PartGroupIdTest()
        {
            // TODO unit test for the property 'PartGroupId'
        }
        /// <summary>
        /// Test the property 'SupplierName'
        /// </summary>
        [Fact]
        public void SupplierNameTest()
        {
            // TODO unit test for the property 'SupplierName'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'RefrigerantChargeOptionsId'
        /// </summary>
        [Fact]
        public void RefrigerantChargeOptionsIdTest()
        {
            // TODO unit test for the property 'RefrigerantChargeOptionsId'
        }
        /// <summary>
        /// Test the property 'RefrigerantChargeVendor'
        /// </summary>
        [Fact]
        public void RefrigerantChargeVendorTest()
        {
            // TODO unit test for the property 'RefrigerantChargeVendor'
        }
        /// <summary>
        /// Test the property 'InventoryLocationId'
        /// </summary>
        [Fact]
        public void InventoryLocationIdTest()
        {
            // TODO unit test for the property 'InventoryLocationId'
        }
        /// <summary>
        /// Test the property 'InventoryLocationGuid'
        /// </summary>
        [Fact]
        public void InventoryLocationGuidTest()
        {
            // TODO unit test for the property 'InventoryLocationGuid'
        }
        /// <summary>
        /// Test the property 'InventoryPartId'
        /// </summary>
        [Fact]
        public void InventoryPartIdTest()
        {
            // TODO unit test for the property 'InventoryPartId'
        }
        /// <summary>
        /// Test the property 'RefrigerantUseReason'
        /// </summary>
        [Fact]
        public void RefrigerantUseReasonTest()
        {
            // TODO unit test for the property 'RefrigerantUseReason'
        }
        /// <summary>
        /// Test the property 'RefrigerantRemovalStatus'
        /// </summary>
        [Fact]
        public void RefrigerantRemovalStatusTest()
        {
            // TODO unit test for the property 'RefrigerantRemovalStatus'
        }
        /// <summary>
        /// Test the property 'RefrigerantTypeId'
        /// </summary>
        [Fact]
        public void RefrigerantTypeIdTest()
        {
            // TODO unit test for the property 'RefrigerantTypeId'
        }
        /// <summary>
        /// Test the property 'RefrigerantTypeName'
        /// </summary>
        [Fact]
        public void RefrigerantTypeNameTest()
        {
            // TODO unit test for the property 'RefrigerantTypeName'
        }
        /// <summary>
        /// Test the property 'SubmitMoeQtyExceeded'
        /// </summary>
        [Fact]
        public void SubmitMoeQtyExceededTest()
        {
            // TODO unit test for the property 'SubmitMoeQtyExceeded'
        }
        /// <summary>
        /// Test the property 'MoeNumber'
        /// </summary>
        [Fact]
        public void MoeNumberTest()
        {
            // TODO unit test for the property 'MoeNumber'
        }
        /// <summary>
        /// Test the property 'IsRetrofit'
        /// </summary>
        [Fact]
        public void IsRetrofitTest()
        {
            // TODO unit test for the property 'IsRetrofit'
        }

    }

}
