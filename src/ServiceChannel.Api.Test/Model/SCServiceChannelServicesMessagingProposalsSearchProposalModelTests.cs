/*
 * ServiceChannel API - v.3
 *
 * The ServiceChannel API is a RESTful and stateless API. It accepts standard HTTP verbs and supports OAuth 2.0 for authorizing requests.      Our API returns common HTTP status codes as well as JSON encapsulated data.      See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/) for the intro to ServiceChannel API.<br>      <h3>Authentication and Authorization</h3>You should have a ServiceChannel account, register your application, and obtain `access_token` to integrate with our API.      See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/) for more information.      To use this API playground, click **Authorize** and sign in to ServiceChannel.<br>      <h3>Environment</h3> All calls in this API Reference point to the **SB2 environment**.      See [Environments](https://developer.servicechannel.com/basics/general/environments/) for more information.<br>      <h3>API Version</h3>The current stable version of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix that should be present.      When you omit the version prefix, calls point to the minimum supported version of the API.      We recommend you to always specify the API version to avoid possible errors.
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ServiceChannel.Api.Model;
using ServiceChannel.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ServiceChannel.Api.Test.Model
{
    /// <summary>
    ///  Class for testing SCServiceChannelServicesMessagingProposalsSearchProposalModel
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SCServiceChannelServicesMessagingProposalsSearchProposalModelTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SCServiceChannelServicesMessagingProposalsSearchProposalModel
        //private SCServiceChannelServicesMessagingProposalsSearchProposalModel instance;

        public SCServiceChannelServicesMessagingProposalsSearchProposalModelTests()
        {
            // TODO uncomment below to create an instance of SCServiceChannelServicesMessagingProposalsSearchProposalModel
            //instance = new SCServiceChannelServicesMessagingProposalsSearchProposalModel();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SCServiceChannelServicesMessagingProposalsSearchProposalModel
        /// </summary>
        [Fact]
        public void SCServiceChannelServicesMessagingProposalsSearchProposalModelInstanceTest()
        {
            // TODO uncomment below to test "IsType" SCServiceChannelServicesMessagingProposalsSearchProposalModel
            //Assert.IsType<SCServiceChannelServicesMessagingProposalsSearchProposalModel>(instance);
        }


        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Fact]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'CurrentLevelProposal'
        /// </summary>
        [Fact]
        public void CurrentLevelProposalTest()
        {
            // TODO unit test for the property 'CurrentLevelProposal'
        }
        /// <summary>
        /// Test the property 'WorkOrderId'
        /// </summary>
        [Fact]
        public void WorkOrderIdTest()
        {
            // TODO unit test for the property 'WorkOrderId'
        }
        /// <summary>
        /// Test the property 'ProposalId'
        /// </summary>
        [Fact]
        public void ProposalIdTest()
        {
            // TODO unit test for the property 'ProposalId'
        }
        /// <summary>
        /// Test the property 'PurchaseOrderId'
        /// </summary>
        [Fact]
        public void PurchaseOrderIdTest()
        {
            // TODO unit test for the property 'PurchaseOrderId'
        }
        /// <summary>
        /// Test the property 'ProjectId'
        /// </summary>
        [Fact]
        public void ProjectIdTest()
        {
            // TODO unit test for the property 'ProjectId'
        }
        /// <summary>
        /// Test the property 'Projects'
        /// </summary>
        [Fact]
        public void ProjectsTest()
        {
            // TODO unit test for the property 'Projects'
        }
        /// <summary>
        /// Test the property 'DateType'
        /// </summary>
        [Fact]
        public void DateTypeTest()
        {
            // TODO unit test for the property 'DateType'
        }
        /// <summary>
        /// Test the property 'ProposalFilterDateType'
        /// </summary>
        [Fact]
        public void ProposalFilterDateTypeTest()
        {
            // TODO unit test for the property 'ProposalFilterDateType'
        }
        /// <summary>
        /// Test the property 'ProposalDateFrom'
        /// </summary>
        [Fact]
        public void ProposalDateFromTest()
        {
            // TODO unit test for the property 'ProposalDateFrom'
        }
        /// <summary>
        /// Test the property 'ProposalDateTo'
        /// </summary>
        [Fact]
        public void ProposalDateToTest()
        {
            // TODO unit test for the property 'ProposalDateTo'
        }
        /// <summary>
        /// Test the property 'ProposalDateFromString'
        /// </summary>
        [Fact]
        public void ProposalDateFromStringTest()
        {
            // TODO unit test for the property 'ProposalDateFromString'
        }
        /// <summary>
        /// Test the property 'ProposalDateToString'
        /// </summary>
        [Fact]
        public void ProposalDateToStringTest()
        {
            // TODO unit test for the property 'ProposalDateToString'
        }
        /// <summary>
        /// Test the property 'SortBy'
        /// </summary>
        [Fact]
        public void SortByTest()
        {
            // TODO unit test for the property 'SortBy'
        }
        /// <summary>
        /// Test the property 'ReportWithAttachmentsOnly'
        /// </summary>
        [Fact]
        public void ReportWithAttachmentsOnlyTest()
        {
            // TODO unit test for the property 'ReportWithAttachmentsOnly'
        }
        /// <summary>
        /// Test the property 'ExcludePropAssociatedWithWo'
        /// </summary>
        [Fact]
        public void ExcludePropAssociatedWithWoTest()
        {
            // TODO unit test for the property 'ExcludePropAssociatedWithWo'
        }
        /// <summary>
        /// Test the property 'Report'
        /// </summary>
        [Fact]
        public void ReportTest()
        {
            // TODO unit test for the property 'Report'
        }
        /// <summary>
        /// Test the property 'Priorities'
        /// </summary>
        [Fact]
        public void PrioritiesTest()
        {
            // TODO unit test for the property 'Priorities'
        }
        /// <summary>
        /// Test the property 'ProposalStatuses'
        /// </summary>
        [Fact]
        public void ProposalStatusesTest()
        {
            // TODO unit test for the property 'ProposalStatuses'
        }
        /// <summary>
        /// Test the property 'CategoriesIdName'
        /// </summary>
        [Fact]
        public void CategoriesIdNameTest()
        {
            // TODO unit test for the property 'CategoriesIdName'
        }
        /// <summary>
        /// Test the property 'TradesIdName'
        /// </summary>
        [Fact]
        public void TradesIdNameTest()
        {
            // TODO unit test for the property 'TradesIdName'
        }
        /// <summary>
        /// Test the property 'Locations'
        /// </summary>
        [Fact]
        public void LocationsTest()
        {
            // TODO unit test for the property 'Locations'
        }
        /// <summary>
        /// Test the property 'LocationShortNames'
        /// </summary>
        [Fact]
        public void LocationShortNamesTest()
        {
            // TODO unit test for the property 'LocationShortNames'
        }
        /// <summary>
        /// Test the property 'LocationShortAddresses'
        /// </summary>
        [Fact]
        public void LocationShortAddressesTest()
        {
            // TODO unit test for the property 'LocationShortAddresses'
        }
        /// <summary>
        /// Test the property 'LocationCities'
        /// </summary>
        [Fact]
        public void LocationCitiesTest()
        {
            // TODO unit test for the property 'LocationCities'
        }
        /// <summary>
        /// Test the property 'StateIds'
        /// </summary>
        [Fact]
        public void StateIdsTest()
        {
            // TODO unit test for the property 'StateIds'
        }
        /// <summary>
        /// Test the property 'CountryIds'
        /// </summary>
        [Fact]
        public void CountryIdsTest()
        {
            // TODO unit test for the property 'CountryIds'
        }
        /// <summary>
        /// Test the property 'Regions'
        /// </summary>
        [Fact]
        public void RegionsTest()
        {
            // TODO unit test for the property 'Regions'
        }
        /// <summary>
        /// Test the property 'Districts'
        /// </summary>
        [Fact]
        public void DistrictsTest()
        {
            // TODO unit test for the property 'Districts'
        }
        /// <summary>
        /// Test the property 'States'
        /// </summary>
        [Fact]
        public void StatesTest()
        {
            // TODO unit test for the property 'States'
        }
        /// <summary>
        /// Test the property 'Countries'
        /// </summary>
        [Fact]
        public void CountriesTest()
        {
            // TODO unit test for the property 'Countries'
        }
        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Fact]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }
        /// <summary>
        /// Test the property 'LocationNoteHeaders'
        /// </summary>
        [Fact]
        public void LocationNoteHeadersTest()
        {
            // TODO unit test for the property 'LocationNoteHeaders'
        }
        /// <summary>
        /// Test the property 'LineItemReport'
        /// </summary>
        [Fact]
        public void LineItemReportTest()
        {
            // TODO unit test for the property 'LineItemReport'
        }
        /// <summary>
        /// Test the property 'Provider'
        /// </summary>
        [Fact]
        public void ProviderTest()
        {
            // TODO unit test for the property 'Provider'
        }
        /// <summary>
        /// Test the property 'ChangedProposals'
        /// </summary>
        [Fact]
        public void ChangedProposalsTest()
        {
            // TODO unit test for the property 'ChangedProposals'
        }
        /// <summary>
        /// Test the property 'ProposalIids'
        /// </summary>
        [Fact]
        public void ProposalIidsTest()
        {
            // TODO unit test for the property 'ProposalIids'
        }
        /// <summary>
        /// Test the property 'ProposalNumber'
        /// </summary>
        [Fact]
        public void ProposalNumberTest()
        {
            // TODO unit test for the property 'ProposalNumber'
        }
        /// <summary>
        /// Test the property 'ProposalWO'
        /// </summary>
        [Fact]
        public void ProposalWOTest()
        {
            // TODO unit test for the property 'ProposalWO'
        }
        /// <summary>
        /// Test the property 'ProviderId'
        /// </summary>
        [Fact]
        public void ProviderIdTest()
        {
            // TODO unit test for the property 'ProviderId'
        }
        /// <summary>
        /// Test the property 'LocationId'
        /// </summary>
        [Fact]
        public void LocationIdTest()
        {
            // TODO unit test for the property 'LocationId'
        }
        /// <summary>
        /// Test the property 'SaveReport'
        /// </summary>
        [Fact]
        public void SaveReportTest()
        {
            // TODO unit test for the property 'SaveReport'
        }
        /// <summary>
        /// Test the property 'ALP'
        /// </summary>
        [Fact]
        public void ALPTest()
        {
            // TODO unit test for the property 'ALP'
        }
        /// <summary>
        /// Test the property 'Labels'
        /// </summary>
        [Fact]
        public void LabelsTest()
        {
            // TODO unit test for the property 'Labels'
        }
        /// <summary>
        /// Test the property 'IncludeMlpCategory'
        /// </summary>
        [Fact]
        public void IncludeMlpCategoryTest()
        {
            // TODO unit test for the property 'IncludeMlpCategory'
        }
        /// <summary>
        /// Test the property 'SubscribersIdName'
        /// </summary>
        [Fact]
        public void SubscribersIdNameTest()
        {
            // TODO unit test for the property 'SubscribersIdName'
        }
        /// <summary>
        /// Test the property 'IsAssignedToMe'
        /// </summary>
        [Fact]
        public void IsAssignedToMeTest()
        {
            // TODO unit test for the property 'IsAssignedToMe'
        }
        /// <summary>
        /// Test the property 'HasAssignee'
        /// </summary>
        [Fact]
        public void HasAssigneeTest()
        {
            // TODO unit test for the property 'HasAssignee'
        }
        /// <summary>
        /// Test the property 'IncludeOverrideProposals'
        /// </summary>
        [Fact]
        public void IncludeOverrideProposalsTest()
        {
            // TODO unit test for the property 'IncludeOverrideProposals'
        }
        /// <summary>
        /// Test the property 'AmountFrom'
        /// </summary>
        [Fact]
        public void AmountFromTest()
        {
            // TODO unit test for the property 'AmountFrom'
        }
        /// <summary>
        /// Test the property 'AmountTo'
        /// </summary>
        [Fact]
        public void AmountToTest()
        {
            // TODO unit test for the property 'AmountTo'
        }
        /// <summary>
        /// Test the property 'StatusesActiveTab'
        /// </summary>
        [Fact]
        public void StatusesActiveTabTest()
        {
            // TODO unit test for the property 'StatusesActiveTab'
        }
        /// <summary>
        /// Test the property 'ProposalsIds'
        /// </summary>
        [Fact]
        public void ProposalsIdsTest()
        {
            // TODO unit test for the property 'ProposalsIds'
        }
        /// <summary>
        /// Test the property 'SortField'
        /// </summary>
        [Fact]
        public void SortFieldTest()
        {
            // TODO unit test for the property 'SortField'
        }
        /// <summary>
        /// Test the property 'SortOrder'
        /// </summary>
        [Fact]
        public void SortOrderTest()
        {
            // TODO unit test for the property 'SortOrder'
        }
        /// <summary>
        /// Test the property 'Currency'
        /// </summary>
        [Fact]
        public void CurrencyTest()
        {
            // TODO unit test for the property 'Currency'
        }
        /// <summary>
        /// Test the property 'Offset'
        /// </summary>
        [Fact]
        public void OffsetTest()
        {
            // TODO unit test for the property 'Offset'
        }
        /// <summary>
        /// Test the property 'Count'
        /// </summary>
        [Fact]
        public void CountTest()
        {
            // TODO unit test for the property 'Count'
        }
        /// <summary>
        /// Test the property 'Language'
        /// </summary>
        [Fact]
        public void LanguageTest()
        {
            // TODO unit test for the property 'Language'
        }
        /// <summary>
        /// Test the property 'AllUsers'
        /// </summary>
        [Fact]
        public void AllUsersTest()
        {
            // TODO unit test for the property 'AllUsers'
        }

    }

}
