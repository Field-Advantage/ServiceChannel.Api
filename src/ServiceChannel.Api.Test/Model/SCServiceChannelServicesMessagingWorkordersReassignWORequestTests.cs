/*
 * ServiceChannel API - v.3
 *
 * The ServiceChannel API is a RESTful and stateless API. It accepts standard HTTP verbs and supports OAuth 2.0 for authorizing requests.      Our API returns common HTTP status codes as well as JSON encapsulated data.      See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/) for the intro to ServiceChannel API.<br>      <h3>Authentication and Authorization</h3>You should have a ServiceChannel account, register your application, and obtain `access_token` to integrate with our API.      See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/) for more information.      To use this API playground, click **Authorize** and sign in to ServiceChannel.<br>      <h3>Environment</h3> All calls in this API Reference point to the **SB2 environment**.      See [Environments](https://developer.servicechannel.com/basics/general/environments/) for more information.<br>      <h3>API Version</h3>The current stable version of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix that should be present.      When you omit the version prefix, calls point to the minimum supported version of the API.      We recommend you to always specify the API version to avoid possible errors.
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ServiceChannel.Api.Model;
using ServiceChannel.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ServiceChannel.Api.Test.Model
{
    /// <summary>
    ///  Class for testing SCServiceChannelServicesMessagingWorkordersReassignWORequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SCServiceChannelServicesMessagingWorkordersReassignWORequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SCServiceChannelServicesMessagingWorkordersReassignWORequest
        //private SCServiceChannelServicesMessagingWorkordersReassignWORequest instance;

        public SCServiceChannelServicesMessagingWorkordersReassignWORequestTests()
        {
            // TODO uncomment below to create an instance of SCServiceChannelServicesMessagingWorkordersReassignWORequest
            //instance = new SCServiceChannelServicesMessagingWorkordersReassignWORequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SCServiceChannelServicesMessagingWorkordersReassignWORequest
        /// </summary>
        [Fact]
        public void SCServiceChannelServicesMessagingWorkordersReassignWORequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" SCServiceChannelServicesMessagingWorkordersReassignWORequest
            //Assert.IsType<SCServiceChannelServicesMessagingWorkordersReassignWORequest>(instance);
        }


        /// <summary>
        /// Test the property 'WorkorderId'
        /// </summary>
        [Fact]
        public void WorkorderIdTest()
        {
            // TODO unit test for the property 'WorkorderId'
        }
        /// <summary>
        /// Test the property 'Trade'
        /// </summary>
        [Fact]
        public void TradeTest()
        {
            // TODO unit test for the property 'Trade'
        }
        /// <summary>
        /// Test the property 'Problem'
        /// </summary>
        [Fact]
        public void ProblemTest()
        {
            // TODO unit test for the property 'Problem'
        }
        /// <summary>
        /// Test the property 'ProblemCode'
        /// </summary>
        [Fact]
        public void ProblemCodeTest()
        {
            // TODO unit test for the property 'ProblemCode'
        }
        /// <summary>
        /// Test the property 'CurrencyId'
        /// </summary>
        [Fact]
        public void CurrencyIdTest()
        {
            // TODO unit test for the property 'CurrencyId'
        }
        /// <summary>
        /// Test the property 'Nte'
        /// </summary>
        [Fact]
        public void NteTest()
        {
            // TODO unit test for the property 'Nte'
        }
        /// <summary>
        /// Test the property 'GlCode'
        /// </summary>
        [Fact]
        public void GlCodeTest()
        {
            // TODO unit test for the property 'GlCode'
        }
        /// <summary>
        /// Test the property 'ReasonId'
        /// </summary>
        [Fact]
        public void ReasonIdTest()
        {
            // TODO unit test for the property 'ReasonId'
        }
        /// <summary>
        /// Test the property 'ProviderId'
        /// </summary>
        [Fact]
        public void ProviderIdTest()
        {
            // TODO unit test for the property 'ProviderId'
        }
        /// <summary>
        /// Test the property 'Category'
        /// </summary>
        [Fact]
        public void CategoryTest()
        {
            // TODO unit test for the property 'Category'
        }
        /// <summary>
        /// Test the property 'Priority'
        /// </summary>
        [Fact]
        public void PriorityTest()
        {
            // TODO unit test for the property 'Priority'
        }
        /// <summary>
        /// Test the property 'Note'
        /// </summary>
        [Fact]
        public void NoteTest()
        {
            // TODO unit test for the property 'Note'
        }
        /// <summary>
        /// Test the property 'ProcessName'
        /// </summary>
        [Fact]
        public void ProcessNameTest()
        {
            // TODO unit test for the property 'ProcessName'
        }
        /// <summary>
        /// Test the property 'RequestEmail'
        /// </summary>
        [Fact]
        public void RequestEmailTest()
        {
            // TODO unit test for the property 'RequestEmail'
        }
        /// <summary>
        /// Test the property 'RequestEmailCopy'
        /// </summary>
        [Fact]
        public void RequestEmailCopyTest()
        {
            // TODO unit test for the property 'RequestEmailCopy'
        }
        /// <summary>
        /// Test the property 'NotifyProvider'
        /// </summary>
        [Fact]
        public void NotifyProviderTest()
        {
            // TODO unit test for the property 'NotifyProvider'
        }
        /// <summary>
        /// Test the property 'AdditionalApprovalCodes'
        /// </summary>
        [Fact]
        public void AdditionalApprovalCodesTest()
        {
            // TODO unit test for the property 'AdditionalApprovalCodes'
        }
        /// <summary>
        /// Test the property 'ScheduledDate'
        /// </summary>
        [Fact]
        public void ScheduledDateTest()
        {
            // TODO unit test for the property 'ScheduledDate'
        }
        /// <summary>
        /// Test the property 'OriginalETA'
        /// </summary>
        [Fact]
        public void OriginalETATest()
        {
            // TODO unit test for the property 'OriginalETA'
        }
        /// <summary>
        /// Test the property 'RefreshApprovalCodes'
        /// </summary>
        [Fact]
        public void RefreshApprovalCodesTest()
        {
            // TODO unit test for the property 'RefreshApprovalCodes'
        }
        /// <summary>
        /// Test the property 'RecallWorkOrderId'
        /// </summary>
        [Fact]
        public void RecallWorkOrderIdTest()
        {
            // TODO unit test for the property 'RecallWorkOrderId'
        }
        /// <summary>
        /// Test the property 'LocationId'
        /// </summary>
        [Fact]
        public void LocationIdTest()
        {
            // TODO unit test for the property 'LocationId'
        }
        /// <summary>
        /// Test the property 'PurchaseOrder'
        /// </summary>
        [Fact]
        public void PurchaseOrderTest()
        {
            // TODO unit test for the property 'PurchaseOrder'
        }
        /// <summary>
        /// Test the property 'ApiRequest'
        /// </summary>
        [Fact]
        public void ApiRequestTest()
        {
            // TODO unit test for the property 'ApiRequest'
        }
        /// <summary>
        /// Test the property 'Actor'
        /// </summary>
        [Fact]
        public void ActorTest()
        {
            // TODO unit test for the property 'Actor'
        }
        /// <summary>
        /// Test the property 'LabelId'
        /// </summary>
        [Fact]
        public void LabelIdTest()
        {
            // TODO unit test for the property 'LabelId'
        }
        /// <summary>
        /// Test the property 'Label'
        /// </summary>
        [Fact]
        public void LabelTest()
        {
            // TODO unit test for the property 'Label'
        }
        /// <summary>
        /// Test the property 'DeleteLabel'
        /// </summary>
        [Fact]
        public void DeleteLabelTest()
        {
            // TODO unit test for the property 'DeleteLabel'
        }
        /// <summary>
        /// Test the property 'CategoryId'
        /// </summary>
        [Fact]
        public void CategoryIdTest()
        {
            // TODO unit test for the property 'CategoryId'
        }

    }

}
