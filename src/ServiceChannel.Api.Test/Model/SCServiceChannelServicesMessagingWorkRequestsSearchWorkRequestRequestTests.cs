/*
 * ServiceChannel API - v.3
 *
 * The ServiceChannel API is a RESTful and stateless API. It accepts standard HTTP verbs and supports OAuth 2.0 for authorizing requests.      Our API returns common HTTP status codes as well as JSON encapsulated data.      See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/) for the intro to ServiceChannel API.<br>      <h3>Authentication and Authorization</h3>You should have a ServiceChannel account, register your application, and obtain `access_token` to integrate with our API.      See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/) for more information.      To use this API playground, click **Authorize** and sign in to ServiceChannel.<br>      <h3>Environment</h3> All calls in this API Reference point to the **SB2 environment**.      See [Environments](https://developer.servicechannel.com/basics/general/environments/) for more information.<br>      <h3>API Version</h3>The current stable version of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix that should be present.      When you omit the version prefix, calls point to the minimum supported version of the API.      We recommend you to always specify the API version to avoid possible errors.
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ServiceChannel.Api.Model;
using ServiceChannel.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ServiceChannel.Api.Test.Model
{
    /// <summary>
    ///  Class for testing SCServiceChannelServicesMessagingWorkRequestsSearchWorkRequestRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SCServiceChannelServicesMessagingWorkRequestsSearchWorkRequestRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SCServiceChannelServicesMessagingWorkRequestsSearchWorkRequestRequest
        //private SCServiceChannelServicesMessagingWorkRequestsSearchWorkRequestRequest instance;

        public SCServiceChannelServicesMessagingWorkRequestsSearchWorkRequestRequestTests()
        {
            // TODO uncomment below to create an instance of SCServiceChannelServicesMessagingWorkRequestsSearchWorkRequestRequest
            //instance = new SCServiceChannelServicesMessagingWorkRequestsSearchWorkRequestRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SCServiceChannelServicesMessagingWorkRequestsSearchWorkRequestRequest
        /// </summary>
        [Fact]
        public void SCServiceChannelServicesMessagingWorkRequestsSearchWorkRequestRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" SCServiceChannelServicesMessagingWorkRequestsSearchWorkRequestRequest
            //Assert.IsType<SCServiceChannelServicesMessagingWorkRequestsSearchWorkRequestRequest>(instance);
        }


        /// <summary>
        /// Test the property 'Ids'
        /// </summary>
        [Fact]
        public void IdsTest()
        {
            // TODO unit test for the property 'Ids'
        }
        /// <summary>
        /// Test the property 'SubscriberIds'
        /// </summary>
        [Fact]
        public void SubscriberIdsTest()
        {
            // TODO unit test for the property 'SubscriberIds'
        }
        /// <summary>
        /// Test the property 'ProviderIds'
        /// </summary>
        [Fact]
        public void ProviderIdsTest()
        {
            // TODO unit test for the property 'ProviderIds'
        }
        /// <summary>
        /// Test the property 'LocationIds'
        /// </summary>
        [Fact]
        public void LocationIdsTest()
        {
            // TODO unit test for the property 'LocationIds'
        }
        /// <summary>
        /// Test the property 'CategoryIds'
        /// </summary>
        [Fact]
        public void CategoryIdsTest()
        {
            // TODO unit test for the property 'CategoryIds'
        }
        /// <summary>
        /// Test the property 'StatusIds'
        /// </summary>
        [Fact]
        public void StatusIdsTest()
        {
            // TODO unit test for the property 'StatusIds'
        }
        /// <summary>
        /// Test the property 'ExtendedStatusIds'
        /// </summary>
        [Fact]
        public void ExtendedStatusIdsTest()
        {
            // TODO unit test for the property 'ExtendedStatusIds'
        }
        /// <summary>
        /// Test the property 'PriorityIds'
        /// </summary>
        [Fact]
        public void PriorityIdsTest()
        {
            // TODO unit test for the property 'PriorityIds'
        }
        /// <summary>
        /// Test the property 'TradeIds'
        /// </summary>
        [Fact]
        public void TradeIdsTest()
        {
            // TODO unit test for the property 'TradeIds'
        }
        /// <summary>
        /// Test the property 'ClosedReasonIds'
        /// </summary>
        [Fact]
        public void ClosedReasonIdsTest()
        {
            // TODO unit test for the property 'ClosedReasonIds'
        }
        /// <summary>
        /// Test the property 'EventIds'
        /// </summary>
        [Fact]
        public void EventIdsTest()
        {
            // TODO unit test for the property 'EventIds'
        }
        /// <summary>
        /// Test the property 'WorkOrderIds'
        /// </summary>
        [Fact]
        public void WorkOrderIdsTest()
        {
            // TODO unit test for the property 'WorkOrderIds'
        }
        /// <summary>
        /// Test the property 'AssetIds'
        /// </summary>
        [Fact]
        public void AssetIdsTest()
        {
            // TODO unit test for the property 'AssetIds'
        }
        /// <summary>
        /// Test the property 'CallDateFrom'
        /// </summary>
        [Fact]
        public void CallDateFromTest()
        {
            // TODO unit test for the property 'CallDateFrom'
        }
        /// <summary>
        /// Test the property 'CallDateTo'
        /// </summary>
        [Fact]
        public void CallDateToTest()
        {
            // TODO unit test for the property 'CallDateTo'
        }
        /// <summary>
        /// Test the property 'ScheduledDateFrom'
        /// </summary>
        [Fact]
        public void ScheduledDateFromTest()
        {
            // TODO unit test for the property 'ScheduledDateFrom'
        }
        /// <summary>
        /// Test the property 'ScheduledDateTo'
        /// </summary>
        [Fact]
        public void ScheduledDateToTest()
        {
            // TODO unit test for the property 'ScheduledDateTo'
        }
        /// <summary>
        /// Test the property 'ClosedDateFrom'
        /// </summary>
        [Fact]
        public void ClosedDateFromTest()
        {
            // TODO unit test for the property 'ClosedDateFrom'
        }
        /// <summary>
        /// Test the property 'ClosedDateTo'
        /// </summary>
        [Fact]
        public void ClosedDateToTest()
        {
            // TODO unit test for the property 'ClosedDateTo'
        }
        /// <summary>
        /// Test the property 'SortField'
        /// </summary>
        [Fact]
        public void SortFieldTest()
        {
            // TODO unit test for the property 'SortField'
        }
        /// <summary>
        /// Test the property 'SortDirection'
        /// </summary>
        [Fact]
        public void SortDirectionTest()
        {
            // TODO unit test for the property 'SortDirection'
        }
        /// <summary>
        /// Test the property 'Page'
        /// </summary>
        [Fact]
        public void PageTest()
        {
            // TODO unit test for the property 'Page'
        }
        /// <summary>
        /// Test the property 'PageSize'
        /// </summary>
        [Fact]
        public void PageSizeTest()
        {
            // TODO unit test for the property 'PageSize'
        }

    }

}
