/*
 * ServiceChannel API - v.3
 *
 * The ServiceChannel API is a RESTful and stateless API. It accepts standard HTTP verbs and supports OAuth 2.0 for authorizing requests.      Our API returns common HTTP status codes as well as JSON encapsulated data.      See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/) for the intro to ServiceChannel API.<br>      <h3>Authentication and Authorization</h3>You should have a ServiceChannel account, register your application, and obtain `access_token` to integrate with our API.      See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/) for more information.      To use this API playground, click **Authorize** and sign in to ServiceChannel.<br>      <h3>Environment</h3> All calls in this API Reference point to the **SB2 environment**.      See [Environments](https://developer.servicechannel.com/basics/general/environments/) for more information.<br>      <h3>API Version</h3>The current stable version of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix that should be present.      When you omit the version prefix, calls point to the minimum supported version of the API.      We recommend you to always specify the API version to avoid possible errors.
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ServiceChannel.Api.Model;
using ServiceChannel.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ServiceChannel.Api.Test.Model
{
    /// <summary>
    ///  Class for testing SCServiceChannelServicesMessagingSiteAuditAuditReportExternal
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SCServiceChannelServicesMessagingSiteAuditAuditReportExternalTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SCServiceChannelServicesMessagingSiteAuditAuditReportExternal
        //private SCServiceChannelServicesMessagingSiteAuditAuditReportExternal instance;

        public SCServiceChannelServicesMessagingSiteAuditAuditReportExternalTests()
        {
            // TODO uncomment below to create an instance of SCServiceChannelServicesMessagingSiteAuditAuditReportExternal
            //instance = new SCServiceChannelServicesMessagingSiteAuditAuditReportExternal();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SCServiceChannelServicesMessagingSiteAuditAuditReportExternal
        /// </summary>
        [Fact]
        public void SCServiceChannelServicesMessagingSiteAuditAuditReportExternalInstanceTest()
        {
            // TODO uncomment below to test "IsType" SCServiceChannelServicesMessagingSiteAuditAuditReportExternal
            //Assert.IsType<SCServiceChannelServicesMessagingSiteAuditAuditReportExternal>(instance);
        }


        /// <summary>
        /// Test the property 'TemplateTypeName'
        /// </summary>
        [Fact]
        public void TemplateTypeNameTest()
        {
            // TODO unit test for the property 'TemplateTypeName'
        }
        /// <summary>
        /// Test the property 'AuditId'
        /// </summary>
        [Fact]
        public void AuditIdTest()
        {
            // TODO unit test for the property 'AuditId'
        }
        /// <summary>
        /// Test the property 'StoreId'
        /// </summary>
        [Fact]
        public void StoreIdTest()
        {
            // TODO unit test for the property 'StoreId'
        }
        /// <summary>
        /// Test the property 'LocationName'
        /// </summary>
        [Fact]
        public void LocationNameTest()
        {
            // TODO unit test for the property 'LocationName'
        }
        /// <summary>
        /// Test the property 'Region'
        /// </summary>
        [Fact]
        public void RegionTest()
        {
            // TODO unit test for the property 'Region'
        }
        /// <summary>
        /// Test the property 'District'
        /// </summary>
        [Fact]
        public void DistrictTest()
        {
            // TODO unit test for the property 'District'
        }
        /// <summary>
        /// Test the property 'AreaName'
        /// </summary>
        [Fact]
        public void AreaNameTest()
        {
            // TODO unit test for the property 'AreaName'
        }
        /// <summary>
        /// Test the property 'CheckListName'
        /// </summary>
        [Fact]
        public void CheckListNameTest()
        {
            // TODO unit test for the property 'CheckListName'
        }
        /// <summary>
        /// Test the property 'CheckListItemName'
        /// </summary>
        [Fact]
        public void CheckListItemNameTest()
        {
            // TODO unit test for the property 'CheckListItemName'
        }
        /// <summary>
        /// Test the property 'CheckListItemDescription'
        /// </summary>
        [Fact]
        public void CheckListItemDescriptionTest()
        {
            // TODO unit test for the property 'CheckListItemDescription'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'Score'
        /// </summary>
        [Fact]
        public void ScoreTest()
        {
            // TODO unit test for the property 'Score'
        }
        /// <summary>
        /// Test the property 'PassThreshold'
        /// </summary>
        [Fact]
        public void PassThresholdTest()
        {
            // TODO unit test for the property 'PassThreshold'
        }
        /// <summary>
        /// Test the property 'RatingSystem'
        /// </summary>
        [Fact]
        public void RatingSystemTest()
        {
            // TODO unit test for the property 'RatingSystem'
        }
        /// <summary>
        /// Test the property 'CheckListItemQuantity'
        /// </summary>
        [Fact]
        public void CheckListItemQuantityTest()
        {
            // TODO unit test for the property 'CheckListItemQuantity'
        }
        /// <summary>
        /// Test the property 'Unit'
        /// </summary>
        [Fact]
        public void UnitTest()
        {
            // TODO unit test for the property 'Unit'
        }
        /// <summary>
        /// Test the property 'CheckListDate'
        /// </summary>
        [Fact]
        public void CheckListDateTest()
        {
            // TODO unit test for the property 'CheckListDate'
        }
        /// <summary>
        /// Test the property 'TimeOffset'
        /// </summary>
        [Fact]
        public void TimeOffsetTest()
        {
            // TODO unit test for the property 'TimeOffset'
        }
        /// <summary>
        /// Test the property 'UserName'
        /// </summary>
        [Fact]
        public void UserNameTest()
        {
            // TODO unit test for the property 'UserName'
        }
        /// <summary>
        /// Test the property 'CheckListItemId'
        /// </summary>
        [Fact]
        public void CheckListItemIdTest()
        {
            // TODO unit test for the property 'CheckListItemId'
        }
        /// <summary>
        /// Test the property 'AuditStartDate'
        /// </summary>
        [Fact]
        public void AuditStartDateTest()
        {
            // TODO unit test for the property 'AuditStartDate'
        }
        /// <summary>
        /// Test the property 'AuditFinishDate'
        /// </summary>
        [Fact]
        public void AuditFinishDateTest()
        {
            // TODO unit test for the property 'AuditFinishDate'
        }
        /// <summary>
        /// Test the property 'AuditIssues'
        /// </summary>
        [Fact]
        public void AuditIssuesTest()
        {
            // TODO unit test for the property 'AuditIssues'
        }

    }

}
