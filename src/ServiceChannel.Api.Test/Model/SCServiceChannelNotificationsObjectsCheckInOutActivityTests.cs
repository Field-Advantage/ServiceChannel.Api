/*
 * ServiceChannel API - v.3
 *
 * The ServiceChannel API is a RESTful and stateless API. It accepts standard HTTP verbs and supports OAuth 2.0 for authorizing requests.      Our API returns common HTTP status codes as well as JSON encapsulated data.      See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/) for the intro to ServiceChannel API.<br>      <h3>Authentication and Authorization</h3>You should have a ServiceChannel account, register your application, and obtain `access_token` to integrate with our API.      See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/) for more information.      To use this API playground, click **Authorize** and sign in to ServiceChannel.<br>      <h3>Environment</h3> All calls in this API Reference point to the **SB2 environment**.      See [Environments](https://developer.servicechannel.com/basics/general/environments/) for more information.<br>      <h3>API Version</h3>The current stable version of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix that should be present.      When you omit the version prefix, calls point to the minimum supported version of the API.      We recommend you to always specify the API version to avoid possible errors.
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ServiceChannel.Api.Model;
using ServiceChannel.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ServiceChannel.Api.Test.Model
{
    /// <summary>
    ///  Class for testing SCServiceChannelNotificationsObjectsCheckInOutActivity
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SCServiceChannelNotificationsObjectsCheckInOutActivityTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SCServiceChannelNotificationsObjectsCheckInOutActivity
        //private SCServiceChannelNotificationsObjectsCheckInOutActivity instance;

        public SCServiceChannelNotificationsObjectsCheckInOutActivityTests()
        {
            // TODO uncomment below to create an instance of SCServiceChannelNotificationsObjectsCheckInOutActivity
            //instance = new SCServiceChannelNotificationsObjectsCheckInOutActivity();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SCServiceChannelNotificationsObjectsCheckInOutActivity
        /// </summary>
        [Fact]
        public void SCServiceChannelNotificationsObjectsCheckInOutActivityInstanceTest()
        {
            // TODO uncomment below to test "IsType" SCServiceChannelNotificationsObjectsCheckInOutActivity
            //Assert.IsType<SCServiceChannelNotificationsObjectsCheckInOutActivity>(instance);
        }


        /// <summary>
        /// Test the property 'CheckInNotes'
        /// </summary>
        [Fact]
        public void CheckInNotesTest()
        {
            // TODO unit test for the property 'CheckInNotes'
        }
        /// <summary>
        /// Test the property 'SubscriberId'
        /// </summary>
        [Fact]
        public void SubscriberIdTest()
        {
            // TODO unit test for the property 'SubscriberId'
        }
        /// <summary>
        /// Test the property 'ProviderId'
        /// </summary>
        [Fact]
        public void ProviderIdTest()
        {
            // TODO unit test for the property 'ProviderId'
        }
        /// <summary>
        /// Test the property 'LocationId'
        /// </summary>
        [Fact]
        public void LocationIdTest()
        {
            // TODO unit test for the property 'LocationId'
        }
        /// <summary>
        /// Test the property 'CheckinAction'
        /// </summary>
        [Fact]
        public void CheckinActionTest()
        {
            // TODO unit test for the property 'CheckinAction'
        }
        /// <summary>
        /// Test the property 'WorkOrderId'
        /// </summary>
        [Fact]
        public void WorkOrderIdTest()
        {
            // TODO unit test for the property 'WorkOrderId'
        }
        /// <summary>
        /// Test the property 'Date'
        /// </summary>
        [Fact]
        public void DateTest()
        {
            // TODO unit test for the property 'Date'
        }
        /// <summary>
        /// Test the property 'DateDTO'
        /// </summary>
        [Fact]
        public void DateDTOTest()
        {
            // TODO unit test for the property 'DateDTO'
        }
        /// <summary>
        /// Test the property 'User'
        /// </summary>
        [Fact]
        public void UserTest()
        {
            // TODO unit test for the property 'User'
        }
        /// <summary>
        /// Test the property 'CallerId'
        /// </summary>
        [Fact]
        public void CallerIdTest()
        {
            // TODO unit test for the property 'CallerId'
        }
        /// <summary>
        /// Test the property 'Action'
        /// </summary>
        [Fact]
        public void ActionTest()
        {
            // TODO unit test for the property 'Action'
        }
        /// <summary>
        /// Test the property 'WorkType'
        /// </summary>
        [Fact]
        public void WorkTypeTest()
        {
            // TODO unit test for the property 'WorkType'
        }
        /// <summary>
        /// Test the property 'WorkorderStatus'
        /// </summary>
        [Fact]
        public void WorkorderStatusTest()
        {
            // TODO unit test for the property 'WorkorderStatus'
        }
        /// <summary>
        /// Test the property 'ProviderName'
        /// </summary>
        [Fact]
        public void ProviderNameTest()
        {
            // TODO unit test for the property 'ProviderName'
        }
        /// <summary>
        /// Test the property 'Trade'
        /// </summary>
        [Fact]
        public void TradeTest()
        {
            // TODO unit test for the property 'Trade'
        }
        /// <summary>
        /// Test the property 'Category'
        /// </summary>
        [Fact]
        public void CategoryTest()
        {
            // TODO unit test for the property 'Category'
        }
        /// <summary>
        /// Test the property 'Source'
        /// </summary>
        [Fact]
        public void SourceTest()
        {
            // TODO unit test for the property 'Source'
        }
        /// <summary>
        /// Test the property 'TradeId'
        /// </summary>
        [Fact]
        public void TradeIdTest()
        {
            // TODO unit test for the property 'TradeId'
        }
        /// <summary>
        /// Test the property 'TechsCount'
        /// </summary>
        [Fact]
        public void TechsCountTest()
        {
            // TODO unit test for the property 'TechsCount'
        }
        /// <summary>
        /// Test the property 'Location'
        /// </summary>
        [Fact]
        public void LocationTest()
        {
            // TODO unit test for the property 'Location'
        }

    }

}
