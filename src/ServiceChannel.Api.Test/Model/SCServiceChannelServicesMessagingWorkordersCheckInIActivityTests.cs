/*
 * ServiceChannel API - v.3
 *
 * The ServiceChannel API is a RESTful and stateless API. It accepts standard HTTP verbs and supports OAuth 2.0 for authorizing requests.      Our API returns common HTTP status codes as well as JSON encapsulated data.      See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/) for the intro to ServiceChannel API.<br>      <h3>Authentication and Authorization</h3>You should have a ServiceChannel account, register your application, and obtain `access_token` to integrate with our API.      See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/) for more information.      To use this API playground, click **Authorize** and sign in to ServiceChannel.<br>      <h3>Environment</h3> All calls in this API Reference point to the **SB2 environment**.      See [Environments](https://developer.servicechannel.com/basics/general/environments/) for more information.<br>      <h3>API Version</h3>The current stable version of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix that should be present.      When you omit the version prefix, calls point to the minimum supported version of the API.      We recommend you to always specify the API version to avoid possible errors.
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ServiceChannel.Api.Model;
using ServiceChannel.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ServiceChannel.Api.Test.Model
{
    /// <summary>
    ///  Class for testing SCServiceChannelServicesMessagingWorkordersCheckInIActivity
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SCServiceChannelServicesMessagingWorkordersCheckInIActivityTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SCServiceChannelServicesMessagingWorkordersCheckInIActivity
        //private SCServiceChannelServicesMessagingWorkordersCheckInIActivity instance;

        public SCServiceChannelServicesMessagingWorkordersCheckInIActivityTests()
        {
            // TODO uncomment below to create an instance of SCServiceChannelServicesMessagingWorkordersCheckInIActivity
            //instance = new SCServiceChannelServicesMessagingWorkordersCheckInIActivity();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SCServiceChannelServicesMessagingWorkordersCheckInIActivity
        /// </summary>
        [Fact]
        public void SCServiceChannelServicesMessagingWorkordersCheckInIActivityInstanceTest()
        {
            // TODO uncomment below to test "IsType" SCServiceChannelServicesMessagingWorkordersCheckInIActivity
            //Assert.IsType<SCServiceChannelServicesMessagingWorkordersCheckInIActivity>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Date'
        /// </summary>
        [Fact]
        public void DateTest()
        {
            // TODO unit test for the property 'Date'
        }
        /// <summary>
        /// Test the property 'Dto'
        /// </summary>
        [Fact]
        public void DtoTest()
        {
            // TODO unit test for the property 'Dto'
        }
        /// <summary>
        /// Test the property 'User'
        /// </summary>
        [Fact]
        public void UserTest()
        {
            // TODO unit test for the property 'User'
        }
        /// <summary>
        /// Test the property 'CallerId'
        /// </summary>
        [Fact]
        public void CallerIdTest()
        {
            // TODO unit test for the property 'CallerId'
        }
        /// <summary>
        /// Test the property 'Action'
        /// </summary>
        [Fact]
        public void ActionTest()
        {
            // TODO unit test for the property 'Action'
        }
        /// <summary>
        /// Test the property 'StatusChangedTo'
        /// </summary>
        [Fact]
        public void StatusChangedToTest()
        {
            // TODO unit test for the property 'StatusChangedTo'
        }
        /// <summary>
        /// Test the property 'WorkType'
        /// </summary>
        [Fact]
        public void WorkTypeTest()
        {
            // TODO unit test for the property 'WorkType'
        }
        /// <summary>
        /// Test the property 'StatusNew'
        /// </summary>
        [Fact]
        public void StatusNewTest()
        {
            // TODO unit test for the property 'StatusNew'
        }
        /// <summary>
        /// Test the property 'Dnis'
        /// </summary>
        [Fact]
        public void DnisTest()
        {
            // TODO unit test for the property 'Dnis'
        }
        /// <summary>
        /// Test the property 'CheckInOutType'
        /// </summary>
        [Fact]
        public void CheckInOutTypeTest()
        {
            // TODO unit test for the property 'CheckInOutType'
        }
        /// <summary>
        /// Test the property 'SignatureAttachmentId'
        /// </summary>
        [Fact]
        public void SignatureAttachmentIdTest()
        {
            // TODO unit test for the property 'SignatureAttachmentId'
        }
        /// <summary>
        /// Test the property 'SignatureAttachmentName'
        /// </summary>
        [Fact]
        public void SignatureAttachmentNameTest()
        {
            // TODO unit test for the property 'SignatureAttachmentName'
        }
        /// <summary>
        /// Test the property 'SignatureAttachmentFullName'
        /// </summary>
        [Fact]
        public void SignatureAttachmentFullNameTest()
        {
            // TODO unit test for the property 'SignatureAttachmentFullName'
        }
        /// <summary>
        /// Test the property 'UnableObtainSignatureNoteId'
        /// </summary>
        [Fact]
        public void UnableObtainSignatureNoteIdTest()
        {
            // TODO unit test for the property 'UnableObtainSignatureNoteId'
        }
        /// <summary>
        /// Test the property 'UnableObtainSignatureNote'
        /// </summary>
        [Fact]
        public void UnableObtainSignatureNoteTest()
        {
            // TODO unit test for the property 'UnableObtainSignatureNote'
        }

    }

}
