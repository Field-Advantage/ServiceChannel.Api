openapi: 3.0.1
info:
  description: "The ServiceChannel API is a RESTful and stateless API. It accepts\
    \ standard HTTP verbs and supports OAuth 2.0 for authorizing requests.\r\n   \
    \ Our API returns common HTTP status codes as well as JSON encapsulated data.\r\
    \n    See [API Overview](https://developer.servicechannel.com/basics/introduction/overview/)\
    \ for the intro to ServiceChannel API.<br>\r\n    <h3>Authentication and Authorization</h3>You\
    \ should have a ServiceChannel account, register your application, and obtain\
    \ `access_token` to integrate with our API.\r\n    See [Authentication and Authorization](https://developer.servicechannel.com/basics/general/authentication/)\
    \ for more information.\r\n    To use this API playground, click **Authorize**\
    \ and sign in to ServiceChannel.<br>\r\n    <h3>Environment</h3> All calls in\
    \ this API Reference point to the **SB2 environment**.\r\n    See [Environments](https://developer.servicechannel.com/basics/general/environments/)\
    \ for more information.<br>\r\n    <h3>API Version</h3>The current stable version\
    \ of the ServiceChannel API is `v3`. In the request URL, `v3` is a version prefix\
    \ that should be present.\r\n    When you omit the version prefix, calls point\
    \ to the minimum supported version of the API.\r\n    We recommend you to always\
    \ specify the API version to avoid possible errors."
  title: ServiceChannel API - v.3
  version: "3"
servers:
- url: https://sb2api.servicechannel.com/v3/
security:
- oauth2: []
paths:
  /adapter/workorders:
    post:
      deprecated: false
      operationId: POSTv3_adapter_workorders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]"
          application/xml:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]"
          text/xml:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]"
        description: "Message envelope containing a body and describes an event type\
          \ and the body version.\r\n            Expects EventType WorkOrderCreated"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Create a new work order
      tags:
      - Adapter
      x-access: Any
      x-codegen-request-body-name: message
  /adapter/updateworkorders:
    post:
      deprecated: false
      operationId: POSTv3_adapter_updateworkorders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]"
          application/xml:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]"
          text/xml:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]"
        description: "Message envelope containing a body and describes an event type\
          \ and the body version\r\n            <br />Expect the Object of type **ServiceChannel.Notifications.Objects.WorkOrder**\
          \ for the following EventType values:\r\n             • **WorkOrderStatusChanged**.\r\
          \n             • **RefrigerantWasUsedChanged**.\r\n             • **WorkOrderCertifiedTechnicianAssigned**.\r\
          \n             • **WorkOrderAttachmentAdded**.\r\n             • **WorkOrderTradeChanged**.\r\
          \n             • **WorkOrderIssueChoiceChanged**.\r\n             • **WorkOrderNteChanged**.\r\
          \n             • **WorkOrderScheduledDateChanged**.\r\n             • **WorkOrderPriorityChanged**.\r\
          \n             • **WorkOrderCategoryChanged**.\r\n             • **WorkOrderDescriptionChanged**.\r\
          \n             • **WorkOrderAssetAttached**.\r\n             • **WorkOrderAssetDetached**.\r\
          \n             • **WorkOrderAssetValidated**.\r\n             • **WorkOrderRootCauseCodeUpdated**.\r\
          \n             • **WorkOrderResolutionCodeUpdated**.\r\n             • **WorkOrderResolutionCreated**.\r\
          \n             • **WorkOrderResolutionUpdated**.\r\n             • **WorkOrderLabelAdded**.\r\
          \n             • **WorkOrderLabelDeleted**.\r\n             • **WorkOrderNoteAdded**."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update work order
      tags:
      - Adapter
      x-access: Any
      x-codegen-request-body-name: message
  /adapter/checkInOutworkorders:
    post:
      deprecated: false
      operationId: POSTv3_adapter_checkInOutworkorders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrderCheckInOut]"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrderCheckInOut]"
          application/xml:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrderCheckInOut]"
          text/xml:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrderCheckInOut]"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrderCheckInOut]"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: CheckIn/checkOut of work order
      tags:
      - Adapter
      x-access: Any
      x-codegen-request-body-name: message
  /adapter/providerAssignments:
    post:
      deprecated: false
      operationId: POSTv3_adapter_providerAssignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.ProviderTradeAssignmentNotificationObject'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.ProviderTradeAssignmentNotificationObject'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.ProviderTradeAssignmentNotificationObject'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.ProviderTradeAssignmentNotificationObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.ProviderTradeAssignmentNotificationObject'
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Assign provider
      tags:
      - Adapter
      x-access: Any
      x-codegen-request-body-name: message
  /adapter/updatelocationnotes:
    post:
      deprecated: false
      operationId: POSTv3_adapter_updatelocationnotes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.LocationNotesNotificationObject'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.LocationNotesNotificationObject'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.LocationNotesNotificationObject'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.LocationNotesNotificationObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.LocationNotesNotificationObject'
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update location notes
      tags:
      - Adapter
      x-access: Any
      x-codegen-request-body-name: message
  /adapter/UpdateProposalStatus:
    post:
      deprecated: false
      operationId: POSTv3_adapter_UpdateProposalStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.ProposalNotificationObject'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.ProposalNotificationObject'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.ProposalNotificationObject'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.ProposalNotificationObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.ProposalNotificationObject'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.ProposalResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.ProposalResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.ProposalResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Processing.ProposalResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update proposal status
      tags:
      - Adapter
      x-access: Any
      x-codegen-request-body-name: message
  /locations/{locationId}/businesshours:
    get:
      deprecated: false
      description: Returns opening and closing hours from Monday to Sunday for the
        specified location.
      operationId: "GETv3_locations_{locationId}_businesshours"
      parameters:
      - description: Unique identifier of the subscriber’s location you want to retrieve
          business hours for.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.BusinessHoursApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.BusinessHoursApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.BusinessHoursApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.BusinessHoursApiResponse'
          description: Business hours are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     601 — Location is not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Retrieve Business Hours
      tags:
      - AfterHours
      x-access: Subscribers
    post:
      deprecated: false
      description: "Modifies the existing business hours for the specified location.\r\
        \n            <br />Send this request [GET /locations/{locationId}/businesshours](https://developer.servicechannel.com/swagger/ui/index?version=3#/AfterHours/GETv3_locations__locationId__businesshours)\
        \ to get the location business hours.\r\n            <br />Learn [how to manage\
        \ business hours](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/683409418/Managing+Business+Hours+and+Holidays+for+a+Location)\
        \ in ServiceChannel University.\r\n            <br />**Example Request**\r\
        \n            \r\n                POST / locations/{locationId}/businesshours\r\
        \n                {\r\n                  \"businessHours\": [\r\n        \
        \            {\r\n                      \"DayOfWeek\": \"Monday\",\r\n   \
        \                   \"OpenTime\": \"10:15 AM\",\r\n                      \"\
        CloseTime\": \"06:00 PM\",\r\n                      \"ClosedAllDay\": false\r\
        \n                    }\r\n                }"
      operationId: "POSTv3_locations_{locationId}_businesshours"
      parameters:
      - description: Unique identifier of the subscriber’s location you want to change
          business hours for.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.UpdateLocationBusinessHoursApiModelRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.UpdateLocationBusinessHoursApiModelRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.UpdateLocationBusinessHoursApiModelRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.UpdateLocationBusinessHoursApiModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.UpdateLocationBusinessHoursApiModelRequest'
        description: Request model to update business hours.
        required: true
      responses:
        "200":
          content: {}
          description: Business hours are updated for the specified location.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     <br/> 613 — Incorrect format of the Open Time or Close Time. Valid\
            \ format: HH:mm or hh:mm tt (for example, 23:59 or 11:59 PM).\r\n    \
            \        <br/> 614 — Business Hours should not overlap between days of\
            \ the week\r\n            <br/> 615 — Incorrect format of the day of the\
            \ week. Valid values: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday,\
            \ Sunday.\r\n            <br/> 616 — Duplicate 'Day of the Week' value;\r\
            \n            <br/> 617 — Business Hours are not set for the location.\
            \ For the initial setup, configure Business Hours for each day of the\
            \ week.\r\n            <br/> 618 — Open Time or Close Time cannot be empty\
            \ for a specific day of the week\r\n            <br/> 628 — Incorrect\
            \ format of the `Close All Day` value. Valid values: true, false."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            <br/> 504 — API call rejected by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            <br/> 601 — Location is not\
            \ found"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Update business hours
      tags:
      - AfterHours
      x-access: Subscribers
      x-codegen-request-body-name: businessHoursModel
  /locations/{locationId}/holidays:
    delete:
      deprecated: false
      description: Permanently removes a holiday from the specified location.
      operationId: "DELETEv3_locations_{locationId}_holidays?holidayName={holidayName}"
      parameters:
      - description: Unique identifier of the location to delete a holiday from.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: The name of the holiday you want to remove.
        in: query
        name: holidayName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.HolidayIdsApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.HolidayIdsApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.HolidayIdsApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.HolidayIdsApiResponse'
          description: ID of the deleted holiday is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     <br/> 601 — Location is not found\r\n            <br/> 623 — The\
            \ `Holiday Name` value cannot be empty. The maximum length is 100 characters.\r\
            \n            <br/> 629 — The holiday doesn't exist at the location"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            <br/> 504 — API call rejected by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            <br/> 601 — Location is not\
            \ found\r\n            <br/> 601 — Invalid Location Id"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Delete a holiday
      tags:
      - AfterHours
      x-access: Subscribers
    get:
      deprecated: false
      description: Returns the details of each holiday for the specified location.
      operationId: "GETv3_locations_{locationId}_holidays"
      parameters:
      - description: Unique identifier of the subscriber’s location you want to retrieve
          holidays for.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.HolidaysApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.HolidaysApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.HolidaysApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.HolidaysApiResponse'
          description: Location holidays are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     <br/> 601 — Location is not found;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            <br/> 504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Retrieve location holidays
      tags:
      - AfterHours
      x-access: Subscribers
    post:
      deprecated: false
      description: "Adds a holiday to the specified location. \r\n            <br\
        \ />Send this request [GET /locations/{locationId}/holidays](https://developer.servicechannel.com/swagger/ui/index?version=3#/AfterHours/GETv3_locations__locationId__holidays)\
        \ to get the location holidays.\r\n            <br />Learn [how to manage\
        \ holidays for a location](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/683409418/Managing+Business+Hours+and+Holidays+for+a+Location)\
        \ in ServiceChannel University.\r\n            <br />**Example Request**\r\
        \n            \r\n                POST /locations/{locationId}/holidays\r\n\
        \                {\r\n                 \"HolidayName\": \"Happy Weekend\"\
        ,\r\n                 \"OpenTime\": \"10:00 AM\",\r\n                 \"CloseTime\"\
        : \"06:00 PM\",\r\n                 \"ClosedAllDay\": false,\r\n         \
        \        \"Frequency\": \"Yearly\",\r\n                 \"StartDate\": \"\
        2021-07-03T00:10:00.308Z\",\r\n                 \"RepeatEvery\": \"1\",\r\n\
        \                 \"RepeatBy\": \"DayOfWeek\",\r\n                 \"RepeatOnDays\"\
        : [\r\n                   \"Saturday\", \"Sunday\"\r\n                 ],\r\
        \n                 \"RepeatOnMonths\": [\r\n                   “June”, \"\
        July\", \"August\"\r\n                 ]\r\n                }"
      operationId: "POSTv3_locations_{locationId}_holidays"
      parameters:
      - description: Unique identifier of the subscriber’s location you want to add
          or update holidays for.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.AddHolidayApiModelRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.AddHolidayApiModelRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.AddHolidayApiModelRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.AddHolidayApiModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.AddHolidayApiModelRequest'
        description: Request to add a holiday to the specified location.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.HolidayIdsApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.HolidayIdsApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.HolidayIdsApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.HolidayIdsApiResponse'
          description: The holiday is added to the specified location.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     <br/> 616 — Duplicate 'Day of the Week' value\r\n            <br/>\
            \ 619 — Incorrect format of the `Repeat by status` value. Valid values:\
            \ DayOfWeek, DayOfMonth.\r\n            <br/> 620 — List of days cannot\
            \ be empty when submitting the `Weekly` frequency\r\n            <br/>\
            \ 621 — List of months cannot be empty when submitting the `Yearly` frequency\r\
            \n            <br/> 622 — Incorrect month format. Valid values: January,\
            \ February, March, April, May, June, July, August, September, October,\
            \ November, December.\r\n            <br/> 623 — The `Holiday Name` value\
            \ cannot be empty. The maximum length is 100 characters.\r\n         \
            \   <br/> 624 — Incorrect format of the 'Repeat every' value. The value\
            \ should be a number between 1 and 60.\r\n            <br/> 625 — The\
            \ same month is specified twice in the 'Month' value\r\n            <br/>\
            \ 626 — Incorrect format of the frequency. Valid values: Weekly, Monthly,\
            \ Yearly, Singular.\r\n            <br/> 627 — Start date cannot be an\
            \ empty value\r\n            <br/> 628 — Incorrect format of the `Close\
            \ All Day` value. Valid values: true, false.\r\n            <br/> 3502\
            \ — The holiday name is already in use. Please suggest another name."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            <br/> 504 — API call rejected by security permissions;"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            <br/> 601 — Location is not\
            \ found"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            <br/>501 — Object\
            \ reference not set to an instance of an object;"
      summary: Add a holiday
      tags:
      - AfterHours
      x-access: Subscribers
      x-codegen-request-body-name: holidayModel
  /alp/user/{userId}/data:
    get:
      deprecated: false
      description: Returns user data from cache if presents or from db if cache doesn't
        contain user data.
      operationId: "GETv3_alp_user_{userId}_data"
      parameters:
      - description: Numeric id of user.
        in: path
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Landing.UserLandingData'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Landing.UserLandingData'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Landing.UserLandingData'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Landing.UserLandingData'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content: {}
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            <br/> 501 - AlpCacheKeyFormat\
            \ is empty or undefined in configuration;"
      summary: User data
      tags:
      - Alp
      x-access: Any
  /alp/subscriber/{subscriberId}/preference:
    post:
      deprecated: false
      operationId: "POSTv3_alp_subscriber_{subscriberId}_preference"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Landing.UpdateSubscriberLandingPreferenceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Landing.UpdateSubscriberLandingPreferenceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Landing.UpdateSubscriberLandingPreferenceRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Landing.UpdateSubscriberLandingPreferenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Landing.UpdateSubscriberLandingPreferenceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Alp
      x-access: Any
      x-codegen-request-body-name: request
  /announcements:
    get:
      deprecated: false
      operationId: GETv3_announcements
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Announcements.GetUserAnnouncementsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Announcements.GetUserAnnouncementsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Announcements.GetUserAnnouncementsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Announcements.GetUserAnnouncementsResponse'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - User info should not be null;\r\n            <br/>ProviderId\
            \ is null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      tags:
      - Announcements
      x-access: Providers
  /announcements/{messageId}:
    put:
      deprecated: false
      operationId: "PUTv3_announcements_{messageId}"
      parameters:
      - in: path
        name: messageId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                default: false
                type: boolean
            text/json:
              schema:
                default: false
                type: boolean
            application/xml:
              schema:
                default: false
                type: boolean
            text/xml:
              schema:
                default: false
                type: boolean
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - User info should not be null;\r\n            <br/>ProviderId\
            \ is null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      tags:
      - Announcements
      x-access: Providers
  /ApplicationAccess:
    get:
      deprecated: false
      operationId: GETv3_ApplicationAccess
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Returns application access object
      tags:
      - ApplicationAccess
      x-access: Any
  /assets/{assetId}:
    get:
      deprecated: false
      description: "Returns the details of the specified asset for the current subscriber.<br\
        \ />\r\n            Send the [GET/ assets/locations/{locationId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/Assets/GETv3_assets_locations__locationId__trade__trade_)\
        \ request to retrieve assets for a particular location."
      operationId: "GETv3_assets_{assetId}?locationId={locationId}&storeId={storeId}&tagId={tagId}&trackingNumber={trackingNumber}"
      parameters:
      - description: Unique numeric asset identifier you want to get information of.
        in: path
        name: assetId
        required: true
        schema:
          format: int32
          type: integer
      - description: Unique numeric location identifier. Should be paired with the
          `tagId` parameter to work correctly.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: Alphanumeric location identifier in the client’s system. Should
          be paired with the `tagId` parameter to work correctly.
        in: query
        name: storeId
        schema:
          type: string
      - description: Alphanumeric asset identifier assigned by the client. Should
          be paired with either `locationId` or `storeId` to work correctly.
        in: query
        name: tagId
        schema:
          type: string
      - description: "Unique ID of the work order. Use the parameter to get asset\
          \ validation attributes: `AssetValidated`, `ValidationRequired`."
        in: query
        name: trackingNumber
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
          description: The details of the requested asset are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request URI is incorrect, or the resource does not exist.\r\
            \n            <br/>Error codes:\r\n            502 — Asset is not found"
      summary: Get an asset
      tags:
      - Assets
      x-access: Any
  /assets/AssociateAssetCode:
    post:
      deprecated: false
      operationId: POSTv3_assets_AssociateAssetCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AssociateAssetRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AssociateAssetRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AssociateAssetRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AssociateAssetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AssociateAssetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Associate Asset Code
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/searchassets:
    post:
      deprecated: false
      operationId: POSTv3_assets_searchassets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.SearchAssetRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.SearchAssetRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.SearchAssetRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.SearchAssetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.SearchAssetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Search Assets
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/assetsforreplacement:
    post:
      deprecated: false
      operationId: POSTv3_assets_assetsforreplacement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetAssetsForReplacementRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetAssetsForReplacementRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetAssetsForReplacementRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetAssetsForReplacementRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetAssetsForReplacementRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Get Assets For Replacement
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/assetcomponents:
    post:
      deprecated: false
      description: "Retrieves all circuits and components added to the specified parent\
        \ assets.\r\n            <br />Learn more about [updating assets on work orders](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1484194012/Updating+Assets+on+Work+Orders)\
        \ in ServiceChannel University."
      operationId: POSTv3_assets_assetcomponents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AssetComponentsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AssetComponentsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AssetComponentsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AssetComponentsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AssetComponentsRequest'
        description: "Request to get circuits and components for the specified parent\
          \ assets.\r\n            <br />Request parameters:\r\n             • **ParentIds**.\
          \ Add one or several asset IDs you want to get circuits and components for.\r\
          \n             • **OnlyRefrigerantTrackingAssets**. Enter `true` to retrieve\
          \ only circuits and components that contain refrigerant and F-gases."
        required: true
      responses:
        "200":
          content: {}
          description: The circuits and components for the specified parent assets
            are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 — Object\
            \ reference is not set to an instance of an object"
      summary: Get circuits and components
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/getfilteredassets:
    post:
      deprecated: false
      operationId: POSTv3_assets_getfilteredassets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Get Filtered Assets
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/getfilteredassetsV1:
    post:
      deprecated: false
      operationId: "POSTv3_assets_getfilteredassetsV1?providerId={providerId}"
      parameters:
      - description: "The provider identifier. Required for sub-contractor request.\
          \ [Required Special permissions]"
        in: query
        name: providerId
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
        description: The request to perform action with.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Get Filtered Assets V1
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/getfilteredassetleaks:
    post:
      deprecated: false
      operationId: POSTv3_assets_getfilteredassetleaks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Ge tFiltered Asset Leaks
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/getwoassettracking:
    post:
      deprecated: false
      operationId: "POSTv3_assets_getwoassettracking?woId={woId}"
      parameters:
      - in: query
        name: woId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Get Wo Asset Tracking
      tags:
      - Assets
      x-access: Any
  /assets/locations/{locationId}:
    get:
      deprecated: false
      description: "Returns a list of assets with all details for the specified location.\
        \ Enter the `trade` parameter to make your request more specific.\r\n    \
        \         <br />\r\n             You can use the [GET/assets/{assetId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/Assets/GETv3_assets__assetId__locationId__locationId__storeId__storeId__tagId__tagId__trackingNumber__trackingNumber_)\
        \ method to get the details of a particular asset."
      operationId: "GETv3_assets_locations_{locationId}?trade={trade}"
      parameters:
      - description: Unique numeric identifier of the location you want to retrieve
          assets details of.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Trade of an asset type the asset is assigned to, for example,\
          \ *CARPENTRY* or *PLUMBING*."
        in: query
        name: trade
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsInfoResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsInfoResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsInfoResponse'
          description: The assets for the specified location are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request URI is incorrect, or the resource does not exist."
      summary: Get assets
      tags:
      - Assets
      x-access: Any
  /assets/locationAssetsTree:
    post:
      deprecated: false
      operationId: "POSTv3_assets_locationAssetsTree?locationId={locationId}&trade={trade}"
      parameters:
      - in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: trade
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsResponseTreeNode'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsResponseTreeNode'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsResponseTreeNode'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsResponseTreeNode'
                type: array
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — User info should not be null;\r\n            SubscriberId is\
            \ null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      tags:
      - Assets
      x-access: Any
  /assets/getassetwohistory:
    post:
      deprecated: false
      description: This method allows to get WorkOrder objects by Asset Ids.<br />
      operationId: "POSTv3_assets_getassetwohistory?workOrdersCount={workOrdersCount}"
      parameters:
      - in: query
        name: workOrdersCount
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                  type: array
                type: object
            text/json:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                  type: array
                type: object
            application/xml:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                  type: array
                type: object
            text/xml:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                  type: array
                type: object
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — User info should not be null;\r\n            SubscriberId is\
            \ null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Get Assets WorkOrders
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: assetIds
  /assets:
    post:
      deprecated: false
      description: "Creates a new asset for the existing asset type. Since you need\
        \ to specify which type an asset will belong to, you can:\r\n            <br\
        \ /> • use the [GET /AssetTypes](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/GETv3_AssetTypes)\
        \ method to get a list of asset types of the current provider.\r\n       \
        \     <br /> • create a new asset type by sending the [POST /AssetTypes](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/POSTv3_AssetTypes)\
        \ request.\r\n            <br />You can learn more about [adding and editing\
        \ assets](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/573178120/Adding+and+Editing+Assets)\
        \ in ServiceChannel University."
      operationId: POSTv3_assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetRequest'
        description: "Request to create a new asset.\r\n            <br />Required\
          \ parameters:\r\n            <br /> • **Tag** (aka **Tag ID**). Create an\
          \ alphanumeric identifier for your asset, for example, AD-3421\r\n     \
          \       <br /> • **Manufacturer**. Enter the brand name that exists in the\
          \ system.\r\n            <br /> • **StoreId**. Specify the alphanumeric\
          \ identifier of the existing location.\r\n            <br /> • **Trade**.\
          \ Define the line of work an asset is used for, for example, *Electrical*,\
          \ *Plumbing*, *Carpentry*.\r\n            <br /> • **Type**. Enter the type\
          \ of an asset, for example, *Refrigerator*, *Computer Monitor*."
        required: true
      responses:
        "201":
          content: {}
          description: The created asset ID is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — Unknown Brand name\r\n            503 — Asset Tag ID is empty\r\
            \n            503 — Request is empty or null\r\n            503 — No Store\
            \ ID in the request\r\n            503 — Trade not found \r\n        \
            \    503 — Unknown Equipment type\r\n            503 — Unknown Store ID\r\
            \n            503 — Other Trade in Asset Type"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Add an asset
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: assetRequest
    put:
      deprecated: false
      description: Modifies the details of an existing asset.
      operationId: PUTv3_assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetRequest'
        description: "Request model to update an asset.\r\n            <br />The following\
          \ parameters are required in the request:\r\n             • **Id**: Unique\
          \ numeric identification number of an asset you want to update.\r\n    \
          \         • **Tag**: Alphanumeric asset identifier assigned by the client,\
          \ aka **Tag ID**.\r\n             • **Manufacturer**: Company brand that\
          \ produces an asset and exists in the system.\r\n             • **StoreId**:\
          \ Alphanumeric identifier of the existing location.\r\n             • **Trade**:\
          \ The line of work an asset is used for. For example, *ELECTRICAL*, *CARPENTRY*,\
          \ *CCTV*.\r\n             • **Type**: Type of an asset. For example, *Refrigerator*,\
          \ *Computer Monitor*.\r\n            <br />***Note***. The `Tag` and `Location`\
          \ parameters should remain unchanged."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: The ID of the updated asset is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — No asset to update\r\n            502 — Asset is not found\r\
            \n            503 — Unknown Brand name\r\n            503 — Request is\
            \ empty or null\r\n            503 — Do not have rights for editing Asset\r\
            \n            503 — Unknown Equipment type\r\n            503 — 'Uses\
            \ Refrigerant' attribute can not be changed\r\n            503 — Asset\
            \ location can not be changed: There are active PM services for this asset."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br>Error codes:\r\n            501 — Object reference\
            \ is not set to an instance of an object."
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server, while acting as a gateway or proxy, received an\
            \ invalid response from the upstream server."
      summary: Update an asset
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: assetRequest
  /assets/AddUpdateAsset:
    post:
      deprecated: false
      operationId: POSTv3_assets_AddUpdateAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddUpdateAssetRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddUpdateAssetRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddUpdateAssetRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddUpdateAssetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddUpdateAssetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: The ID of the updated asset is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — No asset to update\r\n            502 — Asset is not found\r\
            \n            503 — Unknown Brand name\r\n            503 — Request is\
            \ empty or null\r\n            503 — Do not have rights for editing Asset\r\
            \n            503 — Unknown Equipment type\r\n            503 — 'Uses\
            \ Refrigerant' attribute can not be changed\r\n            503 — Asset\
            \ location can not be changed: There are active PM services for this asset."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br>Error codes:\r\n            501 — Object reference\
            \ is not set to an instance of an object."
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server, while acting as a gateway or proxy, received an\
            \ invalid response from the upstream server."
      summary: Add Update Asset
      tags:
      - Assets
      x-access: Subscribers
      x-codegen-request-body-name: request
  /assets/Activation:
    post:
      deprecated: false
      operationId: POSTv3_assets_Activation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.ActivateAssetRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.ActivateAssetRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.ActivateAssetRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.ActivateAssetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.ActivateAssetRequest'
        description: "A set of values to indicate asset and action.\r\n          \
          \  IsActive \"true\" means that asset must be activated.\r\n           \
          \ IsActive \"false\" means that asset must be inactivated."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Forbidden - the data could not be processed by security reasons.
      summary: Activates or deactivates an asset depending on passed parameter.
      tags:
      - Assets
      x-access: Subscribers
      x-codegen-request-body-name: request
  /assets/workorders/{workorderId}/attach:
    put:
      deprecated: false
      description: "Assigns the specified asset to a particular work order. You can\
        \ attach multiple assets to one work order by sending several requests.\r\n\
        \            <br />***Note***: A work order and an asset you want to attach\
        \ should belong to the same trade and location.\r\n            <br />***Note***:\
        \ Assets added do not replace existing assets.\r\n            <br />Refer\
        \ to ServiceChannel University to learn more about [updating assets on work\
        \ orders](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1484194012/Updating+Assets+on+Work+Orders)."
      operationId: "PUTv3_assets_workorders_{workorderId}_attach"
      parameters:
      - description: "Unique numeric identifier of the work order you want to assign\
          \ an asset to. To retrieve IDs of work orders, use the [GET /workorders](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/GETv3_workorders_locationId__locationId__storeId__storeId_)\
          \ method."
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AttachAssetRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AttachAssetRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AttachAssetRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AttachAssetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AttachAssetRequest'
        description: Request to assign the specified asset
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: The ID of the asset attached to the work order is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — Asset is not found or Asset Location/Trade does not correspond\
            \ to WO Location/Trade\r\n            502 — Work order is not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes:\r\n\
            \            100 — Current Asset has already been assigned to the work\
            \ order RecId: workorderId\r\n            100 — Work Order either has\
            \ connection with a leak record or is a Leak Inspection."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 — Object\
            \ reference is not set to an instance of an object"
      summary: Attach an asset
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: attachAssetRequest
  /assets/workorders/attachassets:
    put:
      deprecated: false
      description: "Assigns several assets to the specified work order at a time.\
        \ The *MultipleAssetsPerWorkOrder* FF should be enabled for the method to\
        \ work properly.\r\n            <br />***Note***: Assets added before will\
        \ remain attached to the work order along with the new ones."
      operationId: PUTv3_assets_workorders_attachassets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest'
        description: Request to add one or several assets to a particular work order.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: The specified assets are attached to the work order.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — Asset is not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Add assets
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/workorders/setupassets:
    put:
      deprecated: false
      description: "Assigns several assets to the specified work order at a time.\
        \ The *MultipleAssetsPerWorkOrder* FF should be enabled for the method to\
        \ work properly.\r\n            <br />***Note***. Existing assets will be\
        \ replaced with the new ones."
      operationId: PUTv3_assets_workorders_setupassets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest'
        description: Request to add one or several assets to a particular work order.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: The specified assets are attached to the work order.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — Asset is not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Add and replace assets
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/workrequest/setup:
    put:
      deprecated: false
      description: "*In limited availability phase.*\r\n            <br />Setup Assets\
        \ to Work Request."
      operationId: PUTv3_assets_workrequest_setup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsWorkRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsWorkRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsWorkRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsWorkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsWorkRequest'
        description: The work request identity and assets ids.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  502 — Asset is not found;\r\n            Invalid Work Request Identifier;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            504 — API call rejected\
            \ by security permissions;"
      summary: Setup assets to the work request
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/workrequest/remove:
    post:
      deprecated: false
      description: "*In limited availability phase.*\r\n            <br />Remove Assets\
        \ from Work Request."
      operationId: POSTv3_assets_workrequest_remove
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.RemoveAssetsWorkRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.RemoveAssetsWorkRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.RemoveAssetsWorkRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.RemoveAssetsWorkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.RemoveAssetsWorkRequest'
        description: The work request identity and assets ids.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — Request Data should not be null;\r\n            User info should\
            \ not be null;            \r\n            Asset identity is absent;\r\n\
            \            Work Request identity is absent;\r\n            502 — No\
            \ asset to update;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            504 — API call rejected\
            \ by security permissions;"
      summary: Remove specified assets from specified work request
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/workrequest/{workRequestId}:
    get:
      deprecated: false
      description: "*In limited availability phase.*\r\n            <br />Setup Assets\
        \ to Work Order."
      operationId: "GETv3_assets_workrequest_{workRequestId}"
      parameters:
      - in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — Request Data should not be null;\r\n            User info should\
            \ not be null;            \r\n            Asset identity is absent;\r\n\
            \            Work Request identity is absent;\r\n            502 — No\
            \ asset to update;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            504 — API call rejected\
            \ by security permissions;"
      summary: Setup assets to the specified work order
      tags:
      - Assets
      x-access: Any
  /assets/workorders/removeassets:
    post:
      deprecated: false
      description: Remove Assets from Work Order.
      operationId: POSTv3_assets_workorders_removeassets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.RemoveAssetsFromWORequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.RemoveAssetsFromWORequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.RemoveAssetsFromWORequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.RemoveAssetsFromWORequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.RemoveAssetsFromWORequest'
        description: The work order identity and assets ids.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — Request Data should not be null;\r\n            User info should\
            \ not be null;\r\n            Asset identity is absent;\r\n          \
            \  Work Order identity is absent;\r\n            502 — No asset to update;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            504 — API call rejected\
            \ by security permissions;"
      summary: Remove specified assets from specified work order
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/workorders/{workorderId}/detach:
    put:
      deprecated: false
      description: Removes all assets assigned to the specified work order.
      operationId: "PUTv3_assets_workorders_{workorderId}_detach"
      parameters:
      - description: "Unique numeric identifier of the work order you want to remove\
          \ assets from. To retrieve IDs of work orders, use the [GET /workorders](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/GETv3_workorders_locationId__locationId__storeId__storeId_)\
          \ method."
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: The assets are successfully removed from the specified work
            order.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — Work order is not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Remove assets
      tags:
      - Assets
      x-access: Any
  /assets/{assetid}/assetwohistory:
    get:
      deprecated: false
      operationId: "GETv3_assets_{assetid}_assetwohistory"
      parameters:
      - in: path
        name: assetid
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Equipments.AssetWorkHistory'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Equipments.AssetWorkHistory'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Equipments.AssetWorkHistory'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Equipments.AssetWorkHistory'
                type: array
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — User info should not be null;\r\n            SubscriberId is\
            \ null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Get asset workorder history
      tags:
      - Assets
      x-access: Any
  /assets/Brands:
    get:
      deprecated: false
      operationId: GETv3_assets_Brands
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.Manufacturer'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.Manufacturer'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.Manufacturer'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.Manufacturer'
                type: array
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — User info should not be null;\r\n            SubscriberId is\
            \ null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Get Brands
      tags:
      - Assets
      x-access: Any
  /assets/v2/Brands:
    get:
      deprecated: false
      operationId: "GETv3_assets_v2_Brands?keyword={keyword}&startIndex={startIndex}&pageSize={pageSize}"
      parameters:
      - in: query
        name: keyword
        schema:
          type: string
      - in: query
        name: startIndex
        schema:
          format: int32
          type: integer
      - in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.ManufacturersResponce'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.ManufacturersResponce'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.ManufacturersResponce'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.ManufacturersResponce'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — User info should not be null;\r\n            SubscriberId is\
            \ null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Get Brands (ver.2)
      tags:
      - Assets
      x-access: Any
  /assets/{brandName}/AddBrand:
    post:
      deprecated: false
      operationId: "POSTv3_assets_{brandName}_AddBrand"
      parameters:
      - in: path
        name: brandName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
            text/json:
              schema:
                format: int32
                type: integer
            application/xml:
              schema:
                format: int32
                type: integer
            text/xml:
              schema:
                format: int32
                type: integer
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — User info should not be null;\r\n            SubscriberId is\
            \ null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Add Brand
      tags:
      - Assets
      x-access: Any
  /assets/assetrepairstatus:
    get:
      deprecated: false
      operationId: "GETv3_assets_assetrepairstatus?assetId={assetId}"
      parameters:
      - in: query
        name: assetId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                enum:
                - InUse
                - OutForRepair
                - ReplacementRecommended
                - Repaired
                type: string
            text/json:
              schema:
                enum:
                - InUse
                - OutForRepair
                - ReplacementRecommended
                - Repaired
                type: string
            application/xml:
              schema:
                enum:
                - InUse
                - OutForRepair
                - ReplacementRecommended
                - Repaired
                type: string
            text/xml:
              schema:
                enum:
                - InUse
                - OutForRepair
                - ReplacementRecommended
                - Repaired
                type: string
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — User info should not be null;\r\n            SubscriberId is\
            \ null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Get Asset Repair Status By AssetId
      tags:
      - Assets
      x-access: Any
  /assets/assetstatushistory:
    get:
      deprecated: false
      operationId: "GETv3_assets_assetstatushistory?assetId={assetId}"
      parameters:
      - in: query
        name: assetId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetStatusHistoryResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetStatusHistoryResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetStatusHistoryResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetStatusHistoryResponse'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — User info should not be null;\r\n            SubscriberId is\
            \ null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Get Asset Status History By AssetId
      tags:
      - Assets
      x-access: Any
  /assets/updateassetrepairstatus:
    put:
      deprecated: false
      operationId: PUTv3_assets_updateassetrepairstatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetRepairStatusRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetRepairStatusRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetRepairStatusRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetRepairStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetRepairStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                default: false
                type: boolean
            text/json:
              schema:
                default: false
                type: boolean
            application/xml:
              schema:
                default: false
                type: boolean
            text/xml:
              schema:
                default: false
                type: boolean
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — User info should not be null;\r\n            SubscriberId is\
            \ null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Update Asset Repair Status By AssetId
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/RecordScannedAsset:
    post:
      deprecated: false
      operationId: POSTv3_assets_RecordScannedAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                default: false
                type: boolean
            text/json:
              schema:
                default: false
                type: boolean
            application/xml:
              schema:
                default: false
                type: boolean
            text/xml:
              schema:
                default: false
                type: boolean
          description: Request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and the error information is in the
            response
      summary: Records an audit record for the asset tag that was scanned
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: auditRequest
  /assets/HasAssetBeenValidated:
    post:
      deprecated: false
      operationId: POSTv3_assets_HasAssetBeenValidated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                default: false
                type: boolean
            text/json:
              schema:
                default: false
                type: boolean
            application/xml:
              schema:
                default: false
                type: boolean
            text/xml:
              schema:
                default: false
                type: boolean
          description: Request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and the error information is in the
            response
      summary: Determines if the specified asset has had its tag validated or not
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: auditRequest
  /assets/GetAssetValidationInformation:
    post:
      deprecated: false
      operationId: POSTv3_assets_GetAssetValidationInformation
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
                type: array
          description: Request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and the error information is in the
            response
      summary: Returns asset tag validation information for the specified list of
        assets
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: auditRequests
  /assets/{subscriberId}/ValidationRules:
    get:
      deprecated: false
      operationId: "GETv3_assets_{subscriberId}_ValidationRules"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.AssetTagging'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.AssetTagging'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.AssetTagging'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.AssetTagging'
          description: Request succeeded and response contains asset tag validation
            exception information
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and response contains error information
      summary: Gets the asset tag validation settings for the specified subscriber.
      tags:
      - Assets
      x-access: Any
  /assets/UnableToValidateReasons:
    get:
      deprecated: false
      operationId: GETv3_assets_UnableToValidateReasons
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReason'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReason'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReason'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReason'
          description: Request succeeded and response contains list of unable to validate
            reasons
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and response contains error information
      summary: Gets list of unable to validate reasons.
      tags:
      - Assets
      x-access: Any
    post:
      deprecated: false
      operationId: POSTv3_assets_UnableToValidateReasons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToValidateAssetReasonRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToValidateAssetReasonRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToValidateAssetReasonRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToValidateAssetReasonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToValidateAssetReasonRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToValidateAssetReasonRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToValidateAssetReasonRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToValidateAssetReasonRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToValidateAssetReasonRequest'
          description: Request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and response contains error information
      summary: Creates wo_UnableToValidateAssetHistory.
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: model
  /assets/UnableToScanReasons:
    get:
      deprecated: false
      operationId: "GETv3_assets_UnableToScanReasons?subscriberId={subscriberId}"
      parameters:
      - description: Subscriber unique indentifier
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReason'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReason'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReason'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReason'
          description: Request succeeded and response contains list of unable to scan
            reasons
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and response contains error information
      summary: Gets list of unable to scan reasons.
      tags:
      - Assets
      x-access: Any
    post:
      deprecated: false
      operationId: POSTv3_assets_UnableToScanReasons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToScanAssetReasonRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToScanAssetReasonRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToScanAssetReasonRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToScanAssetReasonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToScanAssetReasonRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToScanAssetReasonRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToScanAssetReasonRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToScanAssetReasonRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToScanAssetReasonRequest'
          description: Request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and response contains error information
      summary: Creates wo_UnableToScanAssetHistory.
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: model
  /assets/UnableToAddReasons:
    get:
      deprecated: false
      operationId: GETv3_assets_UnableToAddReasons
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToAddReason'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToAddReason'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToAddReason'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToAddReason'
          description: Request succeeded and response contains list of unable to add
            reasons
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and response contains error information
      summary: Gets list of unable to add reasons.
      tags:
      - Assets
      x-access: Any
    post:
      deprecated: false
      operationId: POSTv3_assets_UnableToAddReasons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToAddAssetReasonRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToAddAssetReasonRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToAddAssetReasonRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToAddAssetReasonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToAddAssetReasonRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToAddAssetReasonRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToAddAssetReasonRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToAddAssetReasonRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UnableToAddAssetReasonRequest'
          description: Request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and response contains error information
      summary: Creates wo_UnableToAddAssetHistory.
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: model
  /assets/UnableToScanReasonsNotAttachedAsset:
    get:
      deprecated: false
      operationId: GETv3_assets_UnableToScanReasonsNotAttachedAsset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReasonsNotAttachedAsset'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReasonsNotAttachedAsset'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReasonsNotAttachedAsset'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReasonsNotAttachedAsset'
          description: Request succeeded and response contains list of unable to scan
            reasons not attached assets
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and response contains error information
      summary: Gets list of unable to scan reasons not attached assets.
      tags:
      - Assets
      x-access: Any
  /assets/UnableToValidateReasonsNotAttachedAsset:
    get:
      deprecated: false
      operationId: GETv3_assets_UnableToValidateReasonsNotAttachedAsset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReasonsNotAttachedAsset'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReasonsNotAttachedAsset'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReasonsNotAttachedAsset'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReasonsNotAttachedAsset'
          description: Request succeeded and response contains list of unable to validate
            reasons not attached assets
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and response contains error information
      summary: Gets list of unable to validate reasons not attached assets.
      tags:
      - Assets
      x-access: Any
  /assets/ValidationRulesForMultipleSubscribers:
    post:
      deprecated: false
      operationId: POSTv3_assets_ValidationRulesForMultipleSubscribers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Administration.GetAssetTagValidationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Administration.GetAssetTagValidationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Administration.GetAssetTagValidationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Administration.GetAssetTagValidationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Administration.GetAssetTagValidationRequest'
        description: request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.AssetTagging'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.AssetTagging'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.AssetTagging'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Administration.AssetRules.AssetTagging'
          description: Request succeeded and response contains asset tag validation
            exception information
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and response contains error information
      summary: Gets the asset tag validation settings for multiple subscribers.
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/GetAssetValidationHistoryByTrackingNumber:
    post:
      deprecated: false
      operationId: POSTv3_assets_GetAssetValidationHistoryByTrackingNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetValidationHistoryRequestInternal'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetValidationHistoryRequestInternal'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetValidationHistoryRequestInternal'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetValidationHistoryRequestInternal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetValidationHistoryRequestInternal'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord'
                type: array
          description: Request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and the error information is in the
            response
      summary: Returns asset tag validation information for the specified assets and
        the work order
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/updateAssetLocation:
    put:
      deprecated: false
      description: Updates asset location
      operationId: "PUTv3_assets_updateAssetLocation?assetId={assetId}&locationId={locationId}"
      parameters:
      - description: Asset update id
        in: query
        name: assetId
        required: true
        schema:
          format: int32
          type: integer
      - description: New location id
        in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — Request Data should not be null;\r\n            User info should\
            \ not be null;\r\n            SubscriberId is null;\r\n            Asset\
            \ ID is absent;\r\n            502 — No asset or location to update;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            504 — API call rejected\
            \ by security permissions;"
      summary: Update asset location
      tags:
      - Assets
      x-access: Any
  /assets/{trackingNumber}/IsValidationRequired:
    get:
      deprecated: false
      operationId: "GETv3_assets_{trackingNumber}_IsValidationRequired"
      parameters:
      - description: Tracking Number
        in: path
        name: trackingNumber
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — Request Data should not be null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            504 — API call rejected\
            \ by security permissions;"
      summary: Get Scan Method
      tags:
      - Assets
      x-access: Any
  /assets/getPrimaryAttachmentsForAssetList:
    post:
      deprecated: false
      description: Adds new asset. Returns list of attachments for successful request.
      operationId: POSTv3_assets_getPrimaryAttachmentsForAssetList
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetPrimaryAttachment'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetPrimaryAttachment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetPrimaryAttachment'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetPrimaryAttachment'
                type: array
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — Request Data should not be null.\r\n            User info should\
            \ not be null.\r\n            SubscriberId is null.\r\n            Unknown\
            \ Asset type;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            504 — API call rejected\
            \ by security permissions;"
      summary: Get primary attachments for asset list
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: listOfAssetIds
  /assets/getPrimaryAttachmentsForAssetList_v1:
    post:
      deprecated: false
      description: Adds new asset. Returns list of attachments for successful request.
      operationId: POSTv3_assets_getPrimaryAttachmentsForAssetList_v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetPrimaryAttachment'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetPrimaryAttachment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetPrimaryAttachment'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetPrimaryAttachment'
                type: array
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — Request Data should not be null.\r\n            User info should\
            \ not be null.\r\n            SubscriberId is null.\r\n            Unknown\
            \ Asset type;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            504 — API call rejected\
            \ by security permissions;"
      summary: Get primary attachments for asset list
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: assetAttachmentsRequest
  /assets/{tradeId}/getAssetTypeGroupsByTradeId:
    get:
      deprecated: false
      description: Adds tradeId. Returns list of assetTypeGroup for successful request.
      operationId: "GETv3_assets_{tradeId}_getAssetTypeGroupsByTradeId"
      parameters:
      - in: path
        name: tradeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup'
                type: array
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — Request Data should not be null.\r\n            User info should\
            \ not be null.\r\n            SubscriberId is null.\r\n            Unknown\
            \ Asset type;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            504 — API call rejected\
            \ by security permissions;"
      summary: Get asset type groups by tradeId
      tags:
      - Assets
      x-access: Any
  /assets/GetAssetTypeGroupsByAssetsIds:
    post:
      deprecated: false
      description: Adds assetsids. Returns list of assetTypeGroup for successful request.
      operationId: POSTv3_assets_GetAssetTypeGroupsByAssetsIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.GetAssetTypeGroupsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.GetAssetTypeGroupsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.GetAssetTypeGroupsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.GetAssetTypeGroupsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.GetAssetTypeGroupsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup'
                type: object
            text/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup'
                type: object
            application/xml:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup'
                type: object
            text/xml:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup'
                type: object
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — Request Data should not be null.\r\n            User info should\
            \ not be null.\r\n            SubscriberId is null.\r\n            Unknown\
            \ Asset type;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            504 — API call rejected\
            \ by security permissions;"
      summary: Get asset type groups by assetsIds
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/searchassetsByGroupId:
    post:
      deprecated: false
      operationId: POSTv3_assets_searchassetsByGroupId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.SearchAssetsByGroupIDRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.SearchAssetsByGroupIDRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.SearchAssetsByGroupIDRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.SearchAssetsByGroupIDRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.SearchAssetsByGroupIDRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsGroupedByCategoriesResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsGroupedByCategoriesResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsGroupedByCategoriesResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsGroupedByCategoriesResponse'
                type: array
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — User info should not be null;\r\n            SubscriberId is\
            \ null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Get list of assets grouped by AsseTypeGroupID
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/CanUserEditAsset:
    get:
      deprecated: false
      operationId: "GETv3_assets_CanUserEditAsset?assetTypeId={assetTypeId}"
      parameters:
      - in: query
        name: assetTypeId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Getting permission for edit asset
      tags:
      - Assets
      x-access: Any
  /assets/CanCreateAsset/{assetTypeId}:
    get:
      deprecated: false
      operationId: "GETv3_assets_CanCreateAsset_{assetTypeId}"
      parameters:
      - in: path
        name: assetTypeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Getting permission for provider for create new asset
      tags:
      - Assets
      x-access: Providers
  /assets/CanProviderCreateAssetForTrade/{tradeId}:
    get:
      deprecated: false
      operationId: "GETv3_assets_CanProviderCreateAssetForTrade_{tradeId}"
      parameters:
      - in: path
        name: tradeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Getting permission for provider for create new asset
      tags:
      - Assets
      x-access: Providers
  /assets/AssetMeterReadings/{assetId}:
    get:
      deprecated: false
      description: "Returns asset meter readings details of the specified asset for\
        \ the current subscriber.\r\n            <br />Send the [PUT /assets/AssetMeterReadings](https://developer.servicechannel.com/swagger/ui/index?version=3#/Assets/PUTv3_assets_AssetMeterReading)\
        \ request to edit a particular asset meter reading.\r\n            <br />Refer\
        \ to ServiceChannel University to learn more about [asset meter readings](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/834469973/Asset+Meter+Reading)."
      operationId: "GETv3_assets_AssetMeterReadings_{assetId}?lastMeterReadingValuesOnly={lastMeterReadingValuesOnly}"
      parameters:
      - description: Unique numeric asset identifier you want to retrieve asset meter
          readings for.
        in: path
        name: assetId
        required: true
        schema:
          format: int32
          type: integer
      - description: When it is true the response should contain one last AssetMeterReading
          entry for each AssetTypeMeter.
        in: query
        name: lastMeterReadingValuesOnly
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem'
                type: array
          description: The asset meter readings details are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The resource you are looking for has been removed, had its\
            \ name changed, or is temporarily unavailable. / The request URI is incorrect,\
            \ or the resource does not exist."
      summary: Get asset readings
      tags:
      - Assets
      x-access: Any
  /assets/AssetMeterReading:
    post:
      deprecated: false
      operationId: POSTv3_assets_AssetMeterReading
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequest'
        required: true
      responses:
        "200":
          content: {}
          description: The asset meter reading is successfully added.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     Failed to add asset meter reading."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
    put:
      deprecated: false
      description: Updates information of a particular asset meter reading.
      operationId: PUTv3_assets_AssetMeterReading
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequest'
        description: Request to update the existing asset meter reading.
        required: true
      responses:
        "200":
          content: {}
          description: The asset meter reading is successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     Failed to Update Asset Meter Reading"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Update an asset meter reading
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/CreateAssetMeterReadingsBulk:
    post:
      deprecated: false
      description: "Creates asset meter readings.\r\n            <br />Learn more\
        \ about [adding asset meter reading](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/988840218/Adding+Asset+s+Meter+Reading+Data)\
        \ in ServiceChannel University."
      operationId: POSTv3_assets_CreateAssetMeterReadingsBulk
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequestItem'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequestItem'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequestItem'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequestItem'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequestItem'
              type: array
        description: Request to create asset readings.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem'
                type: array
          description: The asset meter readings details are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     Failed to create asset meter readings."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request URI is incorrect, or the resource does not exist.\r\
            \n            <br/>Error codes:\r\n            502 — Asset is not found"
      summary: Asset meter readings bulk create
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/UpdateAssetMeterReadingsBulk:
    put:
      deprecated: false
      description: Updates information about asset meter readings.
      operationId: PUTv3_assets_UpdateAssetMeterReadingsBulk
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequestItem'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequestItem'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequestItem'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequestItem'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequestItem'
              type: array
        description: Request to update the existing asset meter readings.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem'
                type: array
          description: The asset meter readings details are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     Failed to update asset meter readings."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Asset meter readings bulk update
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/AssetMeter:
    post:
      deprecated: false
      description: Attaches an asset meter to a certain asset by specifying a particular
        asset type meter.
      operationId: POSTv3_assets_AssetMeter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetMeterRequest'
        description: Request to add an asset meter to the existing asset.
        required: true
      responses:
        "200":
          content: {}
          description: The asset meter is successfully added.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     Failed to add an asset meter"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Add asset meters
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/AssetMeters:
    get:
      deprecated: false
      description: Returns the details of an asset meter by sending the `assetMeterId`
        parameter  or the details of one or several asset meters by using the `assetId`
        parameter.
      operationId: "GETv3_assets_AssetMeters?assetMeterId={assetMeterId}&assetId={assetId}"
      parameters:
      - description: Unique numeric asset meter identifier you want to get the details
          of.
        in: query
        name: assetMeterId
        schema:
          format: int32
          type: integer
      - description: Unique numeric asset identifier you want to retrieve asset meter
          details for.
        in: query
        name: assetId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeter'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeter'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeter'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetMeter'
                type: array
          description: The asset meter details are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request was not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     AssetId and Id can't be both null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Get asset meters
      tags:
      - Assets
      x-access: Any
  /assets/WorkorderAreas/{subscriberId}:
    get:
      deprecated: false
      operationId: "GETv3_assets_WorkorderAreas_{subscriberId}"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/System.Collections.Generic.KeyValuePair[System.Int32,System.String]"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/System.Collections.Generic.KeyValuePair[System.Int32,System.String]"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/System.Collections.Generic.KeyValuePair[System.Int32,System.String]"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/System.Collections.Generic.KeyValuePair[System.Int32,System.String]"
                type: array
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/> Request data should not be\
            \ null.\r\n            <br/> Subscriber User can obtain only own Areas"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Get Work Orders Area list
      tags:
      - Assets
      x-access: Any
  /assets/GetValidationStatusesForMultipleWorkOrders:
    post:
      deprecated: false
      operationId: POSTv3_assets_GetValidationStatusesForMultipleWorkOrders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.WorkOrderAssetsCommonValidationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.WorkOrderAssetsCommonValidationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.WorkOrderAssetsCommonValidationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.WorkOrderAssetsCommonValidationResponse'
          description: Request succeeded and response contains list of validation
            statuses
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Request did NOT succeed and response contains error information
      summary: Gets list of asset validation statuses for multiple work order.
      tags:
      - Assets
      x-access: Subscribers
      x-codegen-request-body-name: request
  /assets/updateAssetStatus:
    put:
      deprecated: false
      operationId: PUTv3_assets_updateAssetStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetStatusRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetStatusRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetStatusRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                default: false
                type: boolean
            text/json:
              schema:
                default: false
                type: boolean
            application/xml:
              schema:
                default: false
                type: boolean
            text/xml:
              schema:
                default: false
                type: boolean
          description: The asset status is successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — Asset ID is absent;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request URI is incorrect, or the resource does not exist.\r\
            \n            <br/>Error codes:\r\n            502 — Asset is not found"
      summary: Update Asset Status By AssetId
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/updateAssetsStatuses:
    put:
      deprecated: false
      operationId: PUTv3_assets_updateAssetsStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsStatusesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsStatusesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsStatusesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsStatusesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.UpdateAssetsStatusesRequest'
        required: true
      responses:
        "200":
          content: {}
          description: Assets statuses is successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  503 — Asset ID is absent;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request URI is incorrect, or the resource does not exist.\r\
            \n            <br/>Error codes:\r\n            502 — Asset is not found"
      summary: Update Assets Statuses
      tags:
      - Assets
      x-access: Any
      x-codegen-request-body-name: request
  /assets/canManageAttachments:
    put:
      deprecated: false
      operationId: "PUTv3_assets_canManageAttachments?subscriberId={subscriberId}"
      parameters:
      - in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: IsAllowed value is successfully retured.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Check if provider is allowed to manage attachments
      tags:
      - Assets
      x-access: Providers
  /workorders/{workOrderId}/asset-tasks/{responseId}:
    get:
      deprecated: false
      operationId: "GETv3_workorders_{workOrderId}_asset-tasks_{responseId}"
      parameters:
      - description: Work order id
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Response Id
        in: path
        name: responseId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get an asset task response.
      tags:
      - AssetTaskResponse
      x-access: Any
    put:
      deprecated: false
      operationId: "PUTv3_workorders_{workOrderId}_asset-tasks_{responseId}"
      parameters:
      - description: Work order id
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Response id
        in: path
        name: responseId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update an asset task response. Automatically sets End Time.
      tags:
      - AssetTaskResponse
      x-access: Any
  /workorders/{workOrderId}/asset-tasks:
    get:
      deprecated: false
      operationId: "GETv3_workorders_{workOrderId}_asset-tasks"
      parameters:
      - description: Work order id
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get asset task responses for a work order.
      tags:
      - AssetTaskResponse
      x-access: Any
    post:
      deprecated: false
      operationId: "POSTv3_workorders_{workOrderId}_asset-tasks"
      parameters:
      - description: Work order Id
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTasks.CreateAssetTaskResponseRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTasks.CreateAssetTaskResponseRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTasks.CreateAssetTaskResponseRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTasks.CreateAssetTaskResponseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTasks.CreateAssetTaskResponseRequest'
        description: Create request
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Create an asset task reponse.
      tags:
      - AssetTaskResponse
      x-access: Any
      x-codegen-request-body-name: request
  /workorders/{workOrderId}/asset-tasks/end-all:
    put:
      deprecated: false
      operationId: "PUTv3_workorders_{workOrderId}_asset-tasks_end-all"
      parameters:
      - description: Work order id
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: End all started task responses for work order. Automatically sets End
        Time. Responses will be marked as 'ended by system'.
      tags:
      - AssetTaskResponse
      x-access: Any
  /AssetTypes:
    get:
      deprecated: false
      operationId: GETv3_AssetTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
                type: array
          description: Request succeeded and the requested information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      tags:
      - AssetTypes
      x-access: Any
    post:
      deprecated: false
      operationId: POSTv3_AssetTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetTypeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetTypeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetTypeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetTypeRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetTypeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetTypeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetTypeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetTypeResponse'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  3100 — Asset Type Name is already in use.\r\n            3106 — Asset\
            \ Type Name is Missing.\r\n            703 — Primary trade not found."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      tags:
      - AssetTypes
      x-access: Subscribers
      x-codegen-request-body-name: req
  /AssetTypes/{assetTypeId}:
    delete:
      deprecated: false
      operationId: "DELETEv3_AssetTypes_{assetTypeId}"
      parameters:
      - in: path
        name: assetTypeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Request succeeded and the requested information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            502\
            \ — Asset Type not found.\r\n            3103 — Failed to delete asset\
            \ type\r\n            3104 — Failed to delete asset type. Existing assets\
            \ found.\r\n            3108 — Failed to delete asset type. Existing proposals\
            \ found.\r\n            3105 — Cant modify asset type ParentId.\r\n  \
            \          504 — API call rejected by security permissions;"
      tags:
      - AssetTypes
      x-access: Subscribers
    get:
      deprecated: false
      operationId: "GETv3_AssetTypes_{assetTypeId}"
      parameters:
      - in: path
        name: assetTypeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
          description: Request succeeded and the requested information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  502 — Asset Type not found."
      tags:
      - AssetTypes
      x-access: Any
    put:
      deprecated: false
      description: "Update Asset Type\r\n            Don't specify AdditiolanTrades\
        \ if no changes in Additiolan Trades needed\r\n            Set AdditiolanTrades\
        \ = [] to delete existing Additiolan Trades for asset type\r\n           \
        \ If AdditiolanTrades contains records then these trades will be set as Additional\
        \ Trades to asset type."
      operationId: "PUTv3_AssetTypes_{assetTypeId}"
      parameters:
      - in: path
        name: assetTypeId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
        required: true
      responses:
        "200":
          content: {}
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  3101 — Asset Type Doesn't Exist!.\r\n            3102 — Asset Type\
            \ already contains assets. Refrigerant Purpose can not be changed!\r\n\
            \            703 — Trade not found."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      tags:
      - AssetTypes
      x-access: Subscribers
      x-codegen-request-body-name: type
  /AssetTypes/byids:
    get:
      deprecated: false
      operationId: "GETv3_AssetTypes_byids?ids[0]={ids[0]}&ids[1]={ids[1]}"
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
          description: Request succeeded and the requested information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      tags:
      - AssetTypes
      x-access: Any
  /AssetTypes/GetAssetTypeAttributes/{assetTypeId}:
    get:
      deprecated: false
      operationId: "GETv3_AssetTypes_GetAssetTypeAttributes_{assetTypeId}"
      parameters:
      - in: path
        name: assetTypeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeAttributeExternal'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeAttributeExternal'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeAttributeExternal'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeAttributeExternal'
                type: array
          description: Request succeeded and the requested information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  502 — Asset Type not found."
      tags:
      - AssetTypes
      x-access: Any
  /AssetTypes/GetAssetTypeTrades/{assetTypeId}:
    get:
      deprecated: false
      operationId: "GETv3_AssetTypes_GetAssetTypeTrades_{assetTypeId}"
      parameters:
      - in: path
        name: assetTypeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  502 — Asset Type not found."
      tags:
      - AssetTypes
      x-access: Any
  /AssetTypes/GetAssetTypeGroups:
    get:
      deprecated: false
      description: Returns a list of asset type groups for the specified subscriber.
      operationId: "GETv3_AssetTypes_GetAssetTypeGroups?subscriberId={subscriberId}"
      parameters:
      - description: Unique numeric identifier of the subscriber.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup'
                type: array
          description: Asset type groups are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request was not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — Bad Request"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Something went wrong, and the server was unable to complete\
            \ your request.\r\n            <br/>Error codes:\r\n            501 —\
            \ Object reference is not set to an instance of an object"
      summary: Get asset type groups by SubscriberId
      tags:
      - AssetTypes
      x-access: Any
  /AssetTypes/GetSubscriberAssetTypeCategories:
    post:
      deprecated: false
      description: "Returns an asset category containing asset types that belong to\
        \ the specified trade for the specified subscriber.\r\n            <br />\r\
        \n            ***Note***: `TradeNames` is an optional parameter. When you\
        \ skip it, the response shows all asset categories containing asset types."
      operationId: POSTv3_AssetTypes_GetSubscriberAssetTypeCategories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetSubscriberAssetCategoriesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetSubscriberAssetCategoriesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetSubscriberAssetCategoriesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetSubscriberAssetCategoriesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.GetSubscriberAssetCategoriesRequest'
        description: Request model to retrieve a list of asset categories.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
          description: Asset categories are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Something went wrong, and the server was unable to complete\
            \ your request.\r\n            <br/>Error codes:\r\n            501 —\
            \ Object reference is not set to an instance of an object\r\n        \
            \    501 — Value cannot be null"
      summary: Get asset categories by SubscriberId and TradeNames
      tags:
      - AssetTypes
      x-access: Any
      x-codegen-request-body-name: request
  /AssetTypes/GetAssetTypeCategoriesByIds:
    post:
      deprecated: false
      description: "Returns asset categories names based on their numeric identifiers.\r\
        \n            <br />\r\n            ***Note***: To get all asset categories,\
        \ send the request without specifying any Id. Asset categories from the list\
        \ may contain asset types or may be empty, as this method retrieves asset\
        \ categories from the standardized list."
      operationId: POSTv3_AssetTypes_GetAssetTypeCategoriesByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
        description: Request model to retrieve asset categories names.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
          description: Asset categories names are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Something went wrong, and the server was unable to complete\
            \ your request.\r\n            <br/>Error codes:\r\n            501 —\
            \ Object reference is not set to an instance of an object"
      summary: Get asset categories by Ids
      tags:
      - AssetTypes
      x-access: Any
      x-codegen-request-body-name: request
  /AssetTypes/GetAssetTypeCategoriesByAssetIds:
    post:
      deprecated: false
      description: Returns an asset category that contains the specified asset.
      operationId: POSTv3_AssetTypes_GetAssetTypeCategoriesByAssetIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GetByIdsRequest'
        description: Request model to retrieve a list of asset categories.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
                type: object
            text/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
                type: object
            application/xml:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
                type: object
            text/xml:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
                type: object
          description: Asset categories are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Something went wrong, and the server was unable to complete\
            \ your request.\r\n            <br/>Error codes:\r\n            501 —\
            \ Object reference not set to an instance of an object\r\n           \
            \ 501 — Unable to create a null constant value. Only entity types, enumeration\
            \ types, or primitive types are supported in this context"
      summary: Get asset categories by AssetIds
      tags:
      - AssetTypes
      x-access: Any
      x-codegen-request-body-name: request
  /AssetTypes/GetAssetTypesByLocation:
    post:
      deprecated: false
      operationId: POSTv3_AssetTypes_GetAssetTypesByLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetTypesByLocationRequestInternal'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetTypesByLocationRequestInternal'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetTypesByLocationRequestInternal'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetTypesByLocationRequestInternal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetTypesByLocationRequestInternal'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  502 — Asset Type not found."
      tags:
      - AssetTypes
      x-access: Any
      x-codegen-request-body-name: request
  /AssetTypes/assets/{assetGroupId}/groupattachments:
    post:
      deprecated: false
      operationId: "POSTv3_AssetTypes_assets_{assetGroupId}_groupattachments"
      parameters:
      - in: path
        name: assetGroupId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POSTv3_AssetTypes_assets__assetGroupId__groupattachments_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetTypeGroupAttachmentResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetTypeGroupAttachmentResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetTypeGroupAttachmentResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetTypeGroupAttachmentResponse'
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be executed or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  502 — AssetTypeGroup Not found;\r\n            503 — Bad Request;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            504 — API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Add AssetTypeGroup Attachments
      tags:
      - AssetTypes
      x-access: Any
  /AssetTypes/AssetTypeMeters/{assetTypeId}:
    get:
      deprecated: false
      description: "Returns a list of meters and their parameters associated with\
        \ an asset type and created by the current subscriber.\r\n            <br\
        \ />You can get the details for a particular level by using the [GET/AssetTypes/AssetTypeMeter/{assetTypeMeterId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/GETv3_AssetTypes_AssetTypeMeter__assetTypeMeterId_)\
        \ method.\r\n            <br />Learn more about [asset meter reading](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/834469973/Asset+Meter+Reading)\
        \ in ServiceChannel University."
      operationId: "GETv3_AssetTypes_AssetTypeMeters_{assetTypeId}"
      parameters:
      - description: "Unique numeric identifier of the asset type you want to get\
          \ information on. Send the [GET /AssetTypes](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/GETv3_AssetTypes)\
          \ request to get an asset type ID."
        in: path
        name: assetTypeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterResponseItem'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterResponseItem'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterResponseItem'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterResponseItem'
                type: array
          description: The requested asset type meters are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request URI is incorrect, or the resource does not exist."
      summary: Get asset type meters
      tags:
      - AssetTypes
      x-access: Any
  /AssetTypes/AssetTypeMeter/{assetTypeMeterId}:
    get:
      deprecated: false
      description: Returns the details of the specified asset type meter for the current
        subscriber.
      operationId: "GETv3_AssetTypes_AssetTypeMeter_{assetTypeMeterId}"
      parameters:
      - description: "Unique numeric identifier of the asset type meter you want to\
          \ get the details of.\r\n            <br />Pass the [GET /AssetTypes/AssetTypeMeters/{assetTypeId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/GETv3_AssetTypes_AssetTypeMeters__assetTypeId_)\
          \ method to acquire an ID of an asset type meter."
        in: path
        name: assetTypeMeterId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterResponseItem'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterResponseItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterResponseItem'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterResponseItem'
          description: The asset type meter details are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request URI is incorrect, or the resource does not exist."
      summary: Get an asset type meter details
      tags:
      - AssetTypes
      x-access: Any
  /AssetTypes/AssetTypeMeter:
    post:
      deprecated: false
      description: Creates a new asset type meter for a particular asset type for
        the current subscriber.
      operationId: POSTv3_AssetTypes_AssetTypeMeter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem'
        description: "Request to add an asset type meter. \r\n            <br />Pass\
          \ the following parameters in the request:\r\n            <br /> • **Id**\
          \ (*Required*). Enter 0 or null so that when the asset type meter is created\
          \ the system can assign a unique numeric ID to it.\r\n            <br /> \
          • **Name** (*Required*). Name of an asset type meter.\r\n            <br\
          \ /> • **Notes**. Comments provided by a user who added the asset type meter.\r\
          \n            <br /> • **Inactive**. Set the asset type meter to the active\
          \ on inactive status. Valid values: *true*, *false* or 1 - true, 0 - false.\r\
          \n            <br /> • **EditOnWO**. Define whether technicians are allowed\
          \ to enter data on work orders for the asset. Valid values: *true*, *false*\
          \ or 1 - true, 0 - false.\r\n            <br /> • **AssetTypeId** (*Required*).\
          \ ID of an asset type to assign the meter to.\r\n            <br /> • **UnitOfMeasure**\
          \ (*Required*). Unique numeric identifier of a unit of measurement in the\
          \ system."
        required: true
      responses:
        "200":
          content: {}
          description: The asset type meter is successfully added.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/> Failed to Create Asset\
            \ Type Meter"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 — Object\
            \ reference not set to an instance of an object"
      summary: Add an asset type meter
      tags:
      - AssetTypes
      x-access: Any
      x-codegen-request-body-name: request
    put:
      deprecated: false
      description: "Modifies information of an already existing asset type meter.\r\
        \n            <br />**Note**. All request parameters should be filled out:\
        \ those you want to add or edit along with the parameters you want to leave\
        \ unchanged.\r\n            <br />**Example Request**\r\n            \r\n\
        \                   PUT /AssetTypes/AssetTypeMeter\r\n                   {\r\
        \n                       \"Id\": 16,\r\n                       \"Name\": \"\
        Music System\",\r\n                       \"MaxValue\": \"500.00\",\r\n  \
        \                     \"Notes\": ,\r\n                       \"Inactive\"\
        : false,\r\n                       \"EditOnWO\": true,\r\n               \
        \        \"AssetTypeId\": 7632,\r\n                       \"UnitOfMeasure\"\
        : 250\r\n                   }"
      operationId: PUTv3_AssetTypes_AssetTypeMeter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem'
        description: Request to add or update the asset type meter details.
        required: true
      responses:
        "200":
          content: {}
          description: The asset type meter is successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/> Failed to Update Asset\
            \ Type Meter"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 — Object\
            \ reference not set to an instance of an object"
      summary: Update an asset type meter
      tags:
      - AssetTypes
      x-access: Any
      x-codegen-request-body-name: request
  /AssetTypes/GetAssetTypesAvailableForSubscriber/{subscriberId}:
    get:
      deprecated: false
      operationId: "GETv3_AssetTypes_GetAssetTypesAvailableForSubscriber_{subscriberId}?tradeId={tradeId}"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: tradeId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
                type: array
          description: Request succeeded and the requested information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  502 — Asset Types not found."
      tags:
      - AssetTypes
      x-access: Providers
  /AssetTypes/asettypes/GetAssetTypesWithCreatePermission:
    get:
      deprecated: false
      operationId: "GETv3_AssetTypes_asettypes_GetAssetTypesWithCreatePermission?subscriberId={subscriberId}&tradeId={tradeId}"
      parameters:
      - in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: tradeId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Get Asset Types With Create Permission
      tags:
      - AssetTypes
      x-access: Providers
  /AssetTypes/AssetTypes/AssetCategoriesByTradeId/{tradeId}:
    get:
      deprecated: false
      description: "Returns a list of asset categories associated with the specified\
        \ trade.\r\n            <br />\r\n            ***Note***:  This method retrieves\
        \ asset categories from the standardized list, that is why asset categories\
        \ may contain asset types and may not. To get asset categories containing\
        \ asset types that belong to the certain trade, pass the [POST /AssetTypes/GetSubscriberAssetTypeCategories](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/POSTv3_AssetTypes_GetSubscriberAssetTypeCategories)\
        \ method.\r\n            <br />\r\n            For more information, refer\
        \ to [Adding Asset Category and Asset Types](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/2523693743/Adding+Asset+Category+and+Asset+Types)\
        \ in ServiceChannel University."
      operationId: "GETv3_AssetTypes_AssetTypes_AssetCategoriesByTradeId_{tradeId}"
      parameters:
      - description: "Unique numeric identifier of the trade. \r\n            Pass\
          \ the [GET / AssetTypes](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/GETv3_AssetTypes)\
          \ or [GET /assets/{assetId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/Assets/GETv3_assets__assetId__locationId__locationId__storeId__storeId__tagId__tagId__trackingNumber__trackingNumber_)\
          \ method to retrieve `tradeId`."
        in: path
        name: tradeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
                type: array
          description: Asset categories are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request URI is incorrect, or the resource does not exist."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Something went wrong, and the server was unable to complete\
            \ your request.\r\n            <br/>Error codes:\r\n            501 —\
            \ Object reference is not set to an instance of an object"
      summary: Get asset categories by tradeId
      tags:
      - AssetTypes
      x-access: Any
  /AssetTypes/asettypes/AssetTypesForCreate:
    get:
      deprecated: false
      operationId: "GETv3_AssetTypes_asettypes_AssetTypesForCreate?tradeId={tradeId}"
      parameters:
      - in: query
        name: tradeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Get Asset Types For Create By TradeId
      tags:
      - AssetTypes
      x-access: Subscribers
  /AssetTypes/asettypes/GetPrimaryAssetTypesAsync:
    get:
      deprecated: false
      operationId: GETv3_AssetTypes_asettypes_GetPrimaryAssetTypesAsync
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Get Primary Asset Types
      tags:
      - AssetTypes
      x-access: Subscribers
  /AssetTypes/asettypes/GetPrimaryAssetTypeBrandsAsync/{primaryAssetTypeId}:
    get:
      deprecated: false
      operationId: "GETv3_AssetTypes_asettypes_GetPrimaryAssetTypeBrandsAsync_{primaryAssetTypeId}"
      parameters:
      - in: path
        name: primaryAssetTypeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Get Primary Asset Type Brands
      tags:
      - AssetTypes
      x-access: Subscribers
  /AssetTypes/asettypes/GetAssetTypeBrandsAsync/{assetTypeId}:
    get:
      deprecated: false
      operationId: "GETv3_AssetTypes_asettypes_GetAssetTypeBrandsAsync_{assetTypeId}"
      parameters:
      - in: path
        name: assetTypeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            504\
            \ — API call rejected by security permissions;"
      summary: Get Asset Type Brands
      tags:
      - AssetTypes
      x-access: Subscribers
  /workorders/{workorderId}/attachments:
    post:
      deprecated: false
      description: Adds attachments to the specified work order.
      operationId: "POSTv3_workorders_{workorderId}_attachments?actor={actor}"
      parameters:
      - description: Numeric ID of the work order to add attachments to.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: actor
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POSTv3_workorders__workorderId__attachments_actor__actor__request'
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 - Work Order not found;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Add attachments to a work order
      tags:
      - Attachments
      x-access: Any
  /workorders/{poNumber}/attachmentsByPoNumber:
    post:
      deprecated: false
      operationId: "POSTv3_workorders_{poNumber}_attachmentsByPoNumber?actor={actor}"
      parameters:
      - description: Purchase Order
        in: path
        name: poNumber
        required: true
        schema:
          type: string
      - description: On whose behalf the attachment is adding
        in: query
        name: actor
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POSTv3_workorders__workorderId__attachments_actor__actor__request'
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 - Work Order not found;\r\n            <br/> 503 - Only for\
            \ subscribers usage;        \r\n            <br/> 920 - Purchase number\
            \ cannot be empty;\r\n            <br/> 9100 - There are multiple work\
            \ orders with the same PO number;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Add attachments to a work order by PO number
      tags:
      - Attachments
      x-access: Any
  /workorders/attachmentAsBase64:
    post:
      deprecated: false
      operationId: POSTv3_workorders_attachmentAsBase64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.AddBase64AttachmentsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.AddBase64AttachmentsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.AddBase64AttachmentsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.AddBase64AttachmentsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.AddBase64AttachmentsRequest'
        required: true
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 - Work Order not found;\r\n            <br/> 503 - Only for\
            \ subscribers usage;        \r\n            <br/> 920 - Purchase number\
            \ cannot be empty;\r\n            <br/> 946 - Work Order attachments size\
            \ exceeded;\r\n            <br/> 9100 - There are multiple work orders\
            \ with the same PO number;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      tags:
      - Attachments
      x-access: Any
      x-codegen-request-body-name: request
  /workorders/{workorderId}/attachments/{attachmentId}/thumbnail:
    get:
      deprecated: false
      operationId: "GETv3_workorders_{workorderId}_attachments_{attachmentId}_thumbnail?width={width}&height={height}&mode={mode}&imageFormat={imageFormat}"
      parameters:
      - in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: width
        schema:
          format: int32
          type: integer
      - in: query
        name: height
        schema:
          format: int32
          type: integer
      - in: query
        name: mode
        schema:
          enum:
          - None
          - Max
          - Pad
          - Crop
          - Carve
          - Stretch
          type: string
      - in: query
        name: imageFormat
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Attachments
      x-access: Any
  /workorders/{workorderId}/notes/{noteId}/attachments:
    post:
      deprecated: false
      description: <para>Add Attachments to Work Order Note. Returns list of attachments
        Id for successful request.</para>
      operationId: "POSTv3_workorders_{workorderId}_notes_{noteId}_attachments"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric Id of the Note to perform action with.
        in: path
        name: noteId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POSTv3_workorders__workorderId__notes__noteId__attachments_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - Validation fails;\r\n            <br/> 917 - InvalidWoIdentifier;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Add Attachments to Work Order Note
      tags:
      - Attachments
      x-access: Any
  /rfps/{id}/attachments:
    post:
      deprecated: false
      description: <para>Adds attchment to RFP. Returns RFP attachment Id for successful
        request.</para>
      operationId: "POSTv3_rfps_{id}_attachments"
      parameters:
      - description: Rfp ID to perform action with.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POSTv3_rfps__id__attachments_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 501 - Failed to upload attachment;\r\n            <br/> 502 -\
            \ Data not found. Returned if target Rfp is not found;\r\n           \
            \ <br/> 503 - Request data is empty;\r\n            <br/>Invalid Attachment\
            \ Request;\r\n            <br/>User info should not be null;\r\n     \
            \       <br/>SubscriberId is null;\r\n            <br/>Cannot accept file(s)\
            \ of this type;\r\n            <br/>The file that you're trying to attach\
            \ has name that exceed the maximum allowable name length;\r\n        \
            \    <br/>The file that you're trying to attach has length that exceed\
            \ the maximum allowable length;\r\n            <br/>Empty Location or\
            \ Store ID;\r\n            <br/>Empty Provider ID;\r\n            <br/>Provider\
            \ is not valid;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Add attchment to RFP
      tags:
      - Attachments
      x-access: Subscribers
  /siteaudit/comments/{commentId}/attachments:
    get:
      deprecated: false
      operationId: "GETv3_siteaudit_comments_{commentId}_attachments"
      parameters:
      - description: Numeric Id of the Comment which Attachment belongs to.
        in: path
        name: commentId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.AttachmentInComment'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.AttachmentInComment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.AttachmentInComment'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.AttachmentInComment'
                type: array
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be executed or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - validation fails;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
        "404":
          content: {}
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            502 — Data not found"
      summary: Returns list of attachment ids and urls.
      tags:
      - Attachments
      x-access: Any
    post:
      deprecated: false
      description: "Adds attchment to Comment. If Comment is not created yet specify\
        \ {commentId} = -1."
      operationId: "POSTv3_siteaudit_comments_{commentId}_attachments"
      parameters:
      - description: Numeric Id of the Comment to perform action with.
        in: path
        name: commentId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POSTv3_siteaudit_comments__commentId__attachments_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 501 - Failed to upload attachment;\r\n            <br/> 502 -\
            \ Data not found. Returned if target Comment is not found;\r\n       \
            \     <br/> 503 - Request data is empty;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Add attchment to Comment
      tags:
      - Attachments
      x-access: Any
  /siteaudit/comments/{commentId}/attachments/{attachmentId}:
    get:
      deprecated: false
      operationId: "GETv3_siteaudit_comments_{commentId}_attachments_{attachmentId}"
      parameters:
      - description: Numeric Id of the Comment which Attachment belongs to.
        in: path
        name: commentId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric Id of the Attachment to perform action with.
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Retrieve original attchment from Comment
      tags:
      - Attachments
      x-access: Any
  /siteaudit/comments/{commentId}/attachments/{attachmentId}/thumbnail:
    get:
      deprecated: false
      operationId: "GETv3_siteaudit_comments_{commentId}_attachments_{attachmentId}_thumbnail?width={width}&height={height}&mode={mode}&imageFormat={imageFormat}"
      parameters:
      - description: Numeric Id of the Comment which Attachment belongs to.
        in: path
        name: commentId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric Id of the Attachment to perform action with.
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
      - description: Width of the output file.
        in: query
        name: width
        schema:
          format: int32
          type: integer
      - description: Height of the output file.
        in: query
        name: height
        schema:
          format: int32
          type: integer
      - description: "How to resolve aspect ratio differences between the requested\
          \ size and the \r\n            original image's size: Max = 1, Pad = 2,\
          \ Crop = 3, Carve = 4, Stretch = 5."
        in: query
        name: mode
        schema:
          enum:
          - None
          - Max
          - Pad
          - Crop
          - Carve
          - Stretch
          type: string
      - description: "The desired image format, like 'jpg', 'gif', or 'png'. Do not\
          \ specify \r\n            if you want to preserve the original format."
        in: query
        name: imageFormat
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Retrieve resized attchment from Comment
      tags:
      - Attachments
      x-access: Any
  /assets/{assetId}/attachments:
    get:
      deprecated: false
      operationId: "GETv3_assets_{assetId}_attachments?providerId={providerId}"
      parameters:
      - description: Asset Identifier
        in: path
        name: assetId
        required: true
        schema:
          format: int32
          type: integer
      - description: "The provider identifier. Required for sub-contractor request.\
          \ [Required Special permissions]"
        in: query
        name: providerId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttachment'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttachment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttachment'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttachment'
                type: array
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be executed or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - User info should not be null;\r\n            <br/>SubscriberId\
            \ is null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      summary: Get Asset Attachments
      tags:
      - Attachments
      x-access: Any
    post:
      deprecated: false
      operationId: "POSTv3_assets_{assetId}_attachments?isDefault={isDefault}"
      parameters:
      - in: path
        name: assetId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: isDefault
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POSTv3_assets__assetId__attachments_isDefault__isDefault__request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetAttachmentResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetAttachmentResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetAttachmentResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AddAssetAttachmentResponse'
                type: array
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be executed or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 - Asset Not found;\r\n            < br/> 503 - Bad Request;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Add Attachments to Asset
      tags:
      - Attachments
      x-access: Any
  /assets/{assetAttachmentId}/deleteAttachment:
    post:
      deprecated: false
      operationId: "POSTv3_assets_{assetAttachmentId}_deleteAttachment"
      parameters:
      - in: path
        name: assetAttachmentId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be executed or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - User info should not be null;\r\n            <br/>SubscriberId\
            \ is null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      summary: Delete Asset Attachment
      tags:
      - Attachments
      x-access: Any
  /assets/getattachmentsbyassetids:
    post:
      deprecated: false
      operationId: POSTv3_assets_getattachmentsbyassetids
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttachment'
                  type: array
                type: object
            text/json:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttachment'
                  type: array
                type: object
            application/xml:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttachment'
                  type: array
                type: object
            text/xml:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttachment'
                  type: array
                type: object
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be executed or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - User info should not be null;\r\n            <br/>SubscriberId\
            \ is null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      summary: Get Asset Attachments
      tags:
      - Attachments
      x-access: Any
      x-codegen-request-body-name: assetIds
  /assets/getattachmentsbyassetids_v1:
    post:
      deprecated: false
      operationId: POSTv3_assets_getattachmentsbyassetids_v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttachment'
                  type: array
                type: object
            text/json:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttachment'
                  type: array
                type: object
            application/xml:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttachment'
                  type: array
                type: object
            text/xml:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttachment'
                  type: array
                type: object
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be executed or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - User info should not be null;\r\n            <br/>SubscriberId\
            \ is null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      summary: Get Asset Attachments
      tags:
      - Attachments
      x-access: Any
      x-codegen-request-body-name: assetAttachmentsRequest
  /assets/updateAssetAttachment:
    put:
      deprecated: false
      operationId: "PUTv3_assets_updateAssetAttachment?attachmentId={attachmentId}&fileName={fileName}&description={description}"
      parameters:
      - description: Attachment identifier
        in: query
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
      - description: New file name
        in: query
        name: fileName
        schema:
          type: string
      - description: New file description(comment)
        in: query
        name: description
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - FileName or Description is required;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      summary: Update asset attachment by id
      tags:
      - Attachments
      x-access: Any
  /workrequest/{workRequestId}/attachments:
    get:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: "GETv3_workrequest_{workRequestId}_attachments"
      parameters:
      - description: WorkRequest Identifier
        in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
          description: Request succeeded and the requested information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      summary: Get WorkRequest Attachments
      tags:
      - Attachments
      x-access: Any
    post:
      deprecated: false
      description: "*In limited availability phase.*\r\n            <br />Adds attachments\
        \ to the specified WorkRequest."
      operationId: "POSTv3_workrequest_{workRequestId}_attachments?actor={actor}"
      parameters:
      - description: Numeric ID of the WorkRequest to add attachments to.
        in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      - description: Name of the person on whose behalf you are performing the action
        in: query
        name: actor
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POSTv3_workrequest__workRequestId__attachments_actor__actor__request'
        required: true
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 - Work Request not found;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Add attachments to a WorkRequest
      tags:
      - Attachments
      x-access: Any
  /workrequest/{workRequestId}/notes/{noteId}/attachments:
    post:
      deprecated: false
      description: "*In limited availability phase.*\r\n            <br />Add Attachments\
        \ to Work Request Note. Returns list of attachments Id for successful request."
      operationId: "POSTv3_workrequest_{workRequestId}_notes_{noteId}_attachments"
      parameters:
      - description: Numeric Id of the Work Request to perform action with.
        in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric Id of the Note to perform action with.
        in: path
        name: noteId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POSTv3_workorders__workorderId__notes__noteId__attachments_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - Validation fails;\r\n            <br/> 8020 - InvalidWorkRequestIdentifier;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Add Attachments to Work Request Note
      tags:
      - Attachments
      x-access: Any
  /workrequest({workRequestId})/notes({noteId})/attachments:
    get:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: "GETv3_workrequest({workRequestId})_notes({noteId})_attachments"
      parameters:
      - description: WorkRequest Identifier
        in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      - description: Note Identifier
        in: path
        name: noteId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      summary: Get WorkRequest Note Attachments
      tags:
      - Attachments
      x-access: Any
  /BatchRfp/Create:
    post:
      deprecated: false
      operationId: POSTv3_BatchRfp_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.BatchRfp.BatchRfpRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.BatchRfp.BatchRfpRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.BatchRfp.BatchRfpRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.BatchRfp.BatchRfpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.BatchRfp.BatchRfpRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.BatchWorkOrder.BatchCreateRfpResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.BatchWorkOrder.BatchCreateRfpResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.BatchWorkOrder.BatchCreateRfpResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.BatchWorkOrder.BatchCreateRfpResponse'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 - BatchNumber is empty;\r\n            <br/> 503 - Validation\
            \ fails. Request is empty or null;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Requested resource requires authentication.\r\n          \
            \  <br/>Error codes:\r\n            <br/> 504 - API call rejected by security\
            \ permissions; "
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            <br/> 501 - Timeout expired.\
            \ The timeout period elapsed prior to completion of the operation or the\
            \ server is not responding."
      summary: CreateBatchRfpAsync
      tags:
      - BatchRfp
      x-access: Subscribers
      x-codegen-request-body-name: batchRfpRequest
  /branding/{subscriberId}:
    get:
      deprecated: false
      operationId: "GETv3_branding_{subscriberId}"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Branding
      x-access: Any
  /broker/client/access/providers/{providerId}:
    get:
      deprecated: false
      operationId: "GETv3_broker_client_access_providers_{providerId}"
      parameters:
      - description: Provider Id
        in: path
        name: providerId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Common.ApiModels.AccessDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Common.ApiModels.AccessDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Common.ApiModels.AccessDto'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Broker.Common.ApiModels.AccessDto'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The request is not authorized.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Validates if external client has access to the specified provider
      tags:
      - Broker
      x-access: Any
  /categories:
    get:
      deprecated: false
      description: "Returns a list of available work order categories for one or several\
        \ subscribers. Only a parent subscriber can get categories for child subscribers.\r\
        \n            <br />You can create a new category via the [POST /categories](https://developer.servicechannel.com/swagger/ui/index#/Categories/POSTv3_categories)\
        \ method."
      operationId: "GETv3_categories?subscriberIds[0]={subscriberIds[0]}&subscriberIds[1]={subscriberIds[1]}"
      parameters:
      - description: "Unique numeric ID of the subscriber you want to retrieve categories\
          \ for. By default, the current subscriber ID is set."
        explode: true
        in: query
        name: subscriberIds
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.CategoryResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.CategoryResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.CategoryResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.CategoryResponse'
                type: array
          description: The requested list of categories is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     401 — Invalid subscriber ID"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes: \r\n\
            \            100 — User has no rights to perform this action"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Retrieve categories
      tags:
      - Categories
      x-access: Subscribers
    post:
      deprecated: false
      description: "Creates a new work order category within a primary category.\r\
        \n            <br />For more information, refer to [Managing categories](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556302506/Managing+Categories)\
        \ in ServiceChannel University."
      operationId: POSTv3_categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.AddCategoryRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.AddCategoryRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.AddCategoryRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.AddCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.AddCategoryRequest'
        description: "Request to create a new category within a primary category.\
          \ To get the primary category ID, use the [GET /categories/primary](https://developer.servicechannel.com/swagger/ui/index?version=3#/Categories/GETv3_categories_primary)\
          \ method."
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.AddCategoryResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.AddCategoryResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.AddCategoryResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.AddCategoryResponse'
          description: The new category has been created.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes:\r\n\
            \            100 — User has no rights to perform this action"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/> Error codes:\r\n            501 — Category\
            \ already exists\r\n            501 — Object reference is not set to an\
            \ instance of an object"
      summary: Create a new category
      tags:
      - Categories
      x-access: Subscribers
      x-codegen-request-body-name: request
  /categories/primary:
    get:
      deprecated: false
      description: Returns a list of available primary categories of the current subscriber.
      operationId: GETv3_categories_primary
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.PrimaryCategoryResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.PrimaryCategoryResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.PrimaryCategoryResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.PrimaryCategoryResponse'
          description: The requested list of primary categories is in the response.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes: \r\n\
            \            100 — User has no rights to perform this action"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Retrieve primary categories
      tags:
      - Categories
      x-access: Subscribers
  /categories/glcodes:
    get:
      deprecated: false
      description: "Returns categories that have GL codes associated with the specified\
        \ trade. Learn more about [managing GL codes](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/557645834/Managing+GL+Codes)\
        \ in ServiceChannel University."
      operationId: "GETv3_categories_glcodes?locationId={locationId}&trade={trade}"
      parameters:
      - description: Unique numeric identifier of the location for which you want
          to retrieve categories that have a GL code mapping with the trade.
        in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Trade to retrieve categories with their associated GL codes for.
        in: query
        name: trade
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Proposals.CategoryGLCode'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Proposals.CategoryGLCode'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Proposals.CategoryGLCode'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Proposals.CategoryGLCode'
                type: array
          description: Categories with GL codes for the specified trade and location
            are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            <br/>504 — API call rejected by security permissions\r\n\
            \            <br/>601 — Location is not found\r\n            <br/>701\
            \ — Invalid trade"
      summary: List categories that have a GL code mapping with a trade
      tags:
      - Categories
      x-access: Subscribers
  /checklists/detail:
    get:
      deprecated: false
      description: "[Returns standard checklists](https://developer.servicechannel.com/guides/checklists/find-and-filter-checklists/)\
        \ along with their parameters, configured questions, and answer options.\r\
        \n            <br />You can filter checklists by:\r\n             • **Trade**.\
        \ Specify either `tradeid` or `tradeName`.\r\n             • **Category**.\
        \ Enter either `categoryid` or `categoryName`.\r\n             • **Location**.\
        \ Provide either `locationId` or `storeId` if the feature that allows creating\
        \ checklists for specific locations is enabled for a subscriber.\r\n     \
        \        • **Checklist**. Pass either `checklistid` or `checkListName` to\
        \ get a specific checklist, and ignore other parameters.\r\n            <br\
        \ />Providers should pass `subscriberId` to retrieve checklists created by\
        \ the desired subscriber.\r\n            <br />Navigate to ServiceChannel\
        \ University to find out [how subscribers can configure checklists](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/655425975/Configuring+Checklists)."
      operationId: "GETv3_checklists_detail?tradeid={tradeid}&checklistid={checklistid}&categoryid={categoryid}&subscriberId={subscriberId}&tradeName={tradeName}&checkListName={checkListName}&categoryName={categoryName}&locationId={locationId}&storeId={storeId}&workOrderId={workOrderId}"
      parameters:
      - description: "Trade ID. To get a list of trades with their IDs, send the [GET\
          \ /odata/trades](https://developer.servicechannel.com/swagger/ui/index?version=3#/Trades/Trades_GetTrades)\
          \ request."
        in: query
        name: tradeid
        schema:
          format: int32
          type: integer
      - description: Checklist ID.
        in: query
        name: checklistid
        schema:
          format: int32
          type: integer
      - description: "Category ID. Subscribers can retrieve category IDs using the\
          \ [GET /categories](https://developer.servicechannel.com/swagger/ui/index?version=3#/Categories/GETv3_categories_subscriberIds_0___subscriberIds_0___subscriberIds_1___subscriberIds_1__)\
          \ method."
        in: query
        name: categoryid
        schema:
          format: int32
          type: integer
      - description: Unique ID of the subscriber who configured checklists. Should
          be passed by providers.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      - description: "Trade name. A trade is an area of work for which a service is\
          \ performed, such as _Lighting_, _Refrigeration_, or _Plumbing_."
        in: query
        name: tradeName
        schema:
          type: string
      - description: Checklist name.
        in: query
        name: checkListName
        schema:
          type: string
      - description: "Category name. A category is the overall classification of a\
          \ work order, such as _Maintenance_, _Repair_, or _CAPEX_."
        in: query
        name: categoryName
        schema:
          type: string
      - description: Unique ID of a subscriber’s location. This parameter is ignored
          if the feature that allows creating checklists for specific locations is
          disabled for a subscriber.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: Non-unique ID of a subscriber’s location that may appear as a
          store number. This parameter is ignored if the feature that allows creating
          checklists for specific locations is disabled for a subscriber.
        in: query
        name: storeId
        schema:
          type: string
      - description: Work Order ID
        in: query
        name: workOrderId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailExtendedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailExtendedResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailExtendedResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailExtendedResponse'
          description: The requested standard checklists are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — Bad Request; Subscriber Id should be provided if the api method\
            \ is called by provider\r\n            503 — A trade can be specified\
            \ with only one parameter: either tradeId or tradeName\r\n           \
            \ 503 — A category can be specified with only one parameter: either categoryId\
            \ or categoryName\r\n            503 — A checkList can be specified with\
            \ only one parameter: either checkListId or checkListName\r\n        \
            \    503 — A location can be specified with only one parameter: either\
            \ locationId or storeId"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not allowed.\r\n            <br/>Error codes:\r\
            \n            100 — User does not have access to work order"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Get standard checklists
      tags:
      - CheckLists
      x-access: Any
  /checklists/CheckListResponse:
    post:
      deprecated: false
      description: "Creates a response to the specified checklist question. Learn\
        \ more about [submitting checklist responses](https://developer.servicechannel.com/guides/checklists/submit-a-checklist-response/)."
      operationId: POSTv3_checklists_CheckListResponse
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POSTv3_checklists_CheckListResponse_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponsesResponsePicture'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponsesResponsePicture'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponsesResponsePicture'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponsesResponsePicture'
          description: A response to a checklist question is created. A checklist
            response object and an attachment object are returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — Work order is not found\r\n            503 — Not all required\
            \ parameters were specified\r\n            503 — The FreeTextAnswer is\
            \ required\r\n            503 — The picture is required\r\n          \
            \  503 — Checkbox responses only support next values: on, off, 1, 0, true,\
            \ false, yes, no"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Submit a response to a checklist question
      tags:
      - CheckLists
      x-access: Any
  /checklists/{checkListResponseId}/CheckListResponse:
    put:
      deprecated: false
      description: "[Updates the specified response](https://developer.servicechannel.com/guides/checklists/update-a-checklist-response/)\
        \ to a checklist question."
      operationId: "PUTv3_checklists_{checkListResponseId}_CheckListResponse"
      parameters:
      - description: "ID of the response to a checklist question to update.\r\n  \
          \          Pass the [GET /workorders/{workOrderId}/checklists-responses](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/GETv3_workorders__workOrderId__checklists_responses)\
          \ request to retrieve the response ID."
        in: path
        name: checkListResponseId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PUTv3_checklists__checkListResponseId__CheckListResponse_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponsesResponsePicture'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponsesResponsePicture'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponsesResponsePicture'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponsesResponsePicture'
          description: The specified response to a checklist question is updated.
            A checklist response object and an attachment object are returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — Work order is not found\r\n            503 — Bad request\r\
            \n            503 — Not all required parameters were specified\r\n   \
            \         503 — The FreeTextAnswer is required\r\n            503 — The\
            \ picture is required\r\n            503 — Checkbox responses only support\
            \ next values: on, off, 1, 0, true, false, yes, no\r\n            503\
            \ — CheckListResponsePictureId (#) is not valid for CheckListResponse"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Update a response to a checklist question
      tags:
      - CheckLists
      x-access: Any
  /checklists/taskslist:
    get:
      deprecated: false
      description: "Retrieves checklists of the **Asset Task** type along with their\
        \ parameters and task details. Such checklists contain asset-related tasks\
        \ that a technician is prompted to complete when working on a service request.\r\
        \n            <br />You can filter checklists by:\r\n             • **Trade**.\
        \ Specify either `tradeid` or `tradeName`.\r\n             • **Category**.\
        \ Enter either `categoryid` or `categoryName`.\r\n             • **Location**.\
        \ Provide either `locationId` or `storeId` if the feature that allows creating\
        \ checklists for specific locations is enabled for a subscriber.\r\n     \
        \        • **Checklist**. Pass either `checklistid` or `checkListName` to\
        \ get a specific checklist, and ignore other parameters.\r\n            <br\
        \ />Providers should pass `subscriberId` to retrieve checklists created by\
        \ the desired subscriber.\r\n            <br />Navigate to ServiceChannel\
        \ University to find out [how subscribers can configure checklists](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/655425975/Configuring+Checklists)."
      operationId: "GETv3_checklists_taskslist?tradeid={tradeid}&checklistid={checklistid}&categoryid={categoryid}&subscriberId={subscriberId}&tradeName={tradeName}&checkListName={checkListName}&categoryName={categoryName}&locationId={locationId}&storeId={storeId}&providerId={providerId}"
      parameters:
      - description: "Trade ID. To get a list of trades with their IDs, send the [GET\
          \ /odata/trades](https://developer.servicechannel.com/swagger/ui/index?version=3#/Trades/Trades_GetTrades)\
          \ request."
        in: query
        name: tradeid
        schema:
          format: int32
          type: integer
      - description: Checklist ID.
        in: query
        name: checklistid
        schema:
          format: int32
          type: integer
      - description: "Category ID. Subscribers can retrieve category IDs using the\
          \ [GET /categories](https://developer.servicechannel.com/swagger/ui/index?version=3#/Categories/GETv3_categories_subscriberIds_0___subscriberIds_0___subscriberIds_1___subscriberIds_1__)\
          \ method."
        in: query
        name: categoryid
        schema:
          format: int32
          type: integer
      - description: Unique ID of the subscriber who configured checklists. Should
          be passed by providers.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      - description: "Trade name. A trade is an area of work for which a service is\
          \ performed, such as _Lighting_, _Refrigeration_, or _Plumbing_."
        in: query
        name: tradeName
        schema:
          type: string
      - description: Checklist name.
        in: query
        name: checkListName
        schema:
          type: string
      - description: "Category name. A category is the overall classification of a\
          \ work order, such as _Maintenance_, _Repair_, or _CAPEX_."
        in: query
        name: categoryName
        schema:
          type: string
      - description: Unique ID of a subscriber’s location. This parameter is ignored
          if the feature that allows creating checklists for specific locations is
          disabled for a subscriber.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: Non-unique ID of a subscriber’s location that may appear as a
          store number. This parameter is ignored if the feature that allows creating
          checklists for specific locations is disabled for a subscriber.
        in: query
        name: storeId
        schema:
          type: string
      - description: "The provider identifier. Required for sub-contractor request.\
          \ [Required Special permissions]"
        in: query
        name: providerId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ChecklistTasks.CheckListWithTasksExtendedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ChecklistTasks.CheckListWithTasksExtendedResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ChecklistTasks.CheckListWithTasksExtendedResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ChecklistTasks.CheckListWithTasksExtendedResponse'
          description: The requested asset task checklists are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — Bad Request; Subscriber Id should be provided if the api method\
            \ is called by provider\r\n            503 — A trade can be specified\
            \ with only one parameter: either tradeId or tradeName\r\n           \
            \ 503 — A category can be specified with only one parameter: either categoryId\
            \ or categoryName\r\n            503 — A checkList can be specified with\
            \ only one parameter: either checkListId or checkListName\r\n        \
            \    503 — A location can be specified with only one parameter: either\
            \ locationId or storeId"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Get checklists with asset tasks
      tags:
      - CheckLists
      x-access: Any
  /checklists/types:
    get:
      deprecated: false
      description: "Returns the ID and type of checklists.\r\n            <br />Subscribers\
        \ can create two types of checklists:\r\n             • **Standard checklist**\
        \ with questions that a technician is prompted to answer when working on a\
        \ service request. Send the [GET /checklists/detail](https://developer.servicechannel.com/swagger/ui/index?version=3#/CheckLists/GETv3_checklists_detail_tradeid__tradeid__checklistid__checklistid__categoryid__categoryid__subscriberId__subscriberId__tradeName__tradeName__checkListName__checkListName__categoryName__categoryName__locationId__locationId__storeId__storeId_)\
        \ request to retrieve standard checklists.\r\n             • **Asset task\
        \ checklist** with asset-related tasks that a technician should complete when\
        \ servicing a work order. Pass [GET /checklists/taskslist](https://developer.servicechannel.com/swagger/ui/index?version=3#/CheckLists/GETv3_checklists_taskslist_tradeid__tradeid__checklistid__checklistid__categoryid__categoryid__subscriberId__subscriberId__tradeName__tradeName__checkListName__checkListName__categoryName__categoryName__locationId__locationId__storeId__storeId_)\
        \ to get asset task checklists.\r\n            <br />You can filter checklists\
        \ by:\r\n             • **Trade**. Specify either `tradeid` or `tradeName`.\r\
        \n             • **Category**. Enter either `categoryid` or `categoryName`.\r\
        \n             • **Location**. Provide either `locationId` or `storeId` if\
        \ the feature that allows creating checklists for specific locations is enabled\
        \ for a subscriber.\r\n             • **Checklist**. Pass either `checklistid`\
        \ or `checkListName` to get a specific checklist, and ignore other parameters.\r\
        \n            <br />Providers should pass `subscriberId` to retrieve checklists\
        \ created by the desired subscriber."
      operationId: "GETv3_checklists_types?tradeId={tradeId}&checklistId={checklistId}&categoryId={categoryId}&subscriberId={subscriberId}&tradeName={tradeName}&checklistName={checklistName}&categoryName={categoryName}&locationId={locationId}&storeId={storeId}&providerId={providerId}"
      parameters:
      - description: "Trade ID. To get a list of trades with their IDs, send the [GET\
          \ /odata/trades](https://developer.servicechannel.com/swagger/ui/index?version=3#/Trades/Trades_GetTrades)\
          \ request."
        in: query
        name: tradeId
        schema:
          format: int32
          type: integer
      - description: Checklist ID.
        in: query
        name: checklistId
        schema:
          format: int32
          type: integer
      - description: "Category ID. Subscribers can retrieve category IDs using the\
          \ [GET /categories](https://developer.servicechannel.com/swagger/ui/index?version=3#/Categories/GETv3_categories_subscriberIds_0___subscriberIds_0___subscriberIds_1___subscriberIds_1__)\
          \ method."
        in: query
        name: categoryId
        schema:
          format: int32
          type: integer
      - description: Unique ID of the subscriber who configured checklists. Should
          be passed by providers.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      - description: "Trade name. A trade is an area of work for which a service is\
          \ performed, such as _Lighting_, _Refrigeration_, or _Plumbing_."
        in: query
        name: tradeName
        schema:
          type: string
      - description: Checklist name.
        in: query
        name: checklistName
        schema:
          type: string
      - description: "Category name. A category is the overall classification of a\
          \ work order, such as _Maintenance_, _Repair_, or _CAPEX_."
        in: query
        name: categoryName
        schema:
          type: string
      - description: Unique ID of a subscriber’s location. This parameter is ignored
          if the feature that allows creating checklists for specific locations is
          disabled for a subscriber.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: Non-unique ID of a subscriber’s location that may appear as a
          store number. This parameter is ignored if the feature that allows creating
          checklists for specific locations is disabled for a subscriber.
        in: query
        name: storeId
        schema:
          type: string
      - description: "The provider identifier. Required for sub-contractor request.\
          \ [Required Special permissions]"
        in: query
        name: providerId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Checklists.CheckListTypesExtendedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Checklists.CheckListTypesExtendedResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Checklists.CheckListTypesExtendedResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Checklists.CheckListTypesExtendedResponse'
          description: The ID and type of the requested checklists are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — Bad Request; Subscriber Id should be provided if the api method\
            \ is called by provider\r\n            503 — A trade can be specified\
            \ with only one parameter: either tradeId or tradeName\r\n           \
            \ 503 — A category can be specified with only one parameter: either categoryId\
            \ or categoryName\r\n            503 — A checkList can be specified with\
            \ only one parameter: either checkListId or checkListName\r\n        \
            \    503 — A location can be specified with only one parameter: either\
            \ locationId or storeId"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Retrieve checklist types
      tags:
      - CheckLists
      x-access: Any
  /contracts:
    get:
      deprecated: false
      description: Available only for Subscriber user.
      operationId: "GETv3_contracts?locationId={locationId}&locationDbId={locationDbId}&providerId={providerId}&trade={trade}&tradeId={tradeId}"
      parameters:
      - in: query
        name: locationId
        schema:
          type: string
      - in: query
        name: locationDbId
        schema:
          format: int32
          type: integer
      - in: query
        name: providerId
        schema:
          format: int32
          type: integer
      - in: query
        name: trade
        schema:
          type: string
      - in: query
        name: tradeId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Contracts.GetContractsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Contracts.GetContractsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Contracts.GetContractsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Contracts.GetContractsResponse'
          description: The requested contracts are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — Bad Request; locationId or locationDbId should be provided\r\
            \n            503 — Location not found\r\n            503 — Trade not\
            \ found\r\n            503 — Provider not found\r\n            503 — User\
            \ does not have Location access to perform this operation"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not allowed.\r\n            <br/>Error codes:\r\
            \n            100 — Only for subscribers usage"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: "Returns provider active contracts by providerId, locationId and trade"
      tags:
      - Contracts
      x-access: Any
    post:
      deprecated: false
      operationId: POSTv3_contracts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.AssignProviderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.AssignProviderRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.AssignProviderRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.AssignProviderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.AssignProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Contracts
      x-access: Subscribers
      x-codegen-request-body-name: request
  /contracts/retire:
    put:
      deprecated: false
      description: Available only for Subscriber Super Admin user.
      operationId: PUTv3_contracts_retire
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.RetireProviderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.RetireProviderRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.RetireProviderRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.RetireProviderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.RetireProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded. When 'Trade' and 'StoreId'
            are not specified then provider is 'retired' from all subscriber's stores.
      summary: Retire Provider Contract. When 'Trade' and 'StoreId' are not specified
        then provider is 'retired' from all subscriber's stores.
      tags:
      - Contracts
      x-access: Subscribers
      x-codegen-request-body-name: request
  /ctools/workorder/{workOrderId}/assignedtechnicians:
    get:
      deprecated: false
      description: "Returns technicians assigned to the specified work order.\r\n\
        \            <br />***Note:*** This method is only available to provider admins."
      operationId: "GETv3_ctools_workorder_{workOrderId}_assignedtechnicians"
      parameters:
      - description: The unique numeric identifier of the work order to retrieve assigned
          technicians for.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ContractorTools.TechnicianDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ContractorTools.TechnicianDto'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ContractorTools.TechnicianDto'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ContractorTools.TechnicianDto'
                type: array
          description: The technicians assigned to the specified work order are in
            the response.
        "400":
          content: {}
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content: {}
          description: The request is not authorized.
        "500":
          content: {}
          description: The server was unable to complete the request due to an internal
            error.
      summary: Retrieve technicians assigned to a work order
      tags:
      - Ctools
      x-access: Any
  /ctools/workorder/{workOrderId}/acceptedtechnicians:
    get:
      deprecated: false
      description: "Returns technicians who accepted the specified work order. Note\
        \ that only Field Tech Manager (FTM) technicians can accept work orders.\r\
        \n            <br />***Note:*** This method is only available to provider\
        \ admins."
      operationId: "GETv3_ctools_workorder_{workOrderId}_acceptedtechnicians"
      parameters:
      - description: The unique numeric identifier of the work order for which you
          want to retrieve technicians who accepted it.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ContractorTools.TechnicianDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ContractorTools.TechnicianDto'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ContractorTools.TechnicianDto'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ContractorTools.TechnicianDto'
                type: array
          description: The technicians who accepted the specified work order are in
            the response.
        "400":
          content: {}
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content: {}
          description: The request is not authorized.
        "500":
          content: {}
          description: The server was unable to complete the request due to an internal
            error.
      summary: Retrieve technicians who accepted a work order
      tags:
      - Ctools
      x-access: Any
  /ctools/workorder/{workOrderId}/assigntechnician:
    post:
      deprecated: false
      description: "Assigns a technician to the specified work order.\r\n        \
        \    <br />***Note:*** This method is only available to provider admins."
      operationId: "POSTv3_ctools_workorder_{workOrderId}_assigntechnician?userId={userId}"
      parameters:
      - description: The unique numeric identifier of the work order to assign to
          a technician.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the technician in the Authentication service to assign
          the work order to.
        in: query
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content: {}
          description: The technician is successfully assigned to the specified work
            order.
        "400":
          content: {}
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content: {}
          description: The request is not authorized.
        "500":
          content: {}
          description: The server was unable to complete the request due to an internal
            error.
      summary: Assign a technician to a work order
      tags:
      - Ctools
      x-access: Any
  /ctools/workorder/{workOrderId}/unassigntechnician:
    delete:
      deprecated: false
      description: "Unassigns a technician from the specified work order.\r\n    \
        \        <br />***Note:*** This method is only available to provider admins."
      operationId: "DELETEv3_ctools_workorder_{workOrderId}_unassigntechnician?userId={userId}"
      parameters:
      - description: The unique numeric identifier of the work order to unassign a
          technician from.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the technician in the Authentication service to unassign
          the work order from.
        in: query
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: The technician is successfully unassigned from the specified
            work order.
        "400":
          content: {}
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content: {}
          description: The request is not authorized.
        "500":
          content: {}
          description: The server was unable to complete the request due to an internal
            error.
      summary: Unassign a technician from a work order
      tags:
      - Ctools
      x-access: Any
  /ctools/workorder/{workOrderId}/accept:
    put:
      deprecated: false
      description: "Accepts a work order on behalf of the specified technician. Only\
        \ Field Tech Manager (FTM) technicians can accept work orders.\r\n       \
        \     <br />Once the work order is accepted, its status changes to *In Progress/Dispatch\
        \ Confirmed*.\r\n            <br />***Note:*** This method is only available\
        \ to provider admins."
      operationId: "PUTv3_ctools_workorder_{workOrderId}_accept?userId={userId}"
      parameters:
      - description: The unique numeric identifier of the work order you want to accept
          on behalf of a technician.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the technician — who accepts the work order — in the
          Authentication service.
        in: query
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content: {}
          description: The work order is successfully accepted by the specified technician.
            The response is intentionally blank.
        "400":
          content: {}
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content: {}
          description: The request is not authorized.
        "500":
          content: {}
          description: The server was unable to complete the request due to an internal
            error.
      summary: Accept a work order on behalf of a technician
      tags:
      - Ctools
      x-access: Any
  /ctools/workorder/{workOrderId}/decline:
    put:
      deprecated: false
      description: "Declines a work order on behalf of the specified technician. Only\
        \ Field Tech Manager (FTM) technicians can decline work orders.\r\n      \
        \      <br />If additional technician permissions are enabled for your company\
        \ — “Technician”, “Supervising Tech”, and “Regional Manager” — the work order\
        \ declined by a technician is automatically assigned to a Supervising Tech\
        \ or Regional Manager or forwarded to the next ranked provider based on the\
        \ configured auto-assignment rules. If these permissions are not enabled,\
        \ the work order is either forwarded to the next ranked provider or moved\
        \ to the *Open/Declined* status, depending on the setup. Learn more about\
        \ [automating work order assignments and setting up forwarding rules](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/640582807/Automating+Work+Order+Assignments+and+Forwarding+Work+Orders)\
        \ in ServiceChannel University.\r\n            <br />***Note:*** This method\
        \ is only available to provider admins."
      operationId: "PUTv3_ctools_workorder_{workOrderId}_decline?userId={userId}"
      parameters:
      - description: The unique numeric identifier of the work order you want to decline
          on behalf of a technician.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the technician — who declines the work order — in the
          Authentication service.
        in: query
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content: {}
          description: The work order is successfully declined by the specified technician.
            The response is intentionally blank.
        "400":
          content: {}
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content: {}
          description: The request is not authorized.
        "500":
          content: {}
          description: The server was unable to complete the request due to an internal
            error.
      summary: Decline a work order on behalf of a technician
      tags:
      - Ctools
      x-access: Any
  /ctools/workorder/{workOrderId}/rescindacceptance:
    put:
      deprecated: false
      description: "Removes a technician as accepted on the specified work order.\
        \ Note that only Field Tech Manager (FTM) technicians can accept work orders.\r\
        \n            <br />If the technician is currently checked into the work order,\
        \ the request will fail.\r\n            <br />***Note:*** This method is only\
        \ available to provider admins."
      operationId: "PUTv3_ctools_workorder_{workOrderId}_rescindacceptance?userId={userId}"
      parameters:
      - description: The unique numeric identifier of the work order for which you
          want to cancel acceptance on behalf of a technician.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the technician in the Authentication service to cancel
          the work order acceptance for.
        in: query
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: The technician is removed as accepted on the specified work
            order. The response is intentionally blank.
        "400":
          content: {}
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content: {}
          description: The request is not authorized.
        "500":
          content: {}
          description: The server was unable to complete the request due to an internal
            error.
      summary: Cancel the acceptance of a work order on behalf of a technician
      tags:
      - Ctools
      x-access: Any
  /ctools/refrigerantcertifications:
    get:
      deprecated: false
      description: Returns all refrigerant certifications for the specified provider
        for EPA compliance. You can also retrieve certifications for one technician
        only by specifying their `authUserId`.
      operationId: "GETv3_ctools_refrigerantcertifications?providerId={providerId}&authUserId={authUserId}"
      parameters:
      - description: Unique provider identifier.
        in: query
        name: providerId
        required: true
        schema:
          format: int32
          type: integer
      - description: Technician’s single sign-on (SSO) ID.
        in: query
        name: authUserId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ContractorTools.ExtendedRefrigerantCertificationDTO'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ContractorTools.ExtendedRefrigerantCertificationDTO'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ContractorTools.ExtendedRefrigerantCertificationDTO'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ContractorTools.ExtendedRefrigerantCertificationDTO'
                type: array
          description: The requested refrigerant certifications are in the response.
        "400":
          content: {}
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content: {}
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content: {}
          description: The server was unable to complete the request due to an internal
            error.
      summary: Get refrigerant certifications
      tags:
      - Ctools
      x-access: Any
  /currencies/currencyalphabeticcode:
    get:
      deprecated: false
      operationId: "GETv3_currencies_currencyalphabeticcode?currencyId={currencyId}"
      parameters:
      - description: Unique Currency Identifier
        in: query
        name: currencyId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Currencies.GetAlphabeticalCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Currencies.GetAlphabeticalCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Currencies.GetAlphabeticalCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Currencies.GetAlphabeticalCodeResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — Invalid request"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The requested resource does not exist on the server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Get currency alphabetic code
      tags:
      - Currencies
      x-access: Any
  /dashboardsettings/feedbacksetup/{setupId}:
    get:
      deprecated: false
      description: Returns a Feedback Setup for Dashboard
      operationId: "GETv3_dashboardsettings_feedbacksetup_{setupId}"
      parameters:
      - description: The numeric identifier of the Dashboard Setup Id.
        in: path
        name: setupId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupFeedbackResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupFeedbackResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupFeedbackResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupFeedbackResponse'
          description: Indicates that the request succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            504 - API call rejected\
            \ by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Access denied.\r\n            <br>Error codes:\r\n       \
            \     1000 - The setupId does not belong to the Subscriber;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get Feedback Setup
      tags:
      - DashboardSettings
      x-access: Any
  /dashboardsettings/requestsetup/{setupId}:
    get:
      deprecated: false
      description: Returns a Service Request Setup for Dashboard
      operationId: "GETv3_dashboardsettings_requestsetup_{setupId}"
      parameters:
      - description: The numeric identifier of the Dashboard Setup Id.
        in: path
        name: setupId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestResponse'
          description: Indicates that the request succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            504 - API call rejected\
            \ by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Access denied.\r\n            <br>Error codes:\r\n       \
            \     1000 - The setupId does not belong to the Subscriber;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get Dashboard Service Request Setup
      tags:
      - DashboardSettings
      x-access: Any
  /dashboardsettings/requestsetup:
    post:
      deprecated: false
      description: Returns a List of Service Request Setup for Dashboard
      operationId: POSTv3_dashboardsettings_requestsetup
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: The list of numeric identifier of the Dashboard Setup Id.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Dashboard.Settings.SetupRequest'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Dashboard.Settings.SetupRequest'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Dashboard.Settings.SetupRequest'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Dashboard.Settings.SetupRequest'
                type: array
          description: Indicates that the request succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            504 - API call rejected\
            \ by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Access denied.\r\n            <br>Error codes:\r\n       \
            \     1000 - The setupId does not belong to the Subscriber;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get List Of Dashboard Service Request Setup
      tags:
      - DashboardSettings
      x-access: Any
      x-codegen-request-body-name: setupIds
  /dashboardsettings/requestsetupconfirm/{setupId}:
    get:
      deprecated: false
      description: Returns a Service Request Confirmation Setup for Dashboard
      operationId: "GETv3_dashboardsettings_requestsetupconfirm_{setupId}"
      parameters:
      - description: The numeric identifier of the Dashboard Setup Id.
        in: path
        name: setupId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestConfirmResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestConfirmResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestConfirmResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestConfirmResponse'
          description: Indicates that the request succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            504 - API call rejected\
            \ by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Access denied.\r\n            <br>Error codes:\r\n       \
            \     1000 - The setupId does not belong to the Subscriber;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get Dashboard Service Request Confirmation Setup
      tags:
      - DashboardSettings
      x-access: Any
  /dashboardsettings/requestsetupconfirm:
    post:
      deprecated: false
      description: Returns a List of Service Request Confirmation Setup for Dashboard
      operationId: POSTv3_dashboardsettings_requestsetupconfirm
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: The list of numeric identifier of the Dashboard Setup Id.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Dashboard.Settings.SetupRequestConfirm'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Dashboard.Settings.SetupRequestConfirm'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Dashboard.Settings.SetupRequestConfirm'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Dashboard.Settings.SetupRequestConfirm'
                type: array
          description: Indicates that the request succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            504 - API call rejected\
            \ by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Access denied.\r\n            <br>Error codes:\r\n       \
            \     1000 - The setupId does not belong to the Subscriber;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get List Of Dashboard Service Request Confirmation Setup
      tags:
      - DashboardSettings
      x-access: Any
      x-codegen-request-body-name: setupIds
  /dashboardsettings/setupgeneral/{subscriberId}/{setupId}:
    get:
      deprecated: false
      description: Returns Setup General for Dashboard
      operationId: "GETv3_dashboardsettings_setupgeneral_{subscriberId}_{setupId}"
      parameters:
      - description: Subscriber identifier.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: The identifier of the Dashboard Setup.
        in: path
        name: setupId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.Dashboard.Settings.SetupGeneral'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.Dashboard.Settings.SetupGeneral'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.Dashboard.Settings.SetupGeneral'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.Dashboard.Settings.SetupGeneral'
          description: Indicates that the request succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get Dashboard Setup General
      tags:
      - DashboardSettings
      x-access: Any
  /dashboardsettings/notesetup/{setupId}:
    get:
      deprecated: false
      description: Returns a Note Setup for Dashboard
      operationId: "GETv3_dashboardsettings_notesetup_{setupId}"
      parameters:
      - description: The numeric identifier of the Dashboard Setup Id.
        in: path
        name: setupId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupNoteResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupNoteResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupNoteResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupNoteResponse'
          description: Indicates that the request succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            504 - API call rejected\
            \ by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Access denied.\r\n            <br>Error codes:\r\n       \
            \     1000 - The setupId does not belong to the Subscriber;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get Dashboard Note Setup
      tags:
      - DashboardSettings
      x-access: Any
  /documents/GetTempLink:
    get:
      deprecated: false
      operationId: "GETv3_documents_GetTempLink?attachmentId={attachmentId}&overrideFileName={overrideFileName}&signature={signature}"
      parameters:
      - description: The attachment Id.
        in: query
        name: attachmentId
        required: true
        schema:
          type: string
      - description: The override file name.
        in: query
        name: overrideFileName
        schema:
          type: string
      - description: The override file name.
        in: query
        name: signature
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: "GET example: https://localhost:1871/api/s3?attachmentId=tests/S3Test/ef7031654d5b4259b260586300660352.txt"
      tags:
      - Documents
      x-access: Any
  /api/documents/GetTempLink:
    get:
      deprecated: false
      operationId: "GETv3_api_documents_GetTempLink?attachmentId={attachmentId}&overrideFileName={overrideFileName}&signature={signature}"
      parameters:
      - description: The attachment Id.
        in: query
        name: attachmentId
        required: true
        schema:
          type: string
      - description: The override file name.
        in: query
        name: overrideFileName
        schema:
          type: string
      - description: The override file name.
        in: query
        name: signature
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: "GET example: https://localhost:1871/api/s3?attachmentId=tests/S3Test/ef7031654d5b4259b260586300660352.txt"
      tags:
      - Documents
      x-access: Any
  /users/current/locations/{locationId}/subscribe:
    post:
      deprecated: false
      description: "Subscribe to Email Notification.\r\n            <br /><br />Available\
        \ for subscriber usage."
      operationId: "POSTv3_users_current_locations_{locationId}_subscribe"
      parameters:
      - description: Numeric Id of the Location to perform action with.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.EmailNotificationSubscriptionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.EmailNotificationSubscriptionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.EmailNotificationSubscriptionRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.EmailNotificationSubscriptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.EmailNotificationSubscriptionRequest'
        description: The Subscription Email Notification request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Subscribe to Email Notifications
      tags:
      - EmailNotifications
      x-access: Subscribers
      x-codegen-request-body-name: request
  /users/current/locations/{locationId}/email:
    get:
      deprecated: false
      description: Returns a list of email subscriptions
      operationId: "GETv3_users_current_locations_{locationId}_email"
      parameters:
      - in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: List existing email subscriptions
      tags:
      - EmailNotifications
      x-access: Subscribers
  /users/current/unsubscribe:
    delete:
      deprecated: false
      description: "Unsubscribe from Email Notifications.\r\n            <br /><br\
        \ />Available for subscriber usage."
      operationId: DELETEv3_users_current_unsubscribe
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Unsubscribe from Email Notifications
      tags:
      - EmailNotifications
      x-access: Subscribers
  /users/current/locations/{locationId}/unsubscribe:
    delete:
      deprecated: false
      description: "Unsubscribe from Email Notifications.\r\n            <br /><br\
        \ />Available for subscriber usage."
      operationId: "DELETEv3_users_current_locations_{locationId}_unsubscribe?id={id}"
      parameters:
      - description: Numeric Id of the Location to perform action with.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric Id of the Subscription to perform action with.
        in: query
        name: id
        schema:
          format: int32
          type: integer
      - description: "Notification type: Check In , ...."
        in: query
        name: notificationType
        required: true
        schema:
          enum:
          - CheckIn
          - CheckOut
          - BadgeScanRequired
          type: string
      - description: ISO 639-1 two-letter code for the language.
        in: query
        name: languageCode
        schema:
          type: string
      - explode: false
        in: query
        name: notificationRules.rules
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Unsubscribe from Email Notifications
      tags:
      - EmailNotifications
      x-access: Subscribers
  /eula/agreement:
    get:
      deprecated: false
      operationId: GETv3_eula_agreement
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Eula.EulaAgreement'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Eula.EulaAgreement'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Eula.EulaAgreement'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Eula.EulaAgreement'
          description: The request succeeded and the eula agreement is returned.
        "403":
          content: {}
          description: The user doesn't have permissions to view the agreement text.
        "502":
          content: {}
          description: No agreement was found.
      summary: Method to retrieve the EULA agreement
      tags:
      - Eula
      x-access: Any
  /eula/accept:
    post:
      deprecated: false
      operationId: POSTv3_eula_accept
      responses:
        "200":
          content: {}
          description: The request succeeded and the eula agreement is accepted.
        "403":
          content: {}
          description: The user doesn't have permissions to accept the agreement.
      summary: Method to accept the EULA agreement
      tags:
      - Eula
      x-access: Any
  /excelreports:
    get:
      deprecated: false
      operationId: "GETv3_excelreports?key={key}"
      parameters:
      - description: Report key
        in: query
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Get invoice report progress
      tags:
      - ExcelReports
      x-access: Any
    post:
      deprecated: false
      operationId: POSTv3_excelreports
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/System.Collections.Generic.KeyValuePair[System.String,System.String]"
              type: array
          text/json:
            schema:
              items:
                $ref: "#/components/schemas/System.Collections.Generic.KeyValuePair[System.String,System.String]"
              type: array
          application/xml:
            schema:
              items:
                $ref: "#/components/schemas/System.Collections.Generic.KeyValuePair[System.String,System.String]"
              type: array
          text/xml:
            schema:
              items:
                $ref: "#/components/schemas/System.Collections.Generic.KeyValuePair[System.String,System.String]"
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: "#/components/schemas/System.Collections.Generic.KeyValuePair[System.String,System.String]"
              type: array
        description: The form.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The index.
      tags:
      - ExcelReports
      x-access: Any
      x-codegen-request-body-name: form
  /excelreports/cancel:
    get:
      deprecated: false
      operationId: "GETv3_excelreports_cancel?key={key}"
      parameters:
      - in: query
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - ExcelReports
      x-access: Any
  /excelreports/order/isuploaded:
    get:
      deprecated: false
      operationId: "GETv3_excelreports_order_isuploaded?key={key}"
      parameters:
      - in: query
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - ExcelReports
      x-access: Any
  /features/globalfeature/{featureId}:
    get:
      deprecated: false
      operationId: "GETv3_features_globalfeature_{featureId}"
      parameters:
      - description: Feature Name
        in: path
        name: featureId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 -  'FeatureId' feature doesn't exist;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Get Feature
      tags:
      - Feature
      x-access: Any
    put:
      deprecated: false
      operationId: "PUTv3_features_globalfeature_{featureId}"
      parameters:
      - in: path
        name: featureId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Features.SetFeatureRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Features.SetFeatureRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Features.SetFeatureRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Features.SetFeatureRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Features.SetFeatureRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Feature
      x-access: Any
      x-codegen-request-body-name: feature
  /feedbacks/workorders/{workorderId}:
    post:
      deprecated: false
      operationId: "POSTv3_feedbacks_workorders_{workorderId}"
      parameters:
      - in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackRequest'
        required: true
      responses:
        "201":
          content: {}
          description: Indicates that the request succeeded and that the feedback
            created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br>Error codes:\r\n           \
            \ <br> 503 - Request is empty or null;\r\n            <br> 904 - Invalid\
            \ work order status;\r\n            <br> 2601 - Invalid feedback answer;\r\
            \n            <br> 2602 - Invalid work order number;\r\n            <br>\
            \ 2602 - Invalid subscriber;\r\n            <br> 2603 - Invalid subscriber\
            \ number;\r\n            <br> 2604 - Invalid feedback score;\r\n     \
            \       <br> 2605 - Unsatisfactory answer required a comment\r\n     \
            \       <br> 2606 - Invalid LocationId or SetupId provided"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      tags:
      - Feedback
      x-access: Any
      x-codegen-request-body-name: request
  /feedbacks/workorders:
    get:
      deprecated: false
      operationId: "GETv3_feedbacks_workorders?LocationId={LocationId}&SetupId={SetupId}&OrderByField={OrderByField}&OrderDirection={OrderDirection}&ShowMyWorkOrders={ShowMyWorkOrders}&SubscriberId={SubscriberId}"
      parameters:
      - description: LocationId
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: Dashboard setupId (optional)
        in: query
        name: setupId
        schema:
          format: int32
          type: integer
      - description: Order by field
        in: query
        name: orderByField
        schema:
          enum:
          - TrackingNumber
          - Trade
          - ScheduledDate
          - Vendor
          - Priority
          - Caller
          - Status
          - Area
          - ComplitionDate
          - FeedbackLeft
          type: string
      - description: Order direction
        in: query
        name: orderDirection
        schema:
          enum:
          - Ascending
          - Descending
          type: string
      - description: Activates filter by current user id
        in: query
        name: showMyWorkOrders
        schema:
          default: false
          type: boolean
      - description: Subscriber Id
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.WorkorderFeedback'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.WorkorderFeedback'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.WorkorderFeedback'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.WorkorderFeedback'
                type: array
          description: Return work orders ready for feedback.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      tags:
      - Feedback
      x-access: Any
  /feedbacks/workorders/count:
    get:
      deprecated: false
      operationId: "GETv3_feedbacks_workorders_count?locationId={locationId}&subscriberId={subscriberId}"
      parameters:
      - in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
            text/json:
              schema:
                format: int32
                type: integer
            application/xml:
              schema:
                format: int32
                type: integer
            text/xml:
              schema:
                format: int32
                type: integer
          description: Return count of work orders ready for feedback.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      tags:
      - Feedback
      x-access: Any
  /feedbacks/reviews:
    get:
      deprecated: false
      operationId: "GETv3_feedbacks_reviews?ProviderId={ProviderId}&SearchWithin={SearchWithin}&PageSize={PageSize}&PageOffset={PageOffset}&SortBy={SortBy}&SubscriberId={SubscriberId}"
      parameters:
      - description: Provider Id
        in: query
        name: providerId
        schema:
          format: int32
          type: integer
      - description: Search within reviews comment
        in: query
        name: searchWithin
        schema:
          type: string
      - description: Response page size (default 10)
        in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      - description: Response page offset (default 0)
        in: query
        name: pageOffset
        schema:
          format: int32
          type: integer
      - description: Sort by field (default by Recent)
        in: query
        name: sortBy
        schema:
          enum:
          - Recent
          - HighestScoreFirst
          - LowestScoreFirst
          type: string
      - description: Subscriber Id
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForProviderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForProviderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForProviderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForProviderResponse'
          description: Return feedback reviews.
      tags:
      - Feedback
      x-access: Any
    post:
      deprecated: false
      operationId: POSTv3_feedbacks_reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.ReviewProviderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.ReviewProviderRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.ReviewProviderRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.ReviewProviderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.ReviewProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.ReviewProviderRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.ReviewProviderRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.ReviewProviderRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.ReviewProviderRequest'
          description: Indicates that the request succeeded and that the provider
            review created or updated.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
        "403":
          content: {}
          description: Indicates that the requested resource requires provider rateable
            feature
      tags:
      - Feedback
      x-access: Any
      x-codegen-request-body-name: request
  /feedbacks/reviews/info:
    get:
      deprecated: false
      operationId: "GETv3_feedbacks_reviews_info?ProviderId={ProviderId}&SubscriberId={SubscriberId}"
      parameters:
      - in: query
        name: providerId
        schema:
          format: int32
          type: integer
      - in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Return info model about provider ratings
      tags:
      - Feedback
      x-access: Any
  /feedbacks/byWorkorders:
    get:
      deprecated: false
      operationId: "GETv3_feedbacks_byWorkorders?workOrdersIds[0]={workOrdersIds[0]}&workOrdersIds[1]={workOrdersIds[1]}&subscriberId={subscriberId}"
      parameters:
      - explode: true
        in: query
        name: workOrdersIds
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForWorkOrdersResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForWorkOrdersResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForWorkOrdersResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForWorkOrdersResponse'
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      tags:
      - Feedback
      x-access: Any
  /GlCodes/RetrieveGlCodes:
    get:
      deprecated: false
      description: "Returns GL Codes for the authorized subscriber.\r\n          \
        \  <br />You can filter the codes by `trade`, `category`, and `location`.\r\
        \n            <br />Navigate to ServiceChannel University to find out [how\
        \ to manage GL Codes](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/557645834/Managing+GL+Codes)."
      operationId: "GETv3_GlCodes_RetrieveGlCodes?trade={trade}&category={category}&location={location}"
      parameters:
      - description: "Trade name. A trade is an area of work for which a service is\
          \ performed, such as LIGHTING, ALARMS, or ELECTRICAL. Maximum is 80 characters."
        in: query
        name: trade
        schema:
          type: string
      - description: "Category name. A category is the overall classification of a\
          \ work order, such as MAINTENANCE, REPAIR, or WARRANTY. Maximum is 50 characters."
        in: query
        name: category
        schema:
          type: string
      - description: Store ID. The numeric identifier of the store in the client's
          system. Assigned by and unique per subscriber.
        in: query
        name: location
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GlCode.RetrieveGlCodesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GlCode.RetrieveGlCodesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GlCode.RetrieveGlCodesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GlCode.RetrieveGlCodesResponse'
          description: The requested Gl Codes are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     401 — Invalid subsriber ID"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            502 — Not Found\r\n     \
            \       502 — No GL Code exists for the query"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Retrieve Gl Codes
      tags:
      - GlCodes
      x-access: Any
  /GlCodes/GetApprovalCodes:
    get:
      deprecated: false
      description: Gets the list of approval codes.
      operationId: "GETv3_GlCodes_GetApprovalCodes?locationId={locationId}&category={category}"
      parameters:
      - description: Location Id. Numeric id of location.
        in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Category name. A category is the overall classification of a\
          \ work order, such as MAINTENANCE, REPAIR, or WARRANTY. Maximum is 50 characters."
        in: query
        name: category
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApprovalCodes.GetApprovalCodesWithOptionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApprovalCodes.GetApprovalCodesWithOptionsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApprovalCodes.GetApprovalCodesWithOptionsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApprovalCodes.GetApprovalCodesWithOptionsResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - Request is empty or null."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get Approval codes
      tags:
      - GlCodes
      x-access: Subscribers
  /GlCodes/CreateGlCode:
    post:
      deprecated: false
      description: "Creates a GL Code with a new trade, category, or location.\r\n\
        \            <br />Send the [GET /GlCodes/RetrieveGlCodes](https://developer.servicechannel.com/swagger/ui/index?version=3#/GlCodes/GETv3_GlCodes_RetrieveGlCodes_trade__trade__category__category__location__location_)\
        \ request to get the list of GL Codes."
      operationId: "POSTv3_GlCodes_CreateGlCode?glCode={glCode}&trade={trade}&category={category}&location={location}"
      parameters:
      - description: Numeric identifier of a GL Code.
        in: query
        name: glCode
        required: true
        schema:
          type: string
      - description: "Trade name. A trade is an area of work for which a service is\
          \ performed, such as LIGHTING, ALARMS, or ELECTRICAL. Maximum is 80 characters."
        in: query
        name: trade
        schema:
          type: string
      - description: "Category name. A category is the overall classification of a\
          \ work order, such as MAINTENANCE, REPAIR, or WARRANTY. Maximum is 50 characters."
        in: query
        name: category
        schema:
          type: string
      - description: Store ID. The numeric identifier of the store in the client's
          system. Assigned by and unique per subscriber.
        in: query
        name: location
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: The created GL Code ID is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     401 — Invalid subsriber ID\r\n            606 — Location is not\
            \ found\r\n            704 — Invalid trade value for the subscriber\r\n\
            \            705 — Invalid category value for the subscriber\r\n     \
            \       706 — GL Code already exists"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Add a GL Code
      tags:
      - GlCodes
      x-access: Any
  /GlCodes/UpdateGlCode:
    put:
      deprecated: false
      description: "Updates a GL Code number leaving the trade, category, and/or location\
        \ of the code unchanged. You need to specify all code parameters to update\
        \ it.\r\n            <br />Use the [POST /GlCodes/CreateGlCode](https://developer.servicechannel.com/swagger/ui/index?version=3#/GlCodes/POSTv3_GlCodes_CreateGlCode_glCode__glCode__trade__trade__category__category__location__location_)\
        \ method to create a new GL Code."
      operationId: "PUTv3_GlCodes_UpdateGlCode?glCode={glCode}&trade={trade}&category={category}&location={location}"
      parameters:
      - description: Numeric identifier of a GL Code.
        in: query
        name: glCode
        required: true
        schema:
          type: string
      - description: "Trade name. A trade is an area of work for which a service is\
          \ performed, such as LIGHTING, ALARMS, or ELECTRICAL. Maximum is 80 characters."
        in: query
        name: trade
        schema:
          type: string
      - description: "Category name. A category is the overall classification of a\
          \ work order, such as MAINTENANCE, REPAIR, or WARRANTY. Maximum is 50 characters."
        in: query
        name: category
        schema:
          type: string
      - description: Store ID. The numeric identifier of the store in the client's
          system. Assigned by and unique per subscriber.
        in: query
        name: location
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: The updated GL Code ID is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     401 — Invalid subsriber ID\r\n            606 — Location is not\
            \ found\r\n            704 — Invalid trade value for the subscriber\r\n\
            \            705 — Invalid category value for the subscriber\r\n     \
            \       707 — GL Code does not exist\r\n            708 — At least one\
            \ field trade/category/location is required"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Update a GL Code
      tags:
      - GlCodes
      x-access: Any
  /GlCodes/DeleteGlCode:
    delete:
      deprecated: false
      description: Removes the specified GL Code from the subscriber’s system. You
        need to specify all code parameters to delete it.
      operationId: "DELETEv3_GlCodes_DeleteGlCode?glCode={glCode}&trade={trade}&category={category}&location={location}"
      parameters:
      - description: Numeric identifier of a GL Code.
        in: query
        name: glCode
        required: true
        schema:
          type: string
      - description: "Trade name. A trade is an area of work for which a service is\
          \ performed, such as LIGHTING, ALARMS, or ELECTRICAL. Maximum is 80 characters."
        in: query
        name: trade
        schema:
          type: string
      - description: "Category name. A category is the overall classification of a\
          \ work order, such as MAINTENANCE, REPAIR, or WARRANTY. Maximum is 50 characters."
        in: query
        name: category
        schema:
          type: string
      - description: Store ID. The numeric identifier of the store in the client's
          system. Assigned by and unique per subscriber.
        in: query
        name: location
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: The deleted GL Code ID is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     401 — Invalid subsriber ID\r\n            606 — Location is not\
            \ found\r\n            704 — Invalid trade value for the subscriber\r\n\
            \            705 — Invalid category value for the subscriber\r\n     \
            \       707 — GL Code does not exist"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Delete a GL Code
      tags:
      - GlCodes
      x-access: Any
  /GlCodes/GetGlCode:
    get:
      deprecated: false
      description: "Get a gl code from trade, category, location id."
      operationId: "GETv3_GlCodes_GetGlCode?locationId={locationId}&trade={trade}&category={category}"
      parameters:
      - description: Location ID. Numeric id of location.
        in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Trade name. A trade is an area of work for which a service is\
          \ performed, such as LIGHTING, ALARMS, or ELECTRICAL. Maximum is 80 characters."
        in: query
        name: trade
        required: true
        schema:
          type: string
      - description: "Category name. A category is the overall classification of a\
          \ work order, such as MAINTENANCE, REPAIR, or WARRANTY. Maximum is 50 characters."
        in: query
        name: category
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GlCode.GetGlCodeResponseMessage'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GlCode.GetGlCodeResponseMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GlCode.GetGlCodeResponseMessage'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GlCode.GetGlCodeResponseMessage'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - Request is empty or null.\r\n            <br/> 601 — Invalid\
            \ Location id."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get a GL Code
      tags:
      - GlCodes
      x-access: Subscribers
  /subscribers/{subscriberId}/invoices/{invoiceId}/approve:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_{subscriberId}_invoices_{invoiceId}_approve?orderId={orderId}&userId={userId}&approvalCode={approvalCode}&organizationPermissionId={organizationPermissionId}&category={category}&comment={comment}&overrideUserId={overrideUserId}"
      parameters:
      - in: query
        name: orderId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: invoiceId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: approvalCode
        required: true
        schema:
          type: string
      - in: query
        name: organizationPermissionId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: comment
        schema:
          type: string
      - in: query
        name: overrideUserId
        schema:
          format: int32
          type: integer
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
          description: OK
      tags:
      - Invoices
      x-access: Any
  /invoices/{subscriberId}/InvoiceRequirements:
    get:
      deprecated: false
      description: "Returns general invoice settings for the specified subscriber.\r\
        \n            <br />Both subscribers and providers can use this method.\r\n\
        \             • **Subscribers** should enter their subscriber ID.\r\n    \
        \         • **Providers** need to pass the ID of the subscriber they have\
        \ a contract with.\r\n            <br />Subscriber users with the *Super Admin*\
        \ secondary role set up general invoice parameters in **Admin** &gt; **Invoices**\
        \ &gt; **General**, where they configure when invoices can be created, if\
        \ providers should enter a resolution before submitting invoices, and whether\
        \ any restrictions should apply to invoice numbers. Other parameters may be\
        \ available if the corresponding features are turned on for the subscriber.\
        \ Learn more about [configuring general invoice settings](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/557220138/General+Invoice+Configuration)\
        \ in ServiceChannel University."
      operationId: "GETv3_invoices_{subscriberId}_InvoiceRequirements"
      parameters:
      - description: Unique numeric identifier of the subscriber to return general
          invoice settings for.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceSettingsGeneral'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceSettingsGeneral'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceSettingsGeneral'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceSettingsGeneral'
          description: General invoice settings for the specified subscriber are in
            the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — The provider has no contract with the requested subscriber\r\
            \n            503 — No access. Please check if the SubscriberId is valid"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Retrieve general invoice settings for a subscriber
      tags:
      - Invoices
      x-access: Any
  /invoices/{subscriberId}/InvoiceRejectionReasons:
    get:
      deprecated: false
      description: "Returns invoice rejection reasons for a subscriber\r\n       \
        \     <br />Both subscribers and providers can use this method.\r\n      \
        \       • **Subscribers** should enter their subscriber ID.\r\n          \
        \   • **Providers** need to pass the ID of the subscriber they have a contract\
        \ with."
      operationId: "GETv3_invoices_{subscriberId}_InvoiceRejectionReasons"
      parameters:
      - description: Unique numeric identifier of the subscriber to return invoice
          rejection reasons for.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceRejectionReasonResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceRejectionReasonResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceRejectionReasonResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceRejectionReasonResponse'
                type: array
          description: Invoice rejection reasons for the specified subscriber are
            in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — The provider has no contract with the requested subscriber\r\
            \n            503 — No access. Please check if the SubscriberId is valid"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Retrieve invoice rejection reasons for a subscriber
      tags:
      - Invoices
      x-access: Any
  /invoices/{invoiceId}/reject:
    put:
      deprecated: false
      description: <para>Allows reject non-MLI(Multilevel Invoice Approval) invoice</para>
      operationId: "PUTv3_invoices_{invoiceId}_reject?comments={comments}"
      parameters:
      - description: Invoice Identifier
        in: path
        name: invoiceId
        required: true
        schema:
          format: int32
          type: integer
      - description: Comments
        in: query
        name: comments
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Indicates that the request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 - Wrong Invoice Id \r\n            <br/> 503 - MLI(Multilevel\
            \ Invoice Approval) enabled"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Allows reject non-MLI(Multilevel Invoice Approval) invoice
      tags:
      - Invoices
      x-access: Subscribers
  /invoices/{invoiceId}/onhold:
    put:
      deprecated: false
      description: <para>Allows put invoice on hold for non-MLI(Multilevel Invoice
        Approval) invoice</para>
      operationId: "PUTv3_invoices_{invoiceId}_onhold?comments={comments}"
      parameters:
      - description: Invoice Identifier
        in: path
        name: invoiceId
        required: true
        schema:
          format: int32
          type: integer
      - description: Comments
        in: query
        name: comments
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Indicates that the request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 - Wrong Invoice Id \r\n            <br/> 503 - MLI(Multilevel\
            \ Invoice Approval) enabled"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Allows put invoice on hold for non-MLI(Multilevel Invoice Approval)
        invoice
      tags:
      - Invoices
      x-access: Subscribers
  /invoices/{invoiceId}/approve:
    put:
      deprecated: false
      description: <para>Allows approve non-MLI(Multilevel Invoice Approval) invoice</para>
      operationId: "PUTv3_invoices_{invoiceId}_approve?approvalCode={approvalCode}&comments={comments}&category={category}"
      parameters:
      - description: Invoice Identifier
        in: path
        name: invoiceId
        required: true
        schema:
          format: int32
          type: integer
      - description: Approval Code
        in: query
        name: approvalCode
        required: true
        schema:
          type: string
      - description: Comments
        in: query
        name: comments
        required: true
        schema:
          type: string
      - description: Category
        in: query
        name: category
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Indicates that the request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 - Wrong Invoice Id\r\n            <br/> 503 - MLI(Multilevel\
            \ Invoice Approval) enabled"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      summary: Allows approve non-MLI(Multilevel Invoice Approval) invoice
      tags:
      - Invoices
      x-access: Subscribers
  /invoices/statistics:
    get:
      deprecated: false
      description: "Retrieves statistics of all invoices. Returns the statistics of\
        \ all invoices for successful request.\r\n            <br /><br />Only for\
        \ providers usage."
      operationId: "GETv3_invoices_statistics?daysPeriod={daysPeriod}&approvedInThePastDaysPeriod={approvedInThePastDaysPeriod}"
      parameters:
      - description: "Period in days, last X days for which Invoices statistics was\
          \ collected (30 by Default)."
        in: query
        name: daysPeriod
        schema:
          format: int32
          type: integer
      - description: "Period in days, last X days during which Invoices are approved\
          \ (3 by Default)."
        in: query
        name: approvedInThePastDaysPeriod
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceStatisticsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceStatisticsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceStatisticsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceStatisticsResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - Only for providers usage;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Retrieve statistics of all invoices
      tags:
      - Invoices
      x-access: Any
  /invoices:
    post:
      deprecated: false
      description: "Creates an invoice in the *Open* status for the specified work\
        \ order.\r\n            <br />Find out more about [creating an invoice](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/2205811424/Creating+an+Invoice)\
        \ in ServiceChannel University."
      operationId: POSTv3_invoices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.CreateInvoiceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.CreateInvoiceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.CreateInvoiceRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.CreateInvoiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.CreateInvoiceRequest'
        description: "Request model to create an invoice for the specified work order.\r\
          \n            <br />**Required parameters**:\r\n             • **InvoiceNumber**.\
          \ Invoice number created by a user.\r\n             • **WoIdentifier**.\
          \ Unique work order identifier (can be *TrackingNumber* or *WorkOrderNumber*\
          \ for Contractor and *TrackingNumber* or *PurchaseNumber* for Client).\r\
          \n            <br />If there is no need to specify any details in *Labors*,\
          \ *Materials*, *Travels*, and *Others* objects, you can send the request\
          \ without them. \r\n            <br />**Note**: Work Order should be in\
          \ the *Completed* status to successfully create an invoice."
        required: true
      responses:
        "201":
          content: {}
          description: The ID of the created invoice is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — Request should not be null\r\n            601 — Location not\
            \ found\r\n            607 — Empty Location State\r\n            904 —\
            \ Invalid WO Status. WO must be in 'COMPLETED' status with empty extended\
            \ status or 'COMPLETED' status with 'CONFIRMED' extended status\r\n  \
            \          914 — Invalid 'Currency' value\r\n            917 — Invalid\
            \ Tracking Number\r\n            1100 — Invalid Other Amount Description\r\
            \n            1101 — Invalid Tax2 name\r\n            1103 — Invalid Total\r\
            \n            1104 — Invoice Total > NTE\r\n            1105 — Invoice\
            \ exists\r\n            1106 — Invoice Creation Error\r\n            1107\
            \ — Duplicate Invoice number\r\n            1108 — Total is null\r\n \
            \           1109 — Completed Date is null\r\n            1110 — Invoice\
            \ Date < Completed Date\r\n            1111 — This invoice is set to auto-invoice\r\
            \n            1112 — Electronic Signature Agreement Required\r\n     \
            \       1113 — Work order not found\r\n            1114 — Wrong Work Order\
            \ currency\r\n            1115 — Work order currency not found\r\n   \
            \         1116 — Invoicing is disabled. Invoicing might be disabled if\
            \ your company account is currently in an inactive state in Fixxbook\r\
            \n            1117 — Invoice creation Unexpected Result\r\n          \
            \  1119 — Invoice labor amount is not equals summary labor items \r\n\
            \            1120 — Invoice material amount is not equals summary material\
            \ items amounts\r\n            1121 — Invoice Date is older than X day(s)\
            \ from today\r\n            1122 — Invoice Date is greater than X day(s)\
            \ from today\r\n            1123 — Invoice material description length\
            \ overflow\r\n            1124 — Invoice material part number length overflow\r\
            \n            1125 — Tax validation error: X\r\n            1126 — Sales\
            \ Tax should be 0 - X location\r\n            1127 — Invalid Invoice Number\r\
            \n            1135 — Locations can't have GST tax\r\n            1136\
            \ — Locations can't have tax2. Only Canadian or European Location can\
            \ have the Tax2Details array. Tax2Details is only applicable for locations\
            \ in countries that have some form of a value-added tax\r\n          \
            \  1145 — You have an outstanding balance with ServiceChannel.  In order\
            \ to invoice, please login to Fixxbook.com and update your Payment Method.\
            \  Once your payment Method is updated you will be able to invoice.;\r\
            \n            1146 — Invoice doesn't have Taxes Breakdown\r\n        \
            \    1147 — Invoice Taxes Breakdown has incorrect sum\r\n            1151\
            \ — Labor Line Items Required\r\n            1152 — Material Line Items\
            \ Required\r\n            1159 — Invoice material unit type is invalid\
            \ (should be from 1 to 7)\r\n            1163 — Resolution text required\
            \ in Invoice Text field\r\n            1180 — Invoice Number is not correct\r\
            \n            1194 - Invoice labor skill level is invalid (should be from\
            \ 1 to 3)\r\n            1195 — Invoice labor type is invalid (should\
            \ be from 1 to 3)\r\n            1196 — Invoice technician quantity is\
            \ invalid (should be > 0)\r\n            1198 — The explanation of Dispute\
            \ status is empty"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            <br/> 504 - API call rejected by security permissions;"
      summary: Add an invoice to a work order
      tags:
      - Invoices
      x-access: Any
      x-codegen-request-body-name: request
  /invoices/{invoiceId}:
    get:
      deprecated: false
      description: Returns the details of the specified invoice.
      operationId: "GETv3_invoices_{invoiceId}"
      parameters:
      - description: Numeric identifier of the invoice to get the details for.
        in: path
        name: invoiceId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.ApiGetInvoiceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.ApiGetInvoiceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.ApiGetInvoiceResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.ApiGetInvoiceResponse'
          description: The specified invoice is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            <br/> 504 — API call rejected by security permissions"
        "404":
          content: {}
          description: The requested resource does not exist on the server.
      summary: Get an invoice
      tags:
      - Invoices
      x-access: Any
  /invoices/{invoiceId}/discrepancy:
    get:
      deprecated: false
      description: Retrieves Invoice rates discrepancy information. Returns the labor
        list with rates discrepancy for the specified invoice.
      operationId: "GETv3_invoices_{invoiceId}_discrepancy"
      parameters:
      - description: Invoice identifier.
        in: path
        name: invoiceId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy'
                type: array
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Get rates discrepancy
      tags:
      - Invoices
      x-access: Any
  /invoices/{invoiceId}/discrepancyExtended:
    get:
      deprecated: false
      description: Retrieves Invoice rates discrepancy information. Returns the labor
        list with rates discrepancy for the specified invoice.
      operationId: "GETv3_invoices_{invoiceId}_discrepancyExtended"
      parameters:
      - description: Invoice identifier.
        in: path
        name: invoiceId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceDiscrepancy'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceDiscrepancy'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceDiscrepancy'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceDiscrepancy'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceDiscrepancy'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceDiscrepancy'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceDiscrepancy'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceDiscrepancy'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Get rates discrepancy
      tags:
      - Invoices
      x-access: Any
  /invoices/{invoiceId}/Payment:
    post:
      deprecated: false
      description: "Creates a payment record for the specified invoice in the *Approved*\
        \ status.\r\n            <br />Send this request [GET/odata/invoices](https://developer.servicechannel.com/swagger/ui/index?version=3#/Invoices/Invoices_GetInvoices)\
        \ to get the invoice ID.\r\n            <br />Learn [how subscribers can mark\
        \ invoices as paid](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/621936646/Marking+Invoices+as+Paid)\
        \ in ServiceChannel University.\r\n            <br />**Example Request**\r\
        \n            \r\n                POST /invoices/{invoiceId}/Payment\r\n \
        \               {\r\n                 \"PaymentDate\": \"2021-06-10T07:40:47.881Z\"\
        ,\r\n                 \"PaymentNumber\": \"25469833\",\r\n               \
        \  \"PaymentAmount\": 850\r\n                }"
      operationId: "POSTv3_invoices_{invoiceId}_Payment"
      parameters:
      - description: Unique numeric identifier of the invoice to add a payment to.
        in: path
        name: invoiceId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest'
        description: Request to add a payment to the specified invoice.
        required: true
      responses:
        "204":
          content: {}
          description: 'A payment record is added to the specified invoice. '
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/> Error codes:\r\n      \
            \      503 — Request is invalid\r\n            1178 — Invoice cannot be\
            \ paid before invoice dates\r\n            1178 — Invoice has already\
            \  paid\r\n            1178 — Only approved invoices may pay\r\n     \
            \       1178 — Payment amount exceeds the actual amount\r\n          \
            \  1178 — Payment amount should be more than zero\r\n            1178\
            \ — Pay not allowed for this subscriber"
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/> Error\
            \ codes:\r\n            504 — API call rejected by security permissions"
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/> Error codes:\r\n\
            \            100 — User has no rights to perform this action"
      summary: Add a payment to an invoice
      tags:
      - Invoices
      x-access: Subscribers
      x-codegen-request-body-name: payment
  /invoices/Payments:
    post:
      deprecated: false
      description: "Creates payment records for the invoices in the *Approved* status\
        \ in bulk.\r\n             <br />**Note**: Method is available to users with\
        \ the *SC Admin*, *Master Admin*, or *Invoice Admin* roles and with the *InvoiceChangeToPaid*\
        \ feature flag enabled.\r\n             <br />**Example Request**\r\n    \
        \         \r\n                 POST /invoices/{invoiceId}/Payment\r\n    \
        \             {\r\n                   \"Payments\": [\r\n                \
        \     {\r\n                       \"InvoiceId\": 96814318,\r\n           \
        \            \"PaymentDate\": \"2021-12-13T06:12:22.820Z\",\r\n          \
        \             \"PaymentNumber\": \"456858\",\r\n                       \"\
        PaymentAmount\": 756\r\n                     },\r\n                     {\r\
        \n                       \"InvoiceId\": 4988659,\r\n                     \
        \  \"PaymentDate\": \"2021-12-13T06:12:22.820Z\",\r\n                    \
        \   \"PaymentNumber\": \"97027818\",\r\n                       \"PaymentAmount\"\
        : 1250.55\r\n                     }  \r\n                   ]\r\n        \
        \         }"
      operationId: POSTv3_invoices_Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkRequest'
        description: Request model to add payment records in bulk.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkResponse'
          description: "The payments are successfully added.\r\n            <br/>Error\
            \ codes:\r\n            503 — Request is invalid\r\n            1178 —\
            \ Invoice cannot be paid before the invoice creation date\r\n        \
            \    1178 — Invoice has already been paid\r\n            1178 — No invoice\
            \ ID\r\n            1178 — Only approved invoices may be paid\r\n    \
            \        1178 — Payment amount exceeds the actual invoice amount\r\n \
            \           1178 — Payment amount should be more than zero\r\n       \
            \     1178 — Payment is not allowed for this subscriber\r\n          \
            \  1178 — Payment number cannot exceed 100 characters"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — Request is empty or null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes:\r\n\
            \            100 — User has no permissions to perform this action"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 — Error updating\
            \ invoices payments in bulk mode"
      summary: Add payment records to invoices
      tags:
      - Invoices
      x-access: Subscribers
      x-codegen-request-body-name: request
  /invoices/Workorders/{trackingNumber}/Payment:
    post:
      deprecated: false
      description: "Creates a payment record for the invoice in the *Approved* status\
        \ by specifying the tracking number of the work order the invoice was created\
        \ for.\r\n            <br />Learn [how subscribers can mark invoices as paid](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/621936646/Marking+Invoices+as+Paid)\
        \ in ServiceChannel University."
      operationId: "POSTv3_invoices_Workorders_{trackingNumber}_Payment"
      parameters:
      - description: Tracking number of the work order you want to add the invoice
          payment record for.
        in: path
        name: trackingNumber
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest'
        description: Invoice payment record request model.
        required: true
      responses:
        "204":
          content: {}
          description: 'The payment record is added to a particular invoice created
            for the specified work order. '
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/> Error codes:\r\n      \
            \      503 — Request is invalid\r\n            1178 — Invoice cannot be\
            \ paid before invoice dates\r\n            1178 — Invoice has already\
            \  paid\r\n            1178 — Only approved invoices may pay\r\n     \
            \       1178 — Payment amount exceeds the actual amount\r\n          \
            \  1178 — Payment amount should be more than zero\r\n            1178\
            \ — Pay not allowed for this subscriber\r\n            2602 — Invalid\
            \ WO Tracking Number"
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/> Error\
            \ codes:\r\n            504 — API call rejected by security permissions"
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/> Error codes:\r\n\
            \            100 — User has no rights to perform this action"
      summary: Add a payment record to an invoice by a tracking number
      tags:
      - Invoices
      x-access: Subscribers
      x-codegen-request-body-name: payment
  /invoices/ping/{serviceName}:
    get:
      deprecated: false
      description: "The method allow check some service for invoice for availability\
        \ state.<br />Responses: 'Success' or 'Fail'."
      operationId: "GETv3_invoices_ping_{serviceName}"
      parameters:
      - description: "Service Name identifier: The value of parameter is 'TWUtilityManager'\
          \ or 'TWCalculationManager'  in currently."
        in: path
        name: serviceName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded. Specified service is
            available.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request failed. Action parameter is mismatched
            or missed.
        "401":
          content: {}
          description: An unauthorized request.
        "503":
          content: {}
          description: Indicates that the request failed. Specified service is unavailable.
      summary: Checks state of a service for invoice.
      tags:
      - Invoices
      x-access: Any
  /api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist:
    get:
      deprecated: false
      operationId: "GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist"
      parameters:
      - description: The subscriber id.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: The dashboard id.
        in: path
        name: dashboardId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get.
      tags:
      - IssueList
      x-access: Any
  /api/subscribers/{subscriberId}/issuelists:
    get:
      deprecated: false
      operationId: "GETv3_api_subscribers_{subscriberId}_issuelists?pageIndex={pageIndex}&pageSize={pageSize}"
      parameters:
      - description: The subscriber Id.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: The page index.
        in: query
        name: pageIndex
        schema:
          format: int32
          type: integer
      - description: The page size.
        in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The post.
      tags:
      - IssueList
      x-access: Any
    post:
      deprecated: false
      operationId: "POSTv3_api_subscribers_{subscriberId}_issuelists"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.PostIssueListRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.PostIssueListRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.PostIssueListRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.PostIssueListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.PostIssueListRequest'
        description: The request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The post.
      tags:
      - IssueList
      x-access: Any
      x-codegen-request-body-name: request
  /api/subscribers/{subscriberId}/issuelists/history:
    get:
      deprecated: false
      operationId: "GETv3_api_subscribers_{subscriberId}_issuelists_history?pageIndex={pageIndex}&pageSize={pageSize}"
      parameters:
      - description: The subscriber id.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: The page index.
        in: query
        name: pageIndex
        schema:
          format: int32
          type: integer
      - description: The page size.
        in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get issue list history.
      tags:
      - IssueList
      x-access: Any
  /api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/{issueListId}:
    put:
      deprecated: false
      operationId: "PUTv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_{issueListId}"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          type: string
      - in: path
        name: dashboardId
        required: true
        schema:
          type: string
      - in: path
        name: issueListId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.SetIssueListForDashboardRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.SetIssueListForDashboardRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.SetIssueListForDashboardRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.SetIssueListForDashboardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.SetIssueListForDashboardRequest'
        description: The request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The set issue list for dashboard.
      tags:
      - IssueList
      x-access: Any
      x-codegen-request-body-name: request
  /api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/fields:
    get:
      deprecated: false
      operationId: "GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_fields"
      parameters:
      - description: The subscriber id.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: The dashboard id.
        in: path
        name: dashboardId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get global fields.
      tags:
      - IssueList
      x-access: Any
  /issuelist/globalfields:
    get:
      deprecated: false
      operationId: "GETv3_issuelist_globalfields?locationId={locationId}&subscriberId={subscriberId}&setupId={setupId}"
      parameters:
      - in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      - in: query
        name: setupId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: "The get global fields. Authorized version of 'storedashboards/{dashboardId:int}/issuelist/fields'"
      tags:
      - IssueList
      x-access: Subscribers
  /providers/current/subscribers/{subscriberId}/applicationissuelist/globalfields:
    get:
      deprecated: false
      operationId: "GETv3_providers_current_subscribers_{subscriberId}_applicationissuelist_globalfields?locationId={locationId}"
      parameters:
      - description: The subscriber id is required.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric id of location.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: "The get global fields. Authorized version of 'storedashboards/{dashboardId:int}/issuelist/fields'"
      tags:
      - IssueList
      x-access: Providers
  /api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/areas/{areaId}/problemtypes:
    get:
      deprecated: false
      operationId: "GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_areas_{areaId}_problemtypes"
      parameters:
      - description: The subscriber id.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: The dashboard id.
        in: path
        name: dashboardId
        required: true
        schema:
          format: int32
          type: integer
      - description: The area id.
        in: path
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get problem types.
      tags:
      - IssueList
      x-access: Any
  /subscribers/current/storedashboards/current/issuelist/areas/{areaId}/problemtypes:
    get:
      deprecated: false
      description: List Problem types. Returns Problem types for successful request.
      operationId: "GETv3_subscribers_current_storedashboards_current_issuelist_areas_{areaId}_problemtypes?locationId={locationId}&setupId={setupId}&subscriberId={subscriberId}"
      parameters:
      - description: Numeric id of the Location Area.
        in: path
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric id of location.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: Numeric id of the Store Dashboard setup.
        in: query
        name: setupId
        schema:
          format: int32
          type: integer
      - description: Numeric id of subscriber.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n     \
            \       <br/> 1001 - No issue list is available, please load it through\
            \ issue list converter;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Get Problem types
      tags:
      - IssueList
      x-access: Any
  /providers/current/applicationissuelist/areas/{areaId}/problemtypes:
    get:
      deprecated: false
      description: List Problem types. Returns Problem types for successful request.
      operationId: "GETv3_providers_current_applicationissuelist_areas_{areaId}_problemtypes?locationId={locationId}&setupId={setupId}&subscriberId={subscriberId}"
      parameters:
      - description: Numeric id of the Location Area.
        in: path
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric id of location.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: Numeric id of the Store Dashboard setup.
        in: query
        name: setupId
        schema:
          format: int32
          type: integer
      - description: Numeric id of subscriber.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n     \
            \       <br/> 1001 - No issue list is available, please load it through\
            \ issue list converter;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Get Problem types
      tags:
      - IssueList
      x-access: Any
  /issuelist/problemtypes:
    get:
      deprecated: false
      description: List Problem types. Returns Problem types for successful request.
      operationId: "GETv3_issuelist_problemtypes?areaId={areaId}&locationId={locationId}&setupId={setupId}&subscriberId={subscriberId}"
      parameters:
      - description: Numeric id of the Location Area.
        in: query
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric id of location.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: Numeric id of the Store Dashboard setup.
        in: query
        name: setupId
        schema:
          format: int32
          type: integer
      - description: Numeric id of subscriber.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n     \
            \       <br/> 1001 - No issue list is available, please load it through\
            \ issue list converter;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Get Problem types
      tags:
      - IssueList
      x-access: Any
  /api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/areas/{areaId}/items:
    get:
      deprecated: false
      operationId: "GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_areas_{areaId}_items?problemType={problemType}&locationId={locationId}"
      parameters:
      - description: The subsriber id.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: The dashboard id.
        in: path
        name: dashboardId
        required: true
        schema:
          format: int32
          type: integer
      - description: The area Id.
        in: path
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - description: The problem type.
        in: query
        name: problemType
        required: true
        schema:
          type: string
      - description: The location id.
        in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get items filtered by area type and location.
      tags:
      - IssueList
      x-access: Any
  /api/subscribers/{subscriberId}/issuelist/headers:
    get:
      deprecated: false
      operationId: "GETv3_api_subscribers_{subscriberId}_issuelist_headers"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - IssueList
      x-access: Any
  /api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/areas/{areaId}/problems:
    get:
      deprecated: false
      operationId: "GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_areas_{areaId}_problems?problemType={problemType}&item={item}"
      parameters:
      - description: The subsriber id.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: The dashboard id.
        in: path
        name: dashboardId
        required: true
        schema:
          format: int32
          type: integer
      - description: The area id.
        in: path
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - description: The problem type.
        in: query
        name: problemType
        required: true
        schema:
          type: string
      - description: The item.
        in: query
        name: item
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get problems filtered by area type and location.
      tags:
      - IssueList
      x-access: Any
  /api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/issuechoice:
    get:
      deprecated: false
      operationId: "GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_issuechoice"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          type: string
      - in: path
        name: dashboardId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceRequest'
        description: Get Issue Choice request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get issue choice.
      tags:
      - IssueList
      x-access: Any
      x-codegen-request-body-name: request
  /subscribers/current/storedashboards/current/issuelist/issuechoice:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_current_storedashboards_current_issuelist_issuechoice?problemType={problemType}&equipmentType={equipmentType}&problemCode={problemCode}&locationId={locationId}&setupId={setupId}"
      parameters:
      - in: query
        name: problemType
        required: true
        schema:
          type: string
      - in: query
        name: equipmentType
        required: true
        schema:
          type: string
      - in: query
        name: problemCode
        required: true
        schema:
          type: string
      - in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: setupId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - IssueList
      x-access: Subscribers
  /issuelist/issuechoice:
    get:
      deprecated: false
      operationId: "GETv3_issuelist_issuechoice?problemType={problemType}&equipmentType={equipmentType}&problemCode={problemCode}&locationId={locationId}&setupId={setupId}"
      parameters:
      - in: query
        name: problemType
        required: true
        schema:
          type: string
      - in: query
        name: equipmentType
        required: true
        schema:
          type: string
      - in: query
        name: problemCode
        required: true
        schema:
          type: string
      - in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: setupId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - IssueList
      x-access: Subscribers
  /subscribers/current/storedashboards/current/issuelist/specific/issuechoice:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_current_storedashboards_current_issuelist_specific_issuechoice?SubscriberId={SubscriberId}&DashboardSetupId={DashboardSetupId}&Trade={Trade}&Priority={Priority}&Category={Category}"
      parameters:
      - in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: dashboardSetupId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: trade
        required: true
        schema:
          type: string
      - in: query
        name: priority
        required: true
        schema:
          type: string
      - in: query
        name: category
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Get specific issue choice
      tags:
      - IssueList
      x-access: Any
  /api/subscribers/{subscriberId}/storedashboards/{dashboardId}/issuelist/issuechoice/fields:
    get:
      deprecated: false
      operationId: "GETv3_api_subscribers_{subscriberId}_storedashboards_{dashboardId}_issuelist_issuechoice_fields?problemType={problemType}&item={item}&problem={problem}"
      parameters:
      - description: The subscriber id.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: The dashboard id.
        in: path
        name: dashboardId
        required: true
        schema:
          format: int32
          type: integer
      - description: The problem type.
        in: query
        name: problemType
        required: true
        schema:
          type: string
      - description: The item.
        in: query
        name: item
        required: true
        schema:
          type: string
      - description: The problem.
        in: query
        name: problem
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get issue choice fiels.
      tags:
      - IssueList
      x-access: Any
  /subscribers/current/storedashboards/current/issuelist/areas:
    get:
      deprecated: false
      description: "List Issue Areas. Returns Issue Areas for successful request.\r\
        \n            <br /><br />Available for subscriber usage."
      operationId: "GETv3_subscribers_current_storedashboards_current_issuelist_areas?locationId={locationId}&setupId={setupId}"
      parameters:
      - description: selected locationId.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: Numeric id of the Store Dashboard setup.
        in: query
        name: setupId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1000 - Invalid setupId(dashboard) for current user;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get Areas
      tags:
      - IssueList
      x-access: Subscribers
  /issuelist/areas:
    get:
      deprecated: false
      description: "List Issue Areas. Returns Issue Areas for successful request.\r\
        \n            <br /><br />Available for subscriber usage."
      operationId: "GETv3_issuelist_areas?locationId={locationId}&setupId={setupId}"
      parameters:
      - description: selected locationId.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: Numeric id of the Store Dashboard setup.
        in: query
        name: setupId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1000 - Invalid setupId(dashboard) for current user;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get Areas
      tags:
      - IssueList
      x-access: Subscribers
  /providers/current/subscribers/{subscriberId}/applicationissuelist/areas:
    get:
      deprecated: false
      description: "List Issue Areas. Returns Issue Areas for successful request.\r\
        \n            <br /><br />Available for provider usage."
      operationId: "GETv3_providers_current_subscribers_{subscriberId}_applicationissuelist_areas?locationId={locationId}"
      parameters:
      - description: The subscriber id is required.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric id of location.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1000 - Invalid setupId(dashboard) for current user;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get Areas
      tags:
      - IssueList
      x-access: Providers
  /providers/current/subscriber/{subscriberId}/location/{locationId}/applicationissuelist/problemtypes:
    get:
      deprecated: false
      operationId: "GETv3_providers_current_subscriber_{subscriberId}_location_{locationId}_applicationissuelist_problemtypes"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - IssueList
      x-access: Providers
  /subscribers/current/storedashboards/current/issuelist/areas/{areaId}/equipmenttypes:
    get:
      deprecated: false
      description: "List equipment items.\r\n            <br /><br />Available for\
        \ subscriber usage."
      operationId: "GETv3_subscribers_current_storedashboards_current_issuelist_areas_{areaId}_equipmenttypes?locationId={locationId}&problemType={problemType}&setupId={setupId}"
      parameters:
      - description: Numeric id of the Location.
        in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric id of the Location Area.
        in: path
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - description: Problem type.
        in: query
        name: problemType
        required: true
        schema:
          type: string
      - description: Numeric id of the Store Dashboard setup.
        in: query
        name: setupId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n     \
            \       <br/> 1001 - No issue list is available, please load it through\
            \ issue list converter;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get Equipment items
      tags:
      - IssueList
      x-access: Subscribers
  /issuelist/items:
    get:
      deprecated: false
      description: "List equipment items.\r\n            <br /><br />Available for\
        \ subscriber usage."
      operationId: "GETv3_issuelist_items?locationId={locationId}&areaId={areaId}&problemType={problemType}&setupId={setupId}"
      parameters:
      - description: Numeric id of the Location.
        in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric id of the Location Area.
        in: query
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - description: Problem type.
        in: query
        name: problemType
        required: true
        schema:
          type: string
      - description: Numeric id of the Store Dashboard setup.
        in: query
        name: setupId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n     \
            \       <br/> 1001 - No issue list is available, please load it through\
            \ issue list converter;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get Equipment items
      tags:
      - IssueList
      x-access: Subscribers
  /subscribers/current/dashboard/{setupId}/issuelist/equipmenttypes:
    get:
      deprecated: false
      description: "List equipment items not filtered by location.\r\n           \
        \ <br /><br />Available for subscriber usage."
      operationId: "GETv3_subscribers_current_dashboard_{setupId}_issuelist_equipmenttypes?areaId={areaId}&problemType={problemType}"
      parameters:
      - description: Numeric id of the Store Dashboard setup.
        in: path
        name: setupId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric id of the Location Area.
        in: query
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - description: Problem type.
        in: query
        name: problemType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n     \
            \       <br/> 1001 - No issue list is available, please load it through\
            \ issue list converter;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get Equipment items not filtered by location.
      tags:
      - IssueList
      x-access: Subscribers
  /providers/current/subscribers/{subscriberId}/applicationissuelist/items:
    get:
      deprecated: false
      description: "List equipment items.\r\n            <br /><br />Available for\
        \ provider usage."
      operationId: "GETv3_providers_current_subscribers_{subscriberId}_applicationissuelist_items?locationId={locationId}&areaId={areaId}&problemType={problemType}"
      parameters:
      - description: This parameter is required.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric id of the Location.
        in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric id of the Location Area.
        in: query
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - description: Problem type.
        in: query
        name: problemType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n     \
            \       <br/> 1001 - No issue list is available, please load it through\
            \ issue list converter;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get Equipment items
      tags:
      - IssueList
      x-access: Providers
  /subscribers/current/storedashboards/current/issuelist/areas/{areaId}/problemcodes:
    get:
      deprecated: false
      description: "List problem codes.\r\n            <br /><br />Available for subscriber\
        \ usage."
      operationId: "GETv3_subscribers_current_storedashboards_current_issuelist_areas_{areaId}_problemcodes?problemType={problemType}&equipmentType={equipmentType}&locationId={locationId}&setupId={setupId}"
      parameters:
      - description: Numeric id of the Location Area.
        in: path
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - description: Problem type.
        in: query
        name: problemType
        required: true
        schema:
          type: string
      - description: Equipment type.
        in: query
        name: equipmentType
        required: true
        schema:
          type: string
      - description: selected locationId.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: Numeric id of the Store Dashboard setup.
        in: query
        name: setupId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n     \
            \       <br/> 1001 - No issue list is available, please load it through\
            \ issue list converter;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get Problem codes
      tags:
      - IssueList
      x-access: Subscribers
  /issuelist/problems:
    get:
      deprecated: false
      description: "List problem codes.\r\n            <br /><br />Available for subscriber\
        \ usage."
      operationId: "GETv3_issuelist_problems?areaId={areaId}&problemType={problemType}&equipmentType={equipmentType}&locationId={locationId}&setupId={setupId}"
      parameters:
      - description: Numeric id of the Location Area.
        in: query
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - description: Problem type.
        in: query
        name: problemType
        required: true
        schema:
          type: string
      - description: Equipment type.
        in: query
        name: equipmentType
        required: true
        schema:
          type: string
      - description: selected locationId.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: Numeric id of the Store Dashboard setup.
        in: query
        name: setupId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n     \
            \       <br/> 1001 - No issue list is available, please load it through\
            \ issue list converter;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get Problem codes
      tags:
      - IssueList
      x-access: Subscribers
  /providers/current/subscribers/{subscriberId}/applicationissuelist/problems:
    get:
      deprecated: false
      description: "List problem codes.\r\n            <br /><br />Available for provider\
        \ usage."
      operationId: "GETv3_providers_current_subscribers_{subscriberId}_applicationissuelist_problems?areaId={areaId}&problemType={problemType}&equipmentType={equipmentType}&locationId={locationId}"
      parameters:
      - description: This parametr is required.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric id of the Location Area.
        in: query
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - description: Problem type.
        in: query
        name: problemType
        required: true
        schema:
          type: string
      - description: Equipment type.
        in: query
        name: equipmentType
        required: true
        schema:
          type: string
      - description: Numeric id of location.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1000 - Invalid setupId(dashboard) for current user;\r\n     \
            \       <br/> 1001 - No issue list is available, please load it through\
            \ issue list converter;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get Problem codes
      tags:
      - IssueList
      x-access: Providers
  /providers/current/applicationissuelist/issueitems:
    get:
      deprecated: false
      operationId: "GETv3_providers_current_applicationissuelist_issueitems?subscriberId={subscriberId}&locationId={locationId}&areaId={areaId}&trade={trade}&problemType={problemType}"
      parameters:
      - in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: trade
        required: true
        schema:
          type: string
      - in: query
        name: problemType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - IssueList
      x-access: Providers
  /subscribers/current/storedashboards/current/issuelist/field:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_current_storedashboards_current_issuelist_field?id={id}&setupId={setupId}"
      parameters:
      - in: query
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: setupId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - IssueList
      x-access: Subscribers
  /issuelist/field:
    get:
      deprecated: false
      operationId: "GETv3_issuelist_field?id={id}&setupId={setupId}"
      parameters:
      - in: query
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: setupId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - IssueList
      x-access: Subscribers
  /api/subscribers/{subscriberId}/storedashboards/issuelist/items:
    get:
      deprecated: false
      operationId: "GETv3_api_subscribers_{subscriberId}_storedashboards_issuelist_items?equipmentType={equipmentType}&locationId={locationId}&setupId={setupId}"
      parameters:
      - description: The subscriber id.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: The Equipment Type.
        in: query
        name: equipmentType
        required: true
        schema:
          type: string
      - description: The location id.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - in: query
        name: setupId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get.
      tags:
      - IssueList
      x-access: Any
  /providers/current/subscribers/{subscriberId}/issuelist:
    get:
      deprecated: false
      operationId: "GETv3_providers_current_subscribers_{subscriberId}_issuelist?assetId={assetId}&locationId={locationId}"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: Optional asset ID
        in: query
        name: assetId
        schema:
          format: int32
          type: integer
      - description: Optional location ID
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Retrieves the issue list for a FTM provider
      tags:
      - IssueList
      x-access: Providers
  /issuelist/issuechoiceinfo/{trackingNumber}:
    get:
      deprecated: false
      operationId: "GETv3_issuelist_issuechoiceinfo_{trackingNumber}"
      parameters:
      - description: The Tracking Number.
        in: path
        name: trackingNumber
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get issue choice info.
      tags:
      - IssueList
      x-access: Any
  /ivr/message:
    get:
      deprecated: false
      operationId: "GETv3_ivr_message?MessageId={MessageId}&Language={Language}&SetupPhoneId={SetupPhoneId}"
      parameters:
      - in: query
        name: messageId
        required: true
        schema:
          type: string
      - in: query
        name: language
        required: true
        schema:
          type: string
      - in: query
        name: setupPhoneId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IVR.IvrMessageResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IVR.IvrMessageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IVR.IvrMessageResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IVR.IvrMessageResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.<br>Error codes:<br> 503 - Empty tracking number;
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      tags:
      - IVR
      x-access: Any
  /workorders/{workorderId}/leakPartUseAvailableAmount:
    get:
      deprecated: false
      operationId: "GETv3_workorders_{workorderId}_leakPartUseAvailableAmount"
      parameters:
      - in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IVR.IvrBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IVR.IvrBaseResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IVR.IvrBaseResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IVR.IvrBaseResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.<br>Error codes:<br> 503 - Empty tracking number;
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      tags:
      - IVR
      x-access: Any
  /outbound/getphones:
    get:
      deprecated: false
      operationId: "GETv3_outbound_getphones?environment={environment}&outboundEvent={outboundEvent}"
      parameters:
      - in: query
        name: environment
        required: true
        schema:
          enum:
          - Prod
          - Dev
          type: string
      - in: query
        name: outboundEvent
        required: true
        schema:
          enum:
          - Unknown
          - EDR
          - NoDispatch
          - MissedETA
          - NoCheckout
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - IVR
      x-access: Any
  /languages/updateLanguageSetting:
    post:
      deprecated: false
      description: "Update a language setting for subscriber or provider. \r\n   \
        \         <br /> ***Note***: This method is available to *Provider Directory\
        \ (aka Fixxbook)* users only."
      operationId: POSTv3_languages_updateLanguageSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Languages.UpdateLanguagesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Languages.UpdateLanguagesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Languages.UpdateLanguagesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Languages.UpdateLanguagesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Languages.UpdateLanguagesRequest'
        required: true
      responses:
        "200":
          content: {}
          description: The language setting is updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc\r\n            < br /> Error codes:\r\n     \
            \       101 - Invalid provider id\r\n            104 - ProviderId not\
            \ found\r\n            401 — Invalid subscriber id\r\n            405\
            \ — SubscriberId not found\r\n            850 — You must set SubscriberId\
            \ or ProviderId\r\n            851 — National language not found\r\n \
            \           852 — Invalid language id    \r\n            853 — LanguageId\
            \ not found\r\n            854 - You should set subscriberId or providerId"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Set language for subscriber or provider
      tags:
      - Languages
      x-access: Any
      x-codegen-request-body-name: request
  /stores:
    get:
      deprecated: false
      description: "Returns a list of all Locations, also called Stores, if neither\
        \ of the filters is used. You can get the details for a certain store by specifying\
        \ any of the following parameters: `Id`, `storeIdentifier`, `name`.\r\n  \
        \          <br /> You can use either of these methods to get a list of the\
        \ subscriber’s locations: [GET /locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_),\
        \ [GET /stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_).\r\
        \n            <br /> Visit ServiceChannel University to find out more about\
        \ [locations and provider assignments](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556105830/Locations+Provider+Assignments)."
      operationId: "GETv3_stores?Id={Id}&storeIdentifier={storeIdentifier}&Name={Name}&Sort={Sort}&Page={Page}&PageSize={PageSize}"
      parameters:
      - description: Unique location identifier.
        in: query
        name: id
        schema:
          format: int32
          type: integer
      - description: Alphanumeric location identifier in the client’s system. Assigned
          by and unique per subscriber.
        in: query
        name: storeIdentifier
        schema:
          type: string
      - description: Location name.
        in: query
        name: name
        schema:
          type: string
      - description: Sort resources by the specified property in the response.
        in: query
        name: sort
        schema:
          type: string
      - description: Results page number.
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of objects on the results page. The default and maximum
          per page is 50.
        in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsWithTotalResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsWithTotalResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsWithTotalResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsWithTotalResponse'
          description: The requested locations are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc\r\n            <br/>Error codes: \r\n       \
            \     502 — Subscriber not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - API call rejected by security permissions\r\n    \
            \        100 — User has no permissions to perform this action"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error. \r\n            <br/>Error codes:\r\n            501 — “Location\
            \ ID” is not a valid value for Int32\r\n            "
      summary: Retrieve stores
      tags:
      - Locations
      x-access: Any
  /locations:
    get:
      deprecated: false
      description: "Returns a list of all Locations, also called Stores, if neither\
        \ of the filters is used. You can get the details for a certain store by specifying\
        \ any of the following parameters: `Id`, `storeIdentifier`, `name`.\r\n  \
        \          <br /> You can use either of these methods to get a list of the\
        \ subscriber’s locations: [GET /locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_),\
        \ [GET /stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_).\r\
        \n            <br /> Visit ServiceChannel University to find out more about\
        \ [locations and provider assignments](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556105830/Locations+Provider+Assignments)."
      operationId: "GETv3_locations?Id={Id}&storeIdentifier={storeIdentifier}&Name={Name}&Sort={Sort}&Page={Page}&PageSize={PageSize}"
      parameters:
      - description: Unique location identifier.
        in: query
        name: id
        schema:
          format: int32
          type: integer
      - description: Alphanumeric location identifier in the client’s system. Assigned
          by and unique per subscriber.
        in: query
        name: storeIdentifier
        schema:
          type: string
      - description: Location name.
        in: query
        name: name
        schema:
          type: string
      - description: Sort resources by the specified property in the response.
        in: query
        name: sort
        schema:
          type: string
      - description: Results page number.
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of objects on the results page. The default and maximum
          per page is 50.
        in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsWithTotalResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsWithTotalResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsWithTotalResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsWithTotalResponse'
          description: The requested locations are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc\r\n            <br/>Error codes: \r\n       \
            \     502 — Subscriber not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - API call rejected by security permissions\r\n    \
            \        100 — User has no permissions to perform this action"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error. \r\n            <br/>Error codes:\r\n            501 — “Location\
            \ ID” is not a valid value for Int32\r\n            "
      summary: Retrieve stores
      tags:
      - Locations
      x-access: Any
    post:
      deprecated: false
      description: "Creates a location for the authorized subscriber.\r\n        \
        \    <br />**Note:** Method is available for users with the *Super Admin*\
        \ or *Admin User* permissions, or the *SC Admin* role.\r\n            <br\
        \ />Learn [how subscribers can create inventory locations](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1209106525/Creating+Inventory+Locations)\
        \ in ServiceChannel University.\r\n            <br />**Example request**\r\
        \n            \r\n                PUT / locations/{locationId}\r\n       \
        \         {\r\n                 \"StoreId\":\"34\",\r\n                 \"\
        Name\": \"CSR Flagship\",\r\n                 \"Latitude\": 40.736601,\r\n\
        \                 \"Longitude\": -73.991795,\r\n                 \"Distance\"\
        : null,\r\n                 \"Address1\": \"3rd Floor, Innovation Center\"\
        ,\r\n                 \"Address2\": \"18 E. 16th Street\",\r\n           \
        \      \"City\": \"New York\",\r\n                 \"State\": \"NY\",\r\n\
        \                 \"StateId\": 1,\r\n                 \"Region\": \"Northeast\"\
        ,\r\n                 \"District\": \"NYC/LI\",\r\n                 \"Zip\"\
        : \"10003\",\r\n                 \"Country\": \"US\",\r\n                \
        \ \"CountryId\": 1,\r\n                 \"ClosedDate\": \"\",\r\n        \
        \         \"OpenDate\": \"2021-07-03T00:10:00.308Z\",\r\n                \
        \ \"Email\": \"csrflagship@gmail.com\",\r\n                 \"Phone\": \"\
        212-555-1212\",\r\n                 \"Contact\": \"\",\r\n               \
        \  \"FaxNumber\": \"\",\r\n                 \"LocationTypeId\": null,\r\n\
        \                 \"SquareValue\": 20.21\r\n                 \"SquareMeasure\"\
        : \"ft or foot\" or \"m or metre\"\r\n                }"
      operationId: POSTv3_locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.CreateLocationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.CreateLocationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.CreateLocationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.CreateLocationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.CreateLocationRequest'
        description: Request to add a new location.
        required: true
      responses:
        "201":
          content: {}
          description: A new location is created. The location ID is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — Request is empty\r\n            503 — Request is empty or\
            \ null\r\n            605 — Location with Store Id already exists\r\n\
            \            606 — The `StoreId` value cannot be empty. The maximum length\
            \ is 50 characters.\r\n            631 — The `City` value cannot be empty.\
            \ The maximum length is 50 characters.\r\n            632 — The `Zip`\
            \ value cannot be empty. The maximum length is 12 characters.\r\n    \
            \        633 — Latitude value should be between '-90' and '90'.\r\n  \
            \          634 — Longitude value should be between '-180' and '180'.\r\
            \n            635 — Invalid Email.\r\n            636 — The `Name` value\
            \ cannot be empty. The maximum length is 100 characters.\r\n         \
            \   637 — Invalid `State` format. The maximum length is 2 characters.\r\
            \n            638 — Invalid `Address1` format. The maximum length is 500\
            \ characters.\r\n            639 — Invalid `Address2` format. The maximum\
            \ length is 500 characters.\r\n            640 — The `Country` value cannot\
            \ be empty. The maximum length is 20 characters.\r\n            641 —\
            \ Invalid `Region` format. The maximum length is 50 characters.\r\n  \
            \          642 — Invalid `District` format. The maximum length is 50 characters.\r\
            \n            643 — Invalid `Phone` format. The maximum length is 22 characters.\r\
            \n            644 — Invalid `Contact` format. The maximum length is 50\
            \ characters.\r\n            645 — Invalid `FaxNumber` format. The maximum\
            \ length is 22 characters.\r\n            647 — Location 'state' not found.\r\
            \n            651 — Location 'stateId' not found.\r\n            652 —\
            \ Incorrect combination of 'State' and 'StateId'\r\n            1254 —\
            \ Invalid square measure"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 — Object\
            \ reference not set to an instance of an object"
      summary: Add a location
      tags:
      - Locations
      x-access: Subscribers
      x-codegen-request-body-name: request
  /subscribers/current/users/current/stores:
    get:
      deprecated: false
      description: "Returns a list of stores with the LocationIDs and subscriber IDs,\
        \ along with the location address details. The method is available to subscribers\
        \ only.\r\n            <br /> To get more detailed information, use one of\
        \ these methods: [GET /stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_),\
        \ [GET /locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_),\
        \ [GET /odata/locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/Locations_GetLocations).\r\
        \n            <br /> Learn about updating [location details](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/708936009/Updating+Location+Details)\
        \ in ServiceChannel University."
      operationId: GETv3_subscribers_current_users_current_stores
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Get stores
      tags:
      - Locations
      x-access: Any
  /locations/{locationId}:
    delete:
      deprecated: false
      description: "Permanently removes a location.\r\n            <br />***Note***:\
        \ Method is available for users with the *Super Admin* or *Admin User* permissions,\
        \ or the *SC Admin* role."
      operationId: "DELETEv3_locations_{locationId}"
      parameters:
      - description: Unique identifier of the subscriber’s location to delete.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: "The location is deleted, and the response is intentionally\
            \ blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes: \r\n      \
            \      502 — Data not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions\r\n    \
            \        804 — User has no permissions to perform this action"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Delete a location
      tags:
      - Locations
      x-access: Subscribers
    get:
      deprecated: false
      description: "Returns the details for the specified location.\r\n          \
        \  <br /> To receive details of several locations, use one of these methods:\
        \ [GET /stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_),\
        \ [GET /locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_),\
        \ [GET /odata/locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/Locations_GetLocations)."
      operationId: "GETv3_locations_{locationId}"
      parameters:
      - description: Unique numeric identifier of the location to return the details
          for.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationWithTimezoneName'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationWithTimezoneName'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationWithTimezoneName'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationWithTimezoneName'
          description: The specified location details are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     601 — Location is not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Retrieve a location
      tags:
      - Locations
      x-access: Any
    put:
      deprecated: false
      description: "Modifies information of the existing location.You can use either\
        \ of the following methods to retrieve location details: [GET/stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_),\
        \ [GET/locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_).\r\
        \n            <br />***Note:*** Method is available for subscribers with the\
        \ *Super Admin* permission or *SC Admin* role.\r\n            <br />Visit\
        \ ServiceChannel University to find out [how subscribers can update location\
        \ details](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/708936009/Updating+Location+Details).\r\
        \n            <br />**Example request**\r\n            \r\n              \
        \  PUT / locations/{locationId}\r\n                {\r\n                 \"\
        StoreId\": \"34\",\r\n                 \"Name\": \"CSR Flagship\",\r\n   \
        \              \"Latitude\": 40.736601,\r\n                 \"Longitude\"\
        : -73.991795,\r\n                 \"Distance\": null,\r\n                \
        \ \"Address1\": \"3rd Floor, Innovation Center\",\r\n                 \"Address2\"\
        : \"18 E. 16th Street\",\r\n                 \"City\": \"New York\",\r\n \
        \                \"State\": \"NY\",\r\n                 \"StateId\": 1,\r\n\
        \                 \"Region\": \"Northeast\",\r\n                 \"District\"\
        : \"NYC/LI\",\r\n                 \"Zip\": \"10003\",\r\n                \
        \ \"Country\": \"US\",\r\n                 \"CountryId\": 1,\r\n         \
        \        \"ClosedDate\": \"null\",\r\n                 \"OpenDate\": \"2021-07-05T07:05:04.991Z\"\
        ,\r\n                 \"Email\": \"flagship@gmail.com\",\r\n             \
        \    \"Phone\": \"212-555-1212\",\r\n                 \"Contact\": \"\",\r\
        \n                 \"FaxNumber\": \"\",\r\n                 \"LocationTypeId\"\
        : null,\r\n                 \"SquareValue\": 20.21\r\n                 \"\
        SquareMeasure\": \"ft or foot\" or \"m or metre\"\r\n                }"
      operationId: "PUTv3_locations_{locationId}"
      parameters:
      - description: Unique identifier of the subscriber’s location which information
          you want to update.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.UpdateLocationExRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.UpdateLocationExRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.UpdateLocationExRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.UpdateLocationExRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.UpdateLocationExRequest'
        description: Request to change the location details. Leaving a parameter empty
          or excluding it from the request model erases the already existing data.
        required: true
      responses:
        "200":
          content: {}
          description: The location details are updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     601 — Location not found\r\n            1254 — Invalid square measure"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Update a location
      tags:
      - Locations
      x-access: Subscribers
      x-codegen-request-body-name: request
  /locations/{locationId}/notes:
    get:
      deprecated: false
      description: Returns the location notes for the specified location.
      operationId: "GETv3_locations_{locationId}_notes?privateNotes={privateNotes}"
      parameters:
      - description: Unique ID of the location you want to receive notes for.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Should privateNotes be included. Settings from dashboardSetup
          by default
        in: query
        name: privateNotes
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.LocationNote'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.LocationNote'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.LocationNote'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.LocationNote'
          description: Location notes are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     601 — Location not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Retrieve location notes
      tags:
      - Locations
      x-access: Any
    post:
      deprecated: false
      description: "Adds a location note for the specified location. If a note is\
        \ already added, you can change it by sending the request, or leave the `Value`\
        \ parameter empty to delete the note.\r\n            <br /> To retrieve location\
        \ IDs along with the location notes, send either of these requests: [GET/stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_),\
        \ [GET/locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_).\r\
        \n            Get location notes separately for the specified location by\
        \ sending the [GET/locations/{locationId}/notes](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations__locationId__notes)\
        \ request.\r\n            <br />***Note***: Method is available for users\
        \ with the *Super Admin* or *Admin* roles, or the *Location Admin* permission.\r\
        \n            <br /> **Example request**\r\n            \r\n             \
        \   POST /locations/{locationId}/notes\r\n                {\r\n          \
        \        \"Header\": \"Location Manager\",\r\n                  \"Value\"\
        : \"John Smith\"\r\n                }"
      operationId: "POSTv3_locations_{locationId}_notes"
      parameters:
      - description: Unique ID of the location you want to update a note for.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeaderApiModelRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeaderApiModelRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeaderApiModelRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeaderApiModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeaderApiModelRequest'
        description: "Request to add, update or delete a location note header for\
          \ a location."
        required: true
      responses:
        "200":
          content: {}
          description: The note is added to the specified location.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     601 — Location is not found\r\n            1301 — Request is empty\
            \ or null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes:\r\n\
            \            100 — User has no rights to perform this action\r\n     \
            \       612 — The user does not have access to update a protected location\
            \ note header"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            611 — The location note header\
            \ does not exist on the subscriber instance"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 — Object\
            \ reference not set to an instance of an object"
      summary: Add a location note
      tags:
      - Locations
      x-access: Subscribers
      x-codegen-request-body-name: locNoteHeader
  /locations/{storeId}/updateNotes:
    post:
      deprecated: false
      description: "Add location notes for the specified location. If a note is already\
        \ added, you can change it by sending the request, or leave the `Value` parameter\
        \ empty to delete the note.\r\n            <br /> ***Note***: To retrieve\
        \ store IDs along with the location notes, send either of these requests:\
        \ [GET/stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_),\
        \ [GET/locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_).\r\
        \n            Get location notes separately for the specified location by\
        \ sending the [GET/locations/{locationId}/notes](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations__locationId__notes)\
        \ request.\r\n            <br /> **Example request**\r\n            \r\n \
        \               POST /locations/{storeId}/updateNotes\r\n                {\r\
        \n                   \"Notes\": [\r\n                       {\r\n        \
        \                   \"Header\": \"Note1\",\r\n                           \"\
        Value\": \"1\"\r\n                       },\r\n                       {\r\n\
        \                           \"Header\": \"Note2\",\r\n                   \
        \        \"Value\": \"2\"\r\n                       }\r\n                \
        \   ]\r\n                }"
      operationId: "POSTv3_locations_{storeId}_updateNotes"
      parameters:
      - description: Unique storeId of the location you want to update a note for.
        in: path
        name: storeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeadersApiModelRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeadersApiModelRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeadersApiModelRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeadersApiModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeadersApiModelRequest'
        description: "Request to add, update or delete a location note headers for\
          \ a location."
        required: true
      responses:
        "200":
          content: {}
          description: The note is added to the specified location.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     601 — Location is not found\r\n            1301 — Request is empty\
            \ or null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes:\r\n\
            \            100 — User has no rights to perform this action\r\n     \
            \       612 — The user does not have access to update a protected location\
            \ note header"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            611 — The location note header\
            \ does not exist on the subscriber instance"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 — Object\
            \ reference not set to an instance of an object"
      summary: Add location notes
      tags:
      - Locations
      x-access: Subscribers
      x-codegen-request-body-name: locNoteHeaders
  /locations/UnassignedContracts:
    get:
      deprecated: false
      description: "Returns subscriber’s locations with open trades that have unassigned\
        \ providers.\r\n            <br /> ***Note***: Method could be outdated causing\
        \ faulty results."
      operationId: GETv3_locations_UnassignedContracts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetProviderAssignmentExtendedLocationsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetProviderAssignmentExtendedLocationsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetProviderAssignmentExtendedLocationsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetProviderAssignmentExtendedLocationsResponse'
          description: The requested locations are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content: {}
          description: The requested resource does not exist on the server.
      summary: Get unassigned contracts
      tags:
      - Locations
      x-access: Any
  /locations/{locationId}/evacuationmaps:
    get:
      deprecated: false
      description: "Returns evacuation plan map attachments details for the specified\
        \ location.\r\n            <br /> Visit ServiceChannel University to learn\
        \ about [Location Emergency Evacuation Plan Map(s)](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/710312376/Location+Emergency+Evacuation+Plan+Map+s)."
      operationId: "GETv3_locations_{locationId}_evacuationmaps"
      parameters:
      - description: Unique numeric identifier of the location to return the details
          for.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationAttachmentsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationAttachmentsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationAttachmentsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationAttachmentsResponse'
          description: Location evacuation plan maps are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Get an evacuation plan map of a location
      tags:
      - Locations
      x-access: Any
  /locations/CheckIfLocationIsOpen:
    get:
      deprecated: false
      description: "Returns information on the specified location if it is open or\
        \ closed now. If the `checkTime` parameter is not provided, the location is\
        \ checked at the current time.\r\n            <br /> Learn about [managing\
        \ business hours](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/683507788/Managing+Business+Hours)\
        \ in ServiceChannel University."
      operationId: "GETv3_locations_CheckIfLocationIsOpen?locationId={locationId}&checkTime={checkTime}"
      parameters:
      - description: Unique location identifier
        in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Date and time to check if the location is open
        in: query
        name: checkTime
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.CheckIfLocationIsOpenResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.CheckIfLocationIsOpenResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.CheckIfLocationIsOpenResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.CheckIfLocationIsOpenResponse'
          description: The location opening status is in the response.
      summary: Check whether the location is open or closed.
      tags:
      - Locations
      x-access: Any
  /subscribers/{subscriberId}/locationsinfo:
    get:
      deprecated: false
      description: "Performs search of locations based on the specified filters and\
        \ returns a list of locations with all details for the specified subscriber.\
        \ \r\n            <br /> ***Note***: This method is available to *Provider\
        \ Directory (aka Fixxbook)* users only."
      operationId: "GETv3_subscribers_{subscriberId}_locationsinfo?filterType={filterType}&searchString={searchString}"
      parameters:
      - description: Unique subscriber identifier.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: Filters a collection of resources by their type.
        in: query
        name: filterType
        schema:
          enum:
          - StoreId
          - Region
          - District
          - State
          - Country
          - County
          - City
          type: string
      - description: Returns resources based on the provided query string.
        in: query
        name: searchString
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The location details are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Retrieve location information
      tags:
      - Locations
      x-access: Any
  /locations/GetLocationsByFilterColumns:
    post:
      deprecated: false
      description: "Performs search of locations based on the filters specified in\
        \ the request and returns a list of locations with all details for the specified\
        \ subscriber.\r\n            <br /> ***Note***: This method is available to\
        \ *Provider Directory (aka Fixxbook)* users only."
      operationId: POSTv3_locations_GetLocationsByFilterColumns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.Locations.LocationFilterColumns'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.Locations.LocationFilterColumns'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.Locations.LocationFilterColumns'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.Locations.LocationFilterColumns'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.Locations.LocationFilterColumns'
        description: "Request parameters to filter the response. The `SubscriberId`\
          \ parameter is required. For the rest of the parameters, except for `Page`,\
          \ `CountPerPage`, several values can be added separated with a comma."
        required: true
      responses:
        "200":
          content: {}
          description: The requested locations are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     100 — User has no rights to perform this action\r\n            502\
            \ — The server, while acting as a gateway or proxy, received an invalid\
            \ response from the upstream server"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            504 - API call rejected\
            \ by security permissions"
      summary: Retrieve locations by filters
      tags:
      - Locations
      x-access: Any
      x-codegen-request-body-name: locationFilterColumns
  /GetFilteredLocations:
    post:
      deprecated: false
      description: Returns locations based on the filters applied.
      operationId: POSTv3_GetFilteredLocations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetFilteredLocationsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetFilteredLocationsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetFilteredLocationsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetFilteredLocationsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetFilteredLocationsRequest'
        description: "Request parameters to filter the response. Parameters can be\
          \ used separately, as a combination of several parameters, or all at once.\
          \ For the `LocationIds` and `StateIds` parameters, several values can be\
          \ entered separated with a comma.\r\n            <br />**Example Request**\r\
          \n            \r\n                POST /GetFilteredLocations\r\n       \
          \         {\r\n                 \"ProviderId\": 2000069665,\r\n        \
          \         \"LocationIds\": [\r\n                   2005862796, 2005901195\r\
          \n                 ],\r\n                 \"StateIds\": [\r\n          \
          \         30, 32\r\n                 ]\r\n                }"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationShortModel'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationShortModel'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationShortModel'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationShortModel'
                type: array
          description: The filtered locations are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes: \r\n      \
            \      502 — Subscriber not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes:\r\n\
            \            100 — User has no rights to perform this action"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 — Object\
            \ reference not set to an instance of an object"
      summary: Get locations by filters
      tags:
      - Locations
      x-access: Any
      x-codegen-request-body-name: request
  /locations/LocationWithNotes:
    post:
      deprecated: false
      description: "Create or update a location along with location notes.\r\n   \
        \         <br />**Note:** Method takes a dynamic list of parameters as input.\r\
        \n            <br />**Example request**\r\n            \r\n              \
        \  POST /locations/LocationWithNotes\r\n                {\r\n            \
        \     \"StoreId\":\"TestStore\",\r\n                 \"Name\": \"CSR Flagship\"\
        ,\r\n                 \"MainAddress\": \"18 E. 16th Street\",\r\n        \
        \         \"AddlAddress\": \"3rd Floor, Innovation Center\",\r\n         \
        \        \"Latitude\": 40.736601,\r\n                 \"Longitude\": -73.991795,\r\
        \n                 \"City\": \"New York\",\r\n                 \"State\":\
        \ \"NY\",\r\n                 \"Region\": \"Northeast\",\r\n             \
        \    \"District\": \"NYC/LI\",\r\n                 \"Zip\": \"10003\",\r\n\
        \                 \"Country\": \"US\",\r\n                 \"OpenDate\": \"\
        2021-07-03T00:10:00.308Z\",\r\n                 \"ClosedDate\": \"\",\r\n\
        \                 \"Email\": \"csrflagship@gmail.com\",\r\n              \
        \   \"Phone\": \"212-555-1212\",\r\n                 \"Contact\": \"\",\r\n\
        \                 \"FaxNumber\": \"\",\r\n                 \"YourLocationNoteHeader1\"\
        : \"Value1\",\r\n                 \"YourLocationNoteHeader2\": \"Value2\"\
        ,\r\n                 \"YourLocationNoteHeaderN\": \"ValueN\"\r\n        \
        \        }"
      operationId: POSTv3_locations_LocationWithNotes
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/System.Object'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/System.Object'
              type: object
          application/xml:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/System.Object'
              type: object
          text/xml:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/System.Object'
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/System.Object'
              type: object
        description: Request to create or update a location with location notes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.AddUpdateLocationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.AddUpdateLocationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.AddUpdateLocationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.AddUpdateLocationResponse'
          description: A new location is created or an existing one is updated. The
            location ID is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     606 — The `StoreId` value cannot be empty. The maximum length is\
            \ 50 characters.\r\n            611 — The location note header does not\
            \ exist on the subscriber instance.\r\n            612 — The user does\
            \ not have access to update a protected location note header.\r\n    \
            \        630 — Incorrect format of the 'ParameterName'.\r\n          \
            \  631 — The `City` value cannot be empty. The maximum length is 50 characters.\r\
            \n            632 — The `Zip` value cannot be empty. The maximum length\
            \ is 12 characters.\r\n            633 — Latitude value should be between\
            \ '-90' and '90'.\r\n            634 — Longitude value should be between\
            \ '-180' and '180'.\r\n            635 — Invalid Email.\r\n          \
            \  636 — The `Name` value cannot be empty. The maximum length is 100 characters.\r\
            \n            637 — Invalid `State` format. The maximum length is 2 characters.\r\
            \n            638 — Invalid `AddlAddress` format. The maximum length is\
            \ 500 characters.\r\n            639 — Invalid `MainAddress` format. The\
            \ maximum length is 500 characters.\r\n            640 — The `Country`\
            \ value cannot be empty. The maximum length is 20 characters.\r\n    \
            \        641 — Invalid `Region` format. The maximum length is 50 characters.\r\
            \n            642 — Invalid `District` format. The maximum length is 50\
            \ characters.\r\n            643 — Invalid `Phone` format. The maximum\
            \ length is 22 characters.\r\n            644 — Invalid `Contact` format.\
            \ The maximum length is 50 characters.\r\n            645 — Invalid `FaxNumber`\
            \ format. The maximum length is 22 characters.\r\n            646 — The\
            \ country doesn't exist.\r\n            647 — The state doesn't exist\
            \ in the country.\r\n            648 — The city doesn't exist in the country.\r\
            \n            650 — Invalid `Email` format. The maximum length is 200\
            \ characters.\r\n            1301 — Request is empty or null."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Create a location with location notes
      tags:
      - Locations
      x-access: Subscribers
      x-codegen-request-body-name: locationWithNotes
  /providers/GetProviderLocationAssignments:
    get:
      deprecated: false
      description: "Returns a list of stores with the LocationIDs and StoreIds, along\
        \ with the first contract (assignment) created date and whether the location\
        \ is primary or not.\r\n            <br />The method is available to providers\
        \ only."
      operationId: GETv3_providers_GetProviderLocationAssignments
      responses:
        "200":
          content: {}
          description: The provider location assignments are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Get provider location assignments
      tags:
      - Locations
      x-access: Any
  /providers/GetPrimaryLocationAssignmentsForProviderIds:
    get:
      deprecated: false
      operationId: "GETv3_providers_GetPrimaryLocationAssignmentsForProviderIds?providerIds[0]={providerIds[0]}&providerIds[1]={providerIds[1]}&dateFrom={dateFrom}&dateTo={dateTo}"
      parameters:
      - description: An array of Provider Ids.
        explode: true
        in: query
        name: providerIds
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: The start date of the time period for which you want to retrieve
          location assignments. The format is `YYYY-MM-DDThh:mm:ss.ssZ`.
        in: query
        name: dateFrom
        required: true
        schema:
          format: date-time
          type: string
      - description: The end date of the time period for which you want to retrieve
          location assignments. The format is `YYYY-MM-DDThh:mm:ss.ssZ`
        in: query
        name: dateTo
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content: {}
          description: The providers location assignments are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Get provider primary location assignments by Provider Ids
      tags:
      - Locations
      x-access: Any
  /GetLocationsMobile:
    get:
      deprecated: false
      operationId: "GETv3_GetLocationsMobile?page={page}&pageSize={pageSize}&latitude={latitude}&longitude={longitude}&searchExpression={searchExpression}&onlyOpened={onlyOpened}"
      parameters:
      - description: Number of the current page
        in: query
        name: page
        required: true
        schema:
          format: int32
          type: integer
      - description: Limit to return items
        in: query
        name: pageSize
        required: true
        schema:
          format: int32
          type: integer
      - description: The latitude of the user location
        in: query
        name: latitude
        schema:
          format: double
          type: number
      - description: The longitude of the user location
        in: query
        name: longitude
        schema:
          format: double
          type: number
      - description: User input text
        in: query
        name: searchExpression
        schema:
          type: string
      - description: Include only open locations
        in: query
        name: onlyOpened
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsMobileResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsMobileResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsMobileResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsMobileResponse'
          description: The requested locations are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            401 — User has no permissions to perform this action"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error. \r\n            <br/>Error codes:\r\n            501 — Value\
            \ of pageSize or page is less than 1"
      summary: Get Locations
      tags:
      - Locations
      x-access: Any
  /GetLocationDistricts:
    get:
      deprecated: false
      operationId: "GETv3_GetLocationDistricts?page={page}&pageSize={pageSize}&searchExpression={searchExpression}"
      parameters:
      - description: Number of the current page
        in: query
        name: page
        required: true
        schema:
          format: int32
          type: integer
      - description: Limit to return items
        in: query
        name: pageSize
        required: true
        schema:
          format: int32
          type: integer
      - description: User input text
        in: query
        name: searchExpression
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationDistrictsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationDistrictsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationDistrictsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationDistrictsResponse'
          description: The requested districts are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            401 — User has no permissions to perform this action"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error. \r\n            <br/>Error codes:\r\n            501 — Value\
            \ of pageSize or page is less than 1"
      summary: Get location districts
      tags:
      - Locations
      x-access: Any
  /locations/addressformats:
    get:
      deprecated: false
      description: "Returns a list of address types (Id, Pattern)."
      operationId: "GETv3_locations_addressformats?c[0]={c[0]}&c[1]={c[1]}&id[0]={id[0]}&id[1]={id[1]}"
      parameters:
      - explode: true
        in: query
        name: c
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.AddressType'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.AddressType'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.AddressType'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.AddressType'
                type: array
          description: The requested address types with patterns are in the response.
      summary: Retrieve address format pattern per list of country ISO codes or per
        list of address types Ids
      tags:
      - Locations
      x-access: Any
  /providers/GetProviderAssignmentsForLocationsAndTrades:
    post:
      deprecated: false
      description: "Returns a list of provider assignments.\r\n            <br />The\
        \ method is available to subscribers only."
      operationId: POSTv3_providers_GetProviderAssignmentsForLocationsAndTrades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.Locations.LocationProviderAssignmentsFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.Locations.LocationProviderAssignmentsFilter'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.Locations.LocationProviderAssignmentsFilter'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.Locations.LocationProviderAssignmentsFilter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.Locations.LocationProviderAssignmentsFilter'
        description: "Request parameters to filter the response (maximum number of\
          \ locations: 200, maximum number of trades: 30)."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationProviderAssignmentsResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationProviderAssignmentsResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationProviderAssignmentsResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationProviderAssignmentsResponse'
                type: array
          description: The requested locations are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  1301 — Request is empty or null.\r\n            1302 — Too many parameters.\r\
            \n            1303 — The list of location ids or the list of trade names\
            \ is empty."
      summary: Retrieve Provider Assignments by locations and trades
      tags:
      - Locations
      x-access: Subscribers
      x-codegen-request-body-name: assignmentsFilter
  /filter:
    post:
      deprecated: false
      description: Returns a list of locations.
      operationId: POSTv3_filter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsByFilterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsByFilterRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsByFilterRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsByFilterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLocationsByFilterRequest'
        description: Request parameters to filter the response.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetApiLocationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetApiLocationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetApiLocationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetApiLocationResponse'
          description: The requested locations are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  655 — Location Ids List is empty or null."
      summary: Retrieve Locations by location ids
      tags:
      - Locations
      x-access: Any
      x-codegen-request-body-name: locationFilter
  /landlord-responsibilities:
    get:
      deprecated: false
      operationId: "GETv3_landlord-responsibilities?storeId={storeId}"
      parameters:
      - in: query
        name: storeId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLandlordResponsibilityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLandlordResponsibilityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLandlordResponsibilityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.GetLandlordResponsibilityResponse'
          description: The requested locations are in the response.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "User is not assigned to Location \r\n                <br/>Error\
            \ codes:\r\n                100 — User has no permissions to perform this\
            \ action."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Location is not found\r\n                <br/>Error codes:\r\
            \n                651 — Location is not found."
      summary: Get landlord responsibilities
      tags:
      - Locations
      x-access: Subscribers
    post:
      deprecated: false
      operationId: POSTv3_landlord-responsibilities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.CreateLandlordResponsibilityApiRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.CreateLandlordResponsibilityApiRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.CreateLandlordResponsibilityApiRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.CreateLandlordResponsibilityApiRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.CreateLandlordResponsibilityApiRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LandlordResponsibilityModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LandlordResponsibilityModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LandlordResponsibilityModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LandlordResponsibilityModel'
          description: The Landlord Responsibility are created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n                <br/>Error codes:\r\n      \
            \          1301 — Request is empty or null\r\n                503 — Failed\
            \ to create landlord responsibility\r\n                656 — The combination\
            \ of Location Trade and Category must be unique\r\n                659\
            \ — Invalid Trade Id\r\n                660 — Invalid Category Id\r\n\
            \                661 — Invalid Override Category Id\r\n              \
            \  662 — Invalid Override PriorityId\r\n                663 — Lease Note\
            \ can not exceed 200 characters\r\n                664 — Invalid override\
            \ provider rank\r\n                665 — Invalid override NTE"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "User is not assigned to Location \r\n                <br/>Error\
            \ codes:\r\n                804 — User is not assigned to Location."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Invalid Store Id\r\n                <br/>Error codes:\r\n\
            \                606 — Invalid Store Id."
      summary: Create landlord responsibility
      tags:
      - Locations
      x-access: Subscribers
      x-codegen-request-body-name: apiRequest
    put:
      deprecated: false
      operationId: PUTv3_landlord-responsibilities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.UpdateLandlordResponsibilityApiRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.UpdateLandlordResponsibilityApiRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.UpdateLandlordResponsibilityApiRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.UpdateLandlordResponsibilityApiRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.UpdateLandlordResponsibilityApiRequest'
        required: true
      responses:
        "201":
          content: {}
          description: The Landlord Responsibility are updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n                <br/>Error codes:\r\n      \
            \          1301 — Request is empty or null\r\n                503 — Failed\
            \ to create landlord responsibility\r\n                655 — Landlord\
            \ responsibility is not found\r\n                656 — The combination\
            \ of Location Trade and Category must be unique\r\n                659\
            \ — Invalid Trade name\r\n                660 — Invalid Category name\r\
            \n                661 — Invalid Override Category name\r\n           \
            \     662 — Invalid Override Priority name\r\n                663 — Lease\
            \ Note can not exceed 200 characters\r\n                664 — Invalid\
            \ override provider rank\r\n                665 — Invalid override NTE"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "User is not assigned to Location \r\n                <br/>Error\
            \ codes:\r\n                804 — User is not assigned to Location."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Invalid Store Id\r\n                <br/>Error codes:\r\n\
            \                606 — Invalid Store Id."
      summary: Update Landlord Responsibility
      tags:
      - Locations
      x-access: Subscribers
      x-codegen-request-body-name: apiRequest
  /landlord-responsibilities/{responsibilityId}:
    delete:
      deprecated: false
      operationId: "DELETEv3_landlord-responsibilities_{responsibilityId}"
      parameters:
      - in: path
        name: responsibilityId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: The landlord responsibility is deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n                <br/>Error codes:\r\n      \
            \          655 — Landlord responsibility is not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "User is not assigned to Location \r\n                <br/>Error\
            \ codes:\r\n                804 — User is not assigned to Location."
      summary: Delete Landlord Responsibility
      tags:
      - Locations
      x-access: Subscribers
  /locations/{storeId}/attachments:
    get:
      deprecated: false
      description: Returns a list of attachments.
      operationId: "GETv3_locations_{storeId}_attachments"
      parameters:
      - in: path
        name: storeId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationAttachment'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationAttachment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationAttachment'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationAttachment'
                type: array
          description: The requested attachments are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "User is not assigned to Location \r\n                <br/>Error\
            \ codes:\r\n                804 — User is not assigned to Location."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Invalid StoreID\r\n                <br/>Error codes:\r\n \
            \               606 — Invalid StoreID."
      summary: Get a Location’s Attachments
      tags:
      - Locations
      x-access: Any
    post:
      deprecated: false
      operationId: "POSTv3_locations_{storeId}_attachments?fileDescription={fileDescription}&isEvacuationPlan={isEvacuationPlan}"
      parameters:
      - in: path
        name: storeId
        required: true
        schema:
          type: string
      - in: query
        name: fileDescription
        schema:
          type: string
      - in: query
        name: isEvacuationPlan
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POSTv3_locations__storeId__attachments_fileDescription__fileDescription__isEvacuationPlan__isEvacuationPlan__request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationAttachment'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationAttachment'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationAttachment'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationAttachment'
          description: Created indicates that the attachment created before the response
            was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "User is not assigned to Location \r\n                <br/>Error\
            \ codes:\r\n                804 — User is not assigned to Location."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Invalid StoreID\r\n                <br/>Error codes:\r\n \
            \               606 — Invalid StoreID."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Create a Location Attachment
      tags:
      - Locations
      x-access: Any
  /locations/{storeId}/attachments/{attachmentId}:
    delete:
      deprecated: false
      operationId: "DELETEv3_locations_{storeId}_attachments_{attachmentId}"
      parameters:
      - in: path
        name: storeId
        required: true
        schema:
          type: string
      - in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: The attachment is deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "User is not assigned to Location \r\n                <br/>Error\
            \ codes:\r\n                804 — User is not assigned to Location."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Invalid StoreID\r\n                <br/>Error codes:\r\n \
            \               606 — Invalid StoreID."
      summary: Delete a Location Attachment
      tags:
      - Locations
      x-access: Any
  /locationsupply:
    delete:
      deprecated: false
      operationId: "DELETEv3_locationsupply?LocationId={LocationId}&TruckId={TruckId}"
      parameters:
      - in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - in: query
        name: truckId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - LocationSupply
      x-access: Any
    get:
      deprecated: false
      operationId: "GETv3_locationsupply?LocationId={LocationId}&TruckId={TruckId}"
      parameters:
      - in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - in: query
        name: truckId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - LocationSupply
      x-access: Any
    post:
      deprecated: false
      operationId: POSTv3_locationsupply
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.LocationSupply.LocationSupply'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.LocationSupply.LocationSupply'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.LocationSupply.LocationSupply'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.LocationSupply.LocationSupply'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.LocationSupply.LocationSupply'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - LocationSupply
      x-access: Any
      x-codegen-request-body-name: locationSupply
    put:
      deprecated: false
      operationId: "PUTv3_locationsupply?LocationId={LocationId}&TruckId={TruckId}"
      parameters:
      - in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - in: query
        name: truckId
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.LocationSupply.Location'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.LocationSupply.Location'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.LocationSupply.Location'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.LocationSupply.Location'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.LocationSupply.Location'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - LocationSupply
      x-access: Any
      x-codegen-request-body-name: supplyLocations
  /mliConfiguration/Levels:
    get:
      deprecated: false
      description: "Returns IDs and names of all MLI levels of the current subscriber.\r\
        \n            <br />Learn more about [MLI levels configuration](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/601555312/Configuring+MLI+Levels)\
        \ in ServiceChannel University."
      operationId: GETv3_mliConfiguration_Levels
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.MliConfiguration.Api.MLILevel'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.MliConfiguration.Api.MLILevel'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.MliConfiguration.Api.MLILevel'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.MliConfiguration.Api.MLILevel'
                type: array
          description: MLI levels are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/> Error\
            \ codes:\r\n            504 — API call rejected by security permissions"
      summary: Get MLI levels
      tags:
      - MliConfiguration
      x-access: Any
  /mliConfiguration/Levels/{levelId}/Users:
    get:
      deprecated: false
      description: "Returns the users assigned to the specified level. The response\
        \ body is empty if no user has been assigned to this level.\r\n          \
        \  <br />You can use the [GET /mliConfiguration/Levels](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/GETv3_mliConfiguration_Levels)\
        \ method to get the MLI levels IDs. Send the [POST /MliConfiguration/Levels/{levelId}/Users/{userId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/POSTv3_MliConfiguration_Levels__levelId__Users__userId_)\
        \ request to assign users to the MLI level."
      operationId: "GETv3_mliConfiguration_Levels_{levelId}_Users"
      parameters:
      - description: Numeric identifier of the MLI level.
        in: path
        name: levelId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.User.Api.AssignedUser'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.User.Api.AssignedUser'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.User.Api.AssignedUser'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.User.Api.AssignedUser'
                type: array
          description: The users assigned to the specified MLI level are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/> Error codes:\r\n      \
            \      1128 — Approval levels getting error"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/> Error\
            \ codes:\r\n            504 — API call rejected by security permissions"
      summary: Get MLI level users
      tags:
      - MliConfiguration
      x-access: Any
  /MliConfiguration/Levels/{levelId}/Users/{userId}:
    post:
      deprecated: false
      description: "Assigns a user to an existing MLI level. Get users’ IDs by sending\
        \ the [GET /users](https://developer.servicechannel.com/swagger/ui/index?version=3#/Users/GETv3_users_subscriberId__subscriberId__startIndex__startIndex__maxCount__maxCount_)\
        \ request.\r\n            <br />You can assign a user to an existing location\
        \ by using the [POST /MliConfiguration/Levels/{levelId}/Users/{userId}/Locations/{locationId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/POSTv3_MliConfiguration_Levels__levelId__Users__userId__Locations__locationId_)\
        \ method.\r\n            <br />***Note***: Each user can be added to only\
        \ one MLI level. If a user should be assigned to another MLI level, you first\
        \ need to [remove this user from the MLI level](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/DELETEv3_mliConfiguration_Levels__levelId__Users__userId_)\
        \ they currently belong to."
      operationId: "POSTv3_MliConfiguration_Levels_{levelId}_Users_{userId}"
      parameters:
      - description: Numeric identifier of the MLI level.
        in: path
        name: levelId
        required: true
        schema:
          format: int32
          type: integer
      - description: Unique numeric identifier of the user.
        in: path
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Returns the created user ID from table dat_Division_User.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/> Error codes:\r\n      \
            \      1129 — Err: failed to assign users\r\n            1131 — Err: Approval\
            \ level doesn’t exist\r\n            1149 — User has already been assigned\
            \ to another level\r\n            1150 — User does not exist"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/> Error\
            \ codes:\r\n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/> Error codes:\r\n\
            \            100 — User has no rights to perform this action"
      summary: Add a user to an MLI level
      tags:
      - MliConfiguration
      x-access: Any
  /mliConfiguration/Levels/{levelId}/Users/{userId}:
    delete:
      deprecated: false
      description: "Removes the specified user from a particular MLI level. To unassign\
        \ a user from an existing location, send the [DELETE /MliConfiguration/Levels/{levelId}/Users/{userId}/Locations/{locationId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/DELETEv3_MliConfiguration_Levels__levelId__Users__userId__Locations__locationId_)\
        \ request."
      operationId: "DELETEv3_mliConfiguration_Levels_{levelId}_Users_{userId}"
      parameters:
      - description: Numeric identifier of the MLI level.
        in: path
        name: levelId
        required: true
        schema:
          format: int32
          type: integer
      - description: Unique numeric identifier of the user.
        in: path
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: The specified user is successfully removed from the MLI level.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/> Error codes:\r\n      \
            \      1130 — Err: Approval level doesn’t exist\r\n            1130 —\
            \ User is not assigned to the level\r\n            1150 — User does not\
            \ exist"
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/> Error\
            \ codes:\r\n            504 — API call rejected by security permissions"
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/> Error codes:\r\n\
            \            100 — User has no rights to perform this action"
      summary: Remove a user from an MLI level
      tags:
      - MliConfiguration
      x-access: Any
  /MliConfiguration/Levels/{levelId}/Users/{userId}/Locations/{locationId}:
    delete:
      deprecated: false
      description: "Removes the specified location from a particular user and MLI\
        \ level. To assign a location to a user and MLI level, send the [POST /MliConfiguration/Levels/{levelId}/Users/{userId}/Locations/{locationId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/POSTv3_MliConfiguration_Levels__levelId__Users__userId__Locations__locationId_)\
        \ request."
      operationId: "DELETEv3_MliConfiguration_Levels_{levelId}_Users_{userId}_Locations_{locationId}"
      parameters:
      - description: Numeric identifier of the MLI level.
        in: path
        name: levelId
        required: true
        schema:
          format: int32
          type: integer
      - description: Unique numeric identifier of the user.
        in: path
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      - description: Unique numeric identifier of the location.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: The specified location is successfully removed from the user’s
            MLI level.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/> Error codes:\r\n      \
            \      1130 — Location is not assigned to the user\r\n            1130\
            \ — Approval level doesn’t exist\r\n            1130 — User is not assigned\
            \ to the level\r\n            1130 — Location doesn’t exist for the current\
            \ subscriber\r\n            1150 — User doesn’t exist\r\n            1301\
            \ — Request parameters are empty"
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/> Error\
            \ codes:\r\n            504 — API call rejected by security permissions"
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/> Error codes:\r\n\
            \            100 — User has no rights to perform this action"
      summary: Remove a location from a user’s MLI level
      tags:
      - MliConfiguration
      x-access: Any
    post:
      deprecated: false
      description: "Assigns the specified location to a particular user and user’\
        s MLI level. A location can be removed from a user by sending the [DELETE\
        \ /MliConfiguration/Levels/{levelId}/Users/{userId}/Locations/{locationId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/MliConfiguration/DELETEv3_MliConfiguration_Levels__levelId__Users__userId__Locations__locationId_)\
        \ request."
      operationId: "POSTv3_MliConfiguration_Levels_{levelId}_Users_{userId}_Locations_{locationId}"
      parameters:
      - description: Numeric identifier of the MLI level.
        in: path
        name: levelId
        required: true
        schema:
          format: int32
          type: integer
      - description: Unique numeric identifier of the user.
        in: path
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      - description: Unique numeric identifier of the location.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Returns the created location ID from table dat_Location_Division.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/> Error codes:\r\n      \
            \      1128 — Err: Approval level doesn’t exist\r\n            1130 —\
            \ Failed to assign the location to the user\r\n            1130 — User\
            \ is not assigned to the level\r\n            1130 — Err: Failed to assign\
            \ locations to the approval level\r\n            1130 — Location doesn’\
            t exist for the current subscriber\r\n            1150 — User does not\
            \ exist\r\n            1301 — Request parameters are empty"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/> Error\
            \ codes:\r\n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/> Error codes:\r\n\
            \            100 — User has no rights to perform this action"
      summary: Add a location to a user’s MLI level
      tags:
      - MliConfiguration
      x-access: Any
  /monitoring/CheckStorageAvalaibility:
    get:
      deprecated: false
      operationId: GETv3_monitoring_CheckStorageAvalaibility
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: This method checks the availability of files on the storage
      tags:
      - Monitoring
      x-access: Any
  /negotiatedpricelists/negotiatedpricelists:
    get:
      deprecated: false
      operationId: "GETv3_negotiatedpricelists_negotiatedpricelists?priceListName={priceListName}&providerId={providerId}&locationId={locationId}&applyDatesFilter={applyDatesFilter}&isReturnDeleted={isReturnDeleted}"
      parameters:
      - description: Unique Price List Identifier
        in: query
        name: priceListName
        schema:
          type: string
      - description: Unique Provider Identifier
        in: query
        name: providerId
        schema:
          format: int32
          type: integer
      - description: Unique Location Identifier
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: "true: Current date between priceList.EffectiveDate and priceList.ExpirationDate;\
          \ false: date filter is disabled"
        in: query
        name: applyDatesFilter
        schema:
          default: false
          type: boolean
      - description: Return deleted items PriceList Parts and PriceList Other Charges
        in: query
        name: isReturnDeleted
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.NegotiatedPriceList.NegotiatedPriceList'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.NegotiatedPriceList.NegotiatedPriceList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.NegotiatedPriceList.NegotiatedPriceList'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.NegotiatedPriceList.NegotiatedPriceList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     401 — Invalid subsriber ID\r\n            804 — User has no permissions\
            \ to perform this action"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The requested resource does not exist on the server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Get negotiated pricelists
      tags:
      - NegotiatedPriceLists
      x-access: Subscribers
  /workorders/{workorderId}/notes:
    get:
      deprecated: false
      description: "Returns list of work order notes, sorted descending by creation\
        \ date."
      operationId: "GETv3_workorders_{workorderId}_notes?paging={paging}"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Paging of the collection. Format of the string is: 'pageNumber:pageSize',\
          \ be advised that pageNumber starts with 1 not 0 Default: \"1:10\".\r\n\
          \            To get all notes specify page size as some big number which\
          \ is 100% bigger then total notes count (9999 works for all cases) and page\
          \ number as 1."
        in: query
        name: paging
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.GetNotesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.GetNotesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.GetNotesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.GetNotesResponse'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 917 - Invalid work order identifier. Returned if workorderId\
            \ is &lt;= 0;\r\n            <br/> 922 - Invalid paging parameter. Returned\
            \ if paging parameter doesn't correspond to valid format;\r\n        \
            \    <br/> 100 - You don't have location access to perform this operation;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Unauthorized indicates that the requested resource requires
            authentication.<br>Error codes:<br> 504 - API call rejected by security
            permissions;
      summary: Work order Notes Collection
      tags:
      - Notes
      x-access: Any
    post:
      deprecated: false
      description: Returns Note Id for successful request.
      operationId: "POSTv3_workorders_{workorderId}_notes"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoNoteRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoNoteRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoNoteRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoNoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoNoteRequest'
        description: The note request model.
        required: true
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - You don't have location access to perform this operation;\r\
            \n            <br/> 503 - Validation fails. Invalid WorkOrder Id or Note\
            \ value;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Create a Work order Note
      tags:
      - Notes
      x-access: Any
      x-codegen-request-body-name: noteRequest
  /workorders/{workorderId}/notes/recipients:
    get:
      deprecated: false
      description: "<para>List of email recipients, who can be added to the list of\
        \ note followers</para>"
      operationId: "GETv3_workorders_{workorderId}_notes_recipients?showExcluded={showExcluded}&noteVisibility={noteVisibility}"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: "If set to true, returns all recipients even those that have\
          \ 'exclude from note recipient' flag in their setup. False by Default."
        in: query
        name: showExcluded
        schema:
          default: false
          type: boolean
      - description: NoteVisibility.Public is used by default
        in: query
        name: noteVisibility
        schema:
          enum:
          - VisibleToEveryone
          - VisibleToProvider
          - VisibleToClient
          - NotVisible
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse'
                type: array
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 917 - Invalid work order identifier. Returned if workorderId\
            \ is &lt;= 0;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
        "404":
          content: {}
          description: The requested resource does not exist on the server.
      summary: Note email recipients
      tags:
      - Notes
      x-access: Any
  /workorders/{workorderId}/notes/followers:
    delete:
      deprecated: false
      description: <para>Remove Follower from Work order.</para>
      operationId: "DELETEv3_workorders_{workorderId}_notes_followers?email={email}"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The follower email address.
        in: query
        name: email
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.<br>Error codes:<br>503 - Request data is empty;<br>There
            is no followers in request;<br>Empty tracking number (workorder Id);
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Remove Follower from Work order notes
      tags:
      - Notes
      x-access: Any
    post:
      deprecated: false
      description: <para>Add Followers to Work order.</para>
      operationId: "POSTv3_workorders_{workorderId}_notes_followers"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest'
        description: The request model to perform action with.
        required: true
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.<br>Error codes:<br>503 - Request data is empty;<br>There
            is no followers in request;<br>Empty tracking number (workorder Id);
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Add Followers to Work order notes
      tags:
      - Notes
      x-access: Any
      x-codegen-request-body-name: request
  /NotificationSubscriptions/Http:
    get:
      deprecated: false
      description: Returns a list of subscriptions for the current subscriber or provider.
      operationId: GETv3_NotificationSubscriptions_Http
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription'
                type: array
          description: The subscriptions are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: List existing subscriptions
      tags:
      - NotificationSubscriptions
      x-access: Any
    post:
      deprecated: false
      description: "Creates a new subscription to the specified [event types](https://developer.servicechannel.com/guides/wh/types-of-events/).\
        \ Returns a unique subscription ID for a successful request.\r\n         \
        \   See [Event Objects](https://developer.servicechannel.com/guides/wh/event-objects/)\
        \ for example notification objects and descriptions of their fields.\r\n \
        \           <br />**Example Request**\r\n            \r\n                POST\
        \ /NotificationSubscriptions/Http\r\n                {\r\n               \
        \   \"Url\": \"https://your-company.com/webhook-target-URL\",\r\n        \
        \          \"Enabled\": true,\r\n                  \"Name\": \"Subscription\
        \ to new WOs\",\r\n                  \"EventTypes\": [\r\n               \
        \     \"WorkOrderCreated\"\r\n                  ],\r\n                  \"\
        Rules\": {\r\n                    \"Trades\": [\r\n                      \"\
        GLASS\"\r\n                    ],\r\n                    \"Categories\": [\r\
        \n                      \"MAINTENANCE\"\r\n                    ]\r\n     \
        \             }\r\n                }"
      operationId: POSTv3_NotificationSubscriptions_Http
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.AddHttpNotificationSubscriptionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.AddHttpNotificationSubscriptionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.AddHttpNotificationSubscriptionRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.AddHttpNotificationSubscriptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.AddHttpNotificationSubscriptionRequest'
        description: The subscription object that needs to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.AddNotificationSubsciptionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.AddNotificationSubsciptionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.AddNotificationSubsciptionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.AddNotificationSubsciptionResponse'
          description: The subscription is created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 - Required data missing or incorrect"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: Create a subscription
      tags:
      - NotificationSubscriptions
      x-access: Any
      x-codegen-request-body-name: req
  /NotificationSubscriptions/Http/{id}:
    delete:
      deprecated: false
      description: Permanently deletes the specified subscription. It cannot be undone.
      operationId: "DELETEv3_NotificationSubscriptions_Http_{id}"
      parameters:
      - description: The unique ID of the subscription to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: "The subscription is deleted, and the response is intentionally\
            \ blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested data are not found.\r\n            <br/>Error\
            \ codes:\r\n            502 - Subscription not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: Delete a subscription
      tags:
      - NotificationSubscriptions
      x-access: Any
    get:
      deprecated: false
      description: Retrieves the details of the specified subscription.
      operationId: "GETv3_NotificationSubscriptions_Http_{id}"
      parameters:
      - description: The unique ID of the subscription to return.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription'
          description: The requested subscription is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested data are not found.\r\n            <br/>Error\
            \ codes:\r\n            502 - Subscription not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: Get a subscription
      tags:
      - NotificationSubscriptions
      x-access: Any
    put:
      deprecated: false
      description: "Updates the specified subscription by setting the values of the\
        \ parameters passed.\r\n            <br />**Example Request**\r\n        \
        \    \r\n                PUT /NotificationSubscriptions/Http/{id}\r\n    \
        \            {\r\n                  \"Id\": 1111,\r\n                  \"\
        Url\": \"https://your-company.com/webhook-target-URL\",\r\n              \
        \    \"Enabled\": true,\r\n                  \"Name\": \"Subscription to new\
        \ WOs\",\r\n                  \"EventTypes\": [\r\n                    \"\
        WorkOrderCreated\"\r\n                  ],\r\n                  \"Rules\"\
        : {\r\n                    \"Trades\": [\r\n                      \"GLASS\"\
        \r\n                    ],\r\n                    \"Categories\": [\r\n  \
        \                    \"MAINTENANCE\"\r\n                    ]\r\n        \
        \          }\r\n                }"
      operationId: "PUTv3_NotificationSubscriptions_Http_{id}"
      parameters:
      - description: The unique ID of the subscription to update.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription'
        description: The subscription object that needs to be updated.
        required: true
      responses:
        "204":
          content: {}
          description: "The subscription is updated, and the response is intentionally\
            \ blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 - Subscription not found\r\n            503 - Required data\
            \ missing or incorrect"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: Update a subscription
      tags:
      - NotificationSubscriptions
      x-access: Any
      x-codegen-request-body-name: req
  /NotificationSubscriptions/msteams:
    get:
      deprecated: false
      description: Retrieves the details of the specified subscription.
      operationId: "GETv3_NotificationSubscriptions_msteams?conversationId={conversationId}"
      parameters:
      - description: Conversation Identifier.
        in: query
        name: conversationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.MSBotNotificationSubscriptionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.MSBotNotificationSubscriptionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.MSBotNotificationSubscriptionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.MSBotNotificationSubscriptionResponse'
          description: The requested subscription is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested data are not found.\r\n            <br/>Error\
            \ codes:\r\n            502 - Subscription not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: Get MSTeams Subscription
      tags:
      - NotificationSubscriptions
      x-access: Any
  /NotificationSubscriptions:
    post:
      deprecated: false
      description: "Creates a new Subscription. Returns a unique subscription ID for\
        \ a successful request.\r\n            See [Event Objects](https://developer.servicechannel.com/guides/wh/event-objects/)\
        \ for example notification objects and descriptions of their fields.\r\n \
        \           <br />**Example Request**\r\n            \r\n                POST\
        \ /NotificationSubscriptions/Subscribe\r\n                {\r\n          \
        \        \"Name\": \"New Subscription\",\r\n                  \"IsEnabled\"\
        : true,\r\n                  \"Type\": \"MSBot\",\r\n                  \"\
        Content\": \r\n                  {\r\n                    \"ConversationId\"\
        :\"a:1aV4BNOWtTdqJhkdgsdfhsdfhsgjdfgjdrtydjyj\",\r\n                    \"\
        TenantId\":\"1111111-1111-1111-1111-111111111111\",\r\n                  \
        \  \"UserId\":\"29:1oTNViX5ByDxfsgdfgsdhgjlnkkli\",\r\n                  \
        \  \"UserName\":\"First Last\",\r\n                    \"ServiceUrl\":\"https://smba.trafficmanager.net/amer/\"\
        \r\n                  }\r\n                }"
      operationId: POSTv3_NotificationSubscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionRequest'
        description: The subscription object that needs to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.AddNotificationSubsciptionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.AddNotificationSubsciptionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.AddNotificationSubsciptionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.AddNotificationSubsciptionResponse'
          description: The subscription is created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     2105 - Operation is not allowed.\r\n            503 - Required data\
            \ missing or incorrect"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: Subscribe to Notification
      tags:
      - NotificationSubscriptions
      x-access: Any
      x-codegen-request-body-name: request
  /NotificationSubscriptions/{id}:
    delete:
      deprecated: false
      description: Permanently deletes the specified subscription. It cannot be undone.
      operationId: "DELETEv3_NotificationSubscriptions_{id}?type={type}"
      parameters:
      - description: The unique ID of the subscription.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: type of the subscription.
        in: query
        name: type
        required: true
        schema:
          enum:
          - MSTeams
          type: string
      responses:
        "204":
          content: {}
          description: "The subscription is deleted, and the response is intentionally\
            \ blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested data are not found.\r\n            <br/>Error\
            \ codes:\r\n            2105 - Operation is not allowed.\r\n         \
            \   502 - Subscription not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: UnSubscribe
      tags:
      - NotificationSubscriptions
      x-access: Any
  /NotificationSubscriptions/SigningKey:
    get:
      deprecated: false
      description: "Retrieves the current subscriber's or provider's signing key.\r\
        \n            A signing key is used to generate event signatures. Use your\
        \ key to [verify that notifications are sent by SC](https://developer.servicechannel.com/guides/wh/receive-events-and-respond/#verify-an-event)."
      operationId: GETv3_NotificationSubscriptions_SigningKey
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.SigningKeyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.SigningKeyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.SigningKeyResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.SigningKeyResponse'
          description: The signing key is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: Get a signing key
      tags:
      - NotificationSubscriptions
      x-access: Any
    put:
      deprecated: false
      description: Regenerates the current subscriber's or provider's signing key.
        The previous signing key becomes invalid.
      operationId: PUTv3_NotificationSubscriptions_SigningKey
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.SigningKeyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.SigningKeyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.SigningKeyResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.SigningKeyResponse'
          description: The new signing key is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: Regenerate a signing key
      tags:
      - NotificationSubscriptions
      x-access: Any
  /GetProvidersExclusionList:
    get:
      deprecated: false
      description: List providers who opted out to not receive the notifications
      operationId: "GETv3_GetProvidersExclusionList?emailNotificationType={emailNotificationType}"
      parameters:
      - description: 1 - Declined WO; 2 - WO Assigned to User; 4 - ETA Missed; 5 -
          LNH Autocopy
        in: query
        name: emailNotificationType
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Permission.ProvidersExclusionListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Permission.ProvidersExclusionListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Permission.ProvidersExclusionListResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Permission.ProvidersExclusionListResponse'
          description: The requested providers are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     401 — Invalid subsriber ID\r\n            804 — User has no permissions\
            \ to perform this action"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The requested resource does not exist on the server.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Get providers exclusion list
      tags:
      - NotificationSubscriptions
      x-access: Any
  /NotificationWebHooks:
    get:
      deprecated: false
      description: Returns a list of webhooks for the current subscriber or provider.
      operationId: GETv3_NotificationWebHooks
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook'
                type: array
          description: The webhooks are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: List existing webhooks
      tags:
      - NotificationWebHooks
      x-access: Any
    post:
      deprecated: false
      description: "Creates a new webhook for the specified [event types](https://developer.servicechannel.com/guides/wh/types-of-events/).\
        \ Returns a unique webhook ID for a successful request.\r\n            See\
        \ [Event Objects](https://developer.servicechannel.com/guides/wh/event-objects/)\
        \ for example notification objects and descriptions of their fields.\r\n \
        \           <br />***Note:*** You can create webhooks using API or via the\
        \ [Service Automation Admin](https://developer.servicechannel.com/guides/wh/create-and-manage-webhooks-in-UI/).\r\
        \n            <br />**Example Request**\r\n            \r\n              \
        \  POST /NotificationWebHooks\r\n                {\r\n                  \"\
        Subscriptions\": [\r\n                    {\r\n                      \"Name\"\
        : \"Subscription to new WOs\",\r\n                      \"EventTypes\": [\r\
        \n                        \"WorkOrderCreated\"\r\n                      ],\r\
        \n                      \"Rules\": {\r\n                        \"Trades\"\
        : [\r\n                          \"GLASS\"\r\n                        ],\r\
        \n                        \"Categories\": [\r\n                          \"\
        MAINTENANCE\"\r\n                        ],\r\n                        \"\
        Statuses\": [\r\n                          \"COMPLETED/CONFIRMED\"\r\n   \
        \                     ]\r\n                      }\r\n                   \
        \ }\r\n                  ],\r\n                  \"Enabled\": true,\r\n  \
        \                \"Name\": \"New WO webhook\",\r\n                  \"Description\"\
        : \"I want to receive notifications when new WOs of GLASS trade and MAINTENANCE\
        \ category are created.\",\r\n                  \"Url\": \"https://your-company.com/webhook-target-URL\"\
        \r\n                }"
      operationId: POSTv3_NotificationWebHooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookRequest'
        description: The webhook object that needs to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookResponse'
          description: The webhook is created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 - Required data missing or incorrect"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: Create a webhook
      tags:
      - NotificationWebHooks
      x-access: Any
      x-codegen-request-body-name: req
  /NotificationWebHooks/{id}:
    delete:
      deprecated: false
      description: Permanently deletes the specified webhook. It cannot be undone.
      operationId: "DELETEv3_NotificationWebHooks_{id}"
      parameters:
      - description: The unique ID of the webhook to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: "The webhook is deleted, and the response is intentionally\
            \ blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested data are not found.\r\n            <br/>Error\
            \ codes:\r\n            502 - Webhook not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: Delete a webhook
      tags:
      - NotificationWebHooks
      x-access: Any
    get:
      deprecated: false
      description: Retrieves the details of the specified webhook.
      operationId: "GETv3_NotificationWebHooks_{id}"
      parameters:
      - description: The unique ID of the webhook to return.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook'
          description: The requested webhook is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested data are not found.\r\n            <br/>Error\
            \ codes:\r\n            502 - Webhook not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: Get a webhook
      tags:
      - NotificationWebHooks
      x-access: Any
    put:
      deprecated: false
      description: "Updates the specified webhook by setting the values of the parameters\
        \ passed.\r\n            <br />**Example Request**\r\n            \r\n   \
        \             PUT /NotificationWebHooks/{id}\r\n                {\r\n    \
        \              \"Subscriptions\": [\r\n                    {\r\n         \
        \             \"Id\": 1111,\r\n                      \"Name\": \"Subscription\
        \ to new WOs\",\r\n                      \"EventTypes\": [\r\n           \
        \             \"WorkOrderCreated\"\r\n                      ],\r\n       \
        \               \"Rules\": {\r\n                        \"Trades\": [\r\n\
        \                          \"GLASS\"\r\n                        ],\r\n   \
        \                     \"Categories\": [\r\n                          \"MAINTENANCE\"\
        \r\n                        ],\r\n                        \"Statuses\": [\r\
        \n                          \"COMPLETED/CONFIRMED\"\r\n                  \
        \      ]\r\n                      }\r\n                    }\r\n         \
        \         ],\r\n                  \"Id\": 1,\r\n                  \"Enabled\"\
        : true,\r\n                  \"Name\": \"New WO webhook\",\r\n           \
        \       \"Description\": \"I want to receive notifications when new WOs of\
        \ GLASS trade and MAINTENANCE category are created.\",\r\n               \
        \   \"Url\": \"https://your-company.com/webhook-target-URL\"\r\n         \
        \       }"
      operationId: "PUTv3_NotificationWebHooks_{id}"
      parameters:
      - description: The unique ID of the webhook to update.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook'
        description: The webhook object that needs to be updated.
        required: true
      responses:
        "204":
          content: {}
          description: "The webhook is updated, and the response is intentionally\
            \ blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 - Webhook not found\r\n            503 - Required data missing\
            \ or incorrect"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: Update a webhook
      tags:
      - NotificationWebHooks
      x-access: Any
      x-codegen-request-body-name: req
  /api/notifications/v2/workorders/send:
    post:
      deprecated: false
      operationId: POSTv3_api_notifications_v2_workorders_send
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v2/workorders/send:
    post:
      deprecated: false
      operationId: POSTv3_notifications_v2_workorders_send
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/v2/workorders/note/send:
    post:
      deprecated: false
      operationId: POSTv3_api_notifications_v2_workorders_note_send
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v2/workorders/note/send:
    post:
      deprecated: false
      operationId: POSTv3_notifications_v2_workorders_note_send
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/v2/workorders/ivr/send:
    post:
      deprecated: false
      operationId: POSTv3_api_notifications_v2_workorders_ivr_send
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v2/workorders/ivr/send:
    post:
      deprecated: false
      operationId: POSTv3_notifications_v2_workorders_ivr_send
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/v2/workorders/resend:
    post:
      deprecated: false
      operationId: POSTv3_api_notifications_v2_workorders_resend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
      x-codegen-request-body-name: data
  /notifications/v2/workorders/resend:
    post:
      deprecated: false
      operationId: POSTv3_notifications_v2_workorders_resend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
      x-codegen-request-body-name: data
  /api/notifications/v2/workorders/notes/resend:
    post:
      deprecated: false
      operationId: POSTv3_api_notifications_v2_workorders_notes_resend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
      x-codegen-request-body-name: data
  /notifications/v2/workorders/notes/resend:
    post:
      deprecated: false
      operationId: POSTv3_notifications_v2_workorders_notes_resend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
      x-codegen-request-body-name: data
  /api/notifications/v2/workorders/ivr/resend:
    post:
      deprecated: false
      operationId: POSTv3_api_notifications_v2_workorders_ivr_resend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
      x-codegen-request-body-name: data
  /notifications/v2/workorders/ivr/resend:
    post:
      deprecated: false
      operationId: POSTv3_notifications_v2_workorders_ivr_resend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
      x-codegen-request-body-name: data
  /api/notifications/v2/workorders/{id}:
    get:
      deprecated: false
      operationId: "GETv3_api_notifications_v2_workorders_{id}"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v2/workorders/{id}:
    get:
      deprecated: false
      operationId: "GETv3_notifications_v2_workorders_{id}"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/v2/workorders/cxml/{id}:
    get:
      deprecated: false
      operationId: "GETv3_api_notifications_v2_workorders_cxml_{id}"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v2/workorders/cxml/{id}:
    get:
      deprecated: false
      operationId: "GETv3_notifications_v2_workorders_cxml_{id}"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/v2/workorders/notes/{id}:
    get:
      deprecated: false
      operationId: "GETv3_api_notifications_v2_workorders_notes_{id}"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v2/workorders/notes/{id}:
    get:
      deprecated: false
      operationId: "GETv3_notifications_v2_workorders_notes_{id}"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/v2/workorders/ivr/{id}:
    get:
      deprecated: false
      operationId: "GETv3_api_notifications_v2_workorders_ivr_{id}"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v2/workorders/ivr/{id}:
    get:
      deprecated: false
      operationId: "GETv3_notifications_v2_workorders_ivr_{id}"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/v2/workorders/list:
    get:
      deprecated: false
      operationId: "GETv3_api_notifications_v2_workorders_list?proId={proId}&start={start}&finish={finish}"
      parameters:
      - in: query
        name: proId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: start
        required: true
        schema:
          format: date-time
          type: string
      - in: query
        name: finish
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v2/workorders/list:
    get:
      deprecated: false
      operationId: "GETv3_notifications_v2_workorders_list?proId={proId}&start={start}&finish={finish}"
      parameters:
      - in: query
        name: proId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: start
        required: true
        schema:
          format: date-time
          type: string
      - in: query
        name: finish
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/v2/workorders/notes/list:
    get:
      deprecated: false
      operationId: "GETv3_api_notifications_v2_workorders_notes_list?proId={proId}&start={start}&finish={finish}"
      parameters:
      - in: query
        name: proId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: start
        required: true
        schema:
          format: date-time
          type: string
      - in: query
        name: finish
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v2/workorders/notes/list:
    get:
      deprecated: false
      operationId: "GETv3_notifications_v2_workorders_notes_list?proId={proId}&start={start}&finish={finish}"
      parameters:
      - in: query
        name: proId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: start
        required: true
        schema:
          format: date-time
          type: string
      - in: query
        name: finish
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/v2/workorders/ivr/list:
    get:
      deprecated: false
      operationId: "GETv3_api_notifications_v2_workorders_ivr_list?proId={proId}&start={start}&finish={finish}"
      parameters:
      - in: query
        name: proId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: start
        required: true
        schema:
          format: date-time
          type: string
      - in: query
        name: finish
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v2/workorders/ivr/list:
    get:
      deprecated: false
      operationId: "GETv3_notifications_v2_workorders_ivr_list?proId={proId}&start={start}&finish={finish}"
      parameters:
      - in: query
        name: proId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: start
        required: true
        schema:
          format: date-time
          type: string
      - in: query
        name: finish
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/v2/sendxml:
    post:
      deprecated: false
      operationId: POSTv3_api_notifications_v2_sendxml
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v2/sendxml:
    post:
      deprecated: false
      operationId: POSTv3_notifications_v2_sendxml
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/reset:
    post:
      deprecated: false
      operationId: POSTv3_api_notifications_reset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/reset:
    post:
      deprecated: false
      operationId: POSTv3_notifications_reset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/resetnotify:
    post:
      deprecated: false
      operationId: "POSTv3_api_notifications_resetnotify?setupName={setupName}"
      parameters:
      - in: query
        name: setupName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/resetnotify:
    post:
      deprecated: false
      operationId: "POSTv3_notifications_resetnotify?setupName={setupName}"
      parameters:
      - in: query
        name: setupName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /webhooks/subscribe:
    post:
      deprecated: false
      operationId: POSTv3_webhooks_subscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
      x-codegen-request-body-name: ud
  /webhooks/unsubscribe:
    post:
      deprecated: false
      operationId: POSTv3_webhooks_unsubscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
      x-codegen-request-body-name: ud
  /webhooks:
    get:
      deprecated: false
      operationId: GETv3_webhooks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /webhooks/{id}:
    get:
      deprecated: false
      operationId: "GETv3_webhooks_{id}?providerId={providerId}"
      parameters:
      - in: query
        name: providerId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/v4/workorders/sendnotify:
    post:
      deprecated: false
      operationId: "POSTv3_api_notifications_v4_workorders_sendnotify?setupName={setupName}"
      parameters:
      - in: query
        name: setupName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v4/workorders/sendnotify:
    post:
      deprecated: false
      operationId: "POSTv3_notifications_v4_workorders_sendnotify?setupName={setupName}"
      parameters:
      - in: query
        name: setupName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/v4/workorders/note/sendnotify:
    post:
      deprecated: false
      operationId: "POSTv3_api_notifications_v4_workorders_note_sendnotify?setupName={setupName}"
      parameters:
      - in: query
        name: setupName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v4/workorders/note/sendnotify:
    post:
      deprecated: false
      operationId: "POSTv3_notifications_v4_workorders_note_sendnotify?setupName={setupName}"
      parameters:
      - in: query
        name: setupName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /api/notifications/v4/workorders/status/sendnotify:
    post:
      deprecated: false
      operationId: "POSTv3_api_notifications_v4_workorders_status_sendnotify?setupName={setupName}"
      parameters:
      - in: query
        name: setupName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /notifications/v4/workorders/status/sendnotify:
    post:
      deprecated: false
      operationId: "POSTv3_notifications_v4_workorders_status_sendnotify?setupName={setupName}"
      parameters:
      - in: query
        name: setupName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - OutgoingXml
      x-access: Any
  /workorders/{workorderId}/parts:
    delete:
      deprecated: false
      description: Available only for provider.
      operationId: "DELETEv3_workorders_{workorderId}_parts?ids[0]={ids[0]}&ids[1]={ids[1]}"
      parameters:
      - description: The Work order identity
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The Work order part identity collection for delete
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.<br>Error codes:<br>502 - WorkOrder not found;
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br/> 504 - API call rejected by security permissions;
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Error while processing request.
      summary: Delete Work order parts
      tags:
      - Parts
      x-access: Providers
    get:
      deprecated: false
      description: "Get a Work order parts. Returns Work order parts collection for\
        \ successful request.\r\n            <br /><br />Available for provider and\
        \ subscriber usage."
      operationId: "GETv3_workorders_{workorderId}_parts"
      parameters:
      - description: The Work order identity
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderPartResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderPartResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderPartResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderPartResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Get a Work order parts
      tags:
      - Parts
      x-access: Any
    post:
      deprecated: false
      description: Available only for provider.
      operationId: "POSTv3_workorders_{workorderId}_parts"
      parameters:
      - description: A new Work order identity
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrderPartsCollectionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrderPartsCollectionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrderPartsCollectionRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrderPartsCollectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrderPartsCollectionRequest'
        description: A new Work order parts collection
        required: true
      responses:
        "201":
          content: {}
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.<br>Error codes:<br>502 - WorkOrder not found;
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br/> 504 - API call rejected by security permissions;
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Error while processing request.
      summary: Create Work order parts
      tags:
      - Parts
      x-access: Providers
      x-codegen-request-body-name: requestModel
    put:
      deprecated: false
      description: Available only for provider.
      operationId: "PUTv3_workorders_{workorderId}_parts"
      parameters:
      - description: The Work order identity
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrderPartsCollectionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrderPartsCollectionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrderPartsCollectionRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrderPartsCollectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrderPartsCollectionRequest'
        description: The Work order parts collection for update
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.<br>Error codes:<br>502 - WorkOrder not found;
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br/> 504 - API call rejected by security permissions;
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Error while processing request.
      summary: Update Work order parts
      tags:
      - Parts
      x-access: Providers
      x-codegen-request-body-name: request
  /workorders/{workorderId}/{includeConnectorParts}/partsV1:
    get:
      deprecated: false
      description: "Get a Work order parts. Returns Work order parts collection for\
        \ successful request.\r\n            <br /><br />Available for provider and\
        \ subscriber usage."
      operationId: "GETv3_workorders_{workorderId}_{includeConnectorParts}_partsV1"
      parameters:
      - description: The Work order identity
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Include Connector Parts
        in: path
        name: includeConnectorParts
        required: true
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderPartResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderPartResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderPartResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderPartResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Get a Work order parts
      tags:
      - Parts
      x-access: Any
  /workorders/{workorderId}/inventory/refrigerantusage:
    get:
      deprecated: false
      operationId: "GETv3_workorders_{workorderId}_inventory_refrigerantusage"
      parameters:
      - in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Parts.RefrigerantUsageResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Parts.RefrigerantUsageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Parts.RefrigerantUsageResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Parts.RefrigerantUsageResponse'
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.<br>Error codes:<br>502 - WorkOrder not found;
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br/> 504 - API call rejected by security permissions;
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Error while processing request.
      tags:
      - Parts
      x-access: Any
  /workorders/inventory/parts/bulkPartUsage:
    post:
      deprecated: false
      operationId: POSTv3_workorders_inventory_parts_bulkPartUsage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantBulkChangeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantBulkChangeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantBulkChangeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantBulkChangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantBulkChangeRequest'
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Error while processing request.
      summary: Inventory part user record bulk change
      tags:
      - Parts
      x-access: Any
      x-codegen-request-body-name: request
  /workorders/{workorderId}/partsUsage:
    get:
      deprecated: false
      operationId: "GETv3_workorders_{workorderId}_partsUsage"
      parameters:
      - in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantResponse'
                type: array
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.<br>Error codes:<br>502 - WorkOrder not found;
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br/> 504 - API call rejected by security permissions;
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Error while processing request.
      summary: Retrieve work order parts usage
      tags:
      - Parts
      x-access: Any
  /parts/isTechCertificationUsedOnRefrigerantTracking:
    get:
      deprecated: false
      operationId: "GETv3_parts_isTechCertificationUsedOnRefrigerantTracking?authUserId={authUserId}&technicianId={technicianId}&certificationNumber={certificationNumber}"
      parameters:
      - in: query
        name: authUserId
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: technicianId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: certificationNumber
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.TechnicianAssociatedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.TechnicianAssociatedResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.TechnicianAssociatedResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.TechnicianAssociatedResponse'
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br/> 504 - API call rejected by security permissions;
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Error while processing request.
      summary: Verifies that user is associated with parts usage
      tags:
      - Parts
      x-access: Providers
  /proposals/statistics:
    get:
      deprecated: false
      description: "Returns statistics on requests for proposals (RFPs) and proposals\
        \ for the specified time period for the current provider:\r\n             \
        • RFPs awaiting response\r\n             • Open proposals\r\n             \
        • Approved proposals\r\n             • Proposals in the _On Hold_ and _Reviewed_\
        \ statuses\r\n             • Rejected proposals"
      operationId: "GETv3_proposals_statistics?daysPeriod={daysPeriod}"
      parameters:
      - description: Time period set as the number of days prior to the current date
          for which statistics on RFPs and proposals are returned. The default is
          30.
        in: query
        name: daysPeriod
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalStatisticsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalStatisticsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalStatisticsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalStatisticsResponse'
          description: Statistics on RFPs and proposals for the requested time period
            are returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — Only for providers usage"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Retrieve statistics on RFPs and proposals
      tags:
      - Proposals
      x-access: Any
  /proposals/{proposalId}/recipients:
    get:
      deprecated: false
      description: "Returns users who can be added to the list of email recipients\
        \ to notify when the specified proposal is approved or rejected.\r\n     \
        \       <br />***Note:*** This method is only available to subscriber users."
      operationId: "GETv3_proposals_{proposalId}_recipients"
      parameters:
      - description: The unique numeric identifier of the proposal.
        in: path
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse'
                type: array
          description: Users who can be added to the list of email recipients to notify
            when a proposal is approved or rejected are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — Invalid proposal identifier\r\n            503 — Request is\
            \ empty or null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Retrieve users who can be added to the list of email recipients to
        notify of a proposal approval or rejection
      tags:
      - Proposals
      x-access: Any
  /proposals/{proposalId}/validate:
    get:
      deprecated: false
      description: Checks if the specified proposal exists for the current user.
      operationId: "GETv3_proposals_{proposalId}_validate"
      parameters:
      - description: The unique numeric identifier of the proposal to validate.
        in: path
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: The specified proposal exists for the current user.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — Proposal not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Validate a proposal
      tags:
      - Proposals
      x-access: Any
  /proposals/{proposalId}/reject:
    put:
      deprecated: false
      description: "Updates the status of the specified proposal to *Rejected*.\r\n\
        \            <br />You can send a proposal rejection notification to a specific\
        \ user or to all users from the **Proposals/Proposal Alerts** list.\r\n  \
        \           • `ProviderEmail` and `UserEmail`. Use these parameters to send\
        \ a proposal rejection notification to a specific user. If passed, any of\
        \ these parameters prevails over `useProposalAlertEmails`. In case you pass\
        \ a value to the `ProviderEmail` or `UserEmail` parameter in the request body\
        \ and set `useProposalAlertEmails` to `true`, a notification is sent to the\
        \ specified email address, while users from the **Proposals/Proposal Alerts**\
        \ list are not notified.\r\n             • `useProposalAlertEmails`. Set this\
        \ parameter to `true` to send proposal rejection notifications to all users\
        \ listed in the **Proposals/Proposal Alerts** section of **Dispatch Preferences**.\r\
        \n            <br />***Note:*** This method is only available to subscriber\
        \ users.\r\n            <br />**Example Request**\r\n            \r\n    \
        \            PUT /proposals/{proposalId}/reject\r\n                {\r\n \
        \                  \"Comments\": \"The project is canceled\",\r\n        \
        \           \"ProviderEmail\": \"\",\r\n                   \"UserEmail\":\
        \ \"\",\r\n                   \"RejectReasonCodeId\": 7,\r\n             \
        \      \"ActionSource\": \"Standard\",\r\n                   \"ReasonString\"\
        : \"\"    \r\n                }"
      operationId: "PUTv3_proposals_{proposalId}_reject?useProposalAlertEmails={useProposalAlertEmails}"
      parameters:
      - description: The unique numeric identifier of the proposal to reject.
        in: path
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Defines if a proposal rejection notification is sent to all\
          \ users listed in the **Proposals/Proposal Alerts** section of **Dispatch\
          \ Preferences**.\r\n            If the parameter value is `true`, users\
          \ from the **Proposals/Proposal Alerts** list get a notification if the\
          \ `ProviderEmail` and `UserEmail` parameters are not passed. If set to `false`\
          \ or not passed, this parameter is ignored."
        in: query
        name: useProposalAlertEmails
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
        description: The request to update the proposal status to *Rejected*.
        required: true
      responses:
        "204":
          content: {}
          description: "The proposal status is set to *Rejected*, users are notified\
            \ based on the passed parameters, and the values of the specified parameters\
            \ are updated.<br/>The response is intentionally blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     401 — Invalid subscriber id\r\n            502 — Proposal not found\r\
            \n            503 — The proposal status is already Rejected\r\n      \
            \      503 — The user is MLP user\r\n            503 — Request is empty\
            \ or null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Reject a proposal
      tags:
      - Proposals
      x-access: Subscribers
      x-codegen-request-body-name: request
  /proposals/ProposalsReject:
    put:
      deprecated: false
      description: "Updates the status of the specified proposal to *Rejected*.\r\n\
        \            <br />***Note:*** This method is only available to subscriber\
        \ users."
      operationId: PUTv3_proposals_ProposalsReject
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalsStatusRequest'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalsStatusRequest'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalsStatusRequest'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalsStatusRequest'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalsStatusRequest'
              type: array
        required: true
      responses:
        "204":
          content: {}
          description: "The proposal status is set to *Rejected*, users are notified\
            \ based on the passed parameters, and the values of the specified parameters\
            \ are updated.<br/>The response is intentionally blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes: \r\n      \
            \      100 — Proposal was already rejected\r\n            100 — User has\
            \ no rights to perform this action\r\n            401 — Invalid subscriber\
            \ id\r\n            502 — Wrong Proposal Id\r\n            502 — Proposal\
            \ not found\r\n            502 — Cannot find proposal data\r\n       \
            \     502 — Cannot find assigned Work Order\r\n            502 — Proposal\
            \ not has WO\r\n            502 — Proposals are linked to a different\
            \ Work Order\r\n            502 — You don't have permissions to process\
            \ Proposal\r\n            502 — Proposal is not MLP and cannot be rejected\
            \ by an MLP user\r\n            502 — Proposal is already rejected\r\n\
            \            502 — Couldn’t find Proposals to Reject\r\n            502\
            \ — Couldn't find the Provider for Proposal\r\n            502 — Escalation\
            \ can't be performed as all upper levels are empty\r\n            502\
            \ — Rule set not found\r\n            503 — Wrong Work Order Id\r\n  \
            \          503 — More information Required\r\n            503 — Proposal\
            \ requires a Reason for Rejection\r\n            503 — The request contains\
            \ proposals with the same Proposal ID\r\n            503 — Request is\
            \ empty or null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Reject proposals
      tags:
      - Proposals
      x-access: Subscribers
      x-codegen-request-body-name: data
  /proposals/GetProposalsToReject:
    get:
      deprecated: false
      description: "Returns list of the proposals that can be reject.\r\n        \
        \    <br />***Note:*** This method is only available to subscriber users."
      operationId: "GETv3_proposals_GetProposalsToReject?trackingNumber={trackingNumber}"
      parameters:
      - description: The unique numeric identifier of the WO.
        in: query
        name: trackingNumber
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse'
                type: array
          description: Users that can be added to the list of email recipients to
            notify when a proposal is approved or rejected are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — Proposals to Reject not found\r\n            502 — Cannot\
            \ find proposal data\r\n            503 — Invalid WO identifier"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Retrieve proposals that can be reject
      tags:
      - Proposals
      x-access: Any
  /proposals/{proposalId}/onhold:
    put:
      deprecated: false
      description: "Updates the status of the specified proposal to *On Hold*.\r\n\
        \            <br />***Note:*** This method is only available to subscriber\
        \ users.\r\n            <br />**Example Request**\r\n            \r\n    \
        \            PUT /proposals/{proposalId}/onhold\r\n                {\r\n \
        \                  \"Comments\": \"The proposal needs further review\",\r\n\
        \                   \"ProviderEmail\": \"\",\r\n                   \"UserEmail\"\
        : \"\",\r\n                   \"RejectReasonCodeId\": 0,\r\n             \
        \      \"ActionSource\": \"Standard\",\r\n                   \"ReasonString\"\
        : \"\"    \r\n                }"
      operationId: "PUTv3_proposals_{proposalId}_onhold"
      parameters:
      - description: The unique numeric identifier of the proposal to put on hold.
        in: path
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
        description: The request to update the proposal status to *On Hold*.
        required: true
      responses:
        "204":
          content: {}
          description: "The proposal status is set to *On Hold*, users are notified\
            \ based on the passed parameters, and the values of the specified parameters\
            \ are updated.<br/>The response is intentionally blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     401 — Invalid subscriber id\r\n            502 — Proposal not found\r\
            \n            503 — The proposal status is already On Hold\r\n       \
            \     503 — The user is MLP user\r\n            503 — Request is empty\
            \ or null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Put a proposal on hold
      tags:
      - Proposals
      x-access: Subscribers
      x-codegen-request-body-name: request
  /proposals/{proposalId}/approve:
    put:
      deprecated: false
      description: "Updates the status of the specified proposal to *Approved*.\r\n\
        \            <br />***Note:*** This method is only available to subscriber\
        \ users.\r\n            <br />**Example Request**\r\n            \r\n    \
        \            PUT /proposals/{proposalId}/approve\r\n                {\r\n\
        \                   \"Comments\": \"The project starts earlier than expected\"\
        ,\r\n                   \"ProviderEmail\": \"\",\r\n                   \"\
        UserEmail\": \"\",\r\n                   \"RejectReasonCodeId\": 0,\r\n  \
        \                 \"ActionSource\": \"Standard\",\r\n                   \"\
        ReasonString\": \"Best fit for the job and scope\"\r\n                }"
      operationId: "PUTv3_proposals_{proposalId}_approve"
      parameters:
      - description: The unique numeric identifier of the proposal to approve.
        in: path
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
        description: The request to update the proposal status to *Approved*.
        required: true
      responses:
        "204":
          content: {}
          description: "The proposal status is set to *Approved*, users are notified\
            \ based on the passed parameters, and the values of the specified parameters\
            \ are updated.<br/>The response is intentionally blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     100 — Proposal amount exceeds user’s NTE limit\r\n            401\
            \ — Invalid subscriber id\r\n            502 — Proposal not found\r\n\
            \            503 — The proposal status is already Approved\r\n       \
            \     503 — Cannot Approve Proposal that is not assigned to Work Order\r\
            \n            503 — Cannot Approve Proposal. The Work Order this proposal\
            \ is linked to has already been invoiced\r\n            503 — The user\
            \ is MLP user\r\n            503 — Request is empty or null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Approve a proposal
      tags:
      - Proposals
      x-access: Subscribers
      x-codegen-request-body-name: request
  /proposals/{proposalId}/open:
    put:
      deprecated: false
      description: "Updates the status of the specified proposal to *Open*.\r\n  \
        \          <br />***Note:*** This method is only available to subscriber users.\r\
        \n            <br />**Example Request**\r\n            \r\n              \
        \  PUT /proposals/{proposalId}/open\r\n                {\r\n             \
        \      \"Comments\": \"The project is resumed\",\r\n                   \"\
        ProviderEmail\": \"\",\r\n                   \"UserEmail\": \"\",\r\n    \
        \               \"RejectReasonCodeId\": 0,\r\n                   \"ActionSource\"\
        : \"Standard\",\r\n                   \"ReasonString\": \"\"    \r\n     \
        \           }"
      operationId: "PUTv3_proposals_{proposalId}_open"
      parameters:
      - description: The unique numeric identifier of the proposal to open.
        in: path
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest'
        description: The request to update the proposal status to *Open*.
        required: true
      responses:
        "204":
          content: {}
          description: "The proposal status is set to *Open*, users are notified based\
            \ on the passed parameters, and the values of the specified parameters\
            \ are updated.<br/>The response is intentionally blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     401 — Invalid subscriber id\r\n            502 — Proposal not found\r\
            \n            503 — The proposal status is already Open\r\n          \
            \  503 — The user is MLP user\r\n            503 — Request is empty or\
            \ null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Open a proposal
      tags:
      - Proposals
      x-access: Subscribers
      x-codegen-request-body-name: request
  /proposals/{proposalId}/assignWO:
    put:
      deprecated: false
      description: "Links the specified work order to the proposal. If the proposal\
        \ already has a linked service request, the attached work order is updated.\
        \ See [Link a WO to a Proposal](https://developer.servicechannel.com/guides/proposals/link-a-WO-to-a-proposal/)\
        \ for more information.\r\n            <br />***Note:*** This method is only\
        \ available to subscriber users."
      operationId: "PUTv3_proposals_{proposalId}_assignWO?isFromProjectsModule={isFromProjectsModule}"
      parameters:
      - description: The unique numeric identifier of the proposal to attach the work
          order to.
        in: path
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      - description: Is request from projects module.
        in: query
        name: isFromProjectsModule
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              format: int32
              type: integer
          text/json:
            schema:
              format: int32
              type: integer
          application/xml:
            schema:
              format: int32
              type: integer
          text/xml:
            schema:
              format: int32
              type: integer
          application/x-www-form-urlencoded:
            schema:
              format: int32
              type: integer
        description: The unique numeric identifier of the work order to link to the
          proposal.
        required: true
      responses:
        "204":
          content: {}
          description: "The specified work order is attached to the proposal, and\
            \ the response is intentionally blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     401 — Invalid subscriber id\r\n            502 — Proposal not found\r\
            \n            503 — Request is empty or null\r\n            503 — Proposal\
            \ already approved\r\n            503 — Workorder doesn't match\r\n  \
            \          503 — The user is MLP user\r\n            917 — Invalid WO\
            \ Identifier"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Attach a work order to a proposal
      tags:
      - Proposals
      x-access: Subscribers
      x-codegen-request-body-name: workorderId
  /proposals/{proposalId}/escalate:
    put:
      deprecated: false
      description: "Escalates the specified proposal to another user in the subscriber’\
        s multi-level proposal (MLP) approval hierarchy. The proposal can be approved,\
        \ rejected, put on hold, or returned upon escalation. You can attach an existing\
        \ work order or create a new one while submitting the request.\r\n       \
        \     <br />***Note:*** This method is only available to subscribers with\
        \ the MLP setting enabled.\r\n            <br />MLP users can [escalate a\
        \ proposal](https://developer.servicechannel.com/guides/proposals/assign-or-escalate-a-proposal/#escalate-a-proposal-for-mlp-users)\
        \ if the following conditions are met:\r\n             • The user's approval\
        \ level corresponds to the proposal level.\r\n             • The Override\
        \ option is enabled for the user in case their level is higher than the proposal\
        \ level.\r\n            <br />**Example Request**\r\n            \r\n    \
        \            PUT /proposals/{proposalId}/escalate\r\n                {\r\n\
        \                   \"Action\": \"Approve\",\r\n                   \"WoType\"\
        : 2,\r\n                   \"TrackingNumber\": 140324907,\r\n            \
        \       \"PoNumber\": \"\",\r\n                   \"ExistingPoNumber\": \"\
        \",\r\n                   \"Category\": \"\",\r\n                   \"CategoryId\"\
        : ,\r\n                   \"ApprovalCode\": \"\",\r\n                   \"\
        Priority\": \"\",\r\n                   \"Comment\": \"Escalating proposal\
        \ to the General Manager\",\r\n                   \"RejectReasonCodeId\":\
        \ 0,\r\n                   \"ReasonString\": \"\",\r\n                   \"\
        EmailsToNotify\": \"john.smith@domain.com\",\r\n                   \"EmailMyself\"\
        : false,\r\n                   \"MyEmail\": \"\",\r\n                   \"\
        ProposalId\": 10010836\r\n                }"
      operationId: "PUTv3_proposals_{proposalId}_escalate"
      parameters:
      - description: The unique numeric identifier of the proposal to escalate.
        in: path
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.MlpWoRecommendationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.MlpWoRecommendationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.MlpWoRecommendationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.MlpWoRecommendationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.MlpWoRecommendationRequest'
        description: The request to escalate the proposal to another user in the MLP
          hierarchy.
        required: true
      responses:
        "204":
          content: {}
          description: The specified proposal is escalated and updated with the passed
            parameters. The response is intentionally blank.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     401 — Invalid subscriber id\r\n            502 — Proposal not found\r\
            \n            503 — Request is empty or null\r\n            503 — The\
            \ user is not MLP user\r\n            503 — Invalid WO Tracking Number\r\
            \n            503 — Invalid WO Tracking Number in Proposal\r\n       \
            \     503 — Invalid Wo Type\r\n            503 — There is no WO recommendation\r\
            \n            503 — Action not found in rules\r\n            503 — User\
            \ level less than Proposal level\r\n            503 — ForwardTo item is\
            \ empty\r\n            503 — There is no the action in next rule\r\n \
            \           503 — Invalid Level\r\n            503 — Override flag is\
            \ false\r\n            503 — EndStatus item is empty\r\n            503\
            \ — Invalid Action"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Escalate a proposal
      tags:
      - Proposals
      x-access: Subscribers
      x-codegen-request-body-name: request
  /proposals/{proposalId}/assignUser:
    put:
      deprecated: false
      description: "Assigns the proposal to the specified user in the subscriber’\
        s organization. If the proposal already has an assignee, the appointed user\
        \ is updated.\r\n            <br />***Note:*** You cannot [assign a proposal](https://developer.servicechannel.com/guides/proposals/assign-or-escalate-a-proposal/#assign-a-proposal-to-a-user)\
        \ in the *Approved* or *Rejected* status.\r\n            <br />**Example Request**\r\
        \n            \r\n                PUT /proposals/{proposalId}/assignUser\r\
        \n                {\r\n                   \"UserId\": 1417703,\r\n       \
        \            \"Comments\": \"Proposal reassigned at the request of the Store\
        \ Manager\",\r\n                   \"UserEmail\": \"\",\r\n              \
        \     \"ReasonString\": \"\",\r\n                   \"Note\": \"\"\r\n   \
        \             }"
      operationId: "PUTv3_proposals_{proposalId}_assignUser"
      parameters:
      - description: The unique numeric identifier of the proposal to assign to the
          specified user.
        in: path
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.AssignUserToProposalRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.AssignUserToProposalRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.AssignUserToProposalRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.AssignUserToProposalRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.AssignUserToProposalRequest'
        description: The request to assign the proposal to the specified user.
        required: true
      responses:
        "204":
          content: {}
          description: "The proposal is assigned to the specified user, and the response\
            \ is intentionally blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes: \r\n      \
            \      502 — Proposal not found\r\n            503 — Request is empty\
            \ or null\r\n            503 — Wrong User Id\r\n            503 — Selected\
            \ proposal has been finalized\r\n            503 — Selected user has no\
            \ required rights\r\n            503 — Selected user doesn't have Location\
            \ or Trade access"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Assign a proposal to a user
      tags:
      - Proposals
      x-access: Subscribers
      x-codegen-request-body-name: request
  /proposals:
    get:
      deprecated: false
      description: Returns proposals based on the specified input parameters for the
        current subscriber.
      operationId: "GETv3_proposals?statuses={statuses}&assignedTo={assignedTo}&skip={skip}&top={top}"
      parameters:
      - description: "Proposal statuses separated by commas. Valid values: *Open*,\
          \ *On Hold*, *Approved*, *Rejected*, *Void*, *Reviewed*.\r\n           \
          \ Proposals in all statuses are returned if the value is not passed."
        in: query
        name: statuses
        schema:
          type: string
      - description: The unique numeric identifier of the user who is assigned the
          proposals.
        in: query
        name: assignedTo
        schema:
          format: int32
          type: integer
      - description: The number of entries to skip in the response (starting from
          the first one).
        in: query
        name: skip
        schema:
          format: int32
          type: integer
      - description: The number of entries to return. The default value is 50.
        in: query
        name: top
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalStatisticsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalStatisticsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalStatisticsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalStatisticsResponse'
          description: The requested proposals are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Retrieve proposals
      tags:
      - Proposals
      x-access: Any
  /proposals/GetProposals:
    post:
      deprecated: false
      operationId: POSTv3_proposals_GetProposals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.SearchProposalModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.SearchProposalModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.SearchProposalModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.SearchProposalModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.SearchProposalModel'
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br> 400 - Bad Request\r\n            <br/> 503 - Request should not\
            \ be null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions\r\n            <br/>User does not have Location\
            \ or Trade access to perform this operation"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get Proposals
      tags:
      - Proposals
      x-access: Any
      x-codegen-request-body-name: proposalModel
  /proposals/{proposalId}/users:
    get:
      deprecated: false
      description: "Returns a list of users in the subscriber’s organization who can\
        \ be assigned the specified proposal. You can send this request to retrieve\
        \ the user ID before [assigning a proposal](https://developer.servicechannel.com/guides/proposals/assign-or-escalate-a-proposal/#assign-a-proposal-to-a-user)."
      operationId: "GETv3_proposals_{proposalId}_users"
      parameters:
      - description: The unique numeric identifier of the proposal.
        in: path
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.UserInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.UserInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.UserInfo'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.UserInfo'
          description: Users who can be assigned the specified proposal are in the
            response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — Proposal not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Retrieve users who can be assigned a proposal
      tags:
      - Proposals
      x-access: Any
  /proposals/RejectionReasons:
    get:
      deprecated: false
      description: Returns numeric identifiers and descriptions of the reasons for
        rejecting a proposal.
      operationId: GETv3_proposals_RejectionReasons
      responses:
        "200":
          content: {}
          description: Proposal rejection reasons are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     400 — Bad Request"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Retrieve proposal rejection reasons
      tags:
      - Proposals
      x-access: Any
  /proposals/ApprovalReasons:
    get:
      deprecated: false
      description: "Returns the reasons for approving a proposal for the current subscriber.\r\
        \n            <br />Admin users can manage proposal approval reasons in Service\
        \ Automation in **Admin** &gt; **Proposals** &gt; **Proposal Approve Reasons**\
        \ if the subscriber has this feature enabled."
      operationId: "GETv3_proposals_ApprovalReasons?Trade={Trade}&Category={Category}"
      parameters:
      - description: The type of work a provider performs. Has a narrower definition
          than `Category`.
        in: query
        name: Trade
        required: true
        schema:
          type: string
      - description: The overall classification of the performed work.
        in: query
        name: Category
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Proposal approval reasons are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The requested resource is not allowed for the current user.
      summary: Retrieve proposal approval reasons
      tags:
      - Proposals
      x-access: Subscribers
  /proposals/AssignReasons:
    get:
      deprecated: false
      description: "Returns the reasons for assigning a proposal to another user in\
        \ the subscriber’s organization.\r\n            <br />Admin users can manage\
        \ the reasons for assigning proposals in Service Automation in **Admin** &gt;\
        \ **Proposals** &gt; **Proposal Assign Reasons** if the subscriber has this\
        \ feature enabled."
      operationId: "GETv3_proposals_AssignReasons?Trade={Trade}&Category={Category}"
      parameters:
      - description: The type of work a provider performs. Has a narrower definition
          than `Category`.
        in: query
        name: Trade
        required: true
        schema:
          type: string
      - description: The overall classification of the performed work.
        in: query
        name: Category
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The reasons for assigning a proposal are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The requested resource is not allowed for the current user.
      summary: Retrieve the reasons for assigning a proposal
      tags:
      - Proposals
      x-access: Subscribers
  /proposals/proposalIds:
    get:
      deprecated: false
      description: "Returns available actions for the specified proposals:\r\n   \
        \          • **Edit.** Proposals that can be changed by your client.\r\n \
        \            • **Open.** Proposals that haven't been reviewed by your client.\r\
        \n             • **On hold.** Proposals that require your client’s further\
        \ review before being approved or rejected.\r\n             • **Approve.**\
        \ Proposals that have been already approved by your client.\r\n          \
        \   • **Reject.** Proposals that have been rejected by your client.\r\n  \
        \           • **Assign.** Proposals that have not been assigned by your client.\r\
        \n            <br />In ServiceChannel University, you can find out more about\
        \ [taking action on proposals](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/560103501/Taking+Action+on+Proposals)."
      operationId: "GETv3_proposals_proposalIds?proposalIds[0]={proposalIds[0]}&proposalIds[1]={proposalIds[1]}"
      parameters:
      - description: Unique numeric identifier of the proposal.
        explode: true
        in: query
        name: proposalIds
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: The available proposal actions are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Get proposal actions by ID
      tags:
      - Proposals
      x-access: Any
  /proposals/GetUsersByLevelName:
    get:
      deprecated: false
      description: "Returns the usernames of employees appointed to the specified\
        \ MLP level.\r\n            <br />You can get MLP levels information for the\
        \ current subscriber by sending the [GET /proposals/GetMlpLevelsForSubscriber](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/GETv3_proposals_GetMlpLevelsForSubscriber)\
        \ request.\r\n            <br />Refer to ServiceChannel University to learn\
        \ more about [how to configure MLP levels](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/621282301/Configuring+MLP+Levels)."
      operationId: "GETv3_proposals_GetUsersByLevelName?levelName={levelName}"
      parameters:
      - description: MLP level name.
        in: query
        name: levelName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The users assigned to the specified level are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     400 — Bad Request\r\n            503 — Request is empty or null\r\
            \n            3401 — The level doesn't exist"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Get users by level name
      tags:
      - Proposals
      x-access: Subscribers
  /proposals/GetMlpLevelsForSubscriber:
    get:
      deprecated: false
      description: "Returns all MLP levels with their information for the current\
        \ subscriber.\r\n            <br />To retrieve all users assigned to a particular\
        \ level, use the [GET /proposals/GetUsersByLevelName](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/GETv3_proposals_GetUsersByLevelName_levelName__levelName_)\
        \ method."
      operationId: GETv3_proposals_GetMlpLevelsForSubscriber
      responses:
        "200":
          content: {}
          description: The MLP levels for the current subscriber are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     400 - Bad Request"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Get MLP levels for a subscriber
      tags:
      - Proposals
      x-access: Subscribers
  /proposals/AddUserToMlpLevel:
    put:
      deprecated: false
      description: "Assigns a user to an existing MLP level. Get a username by sending\
        \ the [GET /users](https://developer.servicechannel.com/swagger/ui/index?version=3#/Users/GETv3_users_subscriberId__subscriberId__startIndex__startIndex__maxCount__maxCount_)\
        \ request.\r\n            <br />Once you assign a user to an MLP level, you\
        \ can assign a location to the user and MLP level by using the [PUT /proposals/AddLocationToUserLevel](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/PUTv3_proposals_AddLocationToUserLevel_userName__userName__location__location_)\
        \ method.\r\n            <br />***Note***: Each user can be added to only\
        \ one MLP level. If a user should be assigned to another level, you first\
        \ need to [remove this user from the MLP level](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/PUTv3_proposals_RemoveUserFromLevel_userName__userName__location__location_)\
        \ they currently belong to."
      operationId: "PUTv3_proposals_AddUserToMlpLevel?userName={userName}&levelName={levelName}"
      parameters:
      - description: Username to log into the system. The field is case sensitive.
        in: query
        name: userName
        required: true
        schema:
          type: string
      - description: MLP level name.
        in: query
        name: levelName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The specified user is assigned to the MLP level.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     400 — Bad Request\r\n            503 — Request is empty or null\r\
            \n            3401 — The user has already been assigned"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Add a user to an MLP level
      tags:
      - Proposals
      x-access: Subscribers
  /proposals/RemoveUserFromMlpLevel:
    put:
      deprecated: false
      description: "Removes the specified user from the assigned MLP level.\r\n  \
        \          <br />To assign a user to an MLP level, use the [PUT /proposals/AddUserToMlpLevel](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/PUTv3_proposals_AddUserToLevelLocation)\
        \ method."
      operationId: "PUTv3_proposals_RemoveUserFromMlpLevel?userName={userName}"
      parameters:
      - description: Username to log into the system.
        in: query
        name: userName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The user is successfully removed from the MLP level.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     400 — Bad Request\r\n            503 — Request is empty or null\r\
            \n            3401 — The user has already been assigned"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Remove a user from an MLP level
      tags:
      - Proposals
      x-access: Subscribers
  /proposals/AssignLocationToMlpUser:
    put:
      deprecated: false
      description: "Assigns a particular location to the specified user along with\
        \ the MLP level.\r\n            <br />You can remove a location from the user\
        \ and MLP level by using the [PUT /proposals/RemoveLocationFromUserLevel](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/PUTv3_proposals_RemoveLocationFromUserLevel_userName__userName__location__location_)\
        \ method."
      operationId: "PUTv3_proposals_AssignLocationToMlpUser?userName={userName}&location={location}"
      parameters:
      - description: Username to log into the system.
        in: query
        name: userName
        required: true
        schema:
          type: string
      - description: Alphanumeric location identifier in the client’s system.
        in: query
        name: location
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The location is assigned to the specified user and MLP level.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     400 — Bad Request\r\n            503 — Request is empty or null\r\
            \n            3401 — The location doesn't exist"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Add a location to a user’s MLP level
      tags:
      - Proposals
      x-access: Subscribers
  /proposals/RemoveLocationFromMlpUser:
    put:
      deprecated: false
      description: "Removes the specified location from the user and user’s MLP level.\r\
        \n            <br />To add a location, send the [PUT /proposals/AddLocationToUserLevel](https://developer.servicechannel.com/swagger/ui/index?version=3#/Proposals/PUTv3_proposals_AddLocationToUserLevel_userName__userName__location__location_)\
        \ request."
      operationId: "PUTv3_proposals_RemoveLocationFromMlpUser?userName={userName}&location={location}"
      parameters:
      - description: Username to log into the system.
        in: query
        name: userName
        required: true
        schema:
          type: string
      - description: Alphanumeric location identifier in the client’s system.
        in: query
        name: location
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The location is successfully removed from the user and MLP
            level.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     400 — Bad Request\r\n            503 — Request is empty or null\r\
            \n            3401 — The location doesn't exist"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Remove a location from a user’s MLP level
      tags:
      - Proposals
      x-access: Subscribers
  /proposals/{rfpId}:
    put:
      deprecated: false
      description: Delete Proposal and Rfp reference with projectId by rfpId
      operationId: "PUTv3_proposals_{rfpId}"
      parameters:
      - description: The unique numeric identifier of the RFP.
        in: path
        name: rfpId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: The projectId reference is successfully removed from proposal
            and rfp.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     400 — Bad Request\r\n            503 — Request is empty or null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Delete Proposal and Rfp reference with projectId by rfpId
      tags:
      - Proposals
      x-access: Subscribers
  /proposals/GetProposalsAssociatedWithWorkOderExceptRfp:
    get:
      deprecated: false
      operationId: "GETv3_proposals_GetProposalsAssociatedWithWorkOderExceptRfp?trackingNumber={trackingNumber}"
      parameters:
      - in: query
        name: trackingNumber
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Get all proposals for a work order based on tracking numbers
            that are not associated with an RFP.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     400 - Bad Request\r\n            503 — Request is empty or null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      tags:
      - Proposals
      x-access: Subscribers
  /proposals/AssignProjectIdToProposalAndRfp:
    put:
      deprecated: false
      operationId: "PUTv3_proposals_AssignProjectIdToProposalAndRfp?proposalId={proposalId}&projectId={projectId}"
      parameters:
      - in: query
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Assign a ProjectId to a ProposalId and Rfp
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     400 - Bad Request\r\n            503 — Request is empty or null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Assign a ProjectId to a ProposalId and Rfp
      tags:
      - Proposals
      x-access: Subscribers
  /proposals/RemoveMlpUserValidationAsync:
    put:
      deprecated: false
      description: Whether the user can be deleted from MLP level.
      operationId: "PUTv3_proposals_RemoveMlpUserValidationAsync?userId={userId}"
      parameters:
      - description: The User Id.
        in: query
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Whether the user can be deleted from MLP level.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     400 — Bad Request\r\n            503 — Request is empty or null\r\
            \n            3401 — The user has already been assigned"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Whether the user can be deleted from MLP level.
      tags:
      - Proposals
      x-access: Subscribers
  /proposals/GetProposalsAssociatedWithWorkOrderAsync:
    get:
      deprecated: false
      operationId: "GETv3_proposals_GetProposalsAssociatedWithWorkOrderAsync?trackingNumber={trackingNumber}"
      parameters:
      - in: query
        name: trackingNumber
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Get proposals associated with work order by tracking number.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     400 - Bad Request\r\n            503 — Request is empty or null"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
      summary: Get proposals associated with work order by tracking number. Only for
        Subscriber
      tags:
      - Proposals
      x-access: Any
  /api/providers/GetStandingStatus:
    get:
      deprecated: false
      operationId: "GETv3_api_providers_GetStandingStatus?providerId={providerId}"
      parameters:
      - description: A provider unique identifier
        in: query
        name: providerId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Returns standing status of the provider passed
      tags:
      - Providers
      x-access: Any
  /api/providers/info/{id}:
    get:
      deprecated: false
      operationId: "GETv3_api_providers_info_{id}"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Providers
      x-access: Subscribers
  /providers/trained:
    post:
      deprecated: false
      description: List Provider Trained Statuses.
      operationId: POSTv3_providers_trained
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersResponse'
                type: array
          description: OK
      summary: Trained Status for Providers
      tags:
      - Providers
      x-access: Any
      x-codegen-request-body-name: request
  /providers/RemoveProviderSubscriberLink:
    post:
      deprecated: false
      description: Delete provider of subscriber.
      operationId: POSTv3_providers_RemoveProviderSubscriberLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.RemoveProviderSubscriberLinkRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.RemoveProviderSubscriberLinkRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.RemoveProviderSubscriberLinkRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.RemoveProviderSubscriberLinkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.RemoveProviderSubscriberLinkRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderResponse'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - Invalid provider id passed;\r\n            <br/> 400 -\
            \ Invalid subscriber id passed;\r\n            <br/> 503 - Empty Request;\r\
            \n            <br/> 500 - Provider subscriber link has not been deleted;\r\
            \n            <br/> 1217 - Proccess provider subscriber link error text;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      summary: Delete provider of subscriber
      tags:
      - Providers
      x-access: Any
      x-codegen-request-body-name: request
  /providers:
    post:
      deprecated: false
      description: Create blank provider.
      operationId: POSTv3_providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.CreateBlankProviderResponse'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 103 - Provider already exists;\r\n            <br/> 802 - Invalid\
            \ user name;\r\n            <br/> 806 - User already exists;\r\n     \
            \       <br/> 1150 - User does not exist;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      summary: Create blank provider
      tags:
      - Providers
      x-access: Any
      x-codegen-request-body-name: request
  /providers/AccountChanged:
    post:
      deprecated: false
      operationId: POSTv3_providers_AccountChanged
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderAccountChangedRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderAccountChangedRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderAccountChangedRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderAccountChangedRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderAccountChangedRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
          description: OK
      tags:
      - Providers
      x-access: Any
      x-codegen-request-body-name: request
  /api/providers/{providerId}/problemtypes:
    get:
      deprecated: false
      operationId: "GETv3_api_providers_{providerId}_problemtypes?subscriberId={subscriberId}&dashboardId={dashboardId}&locationId={locationId}&areaId={areaId}&trade={trade}&problemType={problemType}"
      parameters:
      - in: path
        name: providerId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: dashboardId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: trade
        required: true
        schema:
          type: string
      - in: query
        name: problemType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Providers
      x-access: Any
  /providers/current/problemtypes:
    get:
      deprecated: false
      operationId: "GETv3_providers_current_problemtypes?subscriberId={subscriberId}&dashboardId={dashboardId}&locationId={locationId}&areaId={areaId}&trade={trade}&problemType={problemType}"
      parameters:
      - in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: dashboardId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: areaId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: trade
        required: true
        schema:
          type: string
      - in: query
        name: problemType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Providers
      x-access: Any
  /providers/getbytrade:
    get:
      deprecated: false
      description: List of Providers.
      operationId: "GETv3_providers_getbytrade?trade={trade}"
      parameters:
      - in: query
        name: trade
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderInfo'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderInfo'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderInfo'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderInfo'
                type: array
          description: OK
      summary: Providers For Subscriber User by Trade
      tags:
      - Providers
      x-access: Any
  /providers/{providerId}/feedback:
    post:
      deprecated: false
      operationId: "POSTv3_providers_{providerId}_feedback"
      parameters:
      - in: path
        name: providerId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderFeedbackRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderFeedbackRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderFeedbackRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderFeedbackRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderFeedbackRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      tags:
      - Providers
      x-access: Any
      x-codegen-request-body-name: request
  /providers/updateDispatchSetting:
    post:
      deprecated: false
      operationId: POSTv3_providers_updateDispatchSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.UpdateDispatchSettingModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.UpdateDispatchSettingModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.UpdateDispatchSettingModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.UpdateDispatchSettingModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.UpdateDispatchSettingModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Set isDoNotDispatch value for providers
      tags:
      - Providers
      x-access: Any
      x-codegen-request-body-name: updateDispatchSettingModel
  /providers/getProviderState:
    get:
      deprecated: false
      operationId: "GETv3_providers_getProviderState?providerId={providerId}"
      parameters:
      - in: query
        name: providerId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Providers
      x-access: Any
  /api/providers/IsSdiMobileEnabled:
    get:
      deprecated: false
      description: "True - if the FF is enabled for a provider and subscriber or for\
        \ a provider and location.\r\n            Otherwise it returns false."
      operationId: "GETv3_api_providers_IsSdiMobileEnabled?subscriberId={subscriberId}&locationId={locationId}"
      parameters:
      - description: Subscriber id
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      - description: Location id
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: The request succeeded and the information is retrieved.
      summary: Allows one to get information whether the SDIMobileInt flag is enabled.
      tags:
      - Providers
      x-access: Providers
  /providers/getESignatureSettings:
    get:
      deprecated: false
      operationId: "GETv3_providers_getESignatureSettings?workOrderId={workOrderId}"
      parameters:
      - description: Work order id
        in: query
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetESignatureSettingsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetESignatureSettingsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetESignatureSettingsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetESignatureSettingsResponse'
          description: The request succeeded and the information is retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 101 - Invalid provider id passed;\r\n            <br/> 401 -\
            \ Invalid subscriber Id;\r\n            <br/> 803 - Not provider user;\r\
            \n            <br/> 947 - Work order not found;\r\n            <br/> 2105\
            \ - Feature ReqElecSig is Off;"
      summary: Receives the Electronic Signature Settings for current user (authorized
        provider)
      tags:
      - Providers
      x-access: Any
  /locations/{locationId}/subscribe:
    post:
      deprecated: false
      description: "Subscribe Push Notification.\r\n            <br /><br />Available\
        \ for subscriber usage."
      operationId: "POSTv3_locations_{locationId}_subscribe"
      parameters:
      - description: Numeric Id of the Location to perform action with.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.PushNotificationSubscriptionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.PushNotificationSubscriptionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.PushNotificationSubscriptionRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.PushNotificationSubscriptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.PushNotificationSubscriptionRequest'
        description: The Subscription Push Notification request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Subscribe to Push Notifications
      tags:
      - PushNotifications
      x-access: Subscribers
      x-codegen-request-body-name: request
  /locations/{locationId}/push:
    get:
      deprecated: false
      description: Returns a list of email subscriptions
      operationId: "GETv3_locations_{locationId}_push?deviceToken={deviceToken}"
      parameters:
      - in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: deviceToken
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: List existing email subscriptions
      tags:
      - PushNotifications
      x-access: Subscribers
  /unsubscribe:
    delete:
      deprecated: false
      description: "Unsubscribe from Push Notifications.\r\n            <br /><br\
        \ />Available for subscriber usage."
      operationId: "DELETEv3_unsubscribe?deviceToken={deviceToken}"
      parameters:
      - description: "Device token: \"35353-335345-FAC342...\""
        in: query
        name: deviceToken
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Unsubscribe from Push Notifications
      tags:
      - PushNotifications
      x-access: Subscribers
  /locations/{locationId}/unsubscribe:
    delete:
      deprecated: false
      description: "Unsubscribe from Push Notifications.\r\n            <br /><br\
        \ />Available for subscriber usage."
      operationId: "DELETEv3_locations_{locationId}_unsubscribe?id={id}"
      parameters:
      - description: Numeric Id of the Location to perform action with.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric Id of the Subscription to perform action with.
        in: query
        name: id
        schema:
          format: int32
          type: integer
      - description: Required Device Token.
        in: query
        name: deviceToken
        required: true
        schema:
          type: string
      - description: "Device type: Android, iOS, Amazon"
        in: query
        name: deviceType
        required: true
        schema:
          enum:
          - Android
          - iOS
          - Amazon
          type: string
      - description: "Notification type: Check In , ...."
        in: query
        name: notificationType
        required: true
        schema:
          enum:
          - CheckIn
          - CheckOut
          - BadgeScanRequired
          type: string
      - description: "Application : ScMobile, FTM, ..."
        in: query
        name: application
        required: true
        schema:
          enum:
          - ScMobile
          type: string
      - explode: false
        in: query
        name: notificationRules.rules
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Unsubscribe from Push Notifications
      tags:
      - PushNotifications
      x-access: Subscribers
  /QualitySurvey/{recordId}:
    get:
      deprecated: false
      operationId: "GETv3_QualitySurvey_{recordId}"
      parameters:
      - description: The record id.
        in: path
        name: recordId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get.
      tags:
      - QualitySurvey
      x-access: Any
    put:
      deprecated: false
      operationId: "PUTv3_QualitySurvey_{recordId}?respondent={respondent}&creator={creator}&notes={notes}"
      parameters:
      - description: The record id.
        in: path
        name: recordId
        required: true
        schema:
          format: int32
          type: integer
      - description: The respondent.
        in: query
        name: respondent
        required: true
        schema:
          type: string
      - description: The creator.
        in: query
        name: creator
        required: true
        schema:
          type: string
      - description: The notes.
        in: query
        name: notes
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: The answer ids.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The put.
      tags:
      - QualitySurvey
      x-access: Any
      x-codegen-request-body-name: answerIds
  /api/QualitySurvey:
    get:
      deprecated: false
      operationId: "GETv3_api_QualitySurvey?recordId={recordId}"
      parameters:
      - description: The record id.
        in: query
        name: recordId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get.
      tags:
      - QualitySurvey
      x-access: Any
    put:
      deprecated: false
      operationId: "PUTv3_api_QualitySurvey?recordId={recordId}&respondent={respondent}&creator={creator}&notes={notes}"
      parameters:
      - description: The record id.
        in: query
        name: recordId
        required: true
        schema:
          format: int32
          type: integer
      - description: The respondent.
        in: query
        name: respondent
        required: true
        schema:
          type: string
      - description: The creator.
        in: query
        name: creator
        required: true
        schema:
          type: string
      - description: The notes.
        in: query
        name: notes
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: The answer ids.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The put.
      tags:
      - QualitySurvey
      x-access: Any
      x-codegen-request-body-name: answerIds
  /subscribers/{subscriberId}/QualitySurvey:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_{subscriberId}_QualitySurvey"
      parameters:
      - description: The subscriber id.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get quality survey.
      tags:
      - QualitySurvey
      x-access: Any
  /api/QualitySurvey/GetQualitySurvey:
    get:
      deprecated: false
      operationId: "GETv3_api_QualitySurvey_GetQualitySurvey?subscriberId={subscriberId}"
      parameters:
      - description: The subscriber id.
        in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: The get quality survey.
      tags:
      - QualitySurvey
      x-access: Any
  /refrigeranttracking/ChargeDescriptions:
    get:
      deprecated: false
      operationId: GETv3_refrigeranttracking_ChargeDescriptions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Get Charge Descriptions
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking:
    get:
      deprecated: false
      description: GetLeakTrackingPreferences
      operationId: "GETv3_refrigeranttracking?subscriberId={subscriberId}"
      parameters:
      - description: Subscriber Id
        in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:           \r\n\
            \            <br/> 502 - No Get Leak Tracking Preferences;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Get Leak Tracking Preferences
      tags:
      - RefrigerantTracking
      x-access: Any
    post:
      deprecated: false
      description: RackEquipment
      operationId: POSTv3_refrigeranttracking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.GetAvailableRacksRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.GetAvailableRacksRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.GetAvailableRacksRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.GetAvailableRacksRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.GetAvailableRacksRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:           \r\n\
            \            <br/> 502 - No Get Rack Equipments"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Get Rack Equipment
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
    put:
      deprecated: false
      description: Update/Insert Leak Tracking Preferences. Returns Success/NoSuccess
        request.
      operationId: PUTv3_refrigeranttracking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.PreferencesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.PreferencesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.PreferencesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.PreferencesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.PreferencesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 502 - No Update/Insert Leak Tracking Preferences;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Update/Insert Leak Tracking Preferences
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
  /refrigeranttracking/rack:
    get:
      deprecated: false
      description: Rack Connection
      operationId: "GETv3_refrigeranttracking_rack?id={id}"
      parameters:
      - in: query
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:           \r\n\
            \            <br/> 502 - No Get Rack Connection"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Get Rack Connection
      tags:
      - RefrigerantTracking
      x-access: Any
    post:
      deprecated: false
      description: Create/Update Rack Connection
      operationId: POSTv3_refrigeranttracking_rack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.CreateUpdateRackConnectionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.CreateUpdateRackConnectionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.CreateUpdateRackConnectionRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.CreateUpdateRackConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.CreateUpdateRackConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:           \r\n\
            \            <br/> 502 - No Get Rack Connection"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Create/Update Rack Connection
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
  /refrigeranttracking/{locationId}/GetRefrigerantSettings:
    get:
      deprecated: false
      description: GetRefrigerantSettingsByLocationId
      operationId: "GETv3_refrigeranttracking_{locationId}_GetRefrigerantSettings"
      parameters:
      - description: Location Id
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:           \r\n\
            \            <br/> 502 - No Refrigerant Setings;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Get Refrigerant settings by locationId
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/CheckRefrigerantTrackingAvailable:
    post:
      deprecated: false
      description: GetLeakTrackingPreferences
      operationId: POSTv3_refrigeranttracking_CheckRefrigerantTrackingAvailable
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: locationIds
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:           \r\n\
            \            <br/> 502 - No Get Leak Tracking Preferences;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Check if Refrigerant Tracking Available for list of locations
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: locationIds
  /refrigeranttracking/CheckRefrigerantTrackingAvailable_v1:
    post:
      deprecated: false
      description: GetLeakTrackingPreferences
      operationId: POSTv3_refrigeranttracking_CheckRefrigerantTrackingAvailable_v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.RefrigerantTracking.CheckRefrigerantTrackingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.RefrigerantTracking.CheckRefrigerantTrackingRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.RefrigerantTracking.CheckRefrigerantTrackingRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.RefrigerantTracking.CheckRefrigerantTrackingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Core.InternalRequests.RefrigerantTracking.CheckRefrigerantTrackingRequest'
        description: request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:           \r\n\
            \            <br/> 502 - No Get Leak Tracking Preferences;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Check if Refrigerant Tracking Available for list of locations
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
  /refrigeranttracking/{subscriberId}/GetRefrigerantUseReasonCodes:
    get:
      deprecated: false
      description: GetRefrigerantUseReasonCodes
      operationId: "GETv3_refrigeranttracking_{subscriberId}_GetRefrigerantUseReasonCodes"
      parameters:
      - description: Subscriber Id
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:           \r\n\
            \            <br/> 502 - No Get Leak Tracking Preferences;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Get Refrigerant Use Reason Codes
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/{assetId}/refrigerantusagesummary:
    get:
      deprecated: false
      operationId: "GETv3_refrigeranttracking_{assetId}_refrigerantusagesummary"
      parameters:
      - in: path
        name: assetId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 502 - No Update/Insert Leak Tracking Preferences;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Get refrigerant usage summary
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/subscribers:
    get:
      deprecated: false
      operationId: GETv3_refrigeranttracking_subscribers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 502 - No Update/Insert Leak Tracking Preferences;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Get SubscriberIds With RefrigerantTracking Feature Flag
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/leakrecord:
    put:
      deprecated: false
      operationId: PUTv3_refrigeranttracking_leakrecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 502 - No Update Leak Record;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: UpdateLeakRecord
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
  /refrigeranttracking/leakrecordV1:
    put:
      deprecated: false
      operationId: PUTv3_refrigeranttracking_leakrecordV1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 502 - No Update Leak Record;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: UpdateLeakRecord With Returns Detail Operation Result
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
  /refrigeranttracking/leakrecords:
    post:
      deprecated: false
      operationId: POSTv3_refrigeranttracking_leakrecords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Retrieve leak records by filter
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
  /refrigeranttracking/{trackingNumber}/leakRecord:
    get:
      deprecated: false
      operationId: "GETv3_refrigeranttracking_{trackingNumber}_leakRecord"
      parameters:
      - in: path
        name: trackingNumber
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Retrieve leak record by tracking number
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/CreateLeakRecordFollowupWo:
    post:
      deprecated: false
      operationId: "POSTv3_refrigeranttracking_CreateLeakRecordFollowupWo?leakRecordId={leakRecordId}&currentTrackingNumber={currentTrackingNumber}"
      parameters:
      - in: query
        name: leakRecordId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: currentTrackingNumber
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 502 - No Update/Insert Leak Tracking Preferences;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Creates Follow Up wo for non-closed leak records
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/leakRecord/faultCodes:
    get:
      deprecated: false
      operationId: GETv3_refrigeranttracking_leakRecord_faultCodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Retrieve leak record fault codes
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/isRefrigerantTrackingAvailable/{locationId}:
    get:
      deprecated: false
      operationId: "GETv3_refrigeranttracking_isRefrigerantTrackingAvailable_{locationId}"
      parameters:
      - in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 502 - No Update/Insert Leak Tracking Preferences;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/leakRecord/actionCodes:
    get:
      deprecated: false
      operationId: GETv3_refrigeranttracking_leakRecord_actionCodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Retrieve leak record action codes
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/retireretrofitplans:
    post:
      deprecated: false
      operationId: POSTv3_refrigeranttracking_retireretrofitplans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Retrieve retire retrofit plans
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
  /refrigeranttracking/leakNote:
    post:
      deprecated: false
      operationId: POSTv3_refrigeranttracking_leakNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakNoteRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakNoteRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakNoteRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakNoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakNoteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 502 - No Update/Insert Leak Tracking Preferences;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Add leak note
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
  /refrigeranttracking/{subscriberId}/leaklocations:
    get:
      deprecated: false
      operationId: "GETv3_refrigeranttracking_{subscriberId}_leaklocations"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 502 - No get Leak Locations;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Get leak locations
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/leakareas:
    get:
      deprecated: false
      operationId: GETv3_refrigeranttracking_leakareas
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 502 - No Get leak Areas;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Get leak areas
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/addLeakDetectorAudit:
    post:
      deprecated: false
      operationId: POSTv3_refrigeranttracking_addLeakDetectorAudit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakDetectorAuditAddUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakDetectorAuditAddUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakDetectorAuditAddUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakDetectorAuditAddUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakDetectorAuditAddUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 502 - No Get leak Areas;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Add leak detector audit
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
  /refrigeranttracking/getLeakDetectorLastAudit:
    get:
      deprecated: false
      operationId: "GETv3_refrigeranttracking_getLeakDetectorLastAudit?assetId={assetId}&recId={recId}"
      parameters:
      - in: query
        name: assetId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: recId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 502 - No Get leak Areas;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: get leak detector last audit
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/createChargeHistory:
    post:
      deprecated: false
      operationId: POSTv3_refrigeranttracking_createChargeHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.ChargeHistoryRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.ChargeHistoryRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.ChargeHistoryRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.ChargeHistoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.ChargeHistoryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content: {}
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Create Charge History
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: model
  /refrigeranttracking/addUpdateRefrigerationDetails:
    post:
      deprecated: false
      operationId: "POSTv3_refrigeranttracking_addUpdateRefrigerationDetails?equipmentId={equipmentId}"
      parameters:
      - in: query
        name: equipmentId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AssetRefrigerant'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AssetRefrigerant'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AssetRefrigerant'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AssetRefrigerant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AssetRefrigerant'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content: {}
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Add Update Refrigeration Details
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: model
  /refrigeranttracking/AddOrUpdateRefrigerationTypes:
    post:
      deprecated: false
      operationId: POSTv3_refrigeranttracking_AddOrUpdateRefrigerationTypes
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantType'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantType'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantType'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantType'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantType'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content: {}
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
  /refrigeranttracking/SaveRefrigerationDetails:
    post:
      deprecated: false
      operationId: POSTv3_refrigeranttracking_SaveRefrigerationDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.EditAssetRefrigerantRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.EditAssetRefrigerantRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.EditAssetRefrigerantRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.EditAssetRefrigerantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.EditAssetRefrigerantRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Add/Update Refrigeration Details for an asset
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: assetRefrigerant
  /refrigeranttracking/RefrigerantTypes:
    get:
      deprecated: false
      operationId: "GETv3_refrigeranttracking_RefrigerantTypes?subscriberId={subscriberId}"
      parameters:
      - in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 502 - No Get Refrigerant Types;"
      summary: Get refrigerant types
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/LeakVerificationMethods:
    get:
      deprecated: false
      operationId: GETv3_refrigeranttracking_LeakVerificationMethods
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LeakRecord.LeakVerifyMethod'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LeakRecord.LeakVerifyMethod'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LeakRecord.LeakVerifyMethod'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LeakRecord.LeakVerifyMethod'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the server encountered an unexpected condition
            that prevented it from fulfilling the request.
      summary: Get Leak Verification Methods
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/{assetTypeId}/getRefrigerantUseTypes:
    get:
      deprecated: false
      operationId: "GETv3_refrigeranttracking_{assetTypeId}_getRefrigerantUseTypes"
      parameters:
      - in: path
        name: assetTypeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content: {}
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      summary: Get refrigerant use types for equipment
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/GetRackTypeListItems:
    get:
      deprecated: false
      operationId: GETv3_refrigeranttracking_GetRackTypeListItems
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Get Rack Type List Items
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/OperationalStatuses:
    get:
      deprecated: false
      operationId: GETv3_refrigeranttracking_OperationalStatuses
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Get Operational Statuses
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/SystemLocations:
    get:
      deprecated: false
      operationId: GETv3_refrigeranttracking_SystemLocations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Get System Locations
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/{workOrderId}/isCompletedStatusesLimitedByRTSetup:
    get:
      deprecated: false
      operationId: "GETv3_refrigeranttracking_{workOrderId}_isCompletedStatusesLimitedByRTSetup"
      parameters:
      - in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Check If WO Status Is Limited By RTSetup
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/{workOrderId}/checkRefrigerantWasUsedIsValidForInvoiceableStatuses:
    get:
      deprecated: false
      operationId: "GETv3_refrigeranttracking_{workOrderId}_checkRefrigerantWasUsedIsValidForInvoiceableStatuses?refrigerantWasUsed={refrigerantWasUsed}"
      parameters:
      - in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: refrigerantWasUsed
        schema:
          enum:
          - "No"
          - "Yes"
          - EnterLater
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Check If Used Refrigerant Is Valid For Invoiceble Statuses
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/{workOrderId}/createLeakRecordFollowUpWoForStatusUpdate:
    post:
      deprecated: false
      operationId: "POSTv3_refrigeranttracking_{workOrderId}_createLeakRecordFollowUpWoForStatusUpdate"
      parameters:
      - in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Create Leak Record Follow Up WorkOrder
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/WOLeakVerification:
    post:
      deprecated: false
      operationId: POSTv3_refrigeranttracking_WOLeakVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Web.Http.Results.NotFoundResult'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Web.Http.Results.NotFoundResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Web.Http.Results.NotFoundResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Web.Http.Results.NotFoundResult'
          description: Indicates that the recId is not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the server encountered an unexpected condition
            that prevented it from fulfilling the request
      summary: Add WOLeakVerification
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
    put:
      deprecated: false
      operationId: PUTv3_refrigeranttracking_WOLeakVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Web.Http.Results.NotFoundResult'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Web.Http.Results.NotFoundResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Web.Http.Results.NotFoundResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Web.Http.Results.NotFoundResult'
          description: Indicates that the recId is not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the server encountered an unexpected condition
            that prevented it from fulfilling the request
      summary: Update WOLeakVerification
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
  /refrigeranttracking/WOLeakVerification/{trackingNumber}:
    get:
      deprecated: false
      operationId: "GETv3_refrigeranttracking_WOLeakVerification_{trackingNumber}"
      parameters:
      - in: path
        name: trackingNumber
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.RefrigerantTracking.WOLeakVerificationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.RefrigerantTracking.WOLeakVerificationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.RefrigerantTracking.WOLeakVerificationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.RefrigerantTracking.WOLeakVerificationResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Web.Http.Results.NotFoundResult'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Web.Http.Results.NotFoundResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Web.Http.Results.NotFoundResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Web.Http.Results.NotFoundResult'
          description: Indicates that the recId is not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the server encountered an unexpected condition
            that prevented it from fulfilling the request
      summary: Get WOLeakVerification by tracking number and assetId
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/LeakRecordImmearusable:
    post:
      deprecated: false
      operationId: POSTv3_refrigeranttracking_LeakRecordImmearusable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakImmeasurableRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakImmeasurableRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakImmeasurableRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakImmeasurableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakImmeasurableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Add entity to RT_LeakImmeasurable
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
    put:
      deprecated: false
      operationId: PUTv3_refrigeranttracking_LeakRecordImmearusable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakImmeasurable'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakImmeasurable'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakImmeasurable'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakImmeasurable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakImmeasurable'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Update entity to RT_LeakImmeasurable
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
  /refrigeranttracking/LeakRecordImmearusable/{trackingNumber}:
    get:
      deprecated: false
      operationId: "GETv3_refrigeranttracking_LeakRecordImmearusable_{trackingNumber}?assetid={assetid}"
      parameters:
      - in: path
        name: trackingNumber
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: assetid
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the server encountered an unexpected condition
            that prevented it from fulfilling the request
      summary: Get LeakImmeasurable by recId and assetID
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/DeleteLeakRecordImmeasurable:
    delete:
      deprecated: false
      operationId: "DELETEv3_refrigeranttracking_DeleteLeakRecordImmeasurable?id={id}"
      parameters:
      - in: query
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Deactivated LeakImmeasurable
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/leakrecords/{trackingNumber}:
    get:
      deprecated: false
      operationId: "GETv3_refrigeranttracking_leakrecords_{trackingNumber}"
      parameters:
      - in: path
        name: trackingNumber
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the server encountered an unexpected condition
            that prevented it from fulfilling the request
      summary: Get LeakRecords with LeakImmeasurable
      tags:
      - RefrigerantTracking
      x-access: Any
  /refrigeranttracking/BulkLeakrecords:
    post:
      deprecated: false
      operationId: POSTv3_refrigeranttracking_BulkLeakrecords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakImmeasurableBulkChangeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakImmeasurableBulkChangeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakImmeasurableBulkChangeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakImmeasurableBulkChangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakImmeasurableBulkChangeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the server encountered an unexpected condition
            that prevented it from fulfilling the request
      summary: BulkLeakrecords
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: request
  /refrigeranttracking/LeakInspectionComplianceAcknowledgement:
    post:
      deprecated: false
      operationId: POSTv3_refrigeranttracking_LeakInspectionComplianceAcknowledgement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakInspectionComplianceAcknowledgement'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakInspectionComplianceAcknowledgement'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakInspectionComplianceAcknowledgement'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakInspectionComplianceAcknowledgement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.LeakInspectionComplianceAcknowledgement'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Add Leak Inspection Compliance Acknowledgement
      tags:
      - RefrigerantTracking
      x-access: Any
      x-codegen-request-body-name: model
  /resolutionCodes:
    get:
      deprecated: false
      description: Returns a list of resolution codes. Resolution codes are set up
        for trades and describe actions that a technician takes to resolve a problem
        upon working on a service request.
      operationId: "GETv3_resolutionCodes?subscriberId={subscriberId}&trade={trade}&category={category}&locationId={locationId}&providerId={providerId}&assetCategoryIds[0]={assetCategoryIds[0]}&assetCategoryIds[1]={assetCategoryIds[1]}&keyword={keyword}&page={page}&pageSize={pageSize}"
      parameters:
      - description: Unique subscriber identifier.
        in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Trade to return resolution codes for. A trade is an area of\
          \ work for which a service is performed, such as _HVAC_, _Refrigeration_,\
          \ or _Plumbing_."
        in: query
        name: trade
        required: true
        schema:
          type: string
      - description: "Category to return resolution codes for. A category is the overall\
          \ classification of a work order, such as _Maintenance_, _Repair_, or _CAPEX_."
        in: query
        name: category
        required: true
        schema:
          type: string
      - description: Unique identifier of a subscriber’s location.
        in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Unique provider identifier. Should be passed by subscriber users.
        in: query
        name: providerId
        schema:
          format: int32
          type: integer
      - description: IDs of asset categories to return resolution codes for. You can
          specify up to 5 asset categories if you have access to this functionality.
        explode: true
        in: query
        name: assetCategoryIds
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Keyword contained in resolution codes to perform the search by.
        in: query
        name: keyword
        schema:
          type: string
      - description: Results page number.
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of objects on the results page. The default is 10.
        in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.ResolutionCode'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.ResolutionCode'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.ResolutionCode'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.ResolutionCode'
                type: array
          description: Resolution codes are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     4113 — You can specify up to 5 asset categories"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes: \r\n\
            \            4114 — You don't have access to asset categories"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Get resolution codes
      tags:
      - ResolutionCodes
      x-access: Any
    post:
      deprecated: false
      description: "Associates resolution codes with the specified work order. If\
        \ resolution codes are already added to a work order, you can change them\
        \ by sending the request.\r\n            <br />Learn [how providers can add\
        \ or edit resolution codes](https://servicechannel.atlassian.net/wiki/spaces/SCUCP/pages/1688502858/Resolution+and+Root+Causes+Codes+in+Provider+Automation#ResolutionandRootCausesCodesinProviderAutomation-ProcessingRRCsProcessingResolutionandRootCauseCodes)\
        \ in ServiceChannel University.\r\n            <br />**Example Requests**\r\
        \n                \r\n              OPTION 1:\r\n                POST /resolutionCodes\r\
        \n                {\r\n                   \"WorkOrderId\": 158716211,\r\n\
        \                   \"ResolutionCodeIds\": [\r\n                     2145,\
        \ 2147\r\n                 ],\r\n                   \"ResolutionCodes\": []\r\
        \n                }\r\n                \r\n              OPTION 2:\r\n   \
        \             POST /resolutionCodes\r\n                {\r\n             \
        \      \"WorkOrderId\": 158716211,\r\n                   \"ResolutionCodeIds\"\
        : [],\r\n                   \"ResolutionCodes\": [\r\n                   \
        \ {\r\n                     \"Key\": 2189,\r\n                     \"Text\"\
        : \"Repair wings\",\r\n                     \"AssetCategoryId\": 5\r\n   \
        \                 },\r\n                    {\r\n                     \"Key\"\
        : 2146,\r\n                     \"Text\": \"\",\r\n                     \"\
        AssetCategoryId\": 2\r\n                    }\r\n                   ]\r\n\
        \                }"
      operationId: POSTv3_resolutionCodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateResolutionCodesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateResolutionCodesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateResolutionCodesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateResolutionCodesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateResolutionCodesRequest'
        description: "Request to add or update resolution codes for a work order.\
          \ \r\n            <br />**Required parameters:**\r\n             • `WorkOrderId`.\
          \ Unique numeric identifier of the work order to add resolution codes to.\r\
          \n             • Use one of the following collections to add resolution\
          \ codes. To get resolution code IDs, send the [GET /resolutionCodes](https://developer.servicechannel.com/swagger/ui/index?version=3#/ResolutionCodes/GETv3_resolutionCodes_subscriberId__subscriberId__trade__trade__category__category__locationId__locationId__providerId__providerId__assetCategoryIds_0___assetCategoryIds_0___assetCategoryIds_1___assetCategoryIds_1___keyword__keyword__page__page__pageSize__pageSize_)\
          \ request, and look for the `Key` value of the desired code in the response.\
          \ \r\n              ◦ `ResolutionCodeIds`. Enter resolution code IDs separated\
          \ by commas.\r\n              ◦ `ResolutionCodes`. For each resolution code\
          \ you want to add, pass an object with the following parameters: `Key`,\
          \ `Text` — optional comment for resolution codes with the `HasFreeText`\
          \ attribute, and `AssetCategoryId` (required if you have access to asset\
          \ categories).\r\n            <br />Users who have access to asset categories\
          \ should add 1–3 resolution codes for each asset category associated with\
          \ a work order. Otherwise, you can specify up to 3 resolution codes for\
          \ a work order."
        required: true
      responses:
        "200":
          content: {}
          description: Resolution codes are added to the specified work order.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     4100 — You can specify up to 3 resolution codes for a work order\r\
            \n            4101 — You need to specify at least one resolution code\r\
            \n            4108 — The max length of the resolution code text is exceeded\r\
            \n            4109 — Resolution code text must be unique\r\n         \
            \   4110 — Resolution code without free text must be unique\r\n      \
            \      4122 — You need to specify up to 3 resolution codes per asset category\
            \ for all asset categories assigned to the work order"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes: \r\n\
            \            4107 — You don't have access to set the resolution code text"
        "404":
          content: {}
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            502 — Data nor found"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Add or update resolution codes for a work order
      tags:
      - ResolutionCodes
      x-access: Any
      x-codegen-request-body-name: request
  /resolutionCodes/{workOrderId}:
    get:
      deprecated: false
      description: "Returns resolution codes and root causes for the specified work\
        \ order.\r\n             • A **resolution code** is an action that a technician\
        \ takes to resolve a problem upon working on a service request.\r\n      \
        \       • A **root cause** is a reason why the problem occurred to begin with.\r\
        \n            <br />Resolution codes and root causes are set up for specific\
        \ trades and are standardized. If there are resolution codes and root causes\
        \ configured for a work order trade, a technician is prompted to select these\
        \ properties upon [checking out of a work order](https://servicechannel.atlassian.net/wiki/spaces/SCUCP/pages/622396960/Checking+In+and+Out+of+Work+Orders+Using+SC+Provider#CheckingInandOutofWorkOrdersUsingSCProvider-CheckingOutwithResolutionandRootCauseCodes)\
        \ and moving it to the _Completed_ status in ServiceChannel Provider."
      operationId: "GETv3_resolutionCodes_{workOrderId}"
      parameters:
      - description: Unique identifier of the work order to return resolution codes
          and root causes for.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderResolutionInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderResolutionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderResolutionInfo'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderResolutionInfo'
          description: Resolution codes and root causes for the specified work order
            are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content: {}
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            502 — Data not found"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Get resolution codes and root causes for a work order
      tags:
      - ResolutionCodes
      x-access: Any
  /resolutionCodes/rootCauses:
    get:
      deprecated: false
      description: Returns a list of root causes. Root causes are set up for trades
        and describe reasons why the problem occurred to begin with.
      operationId: "GETv3_resolutionCodes_rootCauses?subscriberId={subscriberId}&trade={trade}&category={category}&locationId={locationId}&providerId={providerId}&assetCategoryIds[0]={assetCategoryIds[0]}&assetCategoryIds[1]={assetCategoryIds[1]}&keyword={keyword}&page={page}&pageSize={pageSize}"
      parameters:
      - description: Unique subscriber identifier.
        in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Trade to return root causes for. A trade is an area of work\
          \ for which a service is performed, such as _HVAC_, _Refrigeration_, or\
          \ _Plumbing_."
        in: query
        name: trade
        required: true
        schema:
          type: string
      - description: "Category to return root causes for. A category is the overall\
          \ classification of a work order, such as _Maintenance_, _Repair_, or _CAPEX_."
        in: query
        name: category
        required: true
        schema:
          type: string
      - description: Unique identifier of a subscriber’s location.
        in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Unique provider identifier. Should be passed by subscriber users.
        in: query
        name: providerId
        schema:
          format: int32
          type: integer
      - description: IDs of asset categories to return root causes for. You can specify
          up to 5 asset categories if you have access to this functionality.
        explode: true
        in: query
        name: assetCategoryIds
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Keyword contained in root causes to perform the search by.
        in: query
        name: keyword
        schema:
          type: string
      - description: Results page number.
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of objects on the results page. The default is 10.
        in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.RootCause'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.RootCause'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.RootCause'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.RootCause'
                type: array
          description: Root causes are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     4113 — You can specify up to 5 asset categories"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes: \r\n\
            \            4114 — You don't have access to asset categories"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Get root causes
      tags:
      - ResolutionCodes
      x-access: Any
    post:
      deprecated: false
      description: "For users who have access to asset categories, associates root\
        \ causes with the specified work order. If root causes are already added to\
        \ a work order, you can replace them by sending the request. You need to specify\
        \ one root cause for each asset category of a work order.\r\n            <br\
        \ />Get root cause IDs using the [GET /resolutionCodes/rootCauses](https://developer.servicechannel.com/swagger/ui/index?version=3#/ResolutionCodes/GETv3_resolutionCodes_rootCauses_subscriberId__subscriberId__trade__trade__category__category__locationId__locationId__providerId__providerId__assetCategoryIds_0___assetCategoryIds_0___assetCategoryIds_1___assetCategoryIds_1___keyword__keyword__page__page__pageSize__pageSize_)\
        \ method. To retrieve asset category IDs, send the [GET /AssetTypes/GetAssetTypeGroups](https://developer.servicechannel.com/swagger/ui/index?version=3#/AssetTypes/GETv3_AssetTypes_GetAssetTypeGroups_subscriberId__subscriberId_)\
        \ request.\r\n            <br />***Note:*** Users who don't have access to\
        \ asset categories should pass the [POST /resolutionCodes/rootCauses/{workOrderId}](https://developer.servicechannel.com/swagger/ui/index?version=3#/ResolutionCodes/POSTv3_resolutionCodes_rootCauses__workOrderId__rootCauseId__rootCauseId__rootCauseText__rootCauseText_)\
        \ request to add or update a root cause for a work order.\r\n            <br\
        \ />Visit ServiceChannel University to find out [how providers can add or\
        \ edit root causes](https://servicechannel.atlassian.net/wiki/spaces/SCUCP/pages/1688502858/Resolution+and+Root+Causes+Codes+in+Provider+Automation#ResolutionandRootCausesCodesinProviderAutomation-ProcessingRRCsProcessingResolutionandRootCauseCodes).\r\
        \n            <br />**Example Request**\r\n            \r\n              \
        \ POST /resolutionCodes/rootCauses\r\n               {\r\n               \
        \  \"WorkOrderId\": 175444600,\r\n                 \"RootCauses\": [\r\n \
        \                 {\r\n                    \"Key\": 419,\r\n             \
        \       \"Text\": \"Accidental damage\",\r\n                    \"AssetCategoryId\"\
        : 1\r\n                  },\r\n                  {\r\n                   \
        \ \"Key\": 420,\r\n                    \"Text\": \"\",\r\n               \
        \     \"AssetCategoryId\": 2\r\n                  }\r\n                ]\r\
        \n               }"
      operationId: POSTv3_resolutionCodes_rootCauses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateRootCausesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateRootCausesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateRootCausesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateRootCausesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateRootCausesRequest'
        description: Request to add or update root causes for a work order.
        required: true
      responses:
        "200":
          content: {}
          description: Root causes are added to the specified work order.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     4102 - You need to select a root cause\r\n            4105 - The\
            \ max length of the root cause text is exceeded\r\n            4117 -\
            \ The work order doesn't have assigned asset categories. You need to specify\
            \ at least one asset category\r\n            4118 - You need to specify\
            \ one root cause per asset category for all asset categories assigned\
            \ to the work order\r\n            4120 - Asset category is required"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason. \r\n            <br/>Error codes:\r\n\
            \            4104 — You don't have access to set the root cause tex\r\n\
            \            4114 — You don't have access to asset categories"
        "404":
          content: {}
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            502 — Data not found"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Add or update root causes for a work order
      tags:
      - ResolutionCodes
      x-access: Any
      x-codegen-request-body-name: request
  /resolutionCodes/rootCauses/{workOrderId}:
    post:
      deprecated: false
      description: "For users who don't have access to asset categories, associates\
        \ a root cause with the specified work order. If a root cause is already added\
        \ to a work order, you can change it by sending the request.\r\n         \
        \   <br />Before adding a root cause, use the [GET /resolutionCodes/rootCauses](https://developer.servicechannel.com/swagger/ui/index?version=3#/ResolutionCodes/GETv3_resolutionCodes_rootCauses_subscriberId__subscriberId__trade__trade__category__category__locationId__locationId__providerId__providerId__assetCategoryIds_0___assetCategoryIds_0___assetCategoryIds_1___assetCategoryIds_1___keyword__keyword__page__page__pageSize__pageSize_)\
        \ method to find out if root causes are configured for the work order trade.\
        \ To get a root cause ID, look for the `Key` value of the desired root cause\
        \ in the response.\r\n            <br /> ***Note:*** Users with access to\
        \ asset categories should send the following request to add or update root\
        \ causes for a work order: [POST /resolutionCodes/rootCauses](https://developer.servicechannel.com/swagger/ui/index?version=3#/ResolutionCodes/POSTv3_resolutionCodes_rootCauses)."
      operationId: "POSTv3_resolutionCodes_rootCauses_{workOrderId}?rootCauseId={rootCauseId}&rootCauseText={rootCauseText}"
      parameters:
      - description: "Unique numeric identifier of the work order to add, update,\
          \ or delete a root cause for."
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      - description: ID of the root cause to associate with the work order. Ignore
          this parameter to remove the current root causes from the work order.
        in: query
        name: rootCauseId
        schema:
          format: int32
          type: integer
      - description: Comment explaining your understanding of the root cause of the
          work order.<br />Enabled for root causes with the `HasFreeText` attribute.
          The maximum length is 100 characters.
        in: query
        name: rootCauseText
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The root cause is added to the specified work order.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     4102 — You need to select a root cause\r\n            4105 — The\
            \ max length of the root cause text is exceeded"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason. \r\n            <br/>Error codes: \r\
            \n            4104 - You don't have access to set root cause text\r\n\
            \            4121 - You must use a method to set multiple root causes\
            \ when you have access to asset categories"
        "404":
          content: {}
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            502 — Data nor found"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Add or update root causes for a work order
      tags:
      - ResolutionCodes
      x-access: Any
  /resolutionCodes/{workOrderId}/assetCategories:
    get:
      deprecated: false
      description: "Returns asset categories associated with the specified work order.\
        \ Asset categories represent a standardized classification of asset types.\r\
        \n            <br />***Note:*** Only users who have access to asset categories\
        \ can send this request."
      operationId: "GETv3_resolutionCodes_{workOrderId}_assetCategories"
      parameters:
      - description: Unique numeric identifier of the work order to return asset categories
          for.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetTypeCategory'
          description: Asset categories for the specified work order are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason. \r\n            <br/>Error codes: \r\
            \n            4114 - You don't have access to asset categories"
        "404":
          content: {}
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            502 — Data not found"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Retrieve asset categories for a work order
      tags:
      - ResolutionCodes
      x-access: Any
    post:
      deprecated: false
      description: "Associates asset categories with the specified work order. Sending\
        \ this request replaces the current asset categories.\r\n            <br />Asset\
        \ categories represent a standardized classification of asset types. You can\
        \ add no more than 5 asset categories to a work order.\r\n            <br\
        \ />***Note:*** Only users who have access to asset categories can send this\
        \ request.    \r\n            <br />**Example Request**\r\n            \r\n\
        \               POST /resolutionCodes/{workOrderId}/assetCategories\r\n  \
        \             {\r\n                 \"AssetCategoryIds\": [\r\n          \
        \         1, 4, 6\r\n                 ]\r\n               }"
      operationId: "POSTv3_resolutionCodes_{workOrderId}_assetCategories"
      parameters:
      - description: Unique numeric identifier of the work order to add asset categories
          to.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateAssetCategoriesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateAssetCategoriesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateAssetCategoriesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateAssetCategoriesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.UpdateAssetCategoriesRequest'
        description: Request to add or update asset categories for a work order.
        required: true
      responses:
        "200":
          content: {}
          description: Asset categories are added to the specified work order.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     4113 - You can specify up to 5 asset categories\r\n            4115\
            \ - You need to specify at least one asset category\r\n            4116\
            \ - Invalid asset category id"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason. \r\n            <br/>Error codes: \r\
            \n            4114 - You don't have access to asset categories"
        "404":
          content: {}
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            502 — Data not found"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Add or update asset categories for a work order
      tags:
      - ResolutionCodes
      x-access: Any
      x-codegen-request-body-name: request
  /rfps:
    post:
      deprecated: false
      description: "Creates a request for proposal (RFP). Returns a unique RFP ID\
        \ for a successful request.\r\n            <br />***Note:*** Subscribers can\
        \ create RFPs [using the API](https://developer.servicechannel.com/guides/proposals/create-and-manage-RFPs/#create-an-rfp)\
        \ or via [Service Automation](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/560300086/Creating+an+RFP).\r\
        \n            <br />**Example Request**\r\n            \r\n              \
        \  POST /rfps\r\n                {\r\n                   \"Number\": \"\"\
        ,\r\n                   \"PONumber\": \"\",\r\n                   \"WONumber\"\
        : \"\",\r\n                   \"TradeId\": 90480,\r\n                   \"\
        Description\": \"New doors for the office\",\r\n                   \"Date\"\
        : \"\",\r\n                   \"DueHrs\": 48,\r\n                   \"DueDate\"\
        : \"\",\r\n                   \"Location\": {\r\n                      \"\
        Id\": 2006071467,\r\n                      \"StoreId\": \"\"\r\n         \
        \          },\r\n                   \"ProviderId\": 2000090505,\r\n      \
        \             \"ResponseDate\": \"\",\r\n                   \"ProposalNotificationEmail\"\
        : \"LFAlways1776@gmail.com\",\r\n                   \"ProviderEmail\": \"\"\
        ,\r\n                   \"ProposalTemplateId\": 0,\r\n                   \"\
        WorkOrderId\": 0,\r\n                   \"ProjectId\": 0\r\n             \
        \   }"
      operationId: POSTv3_rfps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.CreateRfpRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.CreateRfpRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.CreateRfpRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.CreateRfpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.CreateRfpRequest'
        description: The request to create an RFP.
        required: true
      responses:
        "201":
          content: {}
          description: "The RFP is created, and a unique RFP ID is returned in the\
            \ response."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 — Request is empty or null\r\n            503 — Provider is\
            \ not valid\r\n            503 — Empty E-Mail address ('ProposalNotificationEmail')\r\
            \n            503 — TradeId is not valid\r\n            503 — Empty Description\r\
            \n            503 — Empty Location or Store ID\r\n            503 — Invalid\
            \ location Id for current user\r\n            503 — Active contract for\
            \ current trade, provider, locationId not found\r\n            503 — Empty\
            \ Provider E-Mail address ('ProviderEmail')"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions\r\n    \
            \        504 — User does not have Location or Trade access to perform\
            \ this operation"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Create an RFP
      tags:
      - Rfps
      x-access: Subscribers
      x-codegen-request-body-name: request
  /rfps/{rfpId}/assign:
    put:
      deprecated: false
      description: "Assigns the RFP to the specified provider. Returns a unique RFP\
        \ ID for a successful request.\r\n            <br />***Note:*** The provider\
        \ you want to assign the RFP to should have access to the location and trade\
        \ for which the RFP was created.\r\n            <br />Learn more about [assigning\
        \ an RFP to another provider](https://developer.servicechannel.com/guides/proposals/create-and-manage-RFPs/#assign-an-rfp-to-another-provider).\r\
        \n            <br />**Example Request**\r\n            \r\n              \
        \  PUT /rfps/{rfpId}/assign\r\n                {\r\n                   \"\
        ProviderId\": 2000090505,\r\n                   \"ProviderEmail\": \"\"\r\n\
        \                }"
      operationId: "PUTv3_rfps_{rfpId}_assign"
      parameters:
      - description: The unique numeric identifier of the RFP to assign to the specified
          provider.
        in: path
        name: rfpId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.AssignRfpRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.AssignRfpRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.AssignRfpRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.AssignRfpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.AssignRfpRequest'
        description: The request to assign the RFP to another provider.
        required: true
      responses:
        "200":
          content: {}
          description: "The RFP is assigned to the specified provider, and a unique\
            \ RFP ID is returned in the response."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — RFP not found\r\n            503 — Request is empty or null\r\
            \n            503 — Provider is not valid\r\n            503 — Empty Provider\
            \ E-Mail address ('ProviderEmail')"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Assign an RFP to another provider
      tags:
      - Rfps
      x-access: Subscribers
      x-codegen-request-body-name: request
  /rfps/{id}:
    delete:
      deprecated: false
      description: "Permanently deletes the specified RFP by its ID. It cannot be\
        \ undone. Find out more about [deleting RFPs via the API](https://developer.servicechannel.com/guides/proposals/create-and-manage-RFPs/#delete-an-rfp)."
      operationId: "DELETEv3_rfps_{id}"
      parameters:
      - description: The unique numeric identifier of the RFP to delete.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: "The RFP is deleted, and the response is intentionally blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — RFP not found\r\n            503 — RFP can only be deleted,\
            \ if none of the proposals are approved"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content: {}
          description: The requested resource does not exist on the server.
      summary: Delete an RFP by ID
      tags:
      - Rfps
      x-access: Subscribers
  /rfps/{number}/locations/{locationId}:
    delete:
      deprecated: false
      description: "Permanently deletes the RFP by the specified RFP number and location\
        \ ID. It cannot be undone.\r\n            <br />***Note:*** The RFP number\
        \ is not unique. If multiple RFPs with the same number were created for a\
        \ location, all of them are deleted when you pass the request.\r\n       \
        \     <br />Learn more about [deleting RFPs via the API](https://developer.servicechannel.com/guides/proposals/create-and-manage-RFPs/#delete-an-rfp)."
      operationId: "DELETEv3_rfps_{number}_locations_{locationId}"
      parameters:
      - description: The non-unique identifier of the RFP to delete.
        in: path
        name: number
        required: true
        schema:
          type: string
      - description: The unique numeric identifier of the location for which the RFP
          was created.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: "The RFP is deleted, and the response is intentionally blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — RFP not found\r\n            503 — RFP can only be deleted,\
            \ if none of the proposals are approved"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content: {}
          description: The requested resource does not exist on the server.
      summary: Delete an RFP by the RFP number and location ID
      tags:
      - Rfps
      x-access: Subscribers
  /roles/FeedRoles:
    get:
      deprecated: false
      operationId: GETv3_roles_FeedRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.PrimaryRoles.PrimaryRolesInfo'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.PrimaryRoles.PrimaryRolesInfo'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.PrimaryRoles.PrimaryRolesInfo'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.PrimaryRoles.PrimaryRolesInfo'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      tags:
      - Roles
      x-access: Subscribers
  /saml/idpConfig:
    get:
      deprecated: false
      operationId: "GETv3_saml_idpConfig?key={key}"
      parameters:
      - description: Identity Provider Key
        in: query
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Returns Identity Provider Configuration
      tags:
      - Saml
      x-access: Any
  /ScConnector/WorkorderCreated:
    post:
      deprecated: false
      operationId: POSTv3_ScConnector_WorkorderCreated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
        description: Created workorder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: XmlIntegration callout. Called when workorder created
      tags:
      - ScConnector
      x-access: Any
      x-codegen-request-body-name: msg
  /ScConnector/WorkorderUpdated:
    post:
      deprecated: false
      operationId: POSTv3_ScConnector_WorkorderUpdated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: XmlIntegration callout. Called when workorder updated
      tags:
      - ScConnector
      x-access: Any
      x-codegen-request-body-name: msg
  /ScConnector/SubContractorWorkorderCreated:
    post:
      deprecated: false
      operationId: POSTv3_ScConnector_SubContractorWorkorderCreated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: XmlIntegration callout. Called when subcontractor workorder created
      tags:
      - ScConnector
      x-access: Any
      x-codegen-request-body-name: msg
  /ScConnector/SubContractorWorkorderUpdated:
    post:
      deprecated: false
      operationId: POSTv3_ScConnector_SubContractorWorkorderUpdated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: XmlIntegration callout. Called when subcontractor workorder updated
      tags:
      - ScConnector
      x-access: Any
      x-codegen-request-body-name: msg
  /ScConnector/CheckInOut:
    post:
      deprecated: false
      operationId: POSTv3_ScConnector_CheckInOut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.CheckInOutNotificationObject'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.CheckInOutNotificationObject'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.CheckInOutNotificationObject'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.CheckInOutNotificationObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.CheckInOutNotificationObject'
        description: CheckInOut
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Called when subcontractor workorder CheckInOut
      tags:
      - ScConnector
      x-access: Any
      x-codegen-request-body-name: checkinActivity
  /ScConnector/SyncNotes:
    post:
      deprecated: false
      operationId: POSTv3_ScConnector_SyncNotes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Connector sync notes process
      tags:
      - ScConnector
      x-access: Any
  /ScConnector/SyncAssets:
    post:
      deprecated: false
      operationId: POSTv3_ScConnector_SyncAssets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Connector sync asset process
      tags:
      - ScConnector
      x-access: Any
      x-codegen-request-body-name: notificationObject
  /ScConnector/SyncResolutionCodes:
    post:
      deprecated: false
      operationId: POSTv3_ScConnector_SyncResolutionCodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Connector sync Resolution codes process
      tags:
      - ScConnector
      x-access: Any
      x-codegen-request-body-name: notificationObject
  /ScConnector/SyncAssetsValidation:
    post:
      deprecated: false
      operationId: POSTv3_ScConnector_SyncAssetsValidation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Connector sync asset validation process
      tags:
      - ScConnector
      x-access: Any
      x-codegen-request-body-name: notificationObject
  /servicerequest/providers:
    get:
      deprecated: false
      description: "Returns providers for specified location and trade or equipment.\
        \ If no location, trade specified in request equipment values are used.\r\n\
        \            <br /><br />Available for provider and subscriber usage."
      operationId: "GETv3_servicerequest_providers?locationId={locationId}&trade={trade}&equipmentType={equipmentType}&providerRank={providerRank}&equipmentId={equipmentId}"
      parameters:
      - description: Location Id
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: Trade
        in: query
        name: trade
        schema:
          type: string
      - description: Equipment type
        in: query
        name: equipmentType
        schema:
          type: string
      - description: Sets default provider with specified rank
        in: query
        name: providerRank
        schema:
          format: int32
          type: integer
      - description: Sets default provider for specified equipment id
        in: query
        name: equipmentId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetServiceRequestProvidersResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetServiceRequestProvidersResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetServiceRequestProvidersResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.GetServiceRequestProvidersResponse'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
      summary: Get list of providers per service request
      tags:
      - ServiceRequest
      x-access: Any
  /subscribers/current/servicerequest/info:
    get:
      deprecated: false
      description: "Retrieves supporting info for \"Create Work Order\" operation.\r\
        \n            <br /><br />This method can only be used for subscriber's users\
        \ that have assigned dashboard."
      operationId: "GETv3_subscribers_current_servicerequest_info?AreaName={AreaName}&ProblemType={ProblemType}&EquipmentType={EquipmentType}&ProblemCode={ProblemCode}&LocationId={LocationId}&SetupId={SetupId}&CallDate={CallDate}"
      parameters:
      - description: Name of the area
        in: query
        name: areaName
        schema:
          type: string
      - description: Problem type
        in: query
        name: problemType
        schema:
          type: string
      - description: Equipment type
        in: query
        name: equipmentType
        schema:
          type: string
      - description: Problem name
        in: query
        name: problemCode
        schema:
          type: string
      - description: ID of a location
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: SetupId
        in: query
        name: setupId
        schema:
          format: int32
          type: integer
      - description: Call Date
        in: query
        name: callDate
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoResponse'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 917 - Invalid work order identifier. Returned if workorderId\
            \ is &lt;= 0;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      summary: Get Service Request Info
      tags:
      - ServiceRequest
      x-access: Subscribers
  /subscribers/current/servicerequest/info/nosettings:
    get:
      deprecated: false
      description: "Retrieves supporting info for \"Create Work Order\" operation.\r\
        \n            <br /><br />This method can only be used for subscriber's users\
        \ that have assigned dashboard."
      operationId: "GETv3_subscribers_current_servicerequest_info_nosettings?AreaName={AreaName}&ProblemType={ProblemType}&EquipmentType={EquipmentType}&ProblemCode={ProblemCode}&LocationId={LocationId}&SetupId={SetupId}&CallDate={CallDate}"
      parameters:
      - description: Name of the area
        in: query
        name: areaName
        schema:
          type: string
      - description: Problem type
        in: query
        name: problemType
        schema:
          type: string
      - description: Equipment type
        in: query
        name: equipmentType
        schema:
          type: string
      - description: Problem name
        in: query
        name: problemCode
        schema:
          type: string
      - description: ID of a location
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: SetupId
        in: query
        name: setupId
        schema:
          format: int32
          type: integer
      - description: Call Date
        in: query
        name: callDate
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoResponse'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 917 - Invalid work order identifier. Returned if workorderId\
            \ is &lt;= 0;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      summary: Get Service Request Info Without Dashboard Settings
      tags:
      - ServiceRequest
      x-access: Subscribers
  /subscribers/current/servicerequest/addresses:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_current_servicerequest_addresses?SubscriberId={SubscriberId}&SetupId={SetupId}&LocationId={LocationId}&ProviderId={ProviderId}&Trade={Trade}"
      parameters:
      - in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: setupId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: providerId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: trade
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - Request data is empty;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      tags:
      - ServiceRequest
      x-access: Any
  /providers/current/subscribers/{subscriberId}/applicationissuechoice/servicerequest/info:
    get:
      deprecated: false
      operationId: "GETv3_providers_current_subscribers_{subscriberId}_applicationissuechoice_servicerequest_info?AreaName={AreaName}&ProblemType={ProblemType}&EquipmentType={EquipmentType}&ProblemCode={ProblemCode}&LocationId={LocationId}&SetupId={SetupId}&CallDate={CallDate}"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: Name of the area
        in: query
        name: areaName
        schema:
          type: string
      - description: Problem type
        in: query
        name: problemType
        schema:
          type: string
      - description: Equipment type
        in: query
        name: equipmentType
        schema:
          type: string
      - description: Problem name
        in: query
        name: problemCode
        schema:
          type: string
      - description: ID of a location
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: SetupId
        in: query
        name: setupId
        schema:
          format: int32
          type: integer
      - description: Call Date
        in: query
        name: callDate
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoRequest'
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Unauthorized indicates that the requested resource requires\
            \ authentication.\r\n            <br/>Error codes:\r\n            <br/>\
            \ 504 - API call rejected by security permissions;"
      tags:
      - ServiceRequest
      x-access: Providers
  /providers/current/subscriber/{subscriberId}/location/{locationId}/applicationissuechoice/servicerequest/info:
    get:
      deprecated: false
      operationId: "GETv3_providers_current_subscriber_{subscriberId}_location_{locationId}_applicationissuechoice_servicerequest_info"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - ServiceRequest
      x-access: Providers
  /sso/clients/register:
    post:
      deprecated: false
      operationId: POSTv3_sso_clients_register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SingleSignOn.RegisterSsoClientRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SingleSignOn.RegisterSsoClientRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SingleSignOn.RegisterSsoClientRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SingleSignOn.RegisterSsoClientRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SingleSignOn.RegisterSsoClientRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - SingleSignOn
      x-access: Any
      x-codegen-request-body-name: request
  /sso/clients/{clientIdentifier}/delete:
    delete:
      deprecated: false
      operationId: "DELETEv3_sso_clients_{clientIdentifier}_delete"
      parameters:
      - in: path
        name: clientIdentifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - SingleSignOn
      x-access: Any
  /sso/clients/{clientIdentifier}/deactivate:
    put:
      deprecated: false
      operationId: "PUTv3_sso_clients_{clientIdentifier}_deactivate"
      parameters:
      - in: path
        name: clientIdentifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - SingleSignOn
      x-access: Any
  /sso/clients/{clientIdentifier}/activate:
    put:
      deprecated: false
      operationId: "PUTv3_sso_clients_{clientIdentifier}_activate"
      parameters:
      - in: path
        name: clientIdentifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - SingleSignOn
      x-access: Any
  /subscribers/current/locations/{locationId}/siteaudit/templateTypes:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_current_locations_{locationId}_siteaudit_templateTypes"
      parameters:
      - description: Location identifier
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Get available audit types for specified location
      tags:
      - SiteAudit
      x-access: Subscribers
  /subscribers/current/locations/{locationId}/siteaudit/templateTypes/{templateTypeId}/auditInfo:
    get:
      deprecated: false
      description: "Audit can be created from:\r\n            - completed audit data\r\
        \n            - setup (templates) data\r\n            - mixed completed +\
        \ setup\r\n            How audit data is combined depends on the loaded setup\
        \ file to the system and/or availability \r\n            of previous finished\
        \ audit data."
      operationId: "GETv3_subscribers_current_locations_{locationId}_siteaudit_templateTypes_{templateTypeId}_auditInfo"
      parameters:
      - description: Location identifier
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Audit type identifier
        in: path
        name: templateTypeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Get audit data for specified location and audit type
      tags:
      - SiteAudit
      x-access: Subscribers
    post:
      deprecated: false
      operationId: "POSTv3_subscribers_current_locations_{locationId}_siteaudit_templateTypes_{templateTypeId}_auditInfo"
      parameters:
      - description: Location identifier
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Audit type identifier
        in: path
        name: templateTypeId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternalOld'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternalOld'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternalOld'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternalOld'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternalOld'
        description: Completed audit data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Post (save) completed audit to the database
      tags:
      - SiteAudit
      x-access: Subscribers
      x-codegen-request-body-name: request
  /subscribers/current/locations/{locationId}/siteaudit/templateTypes/{templateTypeId}/auditInfoWeighted:
    get:
      deprecated: false
      description: "Audit can be created from:\r\n            - completed audit data\r\
        \n            - setup (templates) data\r\n            - mixed completed +\
        \ setup\r\n            How audit data is combined depends on the loaded setup\
        \ file to the system and/or availability \r\n            of previous finished\
        \ audit data."
      operationId: "GETv3_subscribers_current_locations_{locationId}_siteaudit_templateTypes_{templateTypeId}_auditInfoWeighted"
      parameters:
      - description: Location identifier
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Audit type identifier
        in: path
        name: templateTypeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Get audit data for specified location and audit type for new templates
      tags:
      - SiteAudit
      x-access: Subscribers
    post:
      deprecated: false
      operationId: "POSTv3_subscribers_current_locations_{locationId}_siteaudit_templateTypes_{templateTypeId}_auditInfoWeighted"
      parameters:
      - description: Location identifier
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Audit type identifier
        in: path
        name: templateTypeId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataWeightedExternal'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataWeightedExternal'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataWeightedExternal'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataWeightedExternal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataWeightedExternal'
        description: Completed audit data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Post (save) completed audit of new type to the database
      tags:
      - SiteAudit
      x-access: Subscribers
      x-codegen-request-body-name: request
  /subscribers/current/locations/auditInfo:
    post:
      deprecated: false
      operationId: POSTv3_subscribers_current_locations_auditInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternal'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternal'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternal'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternal'
        description: Request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.SaveAuditDataResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.SaveAuditDataResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.SaveAuditDataResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.SaveAuditDataResponse'
          description: The audit info for the requested location is provided in the
            response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     1010 - Invalid site audit parameters"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Save completed audit to the database
      tags:
      - SiteAudit
      x-access: Subscribers
      x-codegen-request-body-name: request
  /subscribers/current/locations/auditinfo:
    get:
      deprecated: false
      description: Setup data for areas-checklist-checklistItems relationship data
        are not provided in this method.
      operationId: "GETv3_subscribers_current_locations_auditinfo?locationId={locationId}&templateId={templateId}"
      parameters:
      - description: Location identifier
        in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Audit type identifier
        in: query
        name: templateId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.GetAuditInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.GetAuditInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.GetAuditInfo'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.GetAuditInfo'
          description: The audit info for the requested location is provided in the
            response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     1010 - Invalid site audit parameters"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get audit data for specified location and audit type without template
        information
      tags:
      - SiteAudit
      x-access: Subscribers
  /subscribers/current/locations/auditinfo/checklist/templates:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_current_locations_auditinfo_checklist_templates?templateId={templateId}"
      parameters:
      - description: Audit type identifier
        in: query
        name: templateId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListTemplateExternal'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListTemplateExternal'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListTemplateExternal'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListTemplateExternal'
                type: array
          description: Checklist templates are provided in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     1010 - Invalid site audit parameters"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get checklist templates by audit template.
      tags:
      - SiteAudit
      x-access: Subscribers
  /subscribers/current/locations/auditinfo/checklistitem/templates:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_current_locations_auditinfo_checklistitem_templates?templateId={templateId}&checkListTemplateId={checkListTemplateId}"
      parameters:
      - description: Audit type identifier
        in: query
        name: templateId
        required: true
        schema:
          format: int32
          type: integer
      - description: Check list template identifier
        in: query
        name: checkListTemplateId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemExternal'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemExternal'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemExternal'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemExternal'
                type: array
          description: Checklist templates are provided in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     1010 - Invalid site audit parameters"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get checklistitem templates by audit template.
      tags:
      - SiteAudit
      x-access: Subscribers
  /subscribers/current/siteaudit/checkListItems/{checkListItemId}:
    get:
      deprecated: false
      description: "Details include:\r\n            - comments with attachments\r\n\
        \            - workorders\r\n            - quantity"
      operationId: "GETv3_subscribers_current_siteaudit_checkListItems_{checkListItemId}"
      parameters:
      - description: Identifier of checklist item
        in: path
        name: checkListItemId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemDetailsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemDetailsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemDetailsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemDetailsResponse'
          description: The requested completed audit list is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get details for specified checklist item
      tags:
      - SiteAudit
      x-access: Subscribers
  /subscribers/current/siteaudit/audits/completed:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_current_siteaudit_audits_completed?daysPeriod={daysPeriod}"
      parameters:
      - description: Number of days in the past from now
        in: query
        name: daysPeriod
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CompletedAuditListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CompletedAuditListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CompletedAuditListResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CompletedAuditListResponse'
          description: The requested completed audit list is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get list of completed audits for current subscriber
      tags:
      - SiteAudit
      x-access: Any
  /subscribers/current/siteaudit/report:
    get:
      deprecated: false
      description: "Returns a site audit report, its part, or several reports for\
        \ the current subscriber.\r\n            <br />**Required parameters:**\r\n\
        \             • **Option 1**. `auditId`. Use to get a site audit report by\
        \ ID.\r\n             • **Option 2**. The combination of `fromDate` and `toDate`.\
        \ Use to get site audit reports for a specific period.\r\n            <br\
        \ />***Note:*** Site audit reports are also known as *site planning reports*\
        \ or just *audits*. See [Site Planning Manager](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/551059548/Site+Planning+Manager)\
        \ for more info."
      operationId: "GETv3_subscribers_current_siteaudit_report?auditId={auditId}&fromDate={fromDate}&toDate={toDate}&country={country}&locationId={locationId}&area={area}"
      parameters:
      - description: The numeric identifier of the site audit report to return.
        in: query
        name: auditId
        schema:
          format: int32
          type: integer
      - description: The date from which you want to return site audit reports. The
          format is `YYYY-MM-DDThh:mm:ss.sssZ`.
        in: query
        name: fromDate
        schema:
          format: date-time
          type: string
      - description: The date until which you want to return site audit reports. The
          format is `YYYY-MM-DDThh:mm:ss.sssZ`.
        in: query
        name: toDate
        schema:
          format: date-time
          type: string
      - description: "The two-letter [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
          \ of the location country."
        in: query
        name: country
        schema:
          type: string
      - description: The numeric identifier of the subscriber's property.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: The audited area within the location.
        in: query
        name: area
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditReportExternal'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditReportExternal'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditReportExternal'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditReportExternal'
                type: array
          description: The requested site audit reports are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     1010 - Invalid site audit parameters"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get site audit reports
      tags:
      - SiteAudit
      x-access: Any
  /subscribers/current/siteaudit/completed/{auditId}:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_current_siteaudit_completed_{auditId}"
      parameters:
      - description: The numeric identifier of the site audit info to return.
        in: path
        name: auditId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfoExternal'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfoExternal'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfoExternal'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfoExternal'
          description: The requested site audit info is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     608 - Do not have access to the location"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            1008 - Audit not found"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Get completed audit info
      tags:
      - SiteAudit
      x-access: Any
  /subscribers/current/siteaudit/completed:
    put:
      deprecated: false
      operationId: PUTv3_subscribers_current_siteaudit_completed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfo'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfo'
        description: Completed audit info
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.UpdatedCompletedAuditResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.UpdatedCompletedAuditResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.UpdatedCompletedAuditResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.UpdatedCompletedAuditResponse'
          description: The site audit info is successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     608 - Do not have access to the location.\r\n            1007 -\
            \ Template type is inactive.\r\n            1009 - Unexpected error"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            1008 - Audit not found"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 - Unspecified\
            \ internal server error occurred"
      summary: Update completed audit info
      tags:
      - SiteAudit
      x-access: Any
      x-codegen-request-body-name: request
  /subscribers/current/subsidiaries:
    get:
      deprecated: false
      operationId: GETv3_subscribers_current_subsidiaries
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Subscribers
      x-access: Any
  /subscribers/trades:
    get:
      deprecated: false
      description: "Returns the current subscriber's trade list ( IDs ).\r\n     \
        \       <br /><br />This method can only be used for subscriber's users."
      operationId: GETv3_subscribers_trades
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetSubscriberTradesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetSubscriberTradesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetSubscriberTradesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetSubscriberTradesResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Retrieve Trades
      tags:
      - Subscribers
      x-access: Subscribers
  /subscribers/{subscriberId}/trades:
    get:
      deprecated: false
      description: Returns trade list ( IDs ) of requested subscriber.
      operationId: "GETv3_subscribers_{subscriberId}_trades"
      parameters:
      - description: Numeric id of subscriber to perform action with.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetSubscriberTradesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetSubscriberTradesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetSubscriberTradesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetSubscriberTradesResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Retrieve Trades
      tags:
      - Subscribers
      x-access: Any
  /subscribers/{subscriberId}/primarytrades:
    get:
      deprecated: false
      description: Returns trade list of requested subscriber.
      operationId: "GETv3_subscribers_{subscriberId}_primarytrades"
      parameters:
      - description: Numeric id of subscriber to perform action with.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Retrieve Trades
      tags:
      - Subscribers
      x-access: Any
  /subscribers:
    post:
      deprecated: false
      description: Returns success result
      operationId: POSTv3_subscribers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.RegisterSubscriberRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.RegisterSubscriberRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.RegisterSubscriberRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.RegisterSubscriberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.RegisterSubscriberRequest'
        description: Request for creation of new Subscriber
        required: true
      responses:
        "201":
          content: {}
          description: Indicates that the request succeeded and that a new Subscriber
            is created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
        "500":
          content: {}
          description: Indicates that an error has occured wile creation of a new
            Subscriber.
      summary: Create Subscriber
      tags:
      - Subscribers
      x-access: Any
      x-codegen-request-body-name: registerSubscriberRequest
  /subscribers/{subscriberId}/validatepasswordsecurity/{password}:
    get:
      deprecated: false
      description: Validate password security
      operationId: "GETv3_subscribers_{subscriberId}_validatepasswordsecurity_{password}"
      parameters:
      - description: Numeric id of subscriber.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: Password to be checked.
        in: path
        name: password
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Password security
      tags:
      - Subscribers
      x-access: Any
  /subscribers/{subscriberId}:
    get:
      deprecated: false
      description: Returns success result
      operationId: "GETv3_subscribers_{subscriberId}"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      summary: Get Subscriber by Id
      tags:
      - Subscribers
      x-access: Any
    put:
      deprecated: false
      description: "Acceptable values for DateFormat are: \"MMM d, yyyy\" or \"d,\
        \ MMM yyyy\". Acceptable values for TimeFormat are: \"H:mm\" or \"h:mm\".\
        \ Default values are \"MMM d, yyyy\" and \"H:mm\" correspondingly.\r\n   \
        \         Acceptable valuer for DecimalSeparator are: \".\" or \",\". Default\
        \ value is point."
      operationId: "PUTv3_subscribers_{subscriberId}"
      parameters:
      - description: Subscriber identifier
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.UpdateSubscriberInfoRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.UpdateSubscriberInfoRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.UpdateSubscriberInfoRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.UpdateSubscriberInfoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.UpdateSubscriberInfoRequest'
        description: Subscriber info
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      summary: Update subscriber info
      tags:
      - Subscribers
      x-access: Any
      x-codegen-request-body-name: subscriberInfo
  /subscribers/{subscriberId}/securityrules:
    get:
      deprecated: false
      description: Get security rules
      operationId: "GETv3_subscribers_{subscriberId}_securityrules"
      parameters:
      - description: Numeric id of subscriber.
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Security rules
      tags:
      - Subscribers
      x-access: Any
  /subscribers/rules:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_rules?subscriberId={subscriberId}"
      parameters:
      - description: subscriber identifier
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscriberPropertyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscriberPropertyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscriberPropertyResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscriberPropertyResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      summary: Returns list of subscriber properties
      tags:
      - Subscribers
      x-access: Any
  /subscribers/{subscriberId}/rules:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_{subscriberId}_rules"
      parameters:
      - description: subscriber identifier
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscriberPropertyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscriberPropertyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscriberPropertyResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscriberPropertyResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      summary: Returns list of subscriber properties
      tags:
      - Subscribers
      x-access: Any
  /subscribers/{subscriberId}/workOrderRescheduleReasons:
    get:
      deprecated: false
      operationId: "GETv3_subscribers_{subscriberId}_workOrderRescheduleReasons"
      parameters:
      - description: subscriber identifier
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
            text/json:
              schema:
                additionalProperties:
                  type: string
                type: object
            application/xml:
              schema:
                additionalProperties:
                  type: string
                type: object
            text/xml:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      summary: Returns list of reschedule reasons
      tags:
      - Subscribers
      x-access: Any
  /subscribers/current/dashboards:
    get:
      deprecated: false
      description: Available for subscriber users. Returns list of subscriber dashboards
        (current or specified subscriber if allowed)
      operationId: "GETv3_subscribers_current_dashboards?subscriberId={subscriberId}"
      parameters:
      - description: Subscriber identifier
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.DashboardInfo'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.DashboardInfo'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.DashboardInfo'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.DashboardInfo'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource not allowed for current
            user
      summary: Returns list of subscriber(current or specified) dashboards
      tags:
      - Subscribers
      x-access: Subscribers
  /subscribers/{subscriberId}/dashboards:
    get:
      deprecated: false
      description: Available for subscriber users. Returns list of subscriber dashboards
        (current or specified subscriber if allowed)
      operationId: "GETv3_subscribers_{subscriberId}_dashboards"
      parameters:
      - description: Subscriber identifier
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.DashboardInfo'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.DashboardInfo'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.DashboardInfo'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.DashboardInfo'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource not allowed for current
            user
      summary: Returns list of subscriber(current or specified) dashboards
      tags:
      - Subscribers
      x-access: Subscribers
  /subscribers/GetSubscribersRegionalSettings:
    post:
      deprecated: false
      operationId: POSTv3_subscribers_GetSubscribersRegionalSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsRequest'
        description: list of subscriber
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            <br/> 501 - Unhandled exception\
            \ occurred"
      summary: Returns regional settings for subscribers
      tags:
      - Subscribers
      x-access: Any
      x-codegen-request-body-name: request
  /surveyquestions/getwithanswers/{locationId}:
    get:
      deprecated: false
      operationId: "GETv3_surveyquestions_getwithanswers_{locationId}"
      parameters:
      - in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyQuestionWithAnswers'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyQuestionWithAnswers'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyQuestionWithAnswers'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyQuestionWithAnswers'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Get questions with possible answers for specific location
      tags:
      - SurveyQuestions
      x-access: Any
  /surveyquestions/addanswers/{locationId}:
    post:
      deprecated: false
      operationId: "POSTv3_surveyquestions_addanswers_{locationId}"
      parameters:
      - in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyAnsweredQuestion'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyAnsweredQuestion'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyAnsweredQuestion'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyAnsweredQuestion'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyAnsweredQuestion'
              type: array
        required: true
      responses:
        "201":
          content: {}
          description: Indicates that the request succeeded and that new Answers are
            added.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
        "500":
          content: {}
          description: Indicates that an error has occured wile creation of a new
            Subscriber.
      summary: Submit answered questions.
      tags:
      - SurveyQuestions
      x-access: Any
      x-codegen-request-body-name: surveyAnsweredQuestions
  /surveyquestions/workorderanswers/{workOrderId}:
    get:
      deprecated: false
      operationId: "GETv3_surveyquestions_workorderanswers_{workOrderId}"
      parameters:
      - in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SurveyQuestion.WorkorderAnsweredQuestionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SurveyQuestion.WorkorderAnsweredQuestionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SurveyQuestion.WorkorderAnsweredQuestionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SurveyQuestion.WorkorderAnsweredQuestionResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Get workorder survey answers with questions.
      tags:
      - SurveyQuestions
      x-access: Any
  /TemplateFilesHistory/GetHistory:
    get:
      deprecated: false
      operationId: GETv3_TemplateFilesHistory_GetHistory
      parameters:
      - description: Gets or sets FileTypeId.
        explode: false
        in: query
        name: fileTypeIds
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Sort resources by the specified property in the response.
        in: query
        name: sort
        schema:
          type: string
      - description: Results page number.
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of objects on the results page. The default and maximum
          per page is 50.
        in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Template.GetTemplateFilesHistoriesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Template.GetTemplateFilesHistoriesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Template.GetTemplateFilesHistoriesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Template.GetTemplateFilesHistoriesResponse'
          description: OK
      tags:
      - TemplateFilesHistory
      x-access: Subscribers
  /test/encrypt:
    get:
      deprecated: false
      description: "Get Encrypted Password (Rijndael)\r\n            <br /><br />This\
        \ method can only be used for users with 'MasterAdminRole' permissions."
      operationId: "GETv3_test_encrypt?data={data}"
      parameters:
      - in: query
        name: data
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Get Encrypted Password
      tags:
      - Test
      x-access: Any
  /test/webhooks/notifications:
    post:
      deprecated: false
      description: "Tests the URL for receiving events. Delivers a [test event](https://developer.servicechannel.com/guides/wh/test-your-webhook-url/)\
        \ to the target URL for a successful request."
      operationId: POSTv3_test_webhooks_notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.TestNotificationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.TestNotificationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.TestNotificationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.TestNotificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.TestNotificationRequest'
        description: The request object containing the URL that needs to be tested.
        required: true
      responses:
        "201":
          content: {}
          description: The test event is sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     503 - Failed to send POST request to specified URL, or your server\
            \ responded with invalid status code"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
      summary: Ping a target URL
      tags:
      - Test
      x-access: Any
      x-codegen-request-body-name: request
  /test/notifications1:
    post:
      deprecated: false
      operationId: POSTv3_test_notifications1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Test
      x-access: Any
  /test/notifications2:
    post:
      deprecated: false
      operationId: POSTv3_test_notifications2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Test
      x-access: Any
  /test/notifications3:
    post:
      deprecated: false
      operationId: POSTv3_test_notifications3
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Test
      x-access: Any
  /test/notificationsDelay:
    post:
      deprecated: false
      operationId: POSTv3_test_notificationsDelay
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Test
      x-access: Any
  /trades/IsRefrigerant:
    post:
      deprecated: false
      operationId: "POSTv3_trades_IsRefrigerant?subscriberId={subscriberId}&tradeName={tradeName}"
      parameters:
      - in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: tradeName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.Trade'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.Trade'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.Trade'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.Trade'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - User has no permissions to perform this action. Not Allowed\
            \ Subscriber Id(s): ..;..;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      tags:
      - Trades
      x-access: Any
  /trades:
    post:
      deprecated: false
      operationId: POSTv3_trades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions\r\n            <br/> 710 - Trade already exists\r\
            \n            <br/> 711 - Invalid NTE"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      tags:
      - Trades
      x-access: Subscribers
      x-codegen-request-body-name: request
  /trades/batch:
    post:
      deprecated: false
      operationId: POSTv3_trades_batch
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeRequest'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.AddTradeResponse'
                type: array
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions\r\n            <br/> 710 - Trade already exists\r\
            \n            <br/> 711 - Invalid NTE"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      tags:
      - Trades
      x-access: Subscribers
      x-codegen-request-body-name: request
  /trades/LocationProviderTrades:
    post:
      deprecated: false
      operationId: POSTv3_trades_LocationProviderTrades
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesRequest'
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      tags:
      - Trades
      x-access: Subscribers
      x-codegen-request-body-name: request
  /trades/GetPrimaryTrade:
    post:
      deprecated: false
      operationId: "POSTv3_trades_GetPrimaryTrade?subscriberId={subscriberId}&tradeName={tradeName}&tradeId={tradeId}"
      parameters:
      - in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: tradeName
        schema:
          type: string
      - in: query
        name: tradeId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.TradeWithPrimaryTrade'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.TradeWithPrimaryTrade'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.TradeWithPrimaryTrade'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.TradeWithPrimaryTrade'
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:            \r\n\
            \            <br/> 503 - tradeName and tradeId cannot be both empty or\
            \ null and less than 1 and null respectively.\r\n            <br/> 401\
            \ - Invalid subscriber id"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            <br/> 5010 - Trade is not\
            \ found"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Get Primary Trade For Provider
      tags:
      - Trades
      x-access: Providers
  /tradesmen:
    post:
      deprecated: false
      description: "Creates Tradesman Profile. Returns Tradesman Profile Id for successful\
        \ request.\r\n            <br /><br />Available for provider usage."
      operationId: POSTv3_tradesmen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Tradesmen.CreateTradesmenProfileRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Tradesmen.CreateTradesmenProfileRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Tradesmen.CreateTradesmenProfileRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Tradesmen.CreateTradesmenProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Tradesmen.CreateTradesmenProfileRequest'
        description: A new Tradesmen Profile
        required: true
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - Invalid request;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the server refuses to fulfill the request.\r\
            \n            <br/>Error codes:\r\n            <br/> 100 - User has no\
            \ rights to perform this action;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Profile
      tags:
      - Tradesmen
      x-access: Providers
      x-codegen-request-body-name: request
  /trucks/{id}:
    delete:
      deprecated: false
      operationId: "DELETEv3_trucks_{id}"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Trucks
      x-access: Any
    get:
      deprecated: false
      operationId: "GETv3_trucks_{id}"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Trucks
      x-access: Any
    put:
      deprecated: false
      operationId: "PUTv3_trucks_{id}"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TruckRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TruckRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TruckRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TruckRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TruckRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Trucks
      x-access: Any
      x-codegen-request-body-name: truckRequest
  /trucks:
    post:
      deprecated: false
      operationId: POSTv3_trucks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TruckRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TruckRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TruckRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TruckRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TruckRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Trucks
      x-access: Any
      x-codegen-request-body-name: truckRequest
  /trucks/technician:
    post:
      deprecated: false
      operationId: POSTv3_trucks_technician
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TechTruckRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TechTruckRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TechTruckRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TechTruckRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TechTruckRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Trucks
      x-access: Any
      x-codegen-request-body-name: techTruckCreate
  /trucks/technician/{authTechId}:
    delete:
      deprecated: false
      operationId: "DELETEv3_trucks_technician_{authTechId}"
      parameters:
      - in: path
        name: authTechId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Trucks
      x-access: Any
    get:
      deprecated: false
      operationId: "GETv3_trucks_technician_{authTechId}"
      parameters:
      - in: path
        name: authTechId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Trucks
      x-access: Any
    put:
      deprecated: false
      operationId: "PUTv3_trucks_technician_{authTechId}"
      parameters:
      - in: path
        name: authTechId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TechTruckRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TechTruckRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TechTruckRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TechTruckRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trucks.TechTruckRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Trucks
      x-access: Any
      x-codegen-request-body-name: techTruck
  /twilio/Sms:
    get:
      deprecated: false
      operationId: "GETv3_twilio_Sms?SmsSid={SmsSid}&Body={Body}&MessageStatus={MessageStatus}&AccountSid={AccountSid}&From={From}&To={To}&FromCity={FromCity}&FromState={FromState}&FromZip={FromZip}&FromCountry={FromCountry}&ToCity={ToCity}&ToState={ToState}&ToZip={ToZip}&ToCountry={ToCountry}"
      parameters:
      - in: query
        name: smsSid
        schema:
          type: string
      - in: query
        name: body
        schema:
          type: string
      - in: query
        name: messageStatus
        schema:
          type: string
      - in: query
        name: accountSid
        schema:
          type: string
      - in: query
        name: from
        schema:
          type: string
      - in: query
        name: to
        schema:
          type: string
      - in: query
        name: fromCity
        schema:
          type: string
      - in: query
        name: fromState
        schema:
          type: string
      - in: query
        name: fromZip
        schema:
          type: string
      - in: query
        name: fromCountry
        schema:
          type: string
      - in: query
        name: toCity
        schema:
          type: string
      - in: query
        name: toState
        schema:
          type: string
      - in: query
        name: toZip
        schema:
          type: string
      - in: query
        name: toCountry
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - TwilioApi
      x-access: Any
    post:
      deprecated: false
      operationId: POSTv3_twilio_Sms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Twilio.AspNet.Common.SmsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Twilio.AspNet.Common.SmsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Twilio.AspNet.Common.SmsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Twilio.AspNet.Common.SmsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Twilio.AspNet.Common.SmsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - TwilioApi
      x-access: Any
      x-codegen-request-body-name: request
  /twilio/SmsStatus:
    post:
      deprecated: false
      operationId: POSTv3_twilio_SmsStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Twilio.AspNet.Common.SmsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Twilio.AspNet.Common.SmsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Twilio.AspNet.Common.SmsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Twilio.AspNet.Common.SmsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Twilio.AspNet.Common.SmsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - TwilioApi
      x-access: Any
      x-codegen-request-body-name: request
  /users:
    get:
      deprecated: false
      description: "Returns the list of all users of the current subscriber (the main\
        \ user is also included) for successful request.\r\n            <br /><br\
        \ />Available for subscriber usage (Power User, Super Admin, SC Admin)."
      operationId: "GETv3_users?subscriberId={subscriberId}&startIndex={startIndex}&maxCount={maxCount}"
      parameters:
      - description: For 'SC Admin' users only - ability to specify subscriber. Optional
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      - description: "Start item index. Optional, 0 by Default"
        in: query
        name: startIndex
        schema:
          format: int32
          type: integer
      - description: "Items count to get. Optional, all items by Default."
        in: query
        name: maxCount
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource does not exist on the\
            \ server.\r\n            <br/>Error codes:\r\n            <br/> 502 -\
            \ Users not found;"
      summary: Users Collection
      tags:
      - Users
      x-access: Subscribers
    post:
      deprecated: false
      description: "Creates a new user. Returns a unique user ID for a successful\
        \ request.\r\n            <br />***Note:*** Available for subscribers with\
        \ the Admin User and Super Admin secondary roles."
      operationId: POSTv3_users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.AddUserRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.AddUserRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.AddUserRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.AddUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.AddUserRequest'
        description: The user object that needs to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      summary: Create a user
      tags:
      - Users
      x-access: Any
      x-codegen-request-body-name: request
  /users/{id}:
    delete:
      deprecated: false
      description: "Removes the User with specified id. Returns User Id for successful\
        \ request.\r\n            <br /><br />Available for Super Admin, SC Admin,\
        \ Provider Power Users usage."
      operationId: "DELETEv3_users_{id}"
      parameters:
      - description: Numeric Id of the User to perform action with.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Remove the User
      tags:
      - Users
      x-access: Any
    get:
      deprecated: false
      description: Returns the information of the specified user.
      operationId: "GETv3_users_{id}"
      parameters:
      - description: Numeric Id of the User to perform action with.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.GetUserResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.GetUserResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.GetUserResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.GetUserResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource does not exist on the\
            \ server.\r\n            <br/>Error codes:\r\n            <br/>502 - User\
            \ not found;"
      summary: Retrieve a User
      tags:
      - Users
      x-access: Any
    patch:
      deprecated: false
      operationId: "PATCHv3_users_{id}"
      parameters:
      - description: User identifier
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/System.Object'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/System.Object'
              type: object
          application/xml:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/System.Object'
              type: object
          text/xml:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/System.Object'
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/System.Object'
              type: object
        description: Patch user's profile info model (only properties to be patched)
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the update user profile request was successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            <br/> 501 - Unhandled exception\
            \ occurred"
      summary: Patch user's info
      tags:
      - Users
      x-access: Any
      x-codegen-request-body-name: request
    put:
      deprecated: false
      description: "Updates the information of the specified user. Returns User Id\
        \ for successful request.\r\n            <br /><br />Available for Super Admin,\
        \ SC Admin, Provider Power Users usage."
      operationId: "PUTv3_users_{id}"
      parameters:
      - description: Numeric Id of the User to perform action with.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.UpdateUserRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.UpdateUserRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.UpdateUserRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.UpdateUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.UpdateUserRequest'
        description: The request model to perform action with.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the server refuses to fulfill the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update User
      tags:
      - Users
      x-access: Any
      x-codegen-request-body-name: request
  /users/current/profile:
    get:
      deprecated: false
      operationId: GETv3_users_current_profile
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Users
      x-access: Any
  /users/current/menu:
    get:
      deprecated: false
      operationId: GETv3_users_current_menu
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.MenuResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.MenuResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.MenuResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.MenuResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource not allowed for current
            user.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource does not exist on the\
            \ server.\r\n            <br/>Error codes:\r\n            <br/> 502 -\
            \ Users not found;"
      tags:
      - Users
      x-access: Any
  /users/{userId}/menu:
    get:
      deprecated: false
      operationId: "GETv3_users_{userId}_menu"
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Users
      x-access: Any
  /users/{userId}/islocked:
    get:
      deprecated: false
      description: "Returns true if requested user is locked.\r\n            <br /><br\
        \ />Available for Super Admin, SC Admin users usage."
      operationId: "GETv3_users_{userId}_islocked"
      parameters:
      - description: Numeric Id of the User to perform action with.
        in: path
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                default: false
                type: boolean
            text/json:
              schema:
                default: false
                type: boolean
            application/xml:
              schema:
                default: false
                type: boolean
            text/xml:
              schema:
                default: false
                type: boolean
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Is locked
      tags:
      - Users
      x-access: Any
  /users/features:
    get:
      deprecated: false
      operationId: GETv3_users_features
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApplicationAccess.FeatureResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApplicationAccess.FeatureResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApplicationAccess.FeatureResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApplicationAccess.FeatureResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Returns user features object
      tags:
      - Users
      x-access: Any
  /users/current/locationNoteRestrictions:
    get:
      deprecated: false
      operationId: GETv3_users_current_locationNoteRestrictions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.User.UserLocationNoteRestrictionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.User.UserLocationNoteRestrictionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.User.UserLocationNoteRestrictionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.User.UserLocationNoteRestrictionResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Returns user location note restrictions object
      tags:
      - Users
      x-access: Any
  /employees/{employeeId}/users:
    get:
      deprecated: false
      description: "Returns a list of provider users with the specified employee ID.\
        \ Provider admins can set an employee identifier on the **Employee Details**\
        \ tab of the user profile.\r\n            <br />***Note:*** This method is\
        \ only available to provider users with the *Provider Automation Admin* role."
      operationId: "GETv3_employees_{employeeId}_users"
      parameters:
      - description: Non-unique identifier of a provider user.
        in: path
        name: employeeId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
          description: Provider users with the specified employee ID are in the response.
      summary: Retrieve provider users with the specified employee ID
      tags:
      - Users
      x-access: Providers
  /users/regionalSettings:
    get:
      deprecated: false
      operationId: GETv3_users_regionalSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.User.UserLocalizationSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.User.UserLocalizationSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.User.UserLocalizationSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.User.UserLocalizationSettings'
          description: User Localization settings are in the response.
      summary: Retrieve user localization settings
      tags:
      - Users
      x-access: Any
  /weather/eventTypes:
    get:
      deprecated: false
      operationId: "GETv3_weather_eventTypes?subscriberId={subscriberId}"
      parameters:
      - in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Workorders.WeatherEventType'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Workorders.WeatherEventType'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Workorders.WeatherEventType'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Api.Model.Workorders.WeatherEventType'
                type: array
          description: Indicates that the request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Get list of available weather types
      tags:
      - Weather
      x-access: Any
  /weather/subscribers:
    get:
      deprecated: false
      operationId: GETv3_weather_subscribers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br>Error codes:\r\n            <br> 504 - API call rejected\
            \ by security permissions;"
      summary: Get SubscriberIds With WeatherOverlayOnMap Feature Flag
      tags:
      - Weather
      x-access: Any
  /workorders/{workorderId}/workactivities/{workactivityId}:
    put:
      deprecated: false
      description: "Updates the specified work activity of a work order by setting\
        \ the check-in and check-out date and time values passed in the request.\r\
        \n            <br />Before updating a work activity, please consider the following:\r\
        \n             • You can update work activities only for work orders in the\
        \ *In Progress* primary status.\r\n             • The check-in date and time\
        \ cannot be greater than the check-out date and time.\r\n             • The\
        \ check-in date and time cannot be earlier than the scheduled date and time\
        \ of the work order.\r\n             • The time range of the work activity\
        \ you are updating cannot overlap the time ranges of existing work activities\
        \ of the work order.\r\n             • The name will be set to the API caller\
        \ name if the `name` value is not provided.\r\n            <br />***Note:***\
        \ Both subscribers and providers can use this method.\r\n            <br />***Note:***\
        \ Only users with extended permissions can update the work activities created\
        \ by other users along with updating the `name` parameter. The users with\
        \ certain permissions are:\r\n             • Subscribers that have the *Admin*\
        \ role. These users can update the work activities created both by subscribers\
        \ and by providers.\r\n             • Providers that have the *Admin* role\
        \ (with the *EditLaborItemsOnWoDetailsProvider* feature flag turned on). These\
        \ users can update the work activities created by providers only.\r\n    \
        \         • Providers that have the *Business Owner / Management* role (with\
        \ the *EditLaborItemsOnWoDetailsProvider* feature flag turned on). These users\
        \ can update the work activities created by providers only.\r\n          \
        \  <br />Learn more about [updating a work activity](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/576258285/Updating+Service+Provider+Check-In+Out+Information)\
        \ in ServiceChannel University.\r\n            <br />**Example Request**\r\
        \n            \r\n                PUT /workorders/{workorderId}/workactivities/{workactivityId}\r\
        \n                {\r\n                   \"CheckInDate\": \"2020-11-19T11:10:36.868Z\"\
        ,\r\n                   \"CheckOutDate\": \"2020-11-19T12:30:36.868Z\",\r\n\
        \                   \"Name\": \"John Doe\"\r\n                }"
      operationId: "PUTv3_workorders_{workorderId}_workactivities_{workactivityId}"
      parameters:
      - description: The unique numeric identifier of the work order for which you
          want to update a work activity.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The unique numeric identifier of the work activity to update.
        in: path
        name: workactivityId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivityRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivityRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivityRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivityRequest'
        description: Request to update a work activity.
        required: true
      responses:
        "200":
          content: {}
          description: "The work activity is updated, and its ID is returned in the\
            \ response."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — WorkOrder not found\r\n            503 — Work activity is\
            \ not found\r\n            503 — Date range is incorrect\r\n         \
            \   503 — Check In/Out is premature\r\n            904 — Invalid work\
            \ order status\r\n            1186 — Time range is overlapped"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes:\r\n\
            \            804 — User has no permissions to perform this action"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Update the specified work activity of a work order
      tags:
      - WorkActivities
      x-access: Any
      x-codegen-request-body-name: activityRequest
  /workorders/{workorderId}/workactivities:
    delete:
      deprecated: false
      description: "Delete one or more work activities of the specified work order.\
        \ When you pass multiple work activity IDs, the request will succeed if at\
        \ least one ID is valid.\r\n            <br />***Note:*** Both subscribers\
        \ and providers can use this method."
      operationId: "DELETEv3_workorders_{workorderId}_workactivities?workactivityIds[0]={workactivityIds[0]}&workactivityIds[1]={workactivityIds[1]}"
      parameters:
      - description: The unique numeric identifier of the work order for which you
          want to delete work activities.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The unique numeric identifiers of the work activities to delete.
        explode: true
        in: query
        name: workactivityIds
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        "204":
          content: {}
          description: "The specified work activities are deleted, and the response\
            \ is intentionally blank."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — WorkOrder not found\r\n            502 — Work activities are\
            \ not found\r\n            804 — User has no permissions to perform this\
            \ action"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Delete the specified work activities of a work order
      tags:
      - WorkActivities
      x-access: Any
    post:
      deprecated: false
      description: "Creates a new work activity for the specified work order. The\
        \ work activity type can be either *Travel* or *Repair*. Note that custom\
        \ types may be configured for a subscriber.\r\n            <br />Before creating\
        \ a work activity, please consider the following:\r\n             • You can\
        \ create work activities only for work orders in the *In Progress* primary\
        \ status.\r\n             • The check-in date and time cannot be greater than\
        \ the check-out date and time.\r\n             • The check-in date and time\
        \ cannot be earlier than the scheduled date and time of the work order.\r\n\
        \             • The time range of the work activity you are creating cannot\
        \ overlap the time ranges of existing work activities of the work order.\r\
        \n             • The name will be set to the API caller name if the `name`\
        \ value is not provided.\r\n            <br />***Note:*** Both subscribers\
        \ and providers can use this method.\r\n            <br />***Note:*** Only\
        \ users with extended permissions can specify the technician's name while\
        \ creating a work activity. The users with extended permissions are:\r\n \
        \            • Subscribers that have the *Admin* role.\r\n             • Providers\
        \ that have the *Admin* role (with the *EditLaborItemsOnWoDetailsProvider*\
        \ feature flag turned on).\r\n             • Providers that have the *Business\
        \ Owner / Management* role (with the *EditLaborItemsOnWoDetailsProvider* feature\
        \ flag turned on).\r\n            <br />Learn more about [creating a work\
        \ activity](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/576258285/Updating+Service+Provider+Check-In+Out+Information)\
        \ in ServiceChannel University.\r\n            <br />**Example Request**\r\
        \n            \r\n                POST /workorders/{workorderId}/workactivities\r\
        \n                {\r\n                   \"WorkTypeId\": \"1\",       \r\n\
        \                   \"CheckInDate\": \"2020-11-19T11:10:36.868Z\",\r\n   \
        \                \"CheckOutDate\": \"2020-11-19T12:15:36.868Z\",\r\n     \
        \              \"Name\": \"John Doe\"\r\n                }"
      operationId: "POSTv3_workorders_{workorderId}_workactivities"
      parameters:
      - description: The unique numeric identifier of the work order for which you
          want to create a work activity.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivityPostRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivityPostRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivityPostRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivityPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivityPostRequest'
        description: Request to create a work activity.
        required: true
      responses:
        "201":
          content: {}
          description: "A work activity is created for the specified work order, and\
            \ a unique work activity ID is returned in the response."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — WorkOrder not found\r\n            503 — Work Type Not Found\r\
            \n            503 — Date range is incorrect\r\n            503 — Check\
            \ In/Out is premature\r\n            904 — Invalid work order status\r\
            \n            1186 — Time range is overlapped"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes:\r\n\
            \            804 — User has no permissions to perform this action"
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The request is already processed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Create a work activity for the specified work order
      tags:
      - WorkActivities
      x-access: Any
      x-codegen-request-body-name: activityRequest
  /workorders:
    get:
      deprecated: false
      description: "Performs search of workorders by specified filter expression and\
        \ returns list of work orders with all details.\r\n            <br />One page\
        \ contains 50 items by default (\"pageSize\"=50). To get next 50 items use\
        \ the \"page\" parameter (for example page=2 and so on)."
      operationId: "GETv3_workorders?locationId={locationId}&storeId={storeId}"
      parameters:
      - description: UID of location.
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - description: StoreId of location. Used to find location for which search will
          be performed.
        in: query
        name: storeId
        schema:
          type: string
      - description: "UID of location, exact search by default"
        explode: false
        in: query
        name: otherLocationId
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "UID of work order, exact search by default"
        explode: false
        in: query
        name: id
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Category of work order, exact search by default"
        explode: false
        in: query
        name: category
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Status of work order, exact search by default"
        explode: false
        in: query
        name: status
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Extended status of work order, exact search by default"
        explode: false
        in: query
        name: extendedStatus
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Work order number, 'starts with' search criteria by default"
        explode: false
        in: query
        name: number
        schema:
          items:
            type: object
          type: array
        style: form
      - description: '''starts with'' search criteria by default'
        explode: false
        in: query
        name: serviceId
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Priority of work order, exact search by default"
        explode: false
        in: query
        name: priority
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Purchase number of work order, 'starts with' search criteria\
          \ by default"
        explode: false
        in: query
        name: purchaseNumber
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Trade, 'starts with' search criteria by default"
        explode: false
        in: query
        name: trade
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Scheduled date
        explode: false
        in: query
        name: scheduledDate
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Expiration date
        explode: false
        in: query
        name: expirationDate
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Call date
        explode: false
        in: query
        name: callDate
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Sort resources by the specified property in the response.
        in: query
        name: sort
        schema:
          type: string
      - description: Results page number.
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of objects on the results page. The default and maximum
          per page is 50.
        in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 403 - Account has not been activated for GPS use;\r\n       \
            \     <br/> 503 - Validation fails. Request is empty or null;\r\n    \
            \        <br/> 601 - Location Id is invalid;\r\n            <br/> 606\
            \ - Cannot find location by StoreId;\r\n            <br/> 1000 - Invalid\
            \ Setup Id;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Requested resource requires authentication.\r\n          \
            \  <br/>Error codes:\r\n            <br/> 504 - API call rejected by security\
            \ permissions; "
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            <br/> 501 - Timeout expired.\
            \ The timeout period elapsed prior to completion of the operation or the\
            \ server is not responding."
      summary: Search Work Orders
      tags:
      - WorkOrders
      x-access: Any
    post:
      deprecated: false
      description: "Creates a new Work order. Returns Work order Id for successful\
        \ request.\r\n            <br />Available for provider and subscriber usage.\r\
        \n            <br />Additional info:\r\n            <br />Updates GL code\
        \ based on passed Category param according to settings in Admin module {go\
        \ to Admin =&gt; Accounting =&gt; GlCodes to see user GL codes}.\r\n     \
        \       Similar logic is used when you create Work order through next path:\
        \ Dashboard =&gt; Request Service."
      operationId: POSTv3_workorders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest'
        description: A new Work order
        required: true
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - No provider was found for specified location and trade;\r\
            \n            <br/> 300 - Missed contract data;\r\n            <br/> 301\
            \ - Contract not found for specified subscribers location, provider and\
            \ trade;\r\n            <br/> 400 - Invalid Subscriber Id specified;\r\
            \n            <br/> 503 - Work order cannot be created, provider could\
            \ not be determined (missing providerID or IssueRequestInfo);\r\n    \
            \        <br/> 600 - Invalid Location Id specified;\r\n            <br/>\
            \ 603 - Subscriber has no specified Location;\r\n            <br/> 700\
            \ - Invalid Trade Name specified;\r\n            <br/> 702 - Subscriber\
            \ has no specified Trade;\r\n            <br/> 800 - Missed required argument\
            \ 'UserId';\r\n            <br/> 801 - Missed required argument 'CreatedBy';\r\
            \n            <br/> 900 - Missed problem description options;\r\n    \
            \        <br/> 901 - Missed required argument 'ProblemSource';\r\n   \
            \         <br/> 902 - Missed required argument 'Description';\r\n    \
            \        <br/> 903 - Missed required argument 'ProblemCode';\r\n     \
            \       <br/> 904 - Invalid WorkOrder status;\r\n            <br/> 905\
            \ - Invalid 'Nte' value;\r\n            <br/> 906 - Invalid 'CallerName'\
            \ value;\r\n            <br/> 907 - Invalid 'CallDate' value;\r\n    \
            \        <br/> 908 - Invalid 'ScheduledDate' value;\r\n            <br/>\
            \ 909 - Invalid 'ScheduledDate', greater than max allowed by subscriber;\r\
            \n            <br/> 910 - Missed required argument 'Category';\r\n   \
            \         <br/> 911 - Invalid 'Category';\r\n            <br/> 912 - Missed\
            \ required argument 'Priority';\r\n            <br/> 913 - Invalid 'Priority';\r\
            \n            <br/> 914 - Invalid 'Currency' value;\r\n            <br/>\
            \ 915 - Invalid Setup Id;\r\n            <br/> 916 - At least one attachment\
            \ required to create this WorkOrder;\r\n            <br/> 918 - Assets\
            \ required to create this WorkOrder;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            <br/> 501 - Sequence contains\
            \ no elements"
      summary: Create a Work order
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: request
  /workorders/{workorderId}/status:
    put:
      deprecated: false
      description: "Updates Work Order status with optional Note. Returns Work order\
        \ Id for successful request.\r\n            <br /><br />This method can only\
        \ be used for users with 'WorkOrderStatusChange' permissions.\r\n        \
        \    Available for provider and subscriber usage."
      operationId: "PUTv3_workorders_{workorderId}_status"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoStatusRequestExt'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoStatusRequestExt'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoStatusRequestExt'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoStatusRequestExt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoStatusRequestExt'
        description: The update request. Work order Status.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderStatusResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderStatusResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderStatusResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderStatusResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - You don't have location access to perform this operation;\r\
            \n            <br/> User has no permissions to perform this action;\r\n\
            \            <br/> 502 - WorkOrder not found;\r\n            <br/> 503\
            \ - Request data is empty; User data not found;\r\n            <br/> 904\
            \ - Invalid WorkOrder status;\r\n            <br/> User has no permission\
            \ to set selected status;\r\n            <br/> 921 - Cannot update invoiced\
            \ Work order;\r\n            <br/> 9001 - Decline reason id is required;\r\
            \n            <br/> 9002 - This decline reason doesn't allow custom text"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update a Work order Status
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: updateRequestExt
  /workorders/{workorderId}/priority:
    put:
      deprecated: false
      description: "Updates Work Order priority. Returns Work order Id for successful\
        \ request.\r\n            <br /><br />This method can only be used for users\
        \ with 'WorkOrderFullEdit' permissions."
      operationId: "PUTv3_workorders_{workorderId}_priority"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
        description: The update request. Work order Priority.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - You don't have location access to perform this operation;\r\
            \n            <br/> 502 - Data not found. Returned if target Work order\
            \ is not found database;\r\n            <br/> 503 - Request data is empty;\r\
            \n            <br/> 913 - Priority isn't found in user settings;\r\n \
            \           <br/> Priority length cannot be longer then 100 or shorter\
            \ then 1 characters;\r\n            <br/> 921 - Cannot update invoiced\
            \ Work order;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update Work order Priority
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workorders/{workorderId}/category:
    put:
      deprecated: false
      description: "Updates the category of the specified work order (WO) with the\
        \ passed value. Note that you cannot update the category of an invoiced service\
        \ request.\r\n            <br />If the WO category does not have a GL code\
        \ mapping with the WO trade, you will get an error message listing valid categories\
        \ for this trade based on existing GL codes. You can retrieve valid categories\
        \ for a specific trade by sending the [GET /categories/glcodes](https://developer.servicechannel.com/swagger/ui/index?version=3#/Categories/GETv3_categories_glcodes_locationId__locationId__trade__trade_)\
        \ request.\r\n            <br />***Note:*** Only users who have permission\
        \ to edit work orders can use this method.\r\n            <br />**Example\
        \ Request**\r\n            \r\n                PUT /workorders/{workorderId}/category\r\
        \n                {\r\n                   \"Value\": \"Repair\",\r\n     \
        \              \"Actor\": \"James Smith\",\r\n                   \"Id\": 12345\r\
        \n                }"
      operationId: "PUTv3_workorders_{workorderId}_category"
      parameters:
      - description: Unique numeric identifier of the work order you want to update
          the category for.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoCategoryRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoCategoryRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoCategoryRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoCategoryRequest'
        description: Request to update the work order category.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: "The category of the specified work order is updated, and the\
            \ unique work order ID is returned in the response."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     100 — User has no rights to perform this action\r\n            502\
            \ — Work order is not found\r\n            921 — Cannot update invoiced\
            \ work order"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Update the work order category
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workorders/{workorderId}/nte:
    put:
      deprecated: false
      description: "Updates Work Order NTE. Returns Work order Id for successful request.\r\
        \n            <br /><br />This method can only be used for users with 'WorkOrderFullEdit'\
        \ permissions."
      operationId: "PUTv3_workorders_{workorderId}_nte"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoNteRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoNteRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoNteRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoNteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoNteRequest'
        description: The update request. Work order NTE.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n        \t<br/>Error codes:\r\n        \t<br/>\
            \ 100 - You don't have location access to perform this operation;\r\n\
            \        \t<br/> 502 - Data not found. Returned if target Work order is\
            \ not found database;\r\n        \t<br/> 503 - Request data is empty;\r\
            \n        \t<br/> 905 - Invalid Work order NTE specified. Returned if\
            \ nte exceeds user limit or its value is not a number;\r\n        \t<br/>\
            \ 921 - Cannot update invoiced Work order;\r\n        \t<br/> 931 - NTE\
            \ cannot be adjusted, please use subtotal and tax;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update Work order NTE
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workorders/{workOrderId}/projectApproval:
    post:
      deprecated: false
      description: "Create Work orders project approval. Returns successfully updated\
        \ id.\r\n            <br /><br />This method can only be used for users with\
        \ 'WorkOrderFullEdit' permissions."
      operationId: "POSTv3_workorders_{workOrderId}_projectApproval"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrdersProjectApprovalRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrdersProjectApprovalRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrdersProjectApprovalRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrdersProjectApprovalRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrdersProjectApprovalRequest'
        description: The create request. Work orders project approval.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n        \t<br/>Error codes:\r\n        \t<br/>\
            \ 100 - You don't have location access to perform this operation;\r\n\
            \        \t<br/> 502 - Data not found. Returned if target Work order is\
            \ not found database;\r\n        \t<br/> 503 - Request data is empty;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Create Work orders project approval
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: createRequest
    put:
      deprecated: false
      description: "Update Work orders NTE project approval. Returns successfully\
        \ updated id.\r\n            <br /><br />This method can only be used for\
        \ users with 'WorkOrderFullEdit' permissions."
      operationId: "PUTv3_workorders_{workOrderId}_projectApproval"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrdersProjectApprovalRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrdersProjectApprovalRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrdersProjectApprovalRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrdersProjectApprovalRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrdersProjectApprovalRequest'
        description: The update request. Work orders NTE/Link project approval.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n        \t<br/>Error codes:\r\n        \t<br/>\
            \ 100 - You don't have location access to perform this operation;\r\n\
            \        \t<br/> 502 - Data not found. Returned if target Work order is\
            \ not found database;\r\n        \t<br/> 503 - Request data is empty;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update Work orders NTE project approval
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workorders/{workorderId}/scheduledate:
    put:
      deprecated: false
      description: "Updates Work Order Scheduled Date. Returns Work order Id for successful\
        \ request.\r\n            <br /><br />Available for provider and subscriber\
        \ usage.\r\n            This method can only be used for users with 'WorkOrderScheduledDateChange'\
        \ permissions."
      operationId: "PUTv3_workorders_{workorderId}_scheduledate?rescheduleReasonCode={rescheduleReasonCode}"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric reschedule reason code. Optional.
        in: query
        name: rescheduleReasonCode
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
        description: The update request. Work order Scheduled Date.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - You don't have location access to perform this operation;\r\
            \n            <br/> 502 - Data not found. Returned if target Work order\
            \ is not found database;\r\n            <br/> 503 - Request data is empty;\r\
            \n            <br/> 908 - Invalid Work order scheduled date specified.\
            \ Returned if invalid date format was specified,\r\n            scheduled\
            \ date is smaller then Work order CallDate or bigger then Work order ExpirationDate;\r\
            \n            <br/> 921 - Cannot update invoiced Work order;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update Work order Scheduled Date
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workorders/{workorderId}/description:
    put:
      deprecated: false
      description: "Updates Work Order Description. Returns Work order Id for successful\
        \ request.\r\n            <br /><br />This method can only be used for users\
        \ with 'WorkOrderFullEdit' permissions."
      operationId: "PUTv3_workorders_{workorderId}_description"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
        description: The update request. Work order Description.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - You don't have location access to perform this operation;\r\
            \n            <br/> 502 - Data not found. Returned if target Work order\
            \ is not found database;\r\n            <br/> 503 - Request data is empty;\r\
            \n            <br/> 902 - Invalid Work order Problem Description specified.\
            \ Returned if description exceeds max len (8000 chars) or is empty;\r\n\
            \            <br/> 921 - Cannot update invoiced Work order;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update Work order Description
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workorders/{workorderId}/trade:
    put:
      deprecated: false
      operationId: "PUTv3_workorders_{workorderId}_trade"
      parameters:
      - in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - You don't have location access to perform this operation;\r\
            \n            <br/> 502 - Data not found. Returned if target Work order\
            \ is not found database;\r\n            <br/> 503 - Request data is empty;\r\
            \n            <br/> 921 - Cannot update invoiced Work order;\r\n     \
            \       <br/> 934 - Invalid Work order Trade specified. Returned if trade\
            \ exceeds max len (50 chars) or is empty"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Change Work order Trade
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workorders/{workorderId}/resolution:
    post:
      deprecated: false
      description: Adds Resolution to Work order. Returns Resolution Id for successful
        request.
      operationId: "POSTv3_workorders_{workorderId}_resolution"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderResolutionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderResolutionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderResolutionRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderResolutionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderResolutionRequest'
        description: The update request. Work order Resolution.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - User has no permissions to perform this action;\r\n   \
            \         <br/> 502 - Work order is not found;\r\n            <br/> 503\
            \ - Request data is empty;\r\n            <br/> 904 - Work Order is in\
            \ status that not allow to perform this action;\r\n            <br/> 933\
            \ - Workorder is on hold, no actions allowed;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Add Work order Resolution
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: request
  /workorders/{workorderId}/caller:
    put:
      deprecated: false
      description: "Updates Work order Caller. Returns Work order Id for successful\
        \ request.\r\n            <br /><br />This method can only be used for users\
        \ with 'WorkOrderFullEdit' permissions."
      operationId: "PUTv3_workorders_{workorderId}_caller"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
        description: The update request. Work order Caller.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - You don't have location access to perform this operation;\r\
            \n            <br/> 502 - Data not found. Returned if target Work order\
            \ is not found database;\r\n            <br/> 503 - Request data is empty;\r\
            \n            <br/> 906 - Invalid Work order Caller Name specified. Returned\
            \ if Caller Name exceeds max len (100 chars) or is empty;\r\n        \
            \    <br/> 921 - Cannot update invoiced Work order;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update Work order Caller
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workorders/{workorderId}/ponumber:
    put:
      deprecated: false
      description: "Updates Work order Purchase Number. Returns Work order Id for\
        \ successful request.\r\n            <br /><br />This method can only be used\
        \ for users with 'WorkOrderFullEdit' permissions."
      operationId: "PUTv3_workorders_{workorderId}_ponumber"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
        description: The update request. Work order Purchase Number.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - You don't have location access to perform this operation;\r\
            \n            <br/> 502 - Data not found. Returned if target Work order\
            \ is not found database;\r\n            <br/> 503 - Request data is empty;\r\
            \n            <br/> 920 - Invalid Work order purchase number specified.\
            \ Returned if duplicate PO number is found for this subscriber or if value\
            \ exceeds max len (20 chars);\r\n            <br/> 921 - Cannot update\
            \ invoiced Work order;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update Work order Purchase Number
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workorders/{workorderId}/wonumber:
    put:
      deprecated: false
      description: "Updates Work order Number.\r\n            <br /><br />This method\
        \ can only be used for users with 'WorkOrderFullEdit' permissions."
      operationId: "PUTv3_workorders_{workorderId}_wonumber"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest'
        description: The update request. Work order Number.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - You don't have location access to perform this operation;\r\
            \n            <br/> 502 - Data not found. Returned if target Work order\
            \ is not found database;\r\n            <br/> 503 - Request data is empty;\r\
            \n            <br/> 923 - Invalid Work order number specified. Returned\
            \ if duplicate number is found for this provider or if value exceeds max\
            \ len (20 chars);\r\n            <br/> 921 - Cannot update invoiced Work\
            \ order;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update Work order Number
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workorders/{workorderId}/projectid:
    put:
      deprecated: false
      description: Updates ProjectId.
      operationId: "PUTv3_workorders_{workorderId}_projectid"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoProjectIdRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoProjectIdRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoProjectIdRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoProjectIdRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoProjectIdRequest'
        description: The update request. ProjectId.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - You don't have location access to perform this operation;\r\
            \n            <br/> 502 - Data not found. Returned if target Work order\
            \ is not found database;\r\n            <br/> 503 - Request data is empty;\r\
            \n            <br/> 923 - Invalid Work order number specified. Returned\
            \ if duplicate number is found for this provider or if value exceeds max\
            \ len (20 chars);\r\n            <br/> 921 - Cannot update invoiced Work\
            \ order;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update ProjectId
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workorders/{workorderId}/projectid/unlink:
    put:
      deprecated: false
      description: Unlink ProjectId.
      operationId: "PUTv3_workorders_{workorderId}_projectid_unlink"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - You don't have location access to perform this operation;\r\
            \n            <br/> 502 - Data not found. Returned if target Work order\
            \ is not found database;\r\n            <br/> 503 - Request data is empty;\r\
            \n            <br/> 923 - Invalid Work order number specified. Returned\
            \ if duplicate number is found for this provider or if value exceeds max\
            \ len (20 chars);\r\n            <br/> 921 - Cannot update invoiced Work\
            \ order;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Unlink ProjectId
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workorderId}/weatherTypeId:
    put:
      deprecated: false
      description: "Updates weather type.\r\n            <br /><br />This method can\
        \ only be used for users with 'WorkOrderFullEdit' permissions."
      operationId: "PUTv3_workorders_{workorderId}_weatherTypeId?subscriberId={subscriberId}"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The subscriber Id to use (if logged in as a provider).
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoWeatherTypeIdRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoWeatherTypeIdRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoWeatherTypeIdRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoWeatherTypeIdRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoWeatherTypeIdRequest'
        description: The update request. WeatherTypeId (put Value as empty to remove
          weather type).
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - You don't have location access to perform this operation;\r\
            \n            <br/> 502 - Data not found. Returned if target Work order\
            \ is not found database;\r\n            <br/> 503 - Request data is empty;\r\
            \n            <br/> 923 - Invalid Work order number specified. Returned\
            \ if duplicate number is found for this provider or if value exceeds max\
            \ len (20 chars);\r\n            <br/> 921 - Cannot update invoiced Work\
            \ order;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update weather type
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workorders/{workorderId}/issueChoice:
    put:
      deprecated: false
      operationId: "PUTv3_workorders_{workorderId}_issueChoice?subscriberId={subscriberId}&locationId={locationId}"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The subscriber Id to use (if logged in as a provider).
        in: query
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: UID of location
        in: query
        name: locationId
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.IssueChoiceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.IssueChoiceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.IssueChoiceRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.IssueChoiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.IssueChoiceRequest'
        description: The request to perform action with.
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.<br/>Error codes:<br/> \r\n        503 - Validation\
            \ fails;<br> \r\n        1000 - Invalid setupId(dashboard) for current\
            \ user;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Update issue choice on WO
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: issueChoice
  /workorders/{workorderId}/reassign:
    put:
      deprecated: false
      description: "Reassign Work Order to another provider. Returns Work order Id\
        \ for successful request.\r\n            <br /><br />Available for provider\
        \ and subscriber usage."
      operationId: "PUTv3_workorders_{workorderId}_reassign"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ReassignWORequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ReassignWORequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ReassignWORequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ReassignWORequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ReassignWORequest'
        description: The request to perform action with.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 1301 - Request data is empty;\r\n            <br/> 101 - Invalid\
            \ Provider Id;\r\n            <br/>Provider not found for selected trade\
            \ and location;\r\n            <br/> 503 - Invalid Work order reassignment\
            \ reason;\r\n            <br/>Request data is empty;\r\n            <br/>Required\
            \ provider id not found;<br>Work order could not be reassigned. Only 'OPEN'\
            \ and 'IN PROGRESS' statuses allowed;\r\n            <br/>Provider or\
            \ trade should be changed;\r\n            <br/> 905 - Invalid 'Nte' value;\r\
            \n            <br/>Nte value exceeds user limit;\r\n            <br/>\
            \ 921 - Cannot update invoiced Work order;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the server refuses to fulfill the request.\r\
            \n            <br/> Error codes:\r\n            <br/> 804 - API call rejected\
            \ by lack of provider permissions;"
      summary: Reassign Work Order
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: request
  /workorders/reassign/reasons:
    get:
      deprecated: false
      description: "List Work order reassignment reasons.\r\n            <br /><br\
        \ />Available for provider and subscriber usage.\r\n            <br /><br\
        \ />SubscriberId is used to determine provider access to the action ('WorkOrderReassign'\
        \ EffectiveProviderPermissions, calculated flag. Calculated by ProviderAuthorizationHandler)"
      operationId: "GETv3_workorders_reassign_reasons?subscriberId={subscriberId}"
      parameters:
      - description: This parameter is required only for provider.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderReassignmentReason'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderReassignmentReason'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderReassignmentReason'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderReassignmentReason'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the server refuses to fulfill the request.\r\
            \n            <br/> Error codes:\r\n            <br/> 804 - API call rejected\
            \ by lack of provider permissions;"
      summary: Work order reassignment reasons
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workorderId}:
    get:
      deprecated: false
      description: A single Work order object with all its details.
      operationId: "GETv3_workorders_{workorderId}"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - Request data is empty;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Retrieve a Work order
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workorderId}/validateCheckIn:
    get:
      deprecated: false
      description: Validate Check-In action
      operationId: "GETv3_workorders_{workorderId}_validateCheckIn?WorkTypeId={WorkTypeId}&Latitude={Latitude}&Longitude={Longitude}"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Optional, type work Id. 1 - 'Repair', 2 - 'Travel'\r\n     \
          \       Default value is 1 ('Repair'). Supports custom types."
        in: query
        name: workTypeId
        schema:
          format: int32
          type: integer
      - description: Global position. Latitude
        in: query
        name: latitude
        required: true
        schema:
          format: double
          type: number
      - description: Global position. Longitude
        in: query
        name: longitude
        required: true
        schema:
          format: double
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 - WorkOrder not found;\r\n            <br/> 503 - Request\
            \ data is empty;\r\n            <br/>Provide your location to perform\
            \ checkin/checkout;\r\n            <br/> 917 - Invalid Tracking Number;\r\
            \n            <br/> 921 - Cannot update work order in 'completed' status;\r\
            \n            <br/>Cannot update invoiced work order;\r\n            <br/>\
            \ 924 - Work order has been invoiced and cannot be changed;\r\n      \
            \      <br/> 941 - Can't do check in: out of ... mile range;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "405":
          content: {}
          description: Indicates that the request method is not allowed on the requested
            resource.
      summary: Validate Check-In action
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workorderId}/validateCheckOut:
    get:
      deprecated: false
      description: Validate Check-Out action
      operationId: "GETv3_workorders_{workorderId}_validateCheckOut?WorkTypeId={WorkTypeId}&Latitude={Latitude}&Longitude={Longitude}"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: "Optional, type work Id. 1 - 'Repair', 2 - 'Travel'\r\n     \
          \       Default value is 1 ('Repair'). Supports custom types."
        in: query
        name: workTypeId
        schema:
          format: int32
          type: integer
      - description: Global position. Latitude
        in: query
        name: latitude
        required: true
        schema:
          format: double
          type: number
      - description: Global position. Longitude
        in: query
        name: longitude
        required: true
        schema:
          format: double
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 - WorkOrder not found;\r\n            <br/> 503 - Request\
            \ data is empty;\r\n            <br/>Provide your location to perform\
            \ checkin/checkout;\r\n            <br/> 917 - Invalid Tracking Number;\r\
            \n            <br/> 921 - Cannot update work order in 'completed' status;\r\
            \n            <br/>Cannot update invoiced work order;\r\n            <br/>\
            \ 924 - Work order has been invoiced and cannot be changed;\r\n      \
            \      <br/> 941 - Can't do check out: out of ... mile range;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "405":
          content: {}
          description: Indicates that the request method is not allowed on the requested
            resource.
      summary: Validate Check-Out action
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workorderId}/universalCheckIn:
    post:
      deprecated: false
      description: "Creates a check-in record of the indicated work type: travel,\
        \ repair, or custom. Returns `MechanicId` for a successful request.\r\n  \
        \          See the [Check-In/Out guide](https://developer.servicechannel.com/guides/checkin/about-check-in-out/)\
        \ for code snippets and detailed instructions.\r\n            <br />***Note:***\
        \ [Special permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#check-inout-permissions)\
        \ is required for the Travel and Repair work types.\r\n            <br />**Example\
        \ Request**\r\n            \r\n                POST /workorders/{workorderId}/universalCheckIn\r\
        \n                {\r\n                  \"WorkTypeId\": 1,\r\n          \
        \        \"UserId\": 1544987,\r\n                  \"TechsCount\": 2,\r\n\
        \                  \"Latitude\": 40.736618,\r\n                  \"Longitude\"\
        : -73.991806,\r\n                  \"CheckInTime\": \"2018-10-23T08:30:00Z\"\
        \r\n                }"
      operationId: "POSTv3_workorders_{workorderId}_universalCheckIn"
      parameters:
      - description: The unique ID of the work order for which you want to report
          a check-in.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CheckInRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CheckInRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CheckInRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CheckInRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CheckInRequest'
        description: The check-in object that needs to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInOutResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInOutResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInOutResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInOutResponse'
          description: The check-in record is created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 - Work order not found\r\n            503 - Required data missing\
            \ or incorrect\r\n            503 - Provide your location to perform check-in\
            \ or check-out\r\n            503 - Work type not found\r\n          \
            \  503 - Check-in or check-out premature\r\n            503 - Check-in\
            \ or check-out time should be close to current location time\r\n     \
            \       503 - Check-in or check-out out of date\r\n            804 - User\
            \ has no permission to perform this action\r\n            917 - Invalid\
            \ WO tracking number\r\n            921 - Cannot update work order in\
            \ one of the completed statuses\r\n            924 - Work order has been\
            \ invoiced and cannot be changed\r\n            924 - No changes can be\
            \ made to this maintenance work order because it is expired or premature\r\
            \n            924 - Cannot check in/out of work order in … status\r\n\
            \            924 - Client not participating in GPS check-in process; use\
            \ IVR\r\n            924 - Store has no GPS coordinates\r\n          \
            \  941 - Can’t perform check-in or check-out: out of ... mile range"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
        "405":
          content: {}
          description: The method is not allowed.
      summary: Perform a check-in
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: request
  /workorders/{workorderId}/universalCheckOut:
    post:
      deprecated: false
      description: "Creates a check-out record of the indicated work type: travel,\
        \ repair, or custom. Returns `MechanicId` for a successful request.\r\n  \
        \          See the [Check-In/Out guide](https://developer.servicechannel.com/guides/checkin/about-check-in-out/)\
        \ for code snippets and detailed instructions.\r\n            <br />***Note:***\
        \ [Special permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#check-inout-permissions)\
        \ is required for the Travel and Repair work types.\r\n            <br />**Example\
        \ Request**\r\n            \r\n                POST /workorders/{workorderId}/universalCheckOut\r\
        \n                {\r\n                  \"WorkTypeId\": 1,\r\n          \
        \        \"PrimaryStatus\": \"InProgress\",\r\n                  \"ExtendedStatus\"\
        : \"string\",\r\n                  \"ActionStatus\": \"Complete\",\r\n   \
        \               \"Resolution\": \"We need more time to complete this job.\"\
        ,\r\n                  \"UserId\": 1544987,\r\n                  \"Latitude\"\
        : 40.736618,\r\n                  \"Longitude\": -73.991806,\r\n         \
        \         \"CheckOutTime\": \"2018-10-23T09:30:00Z\"\r\n                }"
      operationId: "POSTv3_workorders_{workorderId}_universalCheckOut"
      parameters:
      - description: The unique ID of the work order for which you want to report
          a check-out.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CheckOutRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CheckOutRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CheckOutRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CheckOutRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CheckOutRequest'
        description: The check-out object that needs to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInOutResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInOutResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInOutResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckInOut.CheckInOutResponse'
          description: The check-out record is created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 - Work order not found\r\n            503 - Required data missing\
            \ or incorrect\r\n            503 - Provide your location to perform check-in\
            \ or check-out\r\n            503 - User has not checked in\r\n      \
            \      503 - Work type not found\r\n            503 - Check-in or check-out\
            \ premature\r\n            503 - Check-in or check-out time should be\
            \ close to current location time\r\n            503 - Check-in or check-out\
            \ out of date\r\n            503 - Invalid SignatureAttachmentId\r\n \
            \           503 - Invalid UnableObtainSignatureNoteId\r\n            503\
            \ - You can set either SignatureAttachmentId or UnableObtainSignatureNoteId\
            \ but not both\r\n            503 - No access to electronic signatures\r\
            \n            804 - User has no permission to perform this action\r\n\
            \            904 - User does not have … extended status that belongs to\
            \ … primary status\r\n            917 - Invalid WO tracking number\r\n\
            \            921 - Cannot update work order in one of the completed statuses\r\
            \n            925 - Work order has been invoiced and cannot be changed\r\
            \n            925 - No changes can be made to this maintenance work order\
            \ because it is expired or premature\r\n            925 - Cannot check\
            \ in/out of work order in … status\r\n            925 - Client not participating\
            \ in GPS check-in process; use IVR\r\n            925 - Store has no GPS\
            \ coordinates\r\n            942 - Can’t perform check-in or check-out:\
            \ out of ... mile range"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 - Missing or incorrect authentication credentials"
        "405":
          content: {}
          description: The method is not allowed.
      summary: Perform a check-out
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: request
  /workorders/{workOrderId}/checklists-responses:
    get:
      deprecated: false
      description: "[Returns checklist responses](https://developer.servicechannel.com/guides/checklists/get-checklist-responses-for-a-wo/)\
        \ submitted for the specified work order."
      operationId: "GETv3_workorders_{workOrderId}_checklists-responses?getAll={getAll}"
      parameters:
      - description: Unique identifier of the work order to return checklist responses
          for.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Flag to get responses from all completed checklists.
        in: query
        name: getAll
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.GetResponsesByWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.GetResponsesByWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.GetResponsesByWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.GetResponsesByWorkOrderResponse'
          description: Checklist responses for the specified work order are returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — Work order is not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Get checklist responses for a work order
      tags:
      - WorkOrders
      x-access: Any
  /odata/workorders/filter:
    post:
      deprecated: false
      description: "Returns a list of work orders created within the last 90 days\
        \ if not specified otherwise in `$filter`. The maximum date range between\
        \ the work order `CallDate` and the current date is 365 days.\r\n        \
        \    <br />The default number of work orders in the response is 50. To retrieve\
        \ more work orders, use the `$skip` parameter.\r\n            <br />***Note***:\
        \ You can also get a list of work orders by using one of the following methods:\
        \ [GET /odata/workorders](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/WorkOrders_GetWorkOrders),\
        \ [GET /workorders](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/GETv3_workorders_locationId__locationId__storeId__storeId_).\r\
        \n            <param name=\"request\"></param>"
      operationId: POSTv3_odata_workorders_filter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ODataRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ODataRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ODataRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ODataRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ODataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
          description: The list of work orders is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The request is already processed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server was unable to complete the request due to an internal\
            \ error.\r\n            <br/>Error codes:\r\n            501 — Object\
            \ reference is not set to an instance of an object"
      summary: Retrieve work orders
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: request
  /locations/{locationId}/workorders:
    get:
      deprecated: false
      description: "Performs search of workorders by specified filter expression and\
        \ returns list of work orders with all details.\r\n            <br />One page\
        \ contains 50 items by default (\"pageSize\"=50). To get next 50 items use\
        \ the \"page\" parameter (for example page=2 and so on)."
      operationId: "GETv3_locations_{locationId}_workorders?storeId={storeId}"
      parameters:
      - description: UID of location.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: StoreId of location. Used to find location for which search will
          be performed.
        in: query
        name: storeId
        schema:
          type: string
      - description: "UID of work order, exact search by default"
        explode: false
        in: query
        name: id
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Category of work order, exact search by default"
        explode: false
        in: query
        name: category
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Status of work order, exact search by default"
        explode: false
        in: query
        name: status
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Extended status of work order, exact search by default"
        explode: false
        in: query
        name: extendedStatus
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Work order number, 'starts with' search criteria by default"
        explode: false
        in: query
        name: number
        schema:
          items:
            type: object
          type: array
        style: form
      - description: '''starts with'' search criteria by default'
        explode: false
        in: query
        name: serviceId
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Priority of work order, exact search by default"
        explode: false
        in: query
        name: priority
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Purchase number of work order, 'starts with' search criteria\
          \ by default"
        explode: false
        in: query
        name: purchaseNumber
        schema:
          items:
            type: object
          type: array
        style: form
      - description: "Trade, 'starts with' search criteria by default"
        explode: false
        in: query
        name: trade
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Scheduled date
        explode: false
        in: query
        name: scheduledDate
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Expiration date
        explode: false
        in: query
        name: expirationDate
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Call date
        explode: false
        in: query
        name: callDate
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Sort resources by the specified property in the response.
        in: query
        name: sort
        schema:
          type: string
      - description: Results page number.
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of objects on the results page. The default and maximum
          per page is 50.
        in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 403 - Account has not been activated for GPS use;\r\n       \
            \     <br/> 503 - Validation fails. Request is empty or null;\r\n    \
            \        <br/> 601 - Location Id is invalid;\r\n            <br/> 606\
            \ - Cannot find location by StoreId;\r\n            <br/> 1000 - Invalid\
            \ Setup Id;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Requested resource requires authentication.\r\n          \
            \  <br/>Error codes:\r\n            <br/> 504 - API call rejected by security\
            \ permissions; "
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            <br/> 501 - Timeout expired.\
            \ The timeout period elapsed prior to completion of the operation or the\
            \ server is not responding."
      summary: Search Work Orders for specified location
      tags:
      - WorkOrders
      x-access: Any
  /locations/{LocationId}/warningworkorders:
    get:
      deprecated: false
      description: "Retrieve a Warning Work Orders for Location\r\n            <br\
        \ />One page contains 50 items by default (\"pageSize\"=50). To get next 50\
        \ items use the \"page\" parameter (for example page=2 and so on)."
      operationId: "GETv3_locations_{LocationId}_warningworkorders?ProblemCode={ProblemCode}&Equipment={Equipment}&ProblemType={ProblemType}&Trade={Trade}&Completed={Completed}&SubscriberId={SubscriberId}"
      parameters:
      - in: query
        name: locationId
        required: true
        schema:
          type: string
      - in: query
        name: locationId
        schema:
          format: int32
          type: integer
      - in: query
        name: problemCode
        schema:
          type: string
      - in: query
        name: equipment
        schema:
          type: string
      - in: query
        name: problemType
        schema:
          type: string
      - in: query
        name: trade
        schema:
          type: string
      - in: query
        name: completed
        schema:
          default: false
          type: boolean
      - in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
          description: OK
      summary: Retrieve a Warning Work Orders for Location
      tags:
      - WorkOrders
      x-access: Any
  /workorders/statistics:
    get:
      deprecated: false
      description: Retrieves list of all Work order Statistics. Only for providers
        usage.
      operationId: "GETv3_workorders_statistics?daysPeriod={daysPeriod}"
      parameters:
      - description: Days Period to perform action with (30 by default).
        in: query
        name: daysPeriod
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderStatisticsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderStatisticsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderStatisticsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderStatisticsResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - Only for providers usage;<br>Request data is empty;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Statistics Collection
      tags:
      - WorkOrders
      x-access: Any
  /workorders/categories:
    get:
      deprecated: false
      description: Retrieves list of all Work order categories.
      operationId: "GETv3_workorders_categories?SubscriberId={SubscriberId}&SortExpr={SortExpr}"
      parameters:
      - description: This parameter is required only for provider.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      - description: Gets or sets sort expression.
        in: query
        name: sortExpr
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.CategoryResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.CategoryResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.CategoryResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.CategoryResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - Request data is empty;\r\n            <br/>SubscriberId\
            \ is incorrect;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Categories Collection
      tags:
      - WorkOrders
      x-access: Any
  /workorders/statuses:
    get:
      deprecated: false
      description: Retrieves list of available Work order statuses. Id value can be
        used instead of primary status name in Update Status method.
      operationId: "GETv3_workorders_statuses?subscriberId={subscriberId}&tradeId={tradeId}"
      parameters:
      - description: This parameter is required only for provider.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      - description: "Optional, if LimitStatusesByTrade FF is on"
        in: query
        name: tradeId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Statuses Collection
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workorderId}/statuses:
    get:
      deprecated: false
      description: "Retrieves list of available Work order statuses that are related\
        \ to current work order state.\r\n            Id value can be used instead\
        \ of primary status name in Update Status method."
      operationId: "GETv3_workorders_{workorderId}_statuses?subscriberId={subscriberId}&tradeId={tradeId}"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: This parameter is required only for provider.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      - description: "Optional, if LimitStatusesByTrade FF is on"
        in: query
        name: tradeId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Statuses Collection that relates to the state of work order
      tags:
      - WorkOrders
      x-access: Any
  /workorders/priorities:
    get:
      deprecated: false
      description: Retrieves list of all Work order priorities in user settings.
      operationId: "GETv3_workorders_priorities?subscriberId={subscriberId}"
      parameters:
      - description: This parameter is required only for provider.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.PriorityResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.PriorityResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.PriorityResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.PriorityResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Priorities Collection
      tags:
      - WorkOrders
      x-access: Any
    post:
      deprecated: false
      description: Creates Priority.
      operationId: POSTv3_workorders_priorities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.AddPriorityRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.AddPriorityRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.AddPriorityRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.AddPriorityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.AddPriorityRequest'
        description: The request model to perform action with.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.AddPriorityResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.AddPriorityResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.AddPriorityResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.AddPriorityResponse'
                type: array
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Create Priority
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: request
  /workorders/starred:
    get:
      deprecated: false
      description: Retrieves list of work order ids starred by the current user.
      operationId: GETv3_workorders_starred
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
            text/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
            application/xml:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
            text/xml:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n             <br/>Error codes:\r\n             <br/> 504 - API call\
            \ rejected by security permissions;"
      summary: Starred Work Order Ids Collection
      tags:
      - WorkOrders
      x-access: Any
  /locations/{locationId}/workorders/priorities:
    get:
      deprecated: false
      operationId: "GETv3_locations_{locationId}_workorders_priorities"
      parameters:
      - in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.PriorityResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.PriorityResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.PriorityResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.PriorityResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 502 - Location not\
            \ found;\r\n            <br/> 504 - API call rejected by security permissions;"
      tags:
      - WorkOrders
      x-access: Any
  /workorders/label:
    get:
      deprecated: false
      operationId: "GETv3_workorders_label?keyword={keyword}&page={page}&pageSize={pageSize}"
      parameters:
      - description: Keyword contained in labels to perform the search by.
        in: query
        name: keyword
        schema:
          type: string
      - description: Results page number. Page number for pagination is 1-based.
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of labels on the results page.
        in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetWorkOrderLabelResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetWorkOrderLabelResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetWorkOrderLabelResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetWorkOrderLabelResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Get work orders labels.
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workorderId}/label:
    delete:
      deprecated: false
      description: Delete work order label.
      operationId: "DELETEv3_workorders_{workorderId}_label"
      parameters:
      - description: Work order id
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest'
        description: Model for delete label from work order
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Delete work order label
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: workOrderLabelRequest
    put:
      deprecated: false
      description: Update work order label.
      operationId: "PUTv3_workorders_{workorderId}_label"
      parameters:
      - description: Work order id
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest'
        description: Model for add/update label to work order
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetStatusResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Update work order label
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: workOrderLabelRequest
  /workorders/{workorderId}/servicenowid:
    put:
      deprecated: false
      description: Update work order servicenowid.
      operationId: "PUTv3_workorders_{workorderId}_servicenowid"
      parameters:
      - description: Work order id
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderServiceNowIdRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderServiceNowIdRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderServiceNowIdRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderServiceNowIdRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderServiceNowIdRequest'
        description: Model for add/update label to work order
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "You are not authorized to request this resource, or the resource\
            \ is unavailable for some reason.\r\n            <br/>Error codes: \r\n\
            \            804 — User has no permissions to perform this action."
      summary: Update work order servicenowid
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: workOrderServiceNowIdRequest
  /workorders/{workorderId}/addstripecharge:
    post:
      deprecated: false
      description: "<para>Creates charge through Stripe with provider stripe account\
        \ as destination.</para>\r\n<para>Also increases NTE by charge amount.</para>"
      operationId: "POSTv3_workorders_{workorderId}_addstripecharge"
      parameters:
      - description: Work order id
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddStripeChargeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddStripeChargeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddStripeChargeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddStripeChargeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddStripeChargeRequest'
        description: request
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.<br>Error codes:<br>502 - WorkOrder not found;<br>503
            - Request data is empty;WO don't have provider;WorkOrder does not belong
            to subscriber;Amount is not positive;<br>904 - WorkOrder is completed;<br>101
            - Provider don't have Stripe account;<br>501 - Stripe API error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br/> 504 - API call rejected by security permissions;
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Error while processing request.
      summary: Create Stripe charge
      tags:
      - WorkOrders
      x-access: Subscribers
      x-codegen-request-body-name: request
  /workorders/{workorderId}/link:
    put:
      deprecated: false
      description: "<para>Current Work Order marked as a parent, linking Work Order\
        \ marked as follow Up.</para>\r\n<para>If you set 'workorderIdToLink' parameter\
        \ then 'WorkorderIds' parameter of requested body will be ignored.</para>\r\
        \n<br />\r\n<br />Available for provider and subscriber usage."
      operationId: "PUTv3_workorders_{workorderId}_link?workorderIdToLink={workorderIdToLink}"
      parameters:
      - description: Parent Work Order id
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Work Order Id that links to parent. Optional.
        in: query
        name: workorderIdToLink
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.LinkWorkordersRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.LinkWorkordersRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.LinkWorkordersRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.LinkWorkordersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.LinkWorkordersRequest'
        description: Link Workorders Request
        required: true
      responses:
        "204":
          content: {}
          description: Indicates that the request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.<br/>Error codes:<br/> \r\n        917 - Wrong Parent\
            \ Work Order Id;<br> \r\n        932 - Wrong Linked Work Order Id;<br>\r\
            \n        601 - Location doesn't match"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      summary: Creates link between two Work Orders
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: request
  /workorders/{workorderId}/unlink:
    put:
      deprecated: false
      description: "<para>Current Work Order is parent, followUp Work Order is linked\
        \ Work Order</para>\r\n<para>If you set 'linkedWorkorderId' parameter then\
        \ 'WorkorderIds' parameter of requested body will be ignored.</para>\r\n<br\
        \ />\r\n<br />Available for provider and subscriber usage."
      operationId: "PUTv3_workorders_{workorderId}_unlink?linkedWorkorderId={linkedWorkorderId}"
      parameters:
      - description: Parent Work Order id
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Work Order Id that Unlinks from parent. Optional.
        in: query
        name: linkedWorkorderId
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UnlinkWorkordersRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UnlinkWorkordersRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UnlinkWorkordersRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UnlinkWorkordersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UnlinkWorkordersRequest'
        description: UnLink Workorders Request
        required: true
      responses:
        "204":
          content: {}
          description: Indicates that the request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.<br/>Error codes:<br/> \r\n        917 - Wrong Parent\
            \ Work Order Id;<br> \r\n        932 - Wrong Linked Work Order Id"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      summary: Removes link between two Work Orders
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: request
  /workorders/{workorderId}/feedback:
    post:
      deprecated: false
      operationId: "POSTv3_workorders_{workorderId}_feedback"
      parameters:
      - in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.LeaveFeedbackRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.LeaveFeedbackRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.LeaveFeedbackRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.LeaveFeedbackRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.LeaveFeedbackRequest'
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.<br/>Error codes:<br/> \r\n        935 - Invalid\
            \ Star Score;<br> \r\n        936 - Work Order was rated another user"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      summary: Leave feedback for a work order
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: leaveFeedbackRequest
  /workorders/feedback/list:
    get:
      deprecated: false
      operationId: "GETv3_workorders_feedback_list?workOrdersIds[0]={workOrdersIds[0]}&workOrdersIds[1]={workOrdersIds[1]}"
      parameters:
      - explode: true
        in: query
        name: workOrdersIds
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
      summary: Get work orders feedbacks
      tags:
      - WorkOrders
      x-access: Any
  /workorders/providerforreassignment:
    get:
      deprecated: false
      description: A single Provider object with all its details.
      operationId: "GETv3_workorders_providerforreassignment?workorderId={workorderId}&providerId={providerId}&locationId={locationId}&trade={trade}"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: query
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric Id of the previously assigned Provider.
        in: query
        name: providerId
        required: true
        schema:
          format: int32
          type: integer
      - description: Numeric Id of the Location.
        in: query
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Trade.
        in: query
        name: trade
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Indicates that the request has been successfully processed
            and that the response is intentionally blank.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - Request data is empty;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Retrieve a Provider
      tags:
      - WorkOrders
      x-access: Any
  /workorders/solvedissue:
    post:
      deprecated: false
      operationId: POSTv3_workorders_solvedissue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.Dashboard.Requests.SubmitSolvedIssueModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.Dashboard.Requests.SubmitSolvedIssueModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.Dashboard.Requests.SubmitSolvedIssueModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.Dashboard.Requests.SubmitSolvedIssueModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.Dashboard.Requests.SubmitSolvedIssueModel'
        required: true
      responses:
        "201":
          content: {}
          description: Indicates that the request has succeeded and has led to the
            creation of a resource.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - Request data is empty;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Submit solved issue during troubleshooting
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: model
  /worktypes:
    get:
      deprecated: false
      description: Retrieves list of Work types.
      operationId: "GETv3_worktypes?subscriberId={subscriberId}"
      parameters:
      - description: This parameter is required only for provider.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.V4.Workorders.WorkTypeResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.V4.Workorders.WorkTypeResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.V4.Workorders.WorkTypeResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.V4.Workorders.WorkTypeResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Work types Collection
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workorderId}/techniciansAssigned:
    get:
      deprecated: false
      operationId: "GETv3_workorders_{workorderId}_techniciansAssigned"
      parameters:
      - in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\
            \ \r\n                                                    <br/>Error codes:\
            \ \r\n                                                    <br/>504 - API\
            \ call rejected by security permissions;"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the server refuses to fulfill the request.\
            \ \r\n                                                    <br/>Error codes:\
            \ \r\n                                                    <br/>504 - Work\
            \ order doesn't belong to the current user"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Not Found - the requested resource could not be found but\
            \ may be available in the future. \r\n                               \
            \                         <br/>Error codes: \r\n                     \
            \                                   <br/>502 - Work order is not found;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\
            \ \r\n        <br/>Error codes: \r\n        <br/>501 - Timeout expired.\
            \ The timeout period elapsed prior to completion of the operation or the\
            \ server is not responding."
      summary: Retrieve list of technicians assigned to the specified work order
      tags:
      - WorkOrders
      x-access: Subscribers
  /workorders/{workorderId}/refrigerantUseStatus:
    get:
      deprecated: false
      description: "Returns the status of refrigerant use on the specified work order:\r\
        \n             • `null`: There is no information on the use of refrigerant.\r\
        \n             • `true`: Refrigerant was used upon execution of the service\
        \ request.\r\n             • `false`: Refrigerant wasn't used when performing\
        \ work on the service request."
      operationId: "GETv3_workorders_{workorderId}_refrigerantUseStatus"
      parameters:
      - description: The unique numeric identifier of the work order to return the
          status of refrigerant use for.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                default: false
                type: boolean
            text/json:
              schema:
                default: false
                type: boolean
            application/xml:
              schema:
                default: false
                type: boolean
            text/xml:
              schema:
                default: false
                type: boolean
          description: The status of refrigerant use on the specified work order is
            in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The request is not authorized.<br/><br/>Error codes:<br/>504
            — API call rejected by security permissions
        "404":
          content: {}
          description: The requested resource does not exist on the server.
      summary: Retrieve the status of refrigerant use on a work order
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workOrderId}/leakWasDetected:
    get:
      deprecated: false
      description: "Return the answer to the question did you find a leak on the specified\
        \ work order:\r\n             • `null`: There is no information about the\
        \ detected leak.\r\n             • `true`: The answer to the question did\
        \ you find a leak is Yes.\r\n             • `false`: The answer to the question\
        \ did you find a leak is No."
      operationId: "GETv3_workorders_{workOrderId}_leakWasDetected"
      parameters:
      - description: The unique numeric identifier of the work order.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                default: false
                type: boolean
            text/json:
              schema:
                default: false
                type: boolean
            application/xml:
              schema:
                default: false
                type: boolean
            text/xml:
              schema:
                default: false
                type: boolean
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The request is not authorized.<br/><br/>Error codes:<br/>504
            — API call rejected by security permissions
        "404":
          content: {}
          description: The requested resource does not exist on the server.
      summary: Retrieve the leak detection result in a Work Order
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workorderId}/markRefrigerantUse:
    put:
      deprecated: false
      description: "Updates the status of refrigerant use on the specified work order.\r\
        \n            <br />Set the `refrigerantWasUsed` parameter to either `true`\
        \ or `false` to mark whether refrigerant was used on the service request or\
        \ not."
      operationId: "PUTv3_workorders_{workorderId}_markRefrigerantUse?refrigerantWasUsed={refrigerantWasUsed}&actor={actor}"
      parameters:
      - description: The unique numeric identifier of the work order to update the
          status of refrigerant use for.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Defines if refrigerant was used on the work order.
        in: query
        name: refrigerantWasUsed
        schema:
          default: false
          type: boolean
      - description: Name of the person on whose behalf you are performing the action.
        in: query
        name: actor
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The status of refrigerant use on the specified work order is
            updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The request is not authorized.<br/><br/>Error codes:<br/>504
            — API call rejected by security permissions
        "404":
          content: {}
          description: The requested resource does not exist on the server.
      summary: Update the status of refrigerant use on a work order
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workOrderId}/UpdateWorkOrderLeakInspectionInfo:
    put:
      deprecated: false
      description: RTMultiLeakFlow FF must be enabled for this operation
      operationId: "PUTv3_workorders_{workOrderId}_UpdateWorkOrderLeakInspectionInfo?refrigerantWasUsed={refrigerantWasUsed}&leakWasDetected={leakWasDetected}"
      parameters:
      - description: The unique numeric identifier of the work order to update the
          status of refrigerant use for.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Defines if refrigerant was used on the work order.
        in: query
        name: refrigerantWasUsed
        required: true
        schema:
          default: false
          type: boolean
      - description: Defines if leak was detected on the work order.
        in: query
        name: leakWasDetected
        required: true
        schema:
          default: false
          type: boolean
      responses:
        "204":
          content: {}
          description: The leak inspection info on the specified work order is updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     <br/>701 - Invalid trade"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            <br/>504 — API call rejected by security permissions"
        "404":
          content: {}
          description: The requested resource does not exist on the server.
      summary: Update the leak inspection info on a work order
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workOrderId}/weatherEvent:
    get:
      deprecated: false
      description: Retrieves the set Weather Event related to a work order.
      operationId: "GETv3_workorders_{workOrderId}_weatherEvent?subscriberId={subscriberId}"
      parameters:
      - description: The Id of the work order.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      - description: This parameter is required only for provider.
        in: query
        name: subscriberId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.Workorders.WeatherEventType'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.Workorders.WeatherEventType'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.Workorders.WeatherEventType'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Api.Model.Workorders.WeatherEventType'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Get the Weather Event associated to a work order (if set)
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workorderId}/SetMoeNumber:
    put:
      deprecated: false
      operationId: "PUTv3_workorders_{workorderId}_SetMoeNumber?moeNumber={moeNumber}"
      parameters:
      - description: Work Order id
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: MOE Number
        in: query
        name: moeNumber
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested resource requires authentication.<br>Error
            codes:<br> 504 - API call rejected by security permissions;
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Mark if refrigerant was used
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workorderId}/features:
    get:
      deprecated: false
      operationId: "GETv3_workorders_{workorderId}_features?features[0]={features[0]}&features[1]={features[1]}"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Features to check
        explode: true
        in: query
        name: features
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApplicationAccess.FeatureResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApplicationAccess.FeatureResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApplicationAccess.FeatureResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApplicationAccess.FeatureResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 503 - Request data is empty;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "502":
          content: {}
          description: Indicates that the requested resource was not found on the
            server.
      summary: Checks features of Work order subscriber
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workOrderId}/analytics:
    get:
      deprecated: false
      description: "Retrieves analytics on the specified work order. \r\n        \
        \    <br />Analytics are based on the following flags: \r\n             •\
        \ **IVR**. Tracks the proper Check-In/Out process and indicates whether the\
        \ work order has both Check-In and Check-Out records and completes with a\
        \ Check-Out. \r\n             • **SLA**. Tracks estimated time of arrival\
        \ (ETA) and indicates whether the work order met the original ETA. \r\n  \
        \           • **FirstTimeCompletionFlag**. Indicates whether the work order\
        \ was completed on the first visit (the work order has only one Check-In and\
        \ one Check-Out records within 24 hours). \r\n            <br />***Note***:\
        \ You can get analytics from any work order. However, the analytics are mostly\
        \ relevant for the work orders in the **Completed** status, as these flags\
        \ rest on the Check-In/Out information."
      operationId: "GETv3_workorders_{workOrderId}_analytics"
      parameters:
      - description: Unique numeric identifier of the work order to get analytics
          from.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderAnalyticsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderAnalyticsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderAnalyticsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderAnalyticsResponse'
          description: Analytics on the specified work order are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content: {}
          description: "The request URI is incorrect, or the resource does not exist.\r\
            \n            <br/>Error codes: \r\n            502 — Data not found\r\
            \n            The resource you are looking for has been removed, had its\
            \ name changed, or is temporarily unavailable"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Something went wrong, and the server was unable to complete\
            \ your request.\r\n            <br/>Error codes:\r\n            501 —\
            \ Internal Error"
      summary: Get analytics on a work order
      tags:
      - WorkOrders
      x-access: Any
  /workorders/isTechnicianCertificateUsedOnWorkOrders:
    get:
      deprecated: false
      operationId: "GETv3_workorders_isTechnicianCertificateUsedOnWorkOrders?certificateId={certificateId}"
      parameters:
      - description: Numeric Id of the technician certificatite
        in: query
        name: certificateId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                default: false
                type: boolean
            text/json:
              schema:
                default: false
                type: boolean
            application/xml:
              schema:
                default: false
                type: boolean
            text/xml:
              schema:
                default: false
                type: boolean
          description: Refrigerant certification is verified.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Something went wrong, and the server was unable to complete\
            \ your request.\r\n            <br/>Error codes:\r\n            501 —\
            \ Internal Error"
      summary: Verify if refrigerant certificat is associated with WOs
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workOrderId}/technicianCertificate:
    put:
      deprecated: false
      operationId: "PUTv3_workorders_{workOrderId}_technicianCertificate"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoTechnicianCertificateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoTechnicianCertificateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoTechnicianCertificateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoTechnicianCertificateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ChangeWoTechnicianCertificateRequest'
        description: The request to perform action with
        required: true
      responses:
        "200":
          content: {}
          description: Certificatite was sucsesfully assigned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 - Work order is not found;\r\n            <br/> 601 - Invalid\
            \ Location Id;\r\n            <br/> 701 - Invalid trade;\r\n         \
            \   <br/> 1301 - Request data is empty;\r\n            <br/> 3901 - Invalid\
            \ Certificate Id;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Assign technician certificate to the WO
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: request
  /workorders/{workOrderId}/accept:
    put:
      deprecated: false
      description: "Allows a provider to accept a work order with an optional note.\r\
        \n            <br />When a work order is successfully accepted, it changes\
        \ its status from *Open* to *In Progress / Dispatch Confirmed*. \r\n     \
        \       <br />***Note***: Providers only can use this method."
      operationId: "PUTv3_workorders_{workOrderId}_accept"
      parameters:
      - description: Unique numeric identifier of the work order.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AcceptWorkOrderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AcceptWorkOrderRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AcceptWorkOrderRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AcceptWorkOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AcceptWorkOrderRequest'
        description: Request to add a note to the work order while accepting it.
        required: true
      responses:
        "200":
          content: {}
          description: Work order is successfully accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request was not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.  \r\n            <br/>Error codes:\r\n     \
            \       502 &mdash; Work order is not found\r\n            804 &mdash;\
            \ User has no permission to perform this action \r\n            904 &mdash;\
            \ Work order is in status that does not allow to perform this action \r\
            \n            5202 &mdash; This work order was already accepted\r\n  \
            \          5203 &mdash; Acceptance of the work order failed"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested resource requires authentication.\r\n      \
            \      <br/>Error codes:\r\n            504 &mdash; API call rejected\
            \ by security permissions"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Invalid work order ID.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Something went wrong, and the server was unable to complete\
            \ your request. "
      summary: Accept a work order
      tags:
      - WorkOrders
      x-access: Providers
      x-codegen-request-body-name: request
  /workorders/{workOrderId}/decline:
    put:
      deprecated: false
      description: "Allows a provider to decline a work order with a note. \r\n  \
        \          <br />When a provider declines a work order, the order changes\
        \ its status from *Open* to *Open / Declined* or becomes automatically reassigned\
        \ to another provider if the *WOMultipleAutoReassign* feature flag is turned\
        \ on for the subscriber. \r\n            <br />***Note***: Providers only\
        \ can use this method."
      operationId: "PUTv3_workorders_{workOrderId}_decline"
      parameters:
      - description: Unique numeric identifier of the work order.
        in: path
        name: workOrderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.DeclineWorkOrderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.DeclineWorkOrderRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.DeclineWorkOrderRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.DeclineWorkOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.DeclineWorkOrderRequest'
        description: "Request to add information about the work order decline. \r\n\
          \            <br />Required parameters: \r\n             • `DeclineReasonId`\
          \ (if the *DeclineHistoryWO* feature flag is on)\r\n             • `CustomDeclineReason`\
          \ (if the decline reason has `AskCustomReason`=true)"
        required: true
      responses:
        "200":
          content: {}
          description: Work order is declined.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request was not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 &mdash; Work order is not found\r\n            804 &mdash; User\
            \ has no permission to perform this action\r\n            904 &mdash;\
            \ Work order is in status that does not allow to perform this action\r\
            \n            5201 &mdash; Work order decline failed\r\n            9002\
            \ &mdash; This decline reason does not allow custom text\r\n         \
            \   9003 &mdash; Invalid decline reason ID"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The requested resource requires authentication. \r\n     \
            \       <br/>Error codes:\r\n            504 &mdash; API call rejected\
            \ by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Something went wrong, and the server was unable to complete\
            \ your request."
      summary: Decline a work order
      tags:
      - WorkOrders
      x-access: Providers
      x-codegen-request-body-name: request
  /workorders/{workorderId}/GPSRadius:
    get:
      deprecated: false
      description: Get GPS Radius for a WO
      operationId: "GETv3_workorders_{workorderId}_GPSRadius"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetGPSRadiusResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetGPSRadiusResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetGPSRadiusResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.GetGPSRadiusResponse'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 502 - WorkOrder not found;            \r\n            <br/> 917\
            \ - Invalid Tracking Number;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
      summary: Get GPS Radius for a WO
      tags:
      - WorkOrders
      x-access: Any
  /workorders/{workorderId}/followers:
    delete:
      deprecated: false
      description: Remove Follower from Work order.
      operationId: "DELETEv3_workorders_{workorderId}_followers?email={email}"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The follower email address.
        in: query
        name: email
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/>503 - Request data is empty;\r\n            <br/>There is no followers\
            \ in request;<br/>Empty tracking number (workorder Id);"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Remove Follower from Work order
      tags:
      - WorkOrders
      x-access: Any
    post:
      deprecated: false
      description: Add Followers to Work order.
      operationId: "POSTv3_workorders_{workorderId}_followers"
      parameters:
      - description: Numeric Id of the Work order to perform action with.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest'
        description: The request model to perform action with.
        required: true
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/>503 - Request data is empty;\r\n            <br/>There is no followers\
            \ in request;\r\n            <br/>Empty tracking number (workorder Id);"
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Add Followers to Work order
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: request
  /subscribers/{subscriberId}/workorders/{workorderId}/reassign:
    put:
      deprecated: false
      operationId: "PUTv3_subscribers_{subscriberId}_workorders_{workorderId}_reassign"
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      tags:
      - WorkOrders
      x-access: Any
  /workorders/handlewocompletionforsurvey:
    post:
      deprecated: false
      operationId: POSTv3_workorders_handlewocompletionforsurvey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject'
        description: The request model to perform action with.
        required: true
      responses:
        "201":
          content: {}
          description: Indicates that the request succeeded.
      summary: Add Empty Survey for Work Order Completion
      tags:
      - WorkOrders
      x-access: Any
      x-codegen-request-body-name: request
  /workrequests/{workrequestId}/notes:
    get:
      deprecated: false
      description: "*In limited availability phase.*\r\n            <br />Returns\
        \ list of work request notes, sorted descending by creation date."
      operationId: "GETv3_workrequests_{workrequestId}_notes?pageNumber={pageNumber}&pageSize={pageSize}"
      parameters:
      - description: Numeric Id of the Work request to perform action with.
        in: path
        name: workrequestId
        required: true
        schema:
          format: int32
          type: integer
      - description: Page number.
        in: query
        name: pageNumber
        required: true
        schema:
          format: int32
          type: integer
      - description: Page size.
        in: query
        name: pageSize
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Request succeeded and the requested information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 8020 - Invalid work request identifier. Returned if workrequestId\
            \ is &lt;= 0;\r\n            <br/> 922 - Invalid paging parameter. Returned\
            \ if paging parameter doesn't correspond to valid format;\r\n        \
            \    <br/> 100 - You don't have location access to perform this operation;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Unauthorized indicates that the requested resource requires
            authentication.<br>Error codes:<br> 504 - API call rejected by security
            permissions;
      summary: Work request Notes Collection
      tags:
      - WorkRequestNote
      x-access: Any
    post:
      deprecated: false
      description: "*In limited availability phase.*\r\n            <br />Returns\
        \ Note Id for successful request."
      operationId: "POSTv3_workrequests_{workrequestId}_notes"
      parameters:
      - description: Numeric Id of the Work request to perform action with.
        in: path
        name: workrequestId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestNoteRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestNoteRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestNoteRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestNoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestNoteRequest'
        description: The note request model.
        required: true
      responses:
        "201":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  <br/> 100 - You don't have location access to perform this operation;\r\
            \n            <br/> 503 - Validation fails. Invalid WorkRequest Id or\
            \ Note value;\r\n            <br/> 8020 - Invalid work request identifier.Returned\
            \ if workrequestId is &lt;= 0;"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Creates a work request note
      tags:
      - WorkRequestNote
      x-access: Any
      x-codegen-request-body-name: noteRequest
  /workrequests/{workrequestId}/notes/followers:
    delete:
      deprecated: false
      description: "*In limited availability phase.*\r\n            <br />Returns\
        \ status \"OK\" for successful request."
      operationId: "DELETEv3_workrequests_{workrequestId}_notes_followers?email={email}"
      parameters:
      - description: Numeric Id of the Work request to perform action with.
        in: path
        name: workrequestId
        required: true
        schema:
          format: int32
          type: integer
      - description: Follower email.
        in: query
        name: email
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.<br>Error codes:<br>503 - Request data is empty;<br>There
            is no followers in request;<br>Empty tracking number (workorder Id);
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Remove Follower from Work request
      tags:
      - WorkRequestNote
      x-access: Any
    post:
      deprecated: false
      description: "*In limited availability phase.*\r\n            <br />Returns\
        \ status \"OK\" for successful request."
      operationId: "POSTv3_workrequests_{workrequestId}_notes_followers"
      parameters:
      - description: Numeric Id of the Work request to perform action with.
        in: path
        name: workrequestId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.AddWorkRequestNoteFollowersRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.AddWorkRequestNoteFollowersRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.AddWorkRequestNoteFollowersRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.AddWorkRequestNoteFollowersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.AddWorkRequestNoteFollowersRequest'
        description: The request model to perform action with.
        required: true
      responses:
        "200":
          content: {}
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.<br>Error codes:<br>503 - Request data is empty;<br>There
            is no followers in request;<br>Empty tracking number (workrequest Id);
        "404":
          content: {}
          description: Indicates that the requested resource does not exist on the
            server.
      summary: Add Followers to Work request
      tags:
      - WorkRequestNote
      x-access: Any
      x-codegen-request-body-name: request
  /workrequests:
    post:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: POSTv3_workrequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestResponse'
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     101 - Invalid provider id\r\n            301 - Contract not found\
            \ for specified subscribers location, provider and trade\r\n         \
            \   401 - Invalid subscriber\r\n            601 - Location is not found\r\
            \n            701 - Invalid trade\r\n            8001 — Description is\
            \ required\r\n            8002 — Call Date is required\r\n           \
            \ 8003 — Issue is required\r\n            8005 - CallDate has wrong format\r\
            \n            8006 - ScheduledDate has wrong format\r\n            8007\
            \ - Invalid status\r\n            8008 - Invalid extended status\r\n \
            \           8009 - Invalid category\r\n            8010 - Invalid priority\r\
            \n            8011 - Invalid currency\r\n            8012 - Invalid setup\r\
            \n            8013 - Invalid area\r\n            8014 - Invalid asset\r\
            \n            8017 - ProblemCode is required\r\n            8018 - ProblemType\
            \ is required\r\n            8019 - ScheduledDate must be greater than\
            \ CallDate"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            501 - Internal Error code"
      summary: Creates a work request
      tags:
      - WorkRequests
      x-access: Any
      x-codegen-request-body-name: request
  /workrequests/{id}:
    delete:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: "DELETEv3_workrequests_{id}"
      parameters:
      - description: Numeric Id of the work request to perform action with.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            502 — Data not found"
      summary: Delete a work request
      tags:
      - WorkRequests
      x-access: Any
    get:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: "GETv3_workrequests_{id}"
      parameters:
      - description: Numeric Id of the work request to perform action with.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.WorkRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.WorkRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.WorkRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.WorkRequest'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "404":
          content: {}
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            502 — Data not found"
      summary: Retrieve a work request
      tags:
      - WorkRequests
      x-access: Any
  /workrequests/{workRequestId}:
    put:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: "PUTv3_workrequests_{workRequestId}"
      parameters:
      - description: Numeric Id of the work request to perform action with.
        in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.UpdateWorkRequestRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.UpdateWorkRequestRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.UpdateWorkRequestRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.UpdateWorkRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.UpdateWorkRequestRequest'
        description: The update request.
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  301 - Contract not found for specified subscribers location, provider\
            \ and trade\r\n            502 - WorkRequest not found\r\n           \
            \ 701 - Invalid trade\r\n            8006 - ScheduledDate has wrong format\r\
            \n            8007 - Invalid status\r\n            8008 - Invalid extended\
            \ status\r\n            8009 - Invalid category\r\n            8010 -\
            \ Invalid priority     \r\n            8011 - Invalid currency\r\n   \
            \         8019 - ScheduledDate must be greater than CallDate\r\n     \
            \       8107 - Work request is closed\r\n            8108 - Closed reason\
            \ is required for Closed status\r\n            8109 - Work order id is\
            \ required for this closed reason\r\n            8110 - Invalid closed\
            \ reason\r\n            8111 - Closed reason could be set only for Closed\
            \ status\r\n            8112 - Invalid work order id\r\n            8113\
            \ - Work order id could be set only for Closed status\r\n            8114\
            \ - Work order id could be set only for &apos;Work order created&apos;\
            \ reason"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            501 - Internal Error code"
      summary: Update a work request
      tags:
      - WorkRequests
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workrequests/{workRequestId}/status:
    put:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: "PUTv3_workrequests_{workRequestId}_status"
      parameters:
      - description: Numeric Id of the work request to perform action with.
        in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStatusRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStatusRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStatusRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStatusRequest'
        description: The update request. Work request Status.
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  502 - WorkRequest not found\r\n            8007 - Invalid status\r\n\
            \            8008 - Invalid extended status"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            501 - Internal Error code"
      summary: Update a work request status
      tags:
      - WorkRequests
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workrequests/{workRequestId}/priority:
    put:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: "PUTv3_workrequests_{workRequestId}_priority?priorityId={priorityId}"
      parameters:
      - description: Numeric Id of the work request to perform action with.
        in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      - description: Priority Id.
        in: query
        name: priorityId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  502 - WorkRequest not found\r\n            8010 - Invalid priority"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            501 - Internal Error code"
      summary: Update work request priority
      tags:
      - WorkRequests
      x-access: Any
  /workrequests/{workRequestId}/category:
    put:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: "PUTv3_workrequests_{workRequestId}_category?categoryId={categoryId}"
      parameters:
      - description: Numeric Id of the work request to perform action with.
        in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      - description: Category Id.
        in: query
        name: categoryId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  502 - WorkRequest not found\r\n            8009 - Invalid category"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            501 - Internal Error code"
      summary: Update work request category
      tags:
      - WorkRequests
      x-access: Any
  /workrequests/{workRequestId}/nte:
    put:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: "PUTv3_workrequests_{workRequestId}_nte"
      parameters:
      - description: Numeric Id of the work request to perform action with.
        in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestNteRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestNteRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestNteRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestNteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestNteRequest'
        description: The update request. Work request NTE.
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  502 - WorkRequest not found\r\n            8011 - Invalid currency"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            501 - Internal Error code"
      summary: Update work request NTE
      tags:
      - WorkRequests
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workrequests/{workRequestId}/scheduledate:
    put:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: "PUTv3_workrequests_{workRequestId}_scheduledate?scheduledDate={scheduledDate}"
      parameters:
      - description: Numeric Id of the work request to perform action with.
        in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      - description: Scheduled date.
        in: query
        name: scheduledDate
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  502 - WorkRequest not found\r\n            8006 - ScheduledDate has\
            \ wrong format\r\n            8019 - ScheduledDate must be greater than\
            \ CallDate"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            501 - Internal Error code"
      summary: Update work request schedule date
      tags:
      - WorkRequests
      x-access: Any
  /workrequests/{workRequestId}/description:
    put:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: "PUTv3_workrequests_{workRequestId}_description"
      parameters:
      - description: Numeric Id of the work request to perform action with.
        in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStringFieldsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStringFieldsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStringFieldsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStringFieldsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStringFieldsRequest'
        description: The update request. Work request description.
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  502 - WorkRequest not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            501 - Internal Error code"
      summary: Update work request description
      tags:
      - WorkRequests
      x-access: Any
      x-codegen-request-body-name: updateRequest
  /workrequests/{workRequestId}/trade:
    put:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: "PUTv3_workrequests_{workRequestId}_trade?tradeId={tradeId}"
      parameters:
      - description: Numeric Id of the Work request to perform action with.
        in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      - description: Trade id.
        in: query
        name: tradeId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  301 - Contract not found for specified subscribers location, provider\
            \ and trade\r\n            502 - WorkRequest not found\r\n           \
            \ 701 - Invalid trade"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            501 - Internal Error code"
      summary: Update work request trade
      tags:
      - WorkRequests
      x-access: Any
  /workrequests/{workRequestId}/reassign:
    put:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: "PUTv3_workrequests_{workRequestId}_reassign"
      parameters:
      - description: Numeric Id of the work request to perform action with.
        in: path
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ReassignWorkRequestRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ReassignWorkRequestRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ReassignWorkRequestRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ReassignWorkRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.ReassignWorkRequestRequest'
        description: The request to perform action with.
        required: true
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Bad Request - the request could not be understood or was missing\
            \ required parameters.\r\n            <br/>Error codes:\r\n          \
            \  100 - Invalid provider id passed\r\n            301 - Contract not\
            \ found for specified subscribers location, provider and trade\r\n   \
            \         502 - WorkRequest not found\r\n            503 - Provider should\
            \ be changed\r\n            701 - Invalid trade\r\n            8006 -\
            \ ScheduledDate has wrong format\r\n            8009 - Invalid category\r\
            \n            8010 - Invalid priority\r\n            8011 - Invalid currency\r\
            \n            8019 - ScheduledDate must be greater than CallDate"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            501 - Internal Error code"
      summary: Reassign work request to another provider
      tags:
      - WorkRequests
      x-access: Any
      x-codegen-request-body-name: reassignRequest
  /workrequests/search:
    post:
      deprecated: false
      description: '*In limited availability phase.*'
      operationId: POSTv3_workrequests_search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.SearchWorkRequestRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.SearchWorkRequestRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.SearchWorkRequestRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.SearchWorkRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.SearchWorkRequestRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.WorkRequest'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.WorkRequest'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.WorkRequest'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.WorkRequest'
                type: array
          description: Work requests are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:           \r\
            \n            8100 - CallDateFrom has wrong format\r\n            8101\
            \ - CallDateTo has wrong format\r\n            8102 - ScheduledDateFrom\
            \ has wrong format\r\n            8103 - ScheduledDateTo has wrong format\r\
            \n            8104 - CloseDateFrom has wrong format\r\n            8105\
            \ - CloseDateTo has wrong format"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: "Performs search of work requests by specified filter expression. \
        \ \r\n            One page contains 50 items by default (\"PageSize\"=50).\
        \ \r\n            To get next 50 items use the “Page” parameter (for example\
        \ Page=2 and so on)."
      tags:
      - WorkRequests
      x-access: Any
      x-codegen-request-body-name: request
  /workrequests/providersforreassignment:
    get:
      deprecated: false
      operationId: "GETv3_workrequests_providersforreassignment?workRequestId={workRequestId}"
      parameters:
      - description: Work request id
        in: query
        name: workRequestId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ServiceRequestProvider'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ServiceRequestProvider'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ServiceRequestProvider'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ServiceRequestProvider'
          description: Created indicates that the request resulted in a new resource
            created before the response was sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:           \r\
            \n            503 - Invalid Equipment Id\r\n            503 - Invalid\
            \ Location Id\r\n            804 - API call rejected by lack of provider\
            \ permissions\r\n            502 - We could not find the service provider\
            \ for the problem you have indicated"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "404":
          content: {}
          description: "The requested resource does not exist on the server.\r\n \
            \           <br/>Error codes:\r\n            502 — We could not find the\
            \ service provider for the problem you have indicated"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "Indicates that a generic error has occurred on the server.\r\
            \n            <br/>Error codes:\r\n            501 - Internal Error code"
      summary: Get providers available for reassign
      tags:
      - WorkRequests
      x-access: Any
  /odata/rfps:
    get:
      deprecated: false
      description: "Retrieve Rfps\r\n            <br /> Dates without 'Dto' endings\
        \ return UTC date format.\r\n            <br /> Dates without 'Dto' endings\
        \ are not recommended for using."
      operationId: Rfps_GetRfps
      parameters:
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.Rfp'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.Rfp'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Rfps
      tags:
      - Rfps
      x-access: Subscribers
  /odata/rfps({rfpId}):
    get:
      deprecated: false
      description: Retrieve Rfp
      operationId: Rfps_GetRfp
      parameters:
      - in: path
        name: rfpId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.Rfp'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.Rfp'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Rfp
      tags:
      - Rfps
      x-access: Subscribers
  /odata/invoices:
    get:
      deprecated: false
      description: Returns a list of invoices posted within the last 90 days if not
        specified otherwise in `$filter`. The maximum date range between the invoice
        `PostedDate` and the current date is 365 days.
      operationId: Invoices_GetInvoices
      parameters:
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.Invoice'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.Invoice'
                type: array
          description: The requested invoices are in the response.
      summary: Retrieve Invoices
      tags:
      - Invoices
      x-access: Subscribers
  /odata/workorders({workorderId})/workactivities:
    get:
      deprecated: false
      description: "Returns work activities of the specified work order.\r\n     \
        \       <br />A work activity details information about the technician's work\
        \ on a service request: the time when the technician started and finished\
        \ their work, the type of activity they carried out, the number of technicians\
        \ who rendered the service, and other details related to the labor performed.\r\
        \n            <br />***Note:*** Both subscribers and providers can use this\
        \ method."
      operationId: WorkActivities_GetWorkActivities
      parameters:
      - description: The unique numeric identifier of the work order for which you
          want to retrieve work activities.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivity'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivity'
                type: array
          description: The work activities of the specified work order are in the
            response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — WorkOrder not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: List work activities of the specified work order
      tags:
      - WorkActivities
      x-access: Any
  /odata/workactivities/Service.ForTimeInterval(dtMin={dtMin}, dtMax={dtMax}, userId={userId}):
    get:
      deprecated: false
      description: "Returns work activities created by the specified provider user\
        \ within the set time period.\r\n            <br />A work activity details\
        \ information about the technician’s work on a service request: the time when\
        \ the technician started and finished their work, the type of activity they\
        \ carried out, the number of technicians who rendered the service, and other\
        \ details related to the labor performed.\r\n            <br />***Note:***\
        \ This method is only available to provider users."
      operationId: WorkActivities_ForTimeInterval
      parameters:
      - description: PIN of the provider user who created work activities.
        in: path
        name: userId
        required: true
        schema:
          format: int32
          type: integer
      - description: The end date of the time period for which you want to retrieve
          work activities. The format is `YYYY-MM-DD`.
        in: path
        name: dtMax
        required: true
        schema:
          format: date-time
          type: string
      - description: The start date of the time period for which you want to retrieve
          work activities. The format is `YYYY-MM-DD`.
        in: path
        name: dtMin
        required: true
        schema:
          format: date-time
          type: string
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivity'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivity'
                type: array
          description: Work activities created by the specified provider user within
            the set time period are in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     504 — User not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: List work activities created by a provider user within the specified
        time period
      tags:
      - WorkActivities
      x-access: Providers
  /odata/workorders({workorderId})/workactivities({workactivityId}):
    get:
      deprecated: false
      description: "Returns the specified work activity of a work order.\r\n     \
        \       <br />A work activity details information about the technician's work\
        \ on a service request: the time when the technician started and finished\
        \ their work, the type of activity they carried out, the number of technicians\
        \ who rendered the service, and other details related to the labor performed.\r\
        \n            <br />***Note:*** Both subscribers and providers can use this\
        \ method."
      operationId: WorkActivities_GetWorkActivity
      parameters:
      - description: The unique numeric identifier of the work activity to return.
        in: path
        name: workactivityId
        required: true
        schema:
          format: int32
          type: integer
      - description: The unique numeric identifier of the work order for which you
          want to retrieve a work activity.
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivity'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkActivity'
          description: The requested work activity of the specified work order is
            in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.\r\n            <br/>Error codes:\r\n       \
            \     502 — WorkOrder not found\r\n            502 — Work activity is\
            \ not found"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not authorized.\r\n            <br/>Error codes:\r\
            \n            504 — API call rejected by security permissions"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The server was unable to complete the request due to an internal
            error.
      summary: Retrieve the specified work activity of a work order
      tags:
      - WorkActivities
      x-access: Any
  /odata/trucks:
    get:
      deprecated: false
      operationId: Trucks_GetTrucks
      parameters:
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: OK
      tags:
      - Trucks
      x-access: Any
  /odata/workorders({workorderId})/notes:
    get:
      deprecated: false
      operationId: Notes_GetWorkOrderNotes
      parameters:
      - in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.Note'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.Note'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Work Order Notes
      tags:
      - Notes
      x-access: Any
  /odata/workorders({workorderId})/notes({noteId}):
    get:
      deprecated: false
      operationId: Notes_GetWorkOrderNote
      parameters:
      - in: path
        name: noteId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.Note'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.Note'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Work Order Note
      tags:
      - Notes
      x-access: Any
  /odata/locations({locationId})/providers/Service.GetRecent(days={days}):
    get:
      deprecated: false
      operationId: Providers_GetRecent
      parameters:
      - in: path
        name: days
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ReviewedProvider'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ReviewedProvider'
                type: array
          description: The request succeeded and providers are returned.
        "400":
          content: {}
          description: The request parameters are not valid.
        "401":
          content: {}
          description: An unauthorized request.
        "403":
          content: {}
          description: Providers cannot use this method.
        "404":
          content: {}
          description: The location wasn't found.
        "500":
          content: {}
          description: Something went wrong.
      summary: "Get recent providers for the given location.\r\n            \"Recent\"\
        \ means a provider has completed WOs for a certain time."
      tags:
      - Providers
      x-access: Any
  /odata/detailedProviders/Service.Get(providerId={providerId}):
    get:
      deprecated: false
      operationId: Providers_GetProvider
      parameters:
      - in: path
        name: providerId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.DetailedProvider'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.DetailedProvider'
          description: The request succeeded and the provider is returned.
        "401":
          content: {}
          description: Unauthorized request.
        "403":
          content: {}
          description: Providers cannot use this method.
        "404":
          content: {}
          description: The provider wasn't found.
        "500":
          content: {}
          description: Something went wrong.
      summary: Get provider by provider id.
      tags:
      - Providers
      x-access: Any
  /odata/locations({locationId})/providers/Service.GetLast(days={days}):
    get:
      deprecated: false
      operationId: Providers_GetLast
      parameters:
      - in: path
        name: days
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ExtendedReviewedProvider'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ExtendedReviewedProvider'
                type: array
          description: The request succeeded and providers are returned.
        "400":
          content: {}
          description: The request parameters are not valid.
        "401":
          content: {}
          description: An unauthorized request.
        "403":
          content: {}
          description: Providers cannot use this method.
        "404":
          content: {}
          description: The location wasn't found.
        "500":
          content: {}
          description: Something went wrong.
      summary: Retrieve providers feedback rating data.
      tags:
      - Providers
      x-access: Any
  /odata/proposals:
    get:
      deprecated: false
      description: "Retrieve Proposals\r\n            <br />The filter expressions\
        \ by defaul is \"$filter CreatedDate ge (Now-90 days)\".\r\n            <br\
        \ />The maximum CreatedDate value is 365 days even if provided.\r\n      \
        \      <br />Dates without 'Dto' endings return UTC date format.\r\n     \
        \       <br />Dates without 'Dto' endings are not recommended for using."
      operationId: Proposals_GetProposals
      parameters:
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalInfo'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalInfo'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the requested Proposal is in void status.
      summary: Retrieve Proposals
      tags:
      - Proposals
      x-access: Any
  /odata/rfps({rfpId})/proposals:
    get:
      deprecated: false
      description: Retrieve Rfp Proposals
      operationId: Proposals_GetProposalsForRfp
      parameters:
      - in: path
        name: rfpId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalInfo'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalInfo'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Rfp Proposals
      tags:
      - Proposals
      x-access: Any
  /odata/proposals({proposalId})/Service.Categories():
    get:
      deprecated: false
      description: Retrieve Proposal Categories
      operationId: Proposals_GetProposalCategories
      parameters:
      - in: path
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalCategory'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalCategory'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Proposal Categories
      tags:
      - Proposals
      x-access: Any
  /odata/providerassignment/Service.GetAssigned():
    get:
      deprecated: false
      operationId: ProviderAssignment_GetAssigned
      parameters:
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderInfo'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ProviderInfo'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve list of providers assigned to specific subscriber
      tags:
      - ProviderAssignment
      x-access: Any
  /odata/GetProviderAssignments:
    get:
      deprecated: false
      description: "Retrieve Provider Assignments.\r\n            <br />One page contains\
        \ 50 items by default. To get next 50 items use the \"$skip\" parameter (for\
        \ example $skip=50 and so on)."
      operationId: ProviderAssignment_GetProviderAssignments
      parameters:
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ProviderAssignments.ProviderAssignment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ProviderAssignments.ProviderAssignment'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Provider Assignments
      tags:
      - ProviderAssignment
      x-access: Any
  /odata/locations:
    get:
      deprecated: false
      description: "Returns a list of locations. You can use filter parameters to\
        \ make your request more specific.\r\n            <br /> You can also get\
        \ a list of locations by using one of the following methods: [GET /stores](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_stores_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_),\
        \ [GET /locations](https://developer.servicechannel.com/swagger/ui/index?version=3#/Locations/GETv3_locations_Id__Id__storeIdentifier__storeIdentifier__Name__Name__Sort__Sort__Page__Page__PageSize__PageSize_)."
      operationId: Locations_GetLocations
      parameters:
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.Location'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.Location'
                type: array
          description: The list of locations is in the response.
      summary: Retrieve locations
      tags:
      - Locations
      x-access: Any
  /odata/locations/Service.NearBy(latitude={latitude},longitude={longitude}):
    get:
      deprecated: false
      description: Returns locations that are near the longitude and latitude specified
        in the request. Use the filter parameters to make the request more specific.
      operationId: Locations_GetLocationsNearMe
      parameters:
      - description: Location’s global position. Longitude.
        in: path
        name: longitude
        required: true
        schema:
          format: double
          type: number
      - description: Location’s global position. Latitude.
        in: path
        name: latitude
        required: true
        schema:
          format: double
          type: number
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.Location'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.Location'
                type: array
          description: The requested locations are in the response.
      summary: Get locations by geographic coordinates
      tags:
      - Locations
      x-access: Any
  /odata/locations/Service.ForServiceRequest():
    get:
      deprecated: false
      description: Returns a list of locations of a service request. You can use filter
        parameters to make the request more specific.
      operationId: Locations_GetServiceRequestLocations
      parameters:
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.Location'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.Location'
                type: array
          description: The requested locations are in the response.
      summary: Retrieve locations
      tags:
      - Locations
      x-access: Any
  /odata/trades:
    get:
      deprecated: false
      description: "List trades.\r\n            <br /><br />Available for provider\
        \ and subscriber usage."
      operationId: Trades_GetTrades
      parameters:
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.Trade'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.Trade'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amazon.Runtime.Internal.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Amazon.Runtime.Internal.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amazon.Runtime.Internal.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Amazon.Runtime.Internal.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Trades Collection
      tags:
      - Trades
      x-access: Any
  /odata/locations({locationId})/trades:
    get:
      deprecated: false
      description: "List Location Trades. Method returns trades for specified location\
        \ which have providers with rank 1 and higher.\r\n            <br /><br />Available\
        \ for subscriber and provider usage."
      operationId: Trades_GetTradesByLocation
      parameters:
      - description: Numeric id of the Location to perform action with.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.Trade'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.Trade'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amazon.Runtime.Internal.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Amazon.Runtime.Internal.ErrorResponse'
          description: Bad Request - the request could not be understood or was missing
            required parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amazon.Runtime.Internal.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Amazon.Runtime.Internal.ErrorResponse'
          description: "Indicates that the requested resource requires authentication.\r\
            \n            <br/>Error codes:\r\n            <br/> 504 - API call rejected\
            \ by security permissions;"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amazon.Runtime.Internal.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Amazon.Runtime.Internal.ErrorResponse'
          description: Indicates that a generic error has occurred on the server.
      summary: Location Trades
      tags:
      - Trades
      x-access: Any
  /odata/users:
    get:
      deprecated: false
      description: "<para>Available for \"Power User\", \"Super Admin\", \"SC Admin\"\
        , \"Provider Power User\", \"Project Manager\"</para>"
      operationId: Users_GetUsers
      parameters:
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: "Retrieve list of Users. Available for \"Power User\", \"Super Admin\"\
        , \"SC Admin\", \"Provider Power User\", \"Project Manager\""
      tags:
      - Users
      x-access: Any
  /odata/providers({providerId})/users:
    get:
      deprecated: false
      description: <para>Available for "SC Admin"</para>
      operationId: Users_GetUsersForProvider
      parameters:
      - in: path
        name: providerId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve list of Users for specified Provider. Available for "SC Admin"
      tags:
      - Users
      x-access: Any
  /odata/subscribers({subscriberId})/users:
    get:
      deprecated: false
      description: <para>Available for "SC Admin"</para>
      operationId: Users_GetUsersForSubscriber
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve list of Users for specified Subscriber. Available for "SC
        Admin"
      tags:
      - Users
      x-access: Any
  /odata/workorders:
    get:
      deprecated: false
      description: "Returns a list of work orders created within the last 90 days\
        \ if not specified otherwise in `$filter`. The maximum date range between\
        \ the work order `CallDate` and the current date is 365 days. \r\n       \
        \     <br />The default number of work orders in the response is 50. To retrieve\
        \ more work orders, use the `$skip` parameter.\r\n            <br />***Note***:\
        \ You can also get a list of work orders by using one of the following methods:\
        \ [GET /workorders](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/GETv3_workorders_locationId__locationId__storeId__storeId_),\
        \ [POST /odata/workorders/filter](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/POSTv3_odata_workorders_filter)."
      operationId: WorkOrders_GetWorkOrders
      parameters:
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
          description: The list of work orders is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc.<br/><br/>The query specified in the URI is not\
            \ valid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The request is not authorized.<br/><br/>Error codes:<br/>504
            � API call rejected by security permissions
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The server, while acting as a gateway or proxy, received an\
            \ invalid response from the upstream server."
      summary: Retrieve work orders
      tags:
      - WorkOrders
      x-access: Any
  /odata/workorders({workorderId}):
    get:
      deprecated: false
      description: Retrieve a Work Orders
      operationId: WorkOrders_Get
      parameters:
      - in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve a Work Orders
      tags:
      - WorkOrders
      x-access: Any
  /odata/workorders({workorderId})/Service.CheckInActivity():
    get:
      deprecated: false
      description: Retrieve a Work Order CheckIn Activity
      operationId: WorkOrders_CheckInActivity
      parameters:
      - in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CheckInIActivity'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CheckInIActivity'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve a Work Order CheckIn Activity
      tags:
      - WorkOrders
      x-access: Any
  /odata/locations({locationId})/workorders:
    get:
      deprecated: false
      description: "Retrieve a Work Orders.\r\n            <br />One page contains\
        \ 50 items by default. To get next 50 items use the \"$skip\" parameter (for\
        \ example $skip=50 and so on).\r\n            <br />The filter expressions\
        \ by defaul is \"$filter CallDate ge (Now+90 days)\". \r\n            <br\
        \ />The maximum CallDate value is 365 days even if provided."
      operationId: WorkOrders_GetWorkOrdersForLocation
      parameters:
      - in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve a Work Orders
      tags:
      - WorkOrders
      x-access: Any
  /odata/locations({locationId})/workorders/Service.GetDuplicates():
    get:
      deprecated: false
      description: "Retrieve a Duplicate Work Orders\r\n            <br />One page\
        \ contains 50 items by default. To get next 50 items use the \"$skip\" parameter\
        \ (for example $skip=50 and so on)."
      operationId: WorkOrders_GetDuplicateWorkOrders
      parameters:
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      - description: Location identifier
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve a Duplicate Work Orders
      tags:
      - WorkOrders
      x-access: Any
  /odata/locations({locationId})/workorders/Service.GetRecalls():
    get:
      deprecated: false
      description: "Retrieve Work Order Recalls\r\n            <br />One page contains\
        \ 50 items by default. To get next 50 items use the \"$skip\" parameter (for\
        \ example $skip=50 and so on)."
      operationId: WorkOrders_GetRecallWorkOrders
      parameters:
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      - description: Location identifier
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Work Order Recalls
      tags:
      - WorkOrders
      x-access: Any
  /odata/workorders/Service.NearBy(latitude={latitude},longitude={longitude}):
    get:
      deprecated: false
      description: "Retrieve a Work Orders near by a site orderred by Location distance\
        \ (by default). \r\n            <br />One page contains 50 items by default.\
        \ To get next 50 items use the \"$skip\" parameter (for example $skip=50 and\
        \ so on).\r\n            <br />The filter expressions by defaul is \"$filter\
        \ CallDate ge (Now+90 days)\". \r\n            <br />The maximum CallDate\
        \ value is 365 days even if provided."
      operationId: WorkOrders_GetWorkOrdersNearBy
      parameters:
      - description: Longitude of a site
        in: path
        name: longitude
        required: true
        schema:
          format: double
          type: number
      - description: Latitude of a site
        in: path
        name: latitude
        required: true
        schema:
          format: double
          type: number
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve a Work Orders near by a site.
      tags:
      - WorkOrders
      x-access: Any
  /odata/workorders({workorderId})/attachments:
    get:
      deprecated: false
      description: Retrieve Workorders Attachments
      operationId: Attachments_GetWorkOrderAttachments
      parameters:
      - description: Workorder Identifier
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Workorders Attachments
      tags:
      - Attachments
      x-access: Any
  /odata/workorders({workorderId})/notes({noteId})/attachments:
    get:
      deprecated: false
      description: Retrieve Workorder Note Attachments
      operationId: Attachments_GetWorkOrderNotesAttachments
      parameters:
      - description: Note Identifier
        in: path
        name: noteId
        required: true
        schema:
          format: int32
          type: integer
      - description: Workorder Identifier
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Workorder Note Attachments
      tags:
      - Attachments
      x-access: Any
  ? /odata/workorders({workorderId})/attachments({attachmentId})/Service.GetThumbnail(width={width},height={height},mode={mode},imageFormat={imageFormat})
  : get:
      deprecated: false
      description: Retrieve Attachment Thumbnail
      operationId: Attachments_GetWorkorderAttachmentThumbnail
      parameters:
      - in: path
        name: imageFormat
        required: true
        schema:
          type: string
      - in: path
        name: mode
        required: true
        schema:
          type: string
      - in: path
        name: height
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: width
        required: true
        schema:
          format: int32
          type: integer
      - description: Attachment Identifier
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
      - description: Workorder Identifier
        in: path
        name: workorderId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Net.Http.ByteArrayContent'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Net.Http.ByteArrayContent'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Attachment Thumbnail
      tags:
      - Attachments
      x-access: Any
  /odata/proposals({proposalId})/attachments:
    get:
      deprecated: false
      description: Retrieve Proposal Attachments
      operationId: Attachments_GetProposalAttachments
      parameters:
      - description: Proposal Identifier
        in: path
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Proposal Attachments
      tags:
      - Attachments
      x-access: Any
  ? /odata/proposals({proposalId})/attachments({attachmentId})/Service.GetThumbnail(width={width},height={height},mode={mode},imageFormat={imageFormat})
  : get:
      deprecated: false
      description: Retrieve Attachment Thumbnail
      operationId: Attachments_GetProposalAttachmentThumbnail
      parameters:
      - in: path
        name: imageFormat
        required: true
        schema:
          type: string
      - in: path
        name: mode
        required: true
        schema:
          type: string
      - in: path
        name: height
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: width
        required: true
        schema:
          format: int32
          type: integer
      - description: Attachment Identifier
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
      - description: Proposal Identifier
        in: path
        name: proposalId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Net.Http.ByteArrayContent'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.Net.Http.ByteArrayContent'
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Attachment Thumbnail
      tags:
      - Attachments
      x-access: Any
  /odata/rfps({rfpId})/attachments:
    get:
      deprecated: false
      description: Retrieve Rfp Attachments
      operationId: Attachments_GetRFPAttachments
      parameters:
      - description: Rfp Identifier
        in: path
        name: rfpId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      summary: Retrieve Rfp Attachments
      tags:
      - Attachments
      x-access: Any
  /odata/assets({assetId}):
    get:
      deprecated: false
      description: Returns the details of the specified asset for the current subscriber.
      operationId: Assets_GetAsset
      parameters:
      - description: Unique numeric asset identifier you want to get the details of.
        in: path
        name: assetId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
          description: The requested asset with its details is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request is not accepted due to bad syntax, missing parameters,\
            \ insufficient data, etc."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: "The request URI is incorrect, or the resource does not exist."
      summary: Get an asset
      tags:
      - Assets
      x-access: Subscribers
  /odata/assets/Service.Search(locationId={locationId},code={code}):
    get:
      deprecated: false
      description: Returns a list of assets for the current subscriber based on the
        specified `locationId` and `code` parameters. You can narrow the search by
        applying other filter parameters.
      operationId: Assets_SearchAssets
      parameters:
      - description: Also known as AssetTag. The value must be entered in '29182-A'
        in: path
        name: code
        required: true
        schema:
          type: string
      - description: Unique numeric identifier of the location you want to get assets
          of.
        in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
                type: array
          description: The requested assets are in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: The request is not authorized.<br/><br/>Error codes:<br/> 504
            � API call rejected by security permissions
      summary: Get assets by `locationId` and `code`
      tags:
      - Assets
      x-access: Any
  ? /odata/assets/Service.AssociateAssetCode(equipmentId={equipmentId},code={code},processDuplicatedAssetTag={processDuplicatedAssetTag})
  : get:
      deprecated: false
      operationId: Assets_AssociateAssetCode
      parameters:
      - in: path
        name: processDuplicatedAssetTag
        required: true
        schema:
          type: boolean
      - in: path
        name: code
        required: true
        schema:
          type: string
      - in: path
        name: equipmentId
        required: true
        schema:
          format: int32
          type: integer
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content: {}
          description: Indicates that the request succeeded and that the requested
            information is in the response.
      tags:
      - Assets
      x-access: Any
  /odata/assets/Service.FindAssets(searchCriteria={searchCriteria}):
    get:
      deprecated: false
      operationId: Assets_FindAssets
      parameters:
      - in: path
        name: searchCriteria
        required: true
        schema:
          type: string
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the request DID NOT succeed and that the related
            error information is in the response.
      summary: "Finds assets using the supplied search criteria.  The following fields\
        \ will be searched for a match to the search criteria:  tag ID, asset type,\
        \ brand, serial Number"
      tags:
      - Assets
      x-access: Any
  /odata/assets/Service.FindAssetsBySubscriber(searchCriteria={searchCriteria},subscriberId={subscriberId}):
    get:
      deprecated: false
      operationId: Assets_FindAssetsBySubscriber
      parameters:
      - in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: searchCriteria
        required: true
        schema:
          type: string
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the request DID NOT succeed and that the related
            error information is in the response.
      summary: "Finds assets using the supplied search criteria.  The following fields\
        \ will be searched for a match to the search criteria:  tag ID, asset type,\
        \ brand, serial Number"
      tags:
      - Assets
      x-access: Providers
  /odata/assets/Service.FindAssetsByLocation(searchCriteria={searchCriteria},locationId={locationId}):
    get:
      deprecated: false
      operationId: Assets_FindAssetsByLocation
      parameters:
      - in: path
        name: locationId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: searchCriteria
        required: true
        schema:
          type: string
      - description: Expand a navigation property.
        in: query
        name: $expand
        schema:
          type: string
      - description: Select a set of properties to return.
        in: query
        name: $select
        schema:
          type: string
      - description: Filter a collection of resources addressed by a request URL.
        in: query
        name: $filter
        schema:
          type: string
      - description: Order resources by the specified property in the response.
        in: query
        name: $orderby
        schema:
          type: string
      - description: Return the specified number of items in the response.
        in: query
        name: $top
        schema:
          type: integer
      - description: Skip the specified number of items in the response.
        in: query
        name: $skip
        schema:
          type: integer
      - description: Include the count of the matching resources in the response.
        in: query
        name: $count
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
                type: array
          description: Indicates that the request succeeded and that the requested
            information is in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ErrorResponse'
          description: Indicates that the request DID NOT succeed and that the related
            error information is in the response.
      tags:
      - Assets
      x-access: Any
components:
  schemas:
    ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder]:
      description: Notification message
      properties:
        Object:
          $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder'
        EventType:
          description: Notification message event type
          enum:
          - WorkOrderCreated
          - WorkOrderNoteAdded
          - WorkOrderNotePinned
          - WorkOrderNoteUnpinned
          - WorkOrderStatusChanged
          - WorkOrderAttachmentAdded
          - WorkOrderNumberChanged
          - WorkOrderPriorityChanged
          - WorkOrderScheduledDateChanged
          - WorkOrderTradeChanged
          - WorkOrderNteChanged
          - WorkOrderCategoryChanged
          - WorkOrderProviderChanged
          - WorkOrderDescriptionChanged
          - WorkOrderResolutionCreated
          - RefrigerantWasUsedChanged
          - WorkOrderResolutionUpdated
          - WorkOrderResolutionCodeUpdated
          - WorkOrderRootCauseCodeUpdated
          - WorkOrderAssetAttached
          - WorkOrderAssetDetached
          - WorkOrderAssetValidated
          - WorkOrderLabelAdded
          - WorkOrderLabelDeleted
          - WorkOrderWeatherTypeChanged
          - WorkOrderIssueChoiceChanged
          - WorkOrderTechnicianAssigned
          - WorkOrderTechnicianUnassigned
          - WorkOrderTechnicianAccepted
          - WorkOrderTechnicianDeclined
          - WorkOrderCertifiedTechnicianAssigned
          - WorkOrderLinksAdded
          - WorkOrderLinksDeleted
          - WorkOrderStarAdded
          - WorkOrderStarRemoved
          - WorkOrderCheckIn
          - WorkOrderCheckOut
          - BadgeScanRequired
          - InvoiceCreated
          - InvoiceOpen
          - InvoiceApproved
          - InvoiceOnHold
          - InvoiceReviewed
          - InvoiceRejected
          - InvoiceApprovalCodeChanged
          - InvoiceStarAdded
          - InvoiceStarRemoved
          - InvoiceDisputed
          - InvoiceVoided
          - InvoicePaid
          - ProposalCreated
          - ProposalOpen
          - ProposalApproved
          - ProposalOnHold
          - ProposalRejected
          - ProposalReviewed
          - ProposalUserAssigned
          - ProposalWorkOrderAssigned
          - ProposalAttachmentAdded
          - ProposalScheduled
          - ProposalVoided
          - ProposalPendingExternalApproval
          - FbInvitationAccepted
          - CalendarIntegrationAdded
          - CalendarIntegrationUpdated
          - LocationCreated
          - LocationUpdated
          - LocationDeleted
          - LocationNoteHeaderCreated
          - LocationNoteHeaderUpdated
          - LocationNoteHeaderDeleted
          - LocationNotesChanged
          - SubscriberTradeCreated
          - SubscriberTradeUpdated
          - SubscriberTradeDeleted
          - SubscriberPriorityCreated
          - SubscriberPriorityUpdated
          - SubscriberPriorityDeleted
          - SubscriberStatusCreated
          - SubscriberStatusUpdated
          - SubscriberStatusDeleted
          - SubscriberCategoryCreated
          - SubscriberCategoryUpdated
          - SubscriberCategoryDeleted
          - ProviderTradeAssigned
          - ProviderTradeUnassigned
          - LeakRecordCreated
          - LeakRecordUpdated
          - LeakRecordDeleted
          - CheckListResponseAdded
          - CheckListResponseUpdated
          - CheckListCreated
          - CheckListUpdated
          - CheckListDeleted
          - IssueListAssigned
          - AssetCreated
          - AssetUpdated
          type: string
        Version:
          description: Notification message format version
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrder:
      properties:
        OriginationUserName:
          type: string
        Id:
          format: int32
          type: integer
        Number:
          type: string
        PurchaseNumber:
          type: string
        SubscriberId:
          format: int32
          type: integer
        ProviderId:
          format: int32
          type: integer
        ProviderName:
          type: string
        LocationId:
          format: int32
          type: integer
        LocationName:
          type: string
        LocationStoreId:
          type: string
        Status:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.WorkorderStatusDescriptor'
        Caller:
          type: string
        CreatedBy:
          type: string
        UpdatedBy:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.User'
        CallDate:
          format: date-time
          type: string
        CallDate_DTO:
          format: date-time
          type: string
        ReassignDate:
          format: date-time
          type: string
        Priority:
          type: string
        Trade:
          type: string
        ScheduledDate:
          format: date-time
          type: string
        AreaId:
          format: int32
          type: integer
        AssetType:
          type: string
        ProblemType:
          type: string
        CreatedDate_DTO:
          format: date-time
          type: string
        UpdatedDate:
          format: date-time
          type: string
        UpdatedDate_DTO:
          format: date-time
          type: string
        ScheduledDate_DTO:
          format: date-time
          type: string
        RescheduleReason:
          type: string
        CompletedDate:
          format: date-time
          type: string
        ExpirationDate:
          format: date-time
          type: string
        ExpirationDate_DTO:
          format: date-time
          type: string
        Description:
          type: string
        Category:
          type: string
        Nte:
          format: double
          type: number
        Subtotal:
          format: double
          type: number
        Tax:
          format: double
          type: number
        Tax2Type:
          type: string
        Tax2:
          format: double
          type: number
        CurrencyAlphabeticalCode:
          type: string
        ProblemCode:
          type: string
        Resolution:
          type: string
        AssetId:
          format: int32
          type: integer
        Source:
          type: string
        RecallWorkOrder:
          format: int32
          type: integer
        Notes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Note'
          type: array
        Attachments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Attachment'
          type: array
        ProjectId:
          format: int32
          type: integer
        Labels:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Label'
          type: array
        ResolutionCodes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.ResolutionCodesAndRootCause'
          type: array
        ResolutionCodesIds:
          items:
            format: int32
            type: integer
          type: array
        RootCauses:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.ResolutionCodesAndRootCause'
          type: array
        LinkedWorOrderIds:
          items:
            format: int32
            type: integer
          type: array
        Assets:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Asset'
          type: array
        RefrigerantWasUsed:
          format: int32
          type: integer
        WeatherEventId:
          format: int32
          type: integer
        Technician:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Technician'
        IssueChoice:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.IssueChoice'
      type: object
    ServiceChannel.Notifications.Objects.WorkorderStatusDescriptor:
      properties:
        Primary:
          type: string
        Extended:
          type: string
      type: object
    ServiceChannel.Notifications.Objects.User:
      properties:
        Id:
          format: int32
          type: integer
        AuthUserId:
          format: int64
          type: integer
        UserName:
          type: string
        FullName:
          type: string
        Email:
          type: string
        LoginType:
          enum:
          - Credentials
          - Pin
          type: string
        SubscriberId:
          format: int32
          type: integer
        ProviderId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Notifications.Objects.Note:
      properties:
        Id:
          format: int32
          type: integer
        NoteType:
          enum:
          - SystemNote
          - UsersNote
          type: string
        Number:
          format: int32
          type: integer
        NoteData:
          type: string
        DateCreated:
          format: date-time
          type: string
        ScheduledDate:
          format: date-time
          type: string
        FollowUpDate:
          format: date-time
          type: string
        ActionRequired:
          default: false
          type: boolean
        MailedTo:
          type: string
        CreatedBy:
          type: string
        CreatedByUser:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.User'
        Visibility:
          format: int32
          type: integer
        DateCreated_DTO:
          format: date-time
          type: string
      type: object
    ServiceChannel.Notifications.Objects.Attachment:
      properties:
        Id:
          format: int32
          type: integer
        Description:
          type: string
        Name:
          type: string
        Date:
          format: date-time
          type: string
        Uri:
          type: string
        CreatedBy:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.User'
        Visibility:
          format: int32
          type: integer
        Type:
          enum:
          - Undefined
          - WorkOrder
          - Invoice
          - Rfp
          - Proposal
          type: string
      type: object
    ServiceChannel.Notifications.Objects.Label:
      properties:
        Id:
          format: int32
          type: integer
        Text:
          type: string
      type: object
    ServiceChannel.Notifications.Objects.ResolutionCodesAndRootCause:
      properties:
        Id:
          format: int32
          type: integer
        Text:
          type: string
        AssetCategoryId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Notifications.Objects.Asset:
      properties:
        Manufacturer:
          type: string
        ModelNo:
          type: string
        SerialNo:
          type: string
        Area:
          type: string
        WorkOrderArea:
          type: string
        StoreId:
          type: string
        Trade:
          type: string
        Type:
          type: string
        InstallDate:
          type: string
        ManufacturerDate:
          type: string
        PurchaseDate:
          type: string
        UsesRefrigerant:
          format: int32
          type: integer
        IsLeased:
          default: false
          type: boolean
        LifeExpectancy:
          format: int32
          type: integer
        OriginalValue:
          format: double
          type: number
        LeaseDate:
          type: string
        LeasePeriod:
          format: int32
          type: integer
        Condition:
          format: int32
          type: integer
        EnergyEfficiency:
          type: string
        Capacity:
          type: string
        HasLeakDetector:
          default: false
          type: boolean
        Location:
          readOnly: true
          type: string
        Warranty:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.AssetWarranty'
        IsReplaceEquipment:
          default: false
          type: boolean
        HasTagged:
          default: false
          type: boolean
        LastModifiedUseDate:
          format: date-time
          type: string
        LastModifiedUserName:
          type: string
        SubName:
          type: string
        AssetAttributesMap:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.AssetAttributesMap'
        ImportedFrom:
          format: int32
          type: integer
        ParentId:
          format: int32
          type: integer
        Description:
          type: string
        HasComponents:
          default: false
          type: boolean
        HasCircuits:
          default: false
          type: boolean
        IsCircuit:
          default: false
          type: boolean
        SubscriberId:
          format: int32
          type: integer
        AssetValidated:
          default: false
          type: boolean
        ValidationRequired:
          default: false
          type: boolean
        IsLeakDetector:
          default: false
          type: boolean
        AdditionalTradesNames:
          type: string
        CreatedDate:
          format: date-time
          type: string
        ModifiedDate:
          format: date-time
          type: string
        AssetTypeGroupId:
          format: int32
          type: integer
        AssetTagScanAuditRecord:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.AssetTagScanAuditRecord'
        Id:
          format: int32
          type: integer
        Tag:
          type: string
        AssetTypeId:
          format: int32
          type: integer
        TradeId:
          format: int32
          type: integer
        BrandId:
          format: int32
          type: integer
        Active:
          default: false
          type: boolean
        AssetTag:
          type: string
        AssetStatus:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        LocationId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Notifications.Objects.Technician:
      properties:
        Id:
          format: int32
          type: integer
        AuthUserId:
          format: int64
          type: integer
        CertificateId:
          type: string
        NumericCertificateId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Notifications.Objects.IssueChoice:
      properties:
        SetupId:
          format: int32
          type: integer
        AreaId:
          format: int32
          type: integer
        AreaName:
          type: string
        ProblemType:
          type: string
        EquipmentType:
          type: string
        ProblemCode:
          type: string
      type: object
    ServiceChannel.Notifications.Objects.AssetWarranty:
      properties:
        ExpirationDate:
          format: date-time
          type: string
        ProviderId:
          format: int32
          type: integer
        NTE:
          format: double
          type: number
        Priority:
          type: string
        Category:
          type: string
        Provider:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.AssetWarrantyProvider'
        Expiration:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.AssetWarrantyExpiration'
      type: object
    ServiceChannel.Notifications.Objects.AssetAttributesMap:
      properties:
        StandardAttributesMap:
          format: int32
          type: integer
        ViewableForProvidersAttributesMap:
          format: int32
          type: integer
        EditableForProvidersAttributesMap:
          format: int32
          type: integer
        RequiredStandardAttributesMap:
          format: int32
          type: integer
      type: object
    ServiceChannel.Notifications.Objects.AssetTagScanAuditRecord:
      properties:
        AssetTagStatus:
          type: string
        ManuallyEntered:
          default: false
          type: boolean
        AssetTagNotScannedReason:
          type: string
        UnableToValidateReasonId:
          format: int32
          type: integer
        OtherReason:
          type: string
      type: object
    ServiceChannel.Notifications.Objects.AssetWarrantyProvider:
      properties:
        Type:
          enum:
          - Fixed
          - PrimaryRanked
          - FixedRanked
          type: string
        Value:
          format: int32
          type: integer
        ProviderName:
          type: string
      type: object
    ServiceChannel.Notifications.Objects.AssetWarrantyExpiration:
      properties:
        Type:
          enum:
          - FromPurchaseDate
          - FromInstallDate
          type: string
        Period:
          format: int32
          type: integer
      type: object
    System.Object:
      type: object
    ServiceChannel.Services.Broker.Models.Processing.WorkOrderResponse:
      example:
        IsSuccess: false
        WarningMessage: WarningMessage
        Id: Id
      properties:
        Id:
          type: string
        WarningMessage:
          type: string
        IsSuccess:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.ErrorResponse:
      description: The error response object
      properties:
        ErrorCodes:
          description: The list of error codes. Go to https://developer.servicechannel.com/basics/general/response-codes/#internal-error-codes-and-messages
            to map error codes to error reasons.
          items:
            enum:
            - NotAllowed
            - EmptyProvider
            - InvalidProviderId
            - UnknownProvider
            - ProviderAlreadyExists
            - ProviderIdNotExists
            - TimeoutExpiredError
            - EmptyContract
            - ContractUndefined
            - EmptySubscriber
            - InvalidSubscriberId
            - UnknownSubscriber
            - InactiveSubscriber
            - EmptySubscriberId
            - SubscriberIdNotExists
            - InternalError
            - DataNotFound
            - BadRequest
            - UnAuthorized
            - UnSupportedApplication
            - SubsidiaryUserDisabled
            - EmptyLocation
            - InvalidLocationId
            - UnknownLocation
            - LocationNotBelongsToSubscriber
            - EmptyLocationCountry
            - LocationAlreadyExists
            - InvalidStoreId
            - LocationEmptyState
            - NoAccessToLocation
            - LocationAddressValidationError
            - LocationAddressRequestValidationError
            - InvalidLocationNoteHeader
            - NoAccessToUpdateProtectedNote
            - InvalidBusinessHoursFormat
            - WorkingHoursIntersect
            - InvalidDayOfWeek
            - DuplicateDayOfWeek
            - InvalidBusinessHoursInitialSetup
            - BusinessHoursIsEmpty
            - InvalidHolidayRepeatByType
            - EmptyHolidayListOfDays
            - EmptyHolidayListOfMonths
            - InvalidHolidayMonthName
            - InvalidHolidayNameLength
            - InvalidHolidayRepeatEvery
            - DuplicateMonth
            - InvalidHolidayFrequency
            - InvalidHolidayStartDate
            - InvalidCloseAllDay
            - HolidayDoesNotExist
            - InvalidFormatParameter
            - InvalidLocationCity
            - InvalidLocationZip
            - InvalidLocationLatitude
            - InvalidLocationLongitude
            - InvalidLocationEmail
            - InvalidLocationName
            - InvalidLocationState
            - InvalidLocationAddlAddress
            - InvalidLocationMainAddress
            - InvalidLocationCountry
            - InvalidLocationRegion
            - InvalidLocationDistrict
            - InvalidLocationPhone
            - InvalidLocationContact
            - InvalidLocationFaxNumber
            - LocationCountryNotFound
            - LocationStateNotFound
            - LocationCityNotFound
            - LocationIdNotExists
            - InvalidLocationEmailLength
            - LocationStateIdNotFound
            - IncorrectCombinationStateAndStateId
            - InvalidSubscriberIds
            - InvalidLocalizationSettings
            - LandlordResponsibilityNotFound
            - LandlordResponsibilityAlreadyExists
            - EmptyLocationIds
            - AttachmentNotExist
            - InvalidTradeId
            - InvalidCategoryId
            - InvalidOverrideCategoryId
            - InvalidOverridePriorityId
            - LeaseNoteExceedMaxLength
            - InvalidOverrideProviderRank
            - InvalidOverrideNTE
            - EmptyTrade
            - InvalidTrade
            - TradeNotBelongsToSubscriber
            - InvalidPrimaryTrade
            - InvalidTradeForSubscriber
            - InvalidCategoryForSubscriber
            - GlCodeAlreadyExists
            - GlCodeNotExists
            - InvalidGlCodeUpdate
            - EmptyGlCode
            - TradeAlreadyExists
            - InvalidNTETrade
            - TradeNotExists
            - TradeAlreadyInUse
            - EmptyUser
            - EmptyCreatedBy
            - InvalidUserName
            - NotProviderUser
            - UserHasNoPermissions
            - RestrictedAccount
            - UserAlreadyExists
            - UserHasNoPermissionsEditWO
            - UserEmailAddressIsMissing
            - InvalidSubsriberProviderId
            - LanguageNameNotFound
            - InvalidLanguageId
            - LanguageIdNotFound
            - UseBothSubscriberIdProviderId
            - EmptyWoProblem
            - InvalidWoProblemSource
            - InvalidWoProblemDescription
            - InvalidWoProblemCode
            - InvalidWoStatus
            - InvalidWoNte
            - InvalidWoCaller
            - InvalidWoCallDate
            - InvalidWoScheduledDate
            - InvalidWoScheduledDateGreaterThanMaxAllowed
            - EmptyWoCategory
            - InvalidWoCategory
            - EmptyWoPriority
            - InvalidWoPriority
            - InvalidWoCurrency
            - InvalidWoSetupId
            - AttachmentsRequired
            - InvalidWoIdentifier
            - EquipmentRequired
            - WoNteOverflow
            - InvalidWoPurchaseNumber
            - InvalidWoStateForUpdate
            - InvalidPagingParameter
            - InvalidWoNumber
            - CheckInDenied
            - CheckOutDenied
            - WoScheduledDateLessThenReassignDate
            - WoScheduledDateLessThenCallDate
            - InvalidWoActionReason
            - EmptySubscriberProperty
            - WorkOrderUpdateError
            - MissedWoNteDetails
            - InvalidLinkedWoIdentifier
            - WoIsOnHold
            - InvalidWoTrade
            - InvalidStarScore
            - WorkOrderAlreadyRated
            - AttachmentThumbnailNotAvailable
            - InvalidWoIdentifierOrPin
            - InvalidTimeZoneHeader
            - RefrigerantWasUsedShouldBeYesOrNo
            - CheckInDeniedOutsideGeolocation
            - CheckOutDeniedOutsideGeolocation
            - LeakDetectorAuditShouldBeCreated
            - CheckInOutPremature
            - WorkOrderAttachmentsSizeExceeded
            - WorkOrderNotFound
            - WorkOrderCreateError
            - InvalidSetupId
            - IssueListNotFound
            - InvalidIssueListField
            - InactiveTemplateType
            - SiteAuditNotFound
            - SiteAuditUpdateError
            - InvalidSiteAuditParameters
            - InvalidAdditionalApprovalCode
            - InvalidAdditionalApprovalCodeValue
            - AdditionalApprovalCodeIsDisabled
            - InvalidOtherDesc
            - InvalidTax2Name
            - InvoiceInconsistentAmounts
            - InvoiceInvalidTotal
            - InvoiceTotalGreaterNte
            - InvoiceExists
            - CreatingInvoiceError
            - DuplInvNumber
            - InvoiceTotalNull
            - InvComplDateNull
            - InvDateLessComplDate
            - InvoiceNotAuto
            - ESignatureRequired
            - InvWoNotFound
            - InvWrongWoCurr
            - InvWoCurrNotFound
            - InvoicingDisabled
            - InvCreationUnexpectedRes
            - InvoiceInvalidLaborAmount
            - InvoiceInvalidMaterialAmount
            - InvDateOld
            - InvDateGreater
            - InvoiceMaterialDescriptionLengthOverflow
            - InvoiceTaxNotValidated
            - InvoiceMaterialPartNumberLengthOverflow
            - TaxValidationError
            - TaxExemptionError
            - InvalidInvoiceNumber
            - GetApprovalLevelsError
            - InvoiceAddUsersToMliLevelsError
            - InvoiceAddDeleteLocationsToMliLevelUserError
            - InvoiceUpdateMLiLevelError
            - InvoiceDeleteMliLevelError
            - InvoiceDeleteUsersFromMliLevelError
            - ApprovalLevelNameLengthOverflow
            - GstTaxError
            - Tax2Error
            - GetApprovalLevelsAndLocationsByUserError
            - GetAssignedUserShortInfoError
            - AssignAllLocationsToApprovalLevelAndUserError
            - GetLocationsForApprovalLevelAndAssignedUserError
            - GetLocationsBySubscriberError
            - AssignUserWithLocationsToApprovalLevelError
            - ReAssignUserWithLocationsToNewApprovalLevelError
            - ReAssignLocationsToApprovalLevelAndUserError
            - OutstandingBalance
            - InvoiceTaxDetailsEmpty
            - InvoiceTaxDetailsIncorrectSum
            - MultipleUsersForLocationIsNotAllowed
            - UserAssignedToOtherLevel
            - UserDoesNotExist
            - LaborLineItemRequired
            - MaterialLineItemRequired
            - InvoiceDoesntExist
            - InvoiceStarUnstarFailed
            - InvoiceBatchUpdateInvalidInvoiceStatusError
            - InvoiceBatchUpdateLimitExceededError
            - InvoiceNotAvailableForCurrentUser
            - InvoiceBatchUpdateInvalidRuleSetStructure
            - InvoiceBatchUpdateInvalidMliStructure
            - InvoiceBatchUpdateStatusError
            - InvoiceMaterialUnitTypeInvalid
            - ExistingBatchNumber
            - InvoiceResolutionTextRequired
            - GetInvoiceDefaultApprovalCodesError
            - InvoiceInvalidTravelAmount
            - InvoiceTravelDescriptionLengthOverflow
            - InvoiceTravelUnitTypeInvalid
            - TravelLineItemRequired
            - TravelDetailsDisabled
            - OnOffShoreDisabled
            - InvoiceInvalidLaborCount
            - InvoiceInvalidMaterialCount
            - InvoiceInvalidTravelCount
            - SubscriberNotRegisteredForTaxValidation
            - ManyDecimalsInAmountError
            - DecimalPartQstTaxError
            - LaborRatesDiscrepancy
            - PayInvoicesError
            - InvoiceNumberRequirementsError
            - InvoiceNumberIncorrect
            - InvoiceNumberRegExPatternError
            - GetInvoicesPendingApprovalByLocationError
            - ReAssignInvoicesToUsersFailed
            - ReAssignInvoicesUsersMatched
            - GetUsersForReassignInvoiceError
            - InvalidTimeRangeActivity
            - OutsourcedSourceInvoiceNotFound
            - OthersLineItemsDisabled
            - InvoiceInvalidOtherAmount
            - InvoiceInvalidOtherCount
            - InvoiceOtherDescriptionLengthOverflow
            - OtherLineItemRequired
            - OtherLineItemsNotNegativeValueRequired
            - InvalidLaborSkillLevel
            - InvalidLaborType
            - InvalidTechnicianQuantity
            - GetInvoicesCommonCategoriesError
            - InvoiceExplainDisputeEmpty
            - InvoiceAdditionalApprovalCodeHeaderError
            - TemplateParseSuccess
            - TemplateIncorrectHeaderError
            - TemplateEmptyTemplateError
            - TemplateWrongFieldsCountError
            - TemplateFieldNotFoundError
            - TemplateFieldRequiredError
            - TemplateParseIntError
            - TemplateFieldSizeError
            - TemplateInvalidValueError
            - TemplateFieldFormatError
            - TemplateFieldMaxRangeError
            - TemplateFieldMinRangeError
            - TemplateProviderNotEntered
            - TemplateInvalidSubscriberError
            - TemplateVendorNotFoundError
            - TemplateMissedProviderError
            - TemplateProviderNotFoundError
            - TemplateProviderSubsccriberLinkError
            - TemplateTradeDispatchRankError
            - TemplateInvalidTradeForSubscriberError
            - TemplateStoreNotFoundError
            - TemplateNotStoresForStateError
            - TemplateNotStoresForCountryError
            - TemplateNotStoresForDistrictError
            - TemplateNotStoresForRegionError
            - TemplateMultiplePimaryProvidersForTradeStoreError
            - TemplateDuplicatePrimaryRelationshipError
            - TemplateAmbiguousDataError
            - TemplateIncorrectSubscriber
            - TemplateDuplicateRanking
            - TemplateLongitudeRangeError
            - TemplateLatitudeRangeError
            - TemplateInvalidStateError
            - TemplateMissedSubscriberError
            - TemplateMissedStoreIdError
            - TemplateInvalidSubscriberIdError
            - TemplateOpenCloseDateError
            - TemplateInvalidCountryError
            - TemplateInvalidStateForCountryError
            - TemplateInvalidLocationTypeError
            - TemplateMissingFullAndShortNameError
            - TemplateMissingCountryError
            - TemplateDuplicatedDataError
            - TemplateParentLocationNotFoundError
            - TemplateParseDateTimeError
            - TemplateParseDecimalError
            - TemplateSquareValueRangeError
            - TemplateInvalidSquareMeasureError
            - TemplateTypeLabelCanNotBeUpdatedError
            - TemplateTypeLabelHaveToBeLocationForNotInventory
            - TemplateInvalidPrimarySupplyLocation
            - TemplateInvalidHomestoreLocationNumber
            - TemplateErrorDuringCreation
            - TemplateLocationNotFoundError
            - TemplateDuplicatedLocationFoundError
            - TemplateInvalidLocationHeaderError
            - TemplateDuplicatedLocationHeaderError
            - TemplateHeaderContainsEmptyFieldsError
            - TemplateLocHeadersShortHeaderError
            - TemplateHeaderContainsDuplicatesError
            - TemplateLocationNotesStoreIdFieldLengthError
            - TemplateLocationNotesNoteValueFieldLengthError
            - TemplateErrorInvalidZipCode
            - TemplateMissingLocationNoteHeader
            - TemplateMissingLocationNoteIdHeader
            - TemplateInvalidSecondarySupplyLocation
            - TemplateLocationWasNotCreated
            - TemplateTruckNameIsEmpty
            - TemplateWrongFormat
            - TemplateSubscriberNotFound
            - TemplateDuplicatedLocationHeaders
            - TemplateInvalidHeaders
            - TemplateInvalidPhoneError
            - TemplateDuplicateTelecomRecordError
            - TemplateTelecomRecordExistsError
            - TemplateInvalidCategory
            - TemplateDifferentRanksForProviderAssignments
            - TemplateDuplicateRankError
            - TemplateProviderNonCompliant
            - TemplateLocationIsClosed
            - TemplateProviderWarning
            - EmptyRequest
            - InvoiceOtherUnitTypeInvalid
            - InvalidNumberOfParameters
            - EmptyLocationOrTradeList
            - StoreIdRequiredError
            - InvalidUserIdError
            - InvalidStoreIdError
            - AmbigiousError
            - MliHierarchyFiledsCountError
            - MliHierarchyMaxUserNameError
            - MliHierarchyDuplicateUserError
            - MLiHirarchyUserExistInOtherLevelError
            - MissingLevelsError
            - DuplicateApprovalLevelsError
            - InvalidMliLocations
            - InvalidMlpLocations
            - ApprovalLevelUsedInRulsetError
            - GLCodeAmbiguous
            - GlCodeInvalidResponce
            - GetRuleSetListError
            - RuleSetDuplicateNameError
            - RuleSetDuplicateActionError
            - RuleSetConflictedActionError
            - RuleSetRuleSetDoesNotExistsError
            - RuleSetTradeDoesNotExistError
            - RuleSetCategoryDoesNotExistError
            - RuleSetMliLevelDoesNotExistError
            - GetRuleSet
            - CreateUpdateRuleSetError
            - DeleteRuleSet
            - GetRuleSetCategoriesTradesCountError
            - GetRuleSetByInvoice
            - GetCategoryTradeIdsAreSelectedError
            - ProposalAboveMlpLimitError
            - ProposalNextLevelHasNoAvailableActionsError
            - DefaultRuleSetError
            - UserFilterGetError
            - UserFilterCreateUpdateError
            - UserFilterDeleteError
            - UserFilterSetAsDefaultError
            - InvoiceFilterFromAlpProviderError
            - PaymenowScProviderIdOrFbCompanyIdMustBeProvided
            - PaymenowBannersForProvidersOnly
            - PaymenowFeatureDisabled
            - PaymenowBannerInfoNotFound
            - PaymenowBannerInvalidNavigationUrl
            - PaymenowRequestedProvidersIsNotAssigned
            - PaymenowEmptyRequestedProviders
            - PaymentManagerFeatureDisabled
            - PaymentManagerFeatureDisabledForSubscriber
            - PaymentSystemCurrentlyUnavailable
            - CurrencyNotSupported
            - PaymentSystemAccountNotFound
            - FeatureIsOff
            - EarlyPayFeatureWithoutPaymentManagetFeatureError
            - FtpTestError
            - AcceptTermsAndConditionsRequestInvalid
            - PaymentSystemAccountError
            - SendReportToFTP
            - SchedulingError
            - BadPaymentData
            - InvoicesCanNotBeRepaid
            - InvoicesCanNotBeRescheduled
            - InvalidBillingAddress
            - PaymentManagerGeneralSettingsNotFound
            - PaymentManagerEInvoiceSettingsNotFound
            - BadgeVerificationFailed
            - BadgeTempPassEmpty
            - BadgeScanRequired
            - SolvedIssueSubmitFailed
            - SolvedIssueInvalidLocationId
            - SolvedIssueInvalidCategoryId
            - SolvedIssueInvalidTradeId
            - SolvedIssueInvalidPriorityId
            - SolvedIssueInvalidSource
            - SolvedIssueInvalidProblemCode
            - SolvedIssueInvalidType
            - SubmitFeedbackErrorWoStatus
            - SubmitFeedbackInvalidAnswer
            - SubmitFeedbackInvalidTrackingNumber
            - SubmitFeedbackInvalidSubscriber
            - SubmitFeedbackInvalidScore
            - SubmitFeedbackUnsatisfactoryCommentRequired
            - SubmitFeedbackInvalidReviewId
            - SubmitFeedbackInvalidSetupId
            - FeedbackSetupInvalidSetupId
            - S3SaveError
            - AbsSaveError
            - GoodDataLoginFailed
            - GoodDataElementUriError
            - GoodDataReportResultUriError
            - GoodDataReportResultEmpty
            - GoodDataDesReportResCountError
            - GoodDataDesReportResConvertError
            - GoodDataDesDisplayFormAttributeEmpty
            - InvalidProposalAmountLimit
            - GetApprovalProposalReasonsError
            - GetEmailRecipientsError
            - GetAssignProposalReasonsError
            - AssetTypeDuplicateNameError
            - AssetTypeDoesntExistError
            - AssetTypeFailUpdateRefrigerantPurpose
            - AssetTypeDeleteFailed
            - ExistingAssetsFoundForAssetType
            - CantModifyAssetTypeParentId
            - InvalidAssetTypeName
            - AssetTypeInheritanceError
            - ExistingProposalsFoundForAssetType
            - InstallPurchaseDateOverflow
            - WOexistsWithSomeAssets
            - PartsChangeFailed
            - PartsReasonCodeError
            - PartsUseDateError
            - PartsRefrigerantAlreadyExists
            - PartsChargeHistoryAlreadyExists
            - PartsNotFound
            - BulkPartUseIncorrectWorkOrder
            - BulkPartsByIdsNotFound
            - BulkPartsMultipleWosError
            - BulkPartsIncorrectIsRefrigerantParam
            - BulkPartsIsRefrigerantCanNotbeChanged
            - BulkPartsReasonCodeChangeError
            - BulkPartsInvalidAssetAndReasonCodeParams
            - BulkPartsInvalidAssetId
            - BulkPartsInvalidInitialChargeCode
            - BulkPartsAssetDoesntContainCharge
            - BulkPartsIsInventoryFlagError
            - BulkPartsLeakAlreadyInProcessError
            - BulkPartsInvalidDateRangeError
            - BulkPartsMoeNumberRequiredError
            - BulkPartsSystemChargeExceeded
            - BulkRefrigerantuUageBlocked
            - BulkIDsNotBeNull
            - BulkPartRemovalNotAllowedOnRetrofitRetireWO
            - BulkAddPartUsagesNotAllowedAfterRetrofitRetireCreation
            - BulkRetrofitRetireRefrigerantUsageReasonCanNotChanged
            - BulkInitialChargeSystemExpansionNotAllowed
            - BulkInventoryPartIdCanNotBeChanged
            - BulkInventoryLocationIdCanNotBeChanged
            - BulkPartsDuplicatedRequest
            - BulkChangePartsIncorrectRefrigerantType
            - BulkPartsWorkOrderInProcessing
            - BulkPartsRetroRetireIsInProgressOnThisDate
            - BulkPartsCanNotAttachRefrigerantUsageToPlanLeakRecord
            - RetrofitRetireCanNotBeRemoved
            - RetroRetirePartsCantbeChanged
            - BulkPartsInventoryApiFailed
            - BadNotificationSubscriptionEventType
            - RefrigerantUseDateOutOfTheLeakProcessDateRange
            - InventoryUsageNotAllowedOnRTrackingConnectedSubAndSubcontractors
            - BulkExternalWoCurrentlyDoesntExists
            - BulkConnectorOnlyExternalClientAssetsCanBeProcessed
            - BulkConnectorOnlyClientAssetsCouldBeProcessed
            - LeakRecordHasWrongDateValue
            - HasUncompliedLeakRecordInAnoutherWO
            - HasUncompletedWOOnAnotherLeakRecord
            - OnlyOneAssetWorkOrderPair
            - OneLeakRecordMustBeOnCompletedWO
            - LeakRecordNotFaund
            - AssetIDWoIdIsRequired
            - BulkPartsReasonCodeRetrofit
            - MlpImportLevelError
            - UpdateMlpUserLevelError
            - InvalidHolidayName
            - DuplicateHolidayName
            - HolidaysDeleteFailed
            - HolidaysExcludeInsertFailed
            - HolidaysUpdateFailed
            - HolidaysInsertFailed
            - HolidaysExcludeDeleteFailed
            - BusinessHoursDeleteFailed
            - BusinessHoursUpdateFailed
            - BusinessHoursInsertFailed
            - InvalidTime
            - HolidayForDeleteNotFound
            - InvalidChecklistId
            - NoLinkBetweenSubscriberAndProvider
            - WorkforceCreateContractorError
            - InvalidCertificateId
            - MaxThresholdExceeded
            - MaxTriggerRateExceeded
            - LeakPriorityIsRequired
            - MissingRTSettings
            - ResolutionCodesLimitExceeded
            - ResolutionCodesAreRequired
            - RootCauseIsRequired
            - RootCauseTextIsRequired
            - NoAccessToSetRootCauseText
            - RootCauseTextMaxLengthExceeded
            - ResolutionCodeTextIsRequired
            - NoAccessToSetResolutionCodeText
            - ResolutionCodeTextMaxLengthExceeded
            - ResolutionCodeTextMustBeUnique
            - ResolutionCodeWithoutFreeTextMustBeUnique
            - PendingResCodesStatusCannotBeChangedToInvoiceableBySubscriber
            - ResolutionAndRootCauseCodesAreRequiredToMoveToInvoiceableStatusByProvider
            - AssetCategoriesLimitExceeded
            - NoAccessToAssetCategories
            - AssetCategoriesAreRequired
            - InvalidAssetCategoryId
            - NoAssetCategoriesOnWorkOrder
            - RootCausesMustBeForAllWorkOrderAssetCategories
            - RootCauseTextMustBeUnique
            - AssetCategoryIsRequired
            - MultipleRootCausesMethodMustBeUsed
            - ResolutionCodesMustBeForAllWorkOrderAssetCategories
            - UnknownStoreId
            - UsesRefrigerantAttributeNotChanged
            - AssetTagDuplicate
            - AssetTagIdDuplicate
            - UnknownEquipmentType
            - ParentIdInOtherLocation
            - UnknownBrandName
            - CARBRequiredManufacturedDate
            - CARBRequiredInstallDate
            - TradeNotFound
            - AssetDoesntExist
            - AssetIsNotRefrigerant
            - AssetCantContainRefrigerant
            - OnlyRackAssetsContainingCircuits
            - ConnectorAssetTagIdCanNotBeChanged
            - ConnectorAssetLocationIdCanNotBeChanged
            - AssetTagCantBeUpdated
            - AssetTypeIsNotСonfiguredToManageRTAssets
            - RefrigerantTrackingNotAvailableForLocation
            - UsesRefrigerantRequiredByAssetTypeSettings
            - AssetLocationTradeDoesntCorrespondToWO
            - AssetLocationSelectedPMmodule
            - UpdateAssetRepairStatusValidation
            - HasCircuitsCantBeChange
            - HasComponentsCantBeChange
            - CircuitCanNotBeConnectedToCircuit
            - RTCircuitCanNotBeConnectedToNonRTAsset
            - RTComponentCanNotBeConnectedToNonRTAsset
            - ComponentCanNotBeConnectedToComponent
            - NonRTComponentCanNotBeConnectedToRtAsset
            - NonRTCircuitCanNotBeConnectedToRtAsset
            - ComponentCanNotBeConnectedToCircuit
            - ParentAssetShouldHaveEitherComponentsNorCircuits
            - ParentAssetCantHaveComponents
            - ParentAssetCantHaveCircuits
            - MultipleAssetsFoundForTheRequestedTagId
            - DeclineWorkOrderFailed
            - AcceptWorkOrderFailed
            - WorkOrderWasAccepted
            - SaveMliAuditReportSetting
            - GetMliAuditReportSetting
            - SaveMliAuditReportResult
            - SaveMliAuditReportSendEmailStatus
            - SaveMliAuditReportFilePath
            - GetSubscribersEnabledSchedule
            - SaveMliAuditInfoError
            - TaxValidationAddNewCompanySettingsError
            - TaxValidationUpdateCompanySettingsError
            - ProjectAssociationError
            - GetProjectsInvoiceAmountsError
            - TaxCodeNotUniqueError
            - FieldLengthIsTooLongError
            - SetTaxCodesBulkError
            - InvoiceAdditionalApprovalCodeValueError
            - BulkUpdateInvoicePaymentError
            - ContractServiceExist
            - ContractServiceCantChangeTrade
            - ContractServiceCantChangeCategory
            - ContractServiceCantChangeProvider
            - ContractServicePMServiceCantChangeTrade
            - ContractServicePMServiceCantChangeCategory
            - WorkRequestDescriptionIsRequired
            - WorkRequestCallDateIsRequired
            - WorkRequestIssueIsRequired
            - WorkRequestCallDateHasWrongFormat
            - WorkRequestScheduledDateHasWrongFormat
            - InvalidWorkRequestStatus
            - InvalidWorkRequestExtendedStatus
            - InvalidWorkRequestCategory
            - InvalidWorkRequestPriority
            - InvalidWorkRequestCurrency
            - InvalidWorkRequestIssueSetup
            - InvalidWorkRequestIssueArea
            - InvalidWorkRequestAsset
            - WorkRequestAttachmentFileNameIsRequired
            - WorkRequestAttachmentOriginalNameIsRequired
            - WorkRequestIssueProblemCodeIsRequired
            - WorkRequestIssueProblemTypeIsRequired
            - WorkRequestScheduledDateMustBeGreaterThanCallDate
            - InvalidWorkRequestId
            - WorkRequestSearchCallDateFromHasWrongFormat
            - WorkRequestSearchCallDateToHasWrongFormat
            - WorkRequestSearchScheduledDateFromHasWrongFormat
            - WorkRequestSearchScheduledDateToHasWrongFormat
            - WorkRequestSearchClosedDateFromHasWrongFormat
            - WorkRequestSearchClosedDateToHasWrongFormat
            - WorkOrderIsAlreadyCreatedForWorkRequest
            - WorkRequestIsClosed
            - WorkRequestClosedReasonIsRequiredForClosedStatus
            - WorkOrderIdIsRequiredForThisClosedReason
            - InvalidWorkRequestClosedReason
            - WorkRequestClosedReasonIsOnlyForClosedStatus
            - InvalidWorkRequestWorkOrderId
            - WorkRequestWorkOrderIdIsOnlyForClosedStatus
            - WorkRequestWorkOrderIdIsOnlyForCertainClosedReason
            - InvalidWorkOrderSourceType
            - DeclineReasonIdIsRequired
            - DeclineReasonDoesntAllowCustomText
            - InvalidDeclineReasonId
            - MultipleWorkOrdersForPurchaseNumber
            - InvoiceMaterialMakupInvalid
            - MaterialMarkUpDiscrepancyReasonShouldBeStated
            - MaterialPriceDiscrepancyReasonShouldBeStated
            - OtherPriceDiscrepancyReasonShouldBeStated
            type: string
          type: array
        ErrorCode:
          description: The code of the first error found
          enum:
          - NotAllowed
          - EmptyProvider
          - InvalidProviderId
          - UnknownProvider
          - ProviderAlreadyExists
          - ProviderIdNotExists
          - TimeoutExpiredError
          - EmptyContract
          - ContractUndefined
          - EmptySubscriber
          - InvalidSubscriberId
          - UnknownSubscriber
          - InactiveSubscriber
          - EmptySubscriberId
          - SubscriberIdNotExists
          - InternalError
          - DataNotFound
          - BadRequest
          - UnAuthorized
          - UnSupportedApplication
          - SubsidiaryUserDisabled
          - EmptyLocation
          - InvalidLocationId
          - UnknownLocation
          - LocationNotBelongsToSubscriber
          - EmptyLocationCountry
          - LocationAlreadyExists
          - InvalidStoreId
          - LocationEmptyState
          - NoAccessToLocation
          - LocationAddressValidationError
          - LocationAddressRequestValidationError
          - InvalidLocationNoteHeader
          - NoAccessToUpdateProtectedNote
          - InvalidBusinessHoursFormat
          - WorkingHoursIntersect
          - InvalidDayOfWeek
          - DuplicateDayOfWeek
          - InvalidBusinessHoursInitialSetup
          - BusinessHoursIsEmpty
          - InvalidHolidayRepeatByType
          - EmptyHolidayListOfDays
          - EmptyHolidayListOfMonths
          - InvalidHolidayMonthName
          - InvalidHolidayNameLength
          - InvalidHolidayRepeatEvery
          - DuplicateMonth
          - InvalidHolidayFrequency
          - InvalidHolidayStartDate
          - InvalidCloseAllDay
          - HolidayDoesNotExist
          - InvalidFormatParameter
          - InvalidLocationCity
          - InvalidLocationZip
          - InvalidLocationLatitude
          - InvalidLocationLongitude
          - InvalidLocationEmail
          - InvalidLocationName
          - InvalidLocationState
          - InvalidLocationAddlAddress
          - InvalidLocationMainAddress
          - InvalidLocationCountry
          - InvalidLocationRegion
          - InvalidLocationDistrict
          - InvalidLocationPhone
          - InvalidLocationContact
          - InvalidLocationFaxNumber
          - LocationCountryNotFound
          - LocationStateNotFound
          - LocationCityNotFound
          - LocationIdNotExists
          - InvalidLocationEmailLength
          - LocationStateIdNotFound
          - IncorrectCombinationStateAndStateId
          - InvalidSubscriberIds
          - InvalidLocalizationSettings
          - LandlordResponsibilityNotFound
          - LandlordResponsibilityAlreadyExists
          - EmptyLocationIds
          - AttachmentNotExist
          - InvalidTradeId
          - InvalidCategoryId
          - InvalidOverrideCategoryId
          - InvalidOverridePriorityId
          - LeaseNoteExceedMaxLength
          - InvalidOverrideProviderRank
          - InvalidOverrideNTE
          - EmptyTrade
          - InvalidTrade
          - TradeNotBelongsToSubscriber
          - InvalidPrimaryTrade
          - InvalidTradeForSubscriber
          - InvalidCategoryForSubscriber
          - GlCodeAlreadyExists
          - GlCodeNotExists
          - InvalidGlCodeUpdate
          - EmptyGlCode
          - TradeAlreadyExists
          - InvalidNTETrade
          - TradeNotExists
          - TradeAlreadyInUse
          - EmptyUser
          - EmptyCreatedBy
          - InvalidUserName
          - NotProviderUser
          - UserHasNoPermissions
          - RestrictedAccount
          - UserAlreadyExists
          - UserHasNoPermissionsEditWO
          - UserEmailAddressIsMissing
          - InvalidSubsriberProviderId
          - LanguageNameNotFound
          - InvalidLanguageId
          - LanguageIdNotFound
          - UseBothSubscriberIdProviderId
          - EmptyWoProblem
          - InvalidWoProblemSource
          - InvalidWoProblemDescription
          - InvalidWoProblemCode
          - InvalidWoStatus
          - InvalidWoNte
          - InvalidWoCaller
          - InvalidWoCallDate
          - InvalidWoScheduledDate
          - InvalidWoScheduledDateGreaterThanMaxAllowed
          - EmptyWoCategory
          - InvalidWoCategory
          - EmptyWoPriority
          - InvalidWoPriority
          - InvalidWoCurrency
          - InvalidWoSetupId
          - AttachmentsRequired
          - InvalidWoIdentifier
          - EquipmentRequired
          - WoNteOverflow
          - InvalidWoPurchaseNumber
          - InvalidWoStateForUpdate
          - InvalidPagingParameter
          - InvalidWoNumber
          - CheckInDenied
          - CheckOutDenied
          - WoScheduledDateLessThenReassignDate
          - WoScheduledDateLessThenCallDate
          - InvalidWoActionReason
          - EmptySubscriberProperty
          - WorkOrderUpdateError
          - MissedWoNteDetails
          - InvalidLinkedWoIdentifier
          - WoIsOnHold
          - InvalidWoTrade
          - InvalidStarScore
          - WorkOrderAlreadyRated
          - AttachmentThumbnailNotAvailable
          - InvalidWoIdentifierOrPin
          - InvalidTimeZoneHeader
          - RefrigerantWasUsedShouldBeYesOrNo
          - CheckInDeniedOutsideGeolocation
          - CheckOutDeniedOutsideGeolocation
          - LeakDetectorAuditShouldBeCreated
          - CheckInOutPremature
          - WorkOrderAttachmentsSizeExceeded
          - WorkOrderNotFound
          - WorkOrderCreateError
          - InvalidSetupId
          - IssueListNotFound
          - InvalidIssueListField
          - InactiveTemplateType
          - SiteAuditNotFound
          - SiteAuditUpdateError
          - InvalidSiteAuditParameters
          - InvalidAdditionalApprovalCode
          - InvalidAdditionalApprovalCodeValue
          - AdditionalApprovalCodeIsDisabled
          - InvalidOtherDesc
          - InvalidTax2Name
          - InvoiceInconsistentAmounts
          - InvoiceInvalidTotal
          - InvoiceTotalGreaterNte
          - InvoiceExists
          - CreatingInvoiceError
          - DuplInvNumber
          - InvoiceTotalNull
          - InvComplDateNull
          - InvDateLessComplDate
          - InvoiceNotAuto
          - ESignatureRequired
          - InvWoNotFound
          - InvWrongWoCurr
          - InvWoCurrNotFound
          - InvoicingDisabled
          - InvCreationUnexpectedRes
          - InvoiceInvalidLaborAmount
          - InvoiceInvalidMaterialAmount
          - InvDateOld
          - InvDateGreater
          - InvoiceMaterialDescriptionLengthOverflow
          - InvoiceTaxNotValidated
          - InvoiceMaterialPartNumberLengthOverflow
          - TaxValidationError
          - TaxExemptionError
          - InvalidInvoiceNumber
          - GetApprovalLevelsError
          - InvoiceAddUsersToMliLevelsError
          - InvoiceAddDeleteLocationsToMliLevelUserError
          - InvoiceUpdateMLiLevelError
          - InvoiceDeleteMliLevelError
          - InvoiceDeleteUsersFromMliLevelError
          - ApprovalLevelNameLengthOverflow
          - GstTaxError
          - Tax2Error
          - GetApprovalLevelsAndLocationsByUserError
          - GetAssignedUserShortInfoError
          - AssignAllLocationsToApprovalLevelAndUserError
          - GetLocationsForApprovalLevelAndAssignedUserError
          - GetLocationsBySubscriberError
          - AssignUserWithLocationsToApprovalLevelError
          - ReAssignUserWithLocationsToNewApprovalLevelError
          - ReAssignLocationsToApprovalLevelAndUserError
          - OutstandingBalance
          - InvoiceTaxDetailsEmpty
          - InvoiceTaxDetailsIncorrectSum
          - MultipleUsersForLocationIsNotAllowed
          - UserAssignedToOtherLevel
          - UserDoesNotExist
          - LaborLineItemRequired
          - MaterialLineItemRequired
          - InvoiceDoesntExist
          - InvoiceStarUnstarFailed
          - InvoiceBatchUpdateInvalidInvoiceStatusError
          - InvoiceBatchUpdateLimitExceededError
          - InvoiceNotAvailableForCurrentUser
          - InvoiceBatchUpdateInvalidRuleSetStructure
          - InvoiceBatchUpdateInvalidMliStructure
          - InvoiceBatchUpdateStatusError
          - InvoiceMaterialUnitTypeInvalid
          - ExistingBatchNumber
          - InvoiceResolutionTextRequired
          - GetInvoiceDefaultApprovalCodesError
          - InvoiceInvalidTravelAmount
          - InvoiceTravelDescriptionLengthOverflow
          - InvoiceTravelUnitTypeInvalid
          - TravelLineItemRequired
          - TravelDetailsDisabled
          - OnOffShoreDisabled
          - InvoiceInvalidLaborCount
          - InvoiceInvalidMaterialCount
          - InvoiceInvalidTravelCount
          - SubscriberNotRegisteredForTaxValidation
          - ManyDecimalsInAmountError
          - DecimalPartQstTaxError
          - LaborRatesDiscrepancy
          - PayInvoicesError
          - InvoiceNumberRequirementsError
          - InvoiceNumberIncorrect
          - InvoiceNumberRegExPatternError
          - GetInvoicesPendingApprovalByLocationError
          - ReAssignInvoicesToUsersFailed
          - ReAssignInvoicesUsersMatched
          - GetUsersForReassignInvoiceError
          - InvalidTimeRangeActivity
          - OutsourcedSourceInvoiceNotFound
          - OthersLineItemsDisabled
          - InvoiceInvalidOtherAmount
          - InvoiceInvalidOtherCount
          - InvoiceOtherDescriptionLengthOverflow
          - OtherLineItemRequired
          - OtherLineItemsNotNegativeValueRequired
          - InvalidLaborSkillLevel
          - InvalidLaborType
          - InvalidTechnicianQuantity
          - GetInvoicesCommonCategoriesError
          - InvoiceExplainDisputeEmpty
          - InvoiceAdditionalApprovalCodeHeaderError
          - TemplateParseSuccess
          - TemplateIncorrectHeaderError
          - TemplateEmptyTemplateError
          - TemplateWrongFieldsCountError
          - TemplateFieldNotFoundError
          - TemplateFieldRequiredError
          - TemplateParseIntError
          - TemplateFieldSizeError
          - TemplateInvalidValueError
          - TemplateFieldFormatError
          - TemplateFieldMaxRangeError
          - TemplateFieldMinRangeError
          - TemplateProviderNotEntered
          - TemplateInvalidSubscriberError
          - TemplateVendorNotFoundError
          - TemplateMissedProviderError
          - TemplateProviderNotFoundError
          - TemplateProviderSubsccriberLinkError
          - TemplateTradeDispatchRankError
          - TemplateInvalidTradeForSubscriberError
          - TemplateStoreNotFoundError
          - TemplateNotStoresForStateError
          - TemplateNotStoresForCountryError
          - TemplateNotStoresForDistrictError
          - TemplateNotStoresForRegionError
          - TemplateMultiplePimaryProvidersForTradeStoreError
          - TemplateDuplicatePrimaryRelationshipError
          - TemplateAmbiguousDataError
          - TemplateIncorrectSubscriber
          - TemplateDuplicateRanking
          - TemplateLongitudeRangeError
          - TemplateLatitudeRangeError
          - TemplateInvalidStateError
          - TemplateMissedSubscriberError
          - TemplateMissedStoreIdError
          - TemplateInvalidSubscriberIdError
          - TemplateOpenCloseDateError
          - TemplateInvalidCountryError
          - TemplateInvalidStateForCountryError
          - TemplateInvalidLocationTypeError
          - TemplateMissingFullAndShortNameError
          - TemplateMissingCountryError
          - TemplateDuplicatedDataError
          - TemplateParentLocationNotFoundError
          - TemplateParseDateTimeError
          - TemplateParseDecimalError
          - TemplateSquareValueRangeError
          - TemplateInvalidSquareMeasureError
          - TemplateTypeLabelCanNotBeUpdatedError
          - TemplateTypeLabelHaveToBeLocationForNotInventory
          - TemplateInvalidPrimarySupplyLocation
          - TemplateInvalidHomestoreLocationNumber
          - TemplateErrorDuringCreation
          - TemplateLocationNotFoundError
          - TemplateDuplicatedLocationFoundError
          - TemplateInvalidLocationHeaderError
          - TemplateDuplicatedLocationHeaderError
          - TemplateHeaderContainsEmptyFieldsError
          - TemplateLocHeadersShortHeaderError
          - TemplateHeaderContainsDuplicatesError
          - TemplateLocationNotesStoreIdFieldLengthError
          - TemplateLocationNotesNoteValueFieldLengthError
          - TemplateErrorInvalidZipCode
          - TemplateMissingLocationNoteHeader
          - TemplateMissingLocationNoteIdHeader
          - TemplateInvalidSecondarySupplyLocation
          - TemplateLocationWasNotCreated
          - TemplateTruckNameIsEmpty
          - TemplateWrongFormat
          - TemplateSubscriberNotFound
          - TemplateDuplicatedLocationHeaders
          - TemplateInvalidHeaders
          - TemplateInvalidPhoneError
          - TemplateDuplicateTelecomRecordError
          - TemplateTelecomRecordExistsError
          - TemplateInvalidCategory
          - TemplateDifferentRanksForProviderAssignments
          - TemplateDuplicateRankError
          - TemplateProviderNonCompliant
          - TemplateLocationIsClosed
          - TemplateProviderWarning
          - EmptyRequest
          - InvoiceOtherUnitTypeInvalid
          - InvalidNumberOfParameters
          - EmptyLocationOrTradeList
          - StoreIdRequiredError
          - InvalidUserIdError
          - InvalidStoreIdError
          - AmbigiousError
          - MliHierarchyFiledsCountError
          - MliHierarchyMaxUserNameError
          - MliHierarchyDuplicateUserError
          - MLiHirarchyUserExistInOtherLevelError
          - MissingLevelsError
          - DuplicateApprovalLevelsError
          - InvalidMliLocations
          - InvalidMlpLocations
          - ApprovalLevelUsedInRulsetError
          - GLCodeAmbiguous
          - GlCodeInvalidResponce
          - GetRuleSetListError
          - RuleSetDuplicateNameError
          - RuleSetDuplicateActionError
          - RuleSetConflictedActionError
          - RuleSetRuleSetDoesNotExistsError
          - RuleSetTradeDoesNotExistError
          - RuleSetCategoryDoesNotExistError
          - RuleSetMliLevelDoesNotExistError
          - GetRuleSet
          - CreateUpdateRuleSetError
          - DeleteRuleSet
          - GetRuleSetCategoriesTradesCountError
          - GetRuleSetByInvoice
          - GetCategoryTradeIdsAreSelectedError
          - ProposalAboveMlpLimitError
          - ProposalNextLevelHasNoAvailableActionsError
          - DefaultRuleSetError
          - UserFilterGetError
          - UserFilterCreateUpdateError
          - UserFilterDeleteError
          - UserFilterSetAsDefaultError
          - InvoiceFilterFromAlpProviderError
          - PaymenowScProviderIdOrFbCompanyIdMustBeProvided
          - PaymenowBannersForProvidersOnly
          - PaymenowFeatureDisabled
          - PaymenowBannerInfoNotFound
          - PaymenowBannerInvalidNavigationUrl
          - PaymenowRequestedProvidersIsNotAssigned
          - PaymenowEmptyRequestedProviders
          - PaymentManagerFeatureDisabled
          - PaymentManagerFeatureDisabledForSubscriber
          - PaymentSystemCurrentlyUnavailable
          - CurrencyNotSupported
          - PaymentSystemAccountNotFound
          - FeatureIsOff
          - EarlyPayFeatureWithoutPaymentManagetFeatureError
          - FtpTestError
          - AcceptTermsAndConditionsRequestInvalid
          - PaymentSystemAccountError
          - SendReportToFTP
          - SchedulingError
          - BadPaymentData
          - InvoicesCanNotBeRepaid
          - InvoicesCanNotBeRescheduled
          - InvalidBillingAddress
          - PaymentManagerGeneralSettingsNotFound
          - PaymentManagerEInvoiceSettingsNotFound
          - BadgeVerificationFailed
          - BadgeTempPassEmpty
          - BadgeScanRequired
          - SolvedIssueSubmitFailed
          - SolvedIssueInvalidLocationId
          - SolvedIssueInvalidCategoryId
          - SolvedIssueInvalidTradeId
          - SolvedIssueInvalidPriorityId
          - SolvedIssueInvalidSource
          - SolvedIssueInvalidProblemCode
          - SolvedIssueInvalidType
          - SubmitFeedbackErrorWoStatus
          - SubmitFeedbackInvalidAnswer
          - SubmitFeedbackInvalidTrackingNumber
          - SubmitFeedbackInvalidSubscriber
          - SubmitFeedbackInvalidScore
          - SubmitFeedbackUnsatisfactoryCommentRequired
          - SubmitFeedbackInvalidReviewId
          - SubmitFeedbackInvalidSetupId
          - FeedbackSetupInvalidSetupId
          - S3SaveError
          - AbsSaveError
          - GoodDataLoginFailed
          - GoodDataElementUriError
          - GoodDataReportResultUriError
          - GoodDataReportResultEmpty
          - GoodDataDesReportResCountError
          - GoodDataDesReportResConvertError
          - GoodDataDesDisplayFormAttributeEmpty
          - InvalidProposalAmountLimit
          - GetApprovalProposalReasonsError
          - GetEmailRecipientsError
          - GetAssignProposalReasonsError
          - AssetTypeDuplicateNameError
          - AssetTypeDoesntExistError
          - AssetTypeFailUpdateRefrigerantPurpose
          - AssetTypeDeleteFailed
          - ExistingAssetsFoundForAssetType
          - CantModifyAssetTypeParentId
          - InvalidAssetTypeName
          - AssetTypeInheritanceError
          - ExistingProposalsFoundForAssetType
          - InstallPurchaseDateOverflow
          - WOexistsWithSomeAssets
          - PartsChangeFailed
          - PartsReasonCodeError
          - PartsUseDateError
          - PartsRefrigerantAlreadyExists
          - PartsChargeHistoryAlreadyExists
          - PartsNotFound
          - BulkPartUseIncorrectWorkOrder
          - BulkPartsByIdsNotFound
          - BulkPartsMultipleWosError
          - BulkPartsIncorrectIsRefrigerantParam
          - BulkPartsIsRefrigerantCanNotbeChanged
          - BulkPartsReasonCodeChangeError
          - BulkPartsInvalidAssetAndReasonCodeParams
          - BulkPartsInvalidAssetId
          - BulkPartsInvalidInitialChargeCode
          - BulkPartsAssetDoesntContainCharge
          - BulkPartsIsInventoryFlagError
          - BulkPartsLeakAlreadyInProcessError
          - BulkPartsInvalidDateRangeError
          - BulkPartsMoeNumberRequiredError
          - BulkPartsSystemChargeExceeded
          - BulkRefrigerantuUageBlocked
          - BulkIDsNotBeNull
          - BulkPartRemovalNotAllowedOnRetrofitRetireWO
          - BulkAddPartUsagesNotAllowedAfterRetrofitRetireCreation
          - BulkRetrofitRetireRefrigerantUsageReasonCanNotChanged
          - BulkInitialChargeSystemExpansionNotAllowed
          - BulkInventoryPartIdCanNotBeChanged
          - BulkInventoryLocationIdCanNotBeChanged
          - BulkPartsDuplicatedRequest
          - BulkChangePartsIncorrectRefrigerantType
          - BulkPartsWorkOrderInProcessing
          - BulkPartsRetroRetireIsInProgressOnThisDate
          - BulkPartsCanNotAttachRefrigerantUsageToPlanLeakRecord
          - RetrofitRetireCanNotBeRemoved
          - RetroRetirePartsCantbeChanged
          - BulkPartsInventoryApiFailed
          - BadNotificationSubscriptionEventType
          - RefrigerantUseDateOutOfTheLeakProcessDateRange
          - InventoryUsageNotAllowedOnRTrackingConnectedSubAndSubcontractors
          - BulkExternalWoCurrentlyDoesntExists
          - BulkConnectorOnlyExternalClientAssetsCanBeProcessed
          - BulkConnectorOnlyClientAssetsCouldBeProcessed
          - LeakRecordHasWrongDateValue
          - HasUncompliedLeakRecordInAnoutherWO
          - HasUncompletedWOOnAnotherLeakRecord
          - OnlyOneAssetWorkOrderPair
          - OneLeakRecordMustBeOnCompletedWO
          - LeakRecordNotFaund
          - AssetIDWoIdIsRequired
          - BulkPartsReasonCodeRetrofit
          - MlpImportLevelError
          - UpdateMlpUserLevelError
          - InvalidHolidayName
          - DuplicateHolidayName
          - HolidaysDeleteFailed
          - HolidaysExcludeInsertFailed
          - HolidaysUpdateFailed
          - HolidaysInsertFailed
          - HolidaysExcludeDeleteFailed
          - BusinessHoursDeleteFailed
          - BusinessHoursUpdateFailed
          - BusinessHoursInsertFailed
          - InvalidTime
          - HolidayForDeleteNotFound
          - InvalidChecklistId
          - NoLinkBetweenSubscriberAndProvider
          - WorkforceCreateContractorError
          - InvalidCertificateId
          - MaxThresholdExceeded
          - MaxTriggerRateExceeded
          - LeakPriorityIsRequired
          - MissingRTSettings
          - ResolutionCodesLimitExceeded
          - ResolutionCodesAreRequired
          - RootCauseIsRequired
          - RootCauseTextIsRequired
          - NoAccessToSetRootCauseText
          - RootCauseTextMaxLengthExceeded
          - ResolutionCodeTextIsRequired
          - NoAccessToSetResolutionCodeText
          - ResolutionCodeTextMaxLengthExceeded
          - ResolutionCodeTextMustBeUnique
          - ResolutionCodeWithoutFreeTextMustBeUnique
          - PendingResCodesStatusCannotBeChangedToInvoiceableBySubscriber
          - ResolutionAndRootCauseCodesAreRequiredToMoveToInvoiceableStatusByProvider
          - AssetCategoriesLimitExceeded
          - NoAccessToAssetCategories
          - AssetCategoriesAreRequired
          - InvalidAssetCategoryId
          - NoAssetCategoriesOnWorkOrder
          - RootCausesMustBeForAllWorkOrderAssetCategories
          - RootCauseTextMustBeUnique
          - AssetCategoryIsRequired
          - MultipleRootCausesMethodMustBeUsed
          - ResolutionCodesMustBeForAllWorkOrderAssetCategories
          - UnknownStoreId
          - UsesRefrigerantAttributeNotChanged
          - AssetTagDuplicate
          - AssetTagIdDuplicate
          - UnknownEquipmentType
          - ParentIdInOtherLocation
          - UnknownBrandName
          - CARBRequiredManufacturedDate
          - CARBRequiredInstallDate
          - TradeNotFound
          - AssetDoesntExist
          - AssetIsNotRefrigerant
          - AssetCantContainRefrigerant
          - OnlyRackAssetsContainingCircuits
          - ConnectorAssetTagIdCanNotBeChanged
          - ConnectorAssetLocationIdCanNotBeChanged
          - AssetTagCantBeUpdated
          - AssetTypeIsNotСonfiguredToManageRTAssets
          - RefrigerantTrackingNotAvailableForLocation
          - UsesRefrigerantRequiredByAssetTypeSettings
          - AssetLocationTradeDoesntCorrespondToWO
          - AssetLocationSelectedPMmodule
          - UpdateAssetRepairStatusValidation
          - HasCircuitsCantBeChange
          - HasComponentsCantBeChange
          - CircuitCanNotBeConnectedToCircuit
          - RTCircuitCanNotBeConnectedToNonRTAsset
          - RTComponentCanNotBeConnectedToNonRTAsset
          - ComponentCanNotBeConnectedToComponent
          - NonRTComponentCanNotBeConnectedToRtAsset
          - NonRTCircuitCanNotBeConnectedToRtAsset
          - ComponentCanNotBeConnectedToCircuit
          - ParentAssetShouldHaveEitherComponentsNorCircuits
          - ParentAssetCantHaveComponents
          - ParentAssetCantHaveCircuits
          - MultipleAssetsFoundForTheRequestedTagId
          - DeclineWorkOrderFailed
          - AcceptWorkOrderFailed
          - WorkOrderWasAccepted
          - SaveMliAuditReportSetting
          - GetMliAuditReportSetting
          - SaveMliAuditReportResult
          - SaveMliAuditReportSendEmailStatus
          - SaveMliAuditReportFilePath
          - GetSubscribersEnabledSchedule
          - SaveMliAuditInfoError
          - TaxValidationAddNewCompanySettingsError
          - TaxValidationUpdateCompanySettingsError
          - ProjectAssociationError
          - GetProjectsInvoiceAmountsError
          - TaxCodeNotUniqueError
          - FieldLengthIsTooLongError
          - SetTaxCodesBulkError
          - InvoiceAdditionalApprovalCodeValueError
          - BulkUpdateInvoicePaymentError
          - ContractServiceExist
          - ContractServiceCantChangeTrade
          - ContractServiceCantChangeCategory
          - ContractServiceCantChangeProvider
          - ContractServicePMServiceCantChangeTrade
          - ContractServicePMServiceCantChangeCategory
          - WorkRequestDescriptionIsRequired
          - WorkRequestCallDateIsRequired
          - WorkRequestIssueIsRequired
          - WorkRequestCallDateHasWrongFormat
          - WorkRequestScheduledDateHasWrongFormat
          - InvalidWorkRequestStatus
          - InvalidWorkRequestExtendedStatus
          - InvalidWorkRequestCategory
          - InvalidWorkRequestPriority
          - InvalidWorkRequestCurrency
          - InvalidWorkRequestIssueSetup
          - InvalidWorkRequestIssueArea
          - InvalidWorkRequestAsset
          - WorkRequestAttachmentFileNameIsRequired
          - WorkRequestAttachmentOriginalNameIsRequired
          - WorkRequestIssueProblemCodeIsRequired
          - WorkRequestIssueProblemTypeIsRequired
          - WorkRequestScheduledDateMustBeGreaterThanCallDate
          - InvalidWorkRequestId
          - WorkRequestSearchCallDateFromHasWrongFormat
          - WorkRequestSearchCallDateToHasWrongFormat
          - WorkRequestSearchScheduledDateFromHasWrongFormat
          - WorkRequestSearchScheduledDateToHasWrongFormat
          - WorkRequestSearchClosedDateFromHasWrongFormat
          - WorkRequestSearchClosedDateToHasWrongFormat
          - WorkOrderIsAlreadyCreatedForWorkRequest
          - WorkRequestIsClosed
          - WorkRequestClosedReasonIsRequiredForClosedStatus
          - WorkOrderIdIsRequiredForThisClosedReason
          - InvalidWorkRequestClosedReason
          - WorkRequestClosedReasonIsOnlyForClosedStatus
          - InvalidWorkRequestWorkOrderId
          - WorkRequestWorkOrderIdIsOnlyForClosedStatus
          - WorkRequestWorkOrderIdIsOnlyForCertainClosedReason
          - InvalidWorkOrderSourceType
          - DeclineReasonIdIsRequired
          - DeclineReasonDoesntAllowCustomText
          - InvalidDeclineReasonId
          - MultipleWorkOrdersForPurchaseNumber
          - InvoiceMaterialMakupInvalid
          - MaterialMarkUpDiscrepancyReasonShouldBeStated
          - MaterialPriceDiscrepancyReasonShouldBeStated
          - OtherPriceDiscrepancyReasonShouldBeStated
          readOnly: true
          type: string
        ErrorMessage:
          description: The description of all errors.
          type: string
        Data:
          type: object
      type: object
    ? ServiceChannel.Services.Messaging.NotificationMessage[ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrderCheckInOut]
    : description: Notification message
      properties:
        Object:
          $ref: '#/components/schemas/ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrderCheckInOut'
        EventType:
          description: Notification message event type
          enum:
          - WorkOrderCreated
          - WorkOrderNoteAdded
          - WorkOrderNotePinned
          - WorkOrderNoteUnpinned
          - WorkOrderStatusChanged
          - WorkOrderAttachmentAdded
          - WorkOrderNumberChanged
          - WorkOrderPriorityChanged
          - WorkOrderScheduledDateChanged
          - WorkOrderTradeChanged
          - WorkOrderNteChanged
          - WorkOrderCategoryChanged
          - WorkOrderProviderChanged
          - WorkOrderDescriptionChanged
          - WorkOrderResolutionCreated
          - RefrigerantWasUsedChanged
          - WorkOrderResolutionUpdated
          - WorkOrderResolutionCodeUpdated
          - WorkOrderRootCauseCodeUpdated
          - WorkOrderAssetAttached
          - WorkOrderAssetDetached
          - WorkOrderAssetValidated
          - WorkOrderLabelAdded
          - WorkOrderLabelDeleted
          - WorkOrderWeatherTypeChanged
          - WorkOrderIssueChoiceChanged
          - WorkOrderTechnicianAssigned
          - WorkOrderTechnicianUnassigned
          - WorkOrderTechnicianAccepted
          - WorkOrderTechnicianDeclined
          - WorkOrderCertifiedTechnicianAssigned
          - WorkOrderLinksAdded
          - WorkOrderLinksDeleted
          - WorkOrderStarAdded
          - WorkOrderStarRemoved
          - WorkOrderCheckIn
          - WorkOrderCheckOut
          - BadgeScanRequired
          - InvoiceCreated
          - InvoiceOpen
          - InvoiceApproved
          - InvoiceOnHold
          - InvoiceReviewed
          - InvoiceRejected
          - InvoiceApprovalCodeChanged
          - InvoiceStarAdded
          - InvoiceStarRemoved
          - InvoiceDisputed
          - InvoiceVoided
          - InvoicePaid
          - ProposalCreated
          - ProposalOpen
          - ProposalApproved
          - ProposalOnHold
          - ProposalRejected
          - ProposalReviewed
          - ProposalUserAssigned
          - ProposalWorkOrderAssigned
          - ProposalAttachmentAdded
          - ProposalScheduled
          - ProposalVoided
          - ProposalPendingExternalApproval
          - FbInvitationAccepted
          - CalendarIntegrationAdded
          - CalendarIntegrationUpdated
          - LocationCreated
          - LocationUpdated
          - LocationDeleted
          - LocationNoteHeaderCreated
          - LocationNoteHeaderUpdated
          - LocationNoteHeaderDeleted
          - LocationNotesChanged
          - SubscriberTradeCreated
          - SubscriberTradeUpdated
          - SubscriberTradeDeleted
          - SubscriberPriorityCreated
          - SubscriberPriorityUpdated
          - SubscriberPriorityDeleted
          - SubscriberStatusCreated
          - SubscriberStatusUpdated
          - SubscriberStatusDeleted
          - SubscriberCategoryCreated
          - SubscriberCategoryUpdated
          - SubscriberCategoryDeleted
          - ProviderTradeAssigned
          - ProviderTradeUnassigned
          - LeakRecordCreated
          - LeakRecordUpdated
          - LeakRecordDeleted
          - CheckListResponseAdded
          - CheckListResponseUpdated
          - CheckListCreated
          - CheckListUpdated
          - CheckListDeleted
          - IssueListAssigned
          - AssetCreated
          - AssetUpdated
          type: string
        Version:
          description: Notification message format version
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Broker.Models.Contexts.Request.BrokerWorkOrderCheckInOut:
      properties:
        CheckInNotes:
          additionalProperties:
            type: string
          type: object
        Id:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        ProviderId:
          format: int32
          type: integer
        LocationId:
          format: int32
          type: integer
        CheckinAction:
          enum:
          - CheckIn
          - CheckOut
          type: string
        WorkOrderId:
          format: int32
          type: integer
        Date:
          format: date-time
          type: string
        DateDTO:
          format: date-time
          type: string
        User:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.User'
        CallerId:
          type: string
        Action:
          type: string
        WorkType:
          type: string
        WorkorderStatus:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.WorkorderStatusDescriptor'
        ProviderName:
          type: string
        Trade:
          type: string
        Category:
          type: string
        Source:
          type: string
        TradeId:
          format: int32
          type: integer
        TechsCount:
          format: int32
          type: integer
        Location:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Location'
      type: object
    ServiceChannel.Notifications.Objects.Location:
      properties:
        StoreId:
          type: string
        Id:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        ShortName:
          type: string
        FullName:
          type: string
        Address1:
          type: string
        Address2:
          type: string
        Region:
          type: string
        District:
          type: string
        City:
          type: string
        State:
          type: string
        Country:
          type: string
        StoreOpen:
          format: date-time
          type: string
        StoreClose:
          format: date-time
          type: string
        Zip:
          type: string
        MainContact:
          type: string
        PhoneNumber:
          type: string
        FaxNumber:
          type: string
        FacilityManager:
          type: string
        Email:
          type: string
        NotesCount:
          format: int32
          type: integer
        LocationTypeId:
          format: int32
          type: integer
        LocationType:
          type: string
        Latitude:
          format: double
          type: number
        Longitude:
          format: double
          type: number
        TimeZoneId:
          type: string
        RetiredAllProvidersDate:
          format: date-time
          type: string
        RetiredLogin:
          type: string
        UpdatedUserName:
          type: string
        UpdatedDate:
          format: date-time
          type: string
        UpdatedLocationNotesUserName:
          type: string
        UpdatedLocationNotesDate:
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.Location.ProviderTradeAssignmentNotificationObject:
      properties:
        Object:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.ProviderTradeAssignment'
        Type:
          type: string
        Action:
          type: string
        EventType:
          type: string
      type: object
    ServiceChannel.Notifications.Objects.ProviderTradeAssignment:
      properties:
        ProviderId:
          format: int32
          type: integer
        TradedId:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        LocationIds:
          items:
            format: int32
            type: integer
          type: array
        UpdatedBy:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.User'
      type: object
    ServiceChannel.Services.Messaging.LocationNote.LocationNotesNotificationObject:
      properties:
        Object:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.LocationNotes'
        Type:
          type: string
        Action:
          type: string
        EventType:
          type: string
      type: object
    ServiceChannel.Notifications.Objects.LocationNotes:
      properties:
        SubscriberId:
          format: int64
          type: integer
        LocationId:
          format: int64
          type: integer
        ChangedValues:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.LocationNoteValue'
          type: array
        User:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.User'
      type: object
    ServiceChannel.Notifications.Objects.LocationNoteValue:
      properties:
        Name:
          type: string
        Value:
          type: string
      type: object
    ServiceChannel.Services.Messaging.LocationNote.ProposalNotificationObject:
      properties:
        Object:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Proposal.Proposal'
        Type:
          type: string
        Action:
          type: string
        EventType:
          type: string
      type: object
    ServiceChannel.Notifications.Objects.Proposal.Proposal:
      properties:
        Id:
          format: int32
          type: integer
        Number:
          type: string
        Description:
          type: string
        Comments:
          type: string
        Trade:
          type: string
        LocationId:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        ProviderId:
          format: int32
          type: integer
        WorkOrderId:
          format: int32
          type: integer
        WorkOrderNumber:
          type: string
        RfpId:
          format: int32
          type: integer
        CurrencyAlphabeticalCode:
          type: string
        CreatedBy:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.User'
        UpdatedBy:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.User'
        AssignedTo:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.User'
        RequestedBy:
          type: string
        ScheduledDate:
          format: date-time
          type: string
        Status:
          type: string
        Attachments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Attachment'
          type: array
        Amount:
          format: double
          type: number
        AmountCategories:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Proposal.Category'
          type: array
        Asset:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Proposal.Asset'
          type: array
        Category:
          type: string
        ProjectId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Notifications.Objects.Proposal.Category:
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        TotalCost:
          format: double
          type: number
      type: object
    ServiceChannel.Notifications.Objects.Proposal.Asset:
      properties:
        Id:
          type: string
        Action:
          type: string
        Area:
          type: string
        BrandId:
          type: string
        TypeId:
          type: string
        IsNew:
          default: false
          type: boolean
        Attributes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Proposal.AssetAttribute'
          type: array
      type: object
    ServiceChannel.Notifications.Objects.Proposal.AssetAttribute:
      properties:
        Name:
          type: string
        Value:
          type: string
      type: object
    ServiceChannel.Services.Broker.Models.Processing.ProposalResponse:
      example:
        IsSuccess: false
        WarningMessage: WarningMessage
        ProposalId: ProposalId
      properties:
        ProposalId:
          type: string
        WarningMessage:
          type: string
        IsSuccess:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.AfterHours.BusinessHoursApiResponse:
      description: Business hours object.
      example:
        TimeZoneShortDescription: TimeZoneShortDescription
        BusinessHours:
        - DayOfWeek: DayOfWeek
          OpenTime: OpenTime
          ClosedAllDay: false
          CloseTime: CloseTime
        - DayOfWeek: DayOfWeek
          OpenTime: OpenTime
          ClosedAllDay: false
          CloseTime: CloseTime
      properties:
        TimeZoneShortDescription:
          description: Location’s timezone abbreviation.
          type: string
        BusinessHours:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.BusinessHourApiResponse'
          type: array
      type: object
    ServiceChannel.Services.Messaging.AfterHours.BusinessHourApiResponse:
      example:
        DayOfWeek: DayOfWeek
        OpenTime: OpenTime
        ClosedAllDay: false
        CloseTime: CloseTime
      properties:
        DayOfWeek:
          description: Day of the week.
          type: string
        OpenTime:
          description: Location opening hours.
          type: string
        CloseTime:
          description: Location closing hours.
          type: string
        ClosedAllDay:
          default: false
          description: Defines whether the location is closed on the specified day.
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.AfterHours.UpdateLocationBusinessHoursApiModelRequest:
      description: Request object to update business hours for a location.
      properties:
        businessHours:
          description: Business hours details to add to the location.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.LocationBusinessHoursApiModel'
          type: array
      type: object
    ServiceChannel.Services.Messaging.AfterHours.LocationBusinessHoursApiModel:
      description: Business hours object.
      properties:
        DayOfWeek:
          description: Day of the week.
          enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          type: string
        OpenTime:
          description: Location opening hours.
          type: string
        CloseTime:
          description: Location closing hours.
          type: string
        ClosedAllDay:
          default: false
          description: Defines whether the location is closed on the specified day.
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.AfterHours.HolidaysApiResponse:
      description: Object containing the details of a location holiday.
      example:
        Holidays:
        - StartDate: 2000-01-23T04:56:07.000+00:00
          OpenTime: OpenTime
          ClosedAllDay: false
          RepeatBy: RepeatBy
          HolidayName: HolidayName
          RepeatEvery: RepeatEvery
          CloseTime: CloseTime
          RepeatOnDays:
          - RepeatOnDays
          - RepeatOnDays
          Frequency: Frequency
          RepeatOnMonths:
          - RepeatOnMonths
          - RepeatOnMonths
        - StartDate: 2000-01-23T04:56:07.000+00:00
          OpenTime: OpenTime
          ClosedAllDay: false
          RepeatBy: RepeatBy
          HolidayName: HolidayName
          RepeatEvery: RepeatEvery
          CloseTime: CloseTime
          RepeatOnDays:
          - RepeatOnDays
          - RepeatOnDays
          Frequency: Frequency
          RepeatOnMonths:
          - RepeatOnMonths
          - RepeatOnMonths
        TimeZoneShortDescription: TimeZoneShortDescription
      properties:
        TimeZoneShortDescription:
          description: Location’s timezone abbreviation.
          type: string
        Holidays:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.AfterHours.HolidayApiResponse'
          type: array
      type: object
    ServiceChannel.Services.Messaging.AfterHours.HolidayApiResponse:
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        OpenTime: OpenTime
        ClosedAllDay: false
        RepeatBy: RepeatBy
        HolidayName: HolidayName
        RepeatEvery: RepeatEvery
        CloseTime: CloseTime
        RepeatOnDays:
        - RepeatOnDays
        - RepeatOnDays
        Frequency: Frequency
        RepeatOnMonths:
        - RepeatOnMonths
        - RepeatOnMonths
      properties:
        HolidayName:
          description: Holiday name.
          type: string
        StartDate:
          description: Holiday date.
          format: date-time
          type: string
        OpenTime:
          description: Location opening hours.
          type: string
        CloseTime:
          description: Location closing hours.
          type: string
        ClosedAllDay:
          default: false
          description: Defines whether the location is closed on the specified day.
          type: boolean
        Frequency:
          description: "Defines how often the holiday occurs. Valid values: Singular,\
            \ Weekly, Monthly, Yearly."
          type: string
        RepeatEvery:
          description: "Defines intervals for the holiday to repeat. Valid values:\
            \ a number from 1 to 60. Used in combination with the `Frequency` values:\
            \ Yearly, Monthly, Weekly."
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        RepeatBy:
          description: "Defines whether the holiday repeats on days of the month or\
            \ week. Valid values: DaysOfWeek, DaysOfMonth."
          type: string
        RepeatOnDays:
          description: Days when the holiday occurs. Used in combination with the
            `Frequency` value ‘Weekly’.
          items:
            type: string
          type: array
        RepeatOnMonths:
          description: Months when the holiday occurs. Used in combination with the
            `Frequency` value ‘Yearly’.
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.AfterHours.AddHolidayApiModelRequest:
      description: Object request to add a holiday to a location.
      properties:
        HolidayName:
          description: Holiday name.
          type: string
        OpenTime:
          description: Location opening hours.
          type: string
        CloseTime:
          description: Location closing hours.
          type: string
        ClosedAllDay:
          default: false
          description: Defines whether the location is closed on the specified day.
          type: boolean
        Frequency:
          description: "Defines how often the holiday occurs. Valid values: Singular,\
            \ Weekly, Monthly, Yearly."
          enum:
          - Weekly
          - Monthly
          - Yearly
          - Singular
          type: string
        StartDate:
          description: Holiday date.
          format: date-time
          type: string
        RepeatEvery:
          description: "Defines intervals for the holiday to repeat. Valid values:\
            \ a number from 1 to 60. Used in combination with the `Frequency` values:\
            \ Yearly, Monthly, Weekly."
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        RepeatBy:
          description: "Defines whether the holiday repeats on days of the month or\
            \ week. Valid values: DaysOfWeek, DaysOfMonth"
          enum:
          - DayOfWeek
          - DayOfMonth
          type: string
        RepeatOnDays:
          description: Days when the holiday occurs. Used in combination with the
            `Frequency` value  ‘Weekly’.
          items:
            enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            type: string
          type: array
        RepeatOnMonths:
          description: Months when the holiday occurs. Used in combination with the
            `Frequency` value  ‘Yearly’.
          items:
            enum:
            - January
            - February
            - March
            - April
            - May
            - June
            - July
            - August
            - September
            - October
            - November
            - December
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.AfterHours.HolidayIdsApiResponse:
      example:
        HolidayIds:
        - 0
        - 0
      properties:
        HolidayIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Landing.UserLandingData:
      example:
        EDispatchNotConfirmed: 1
        NeProposalPending: 2
        NeNearEta: 7
        NeProposalPendingApproval: 4
        ENearEta: 6
        EDeclined: 5
        Id: 0
        EProposalPending: 5
        NeDispatchNotConfirmed: 9
        EProposalPendingApproval: 2
        NeDeclined: 3
      properties:
        Id:
          format: int32
          type: integer
        ENearEta:
          format: int32
          type: integer
        EDispatchNotConfirmed:
          format: int32
          type: integer
        EDeclined:
          format: int32
          type: integer
        EProposalPending:
          format: int32
          type: integer
        EProposalPendingApproval:
          format: int32
          type: integer
        NeNearEta:
          format: int32
          type: integer
        NeDispatchNotConfirmed:
          format: int32
          type: integer
        NeDeclined:
          format: int32
          type: integer
        NeProposalPending:
          format: int32
          type: integer
        NeProposalPendingApproval:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Landing.UpdateSubscriberLandingPreferenceRequest:
      properties:
        UserId:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        SelectedLocationNoteHeaderIds:
          type: string
        ThresholdEDispatchNotConfirmed:
          format: int32
          type: integer
        ThresholdEDispatchDeclined:
          format: int32
          type: integer
        ThresholdELateToArrive:
          format: int32
          type: integer
        ThresholdEWaitingForQuote:
          format: int32
          type: integer
        ThresholdEPendingApproval:
          format: int32
          type: integer
        ThresholdEPartsOnOrder:
          format: int32
          type: integer
        ThresholdNeDispatchNotConfirmed:
          format: int32
          type: integer
        ThresholdNeDispatchDeclined:
          format: int32
          type: integer
        ThresholdNeLateToArrive:
          format: int32
          type: integer
        ThresholdNeWaitingForQuote:
          format: int32
          type: integer
        ThresholdNePendingApproval:
          format: int32
          type: integer
        ThresholdNePartsOnOrder:
          format: int32
          type: integer
        ThresholdCompletedNotInvoiced:
          format: int32
          type: integer
        PriorityId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Announcements.GetUserAnnouncementsResponse:
      example:
        UserAnnouncements:
          UnreadAnnouncements:
          - ImageName: ImageName
            ImageLink: ImageLink
            CreatedById: 6
            CallToAction: CallToAction
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            Title: Title
            UrlLink: UrlLink
            Id: 0
            AnnouncementType: NonModal
            MessageBody: MessageBody
          - ImageName: ImageName
            ImageLink: ImageLink
            CreatedById: 6
            CallToAction: CallToAction
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            Title: Title
            UrlLink: UrlLink
            Id: 0
            AnnouncementType: NonModal
            MessageBody: MessageBody
          ReadAnnouncements:
          - ImageName: ImageName
            ImageLink: ImageLink
            CreatedById: 6
            CallToAction: CallToAction
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            Title: Title
            UrlLink: UrlLink
            Id: 0
            AnnouncementType: NonModal
            MessageBody: MessageBody
          - ImageName: ImageName
            ImageLink: ImageLink
            CreatedById: 6
            CallToAction: CallToAction
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            Title: Title
            UrlLink: UrlLink
            Id: 0
            AnnouncementType: NonModal
            MessageBody: MessageBody
        Message: Message
        ErrorCode: 1
      properties:
        UserAnnouncements:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.UserAnnouncements'
        ErrorCode:
          description: "Numeric identifier that determines the nature of an error.\
            \ Possible values: `0` - success, otherwise - error."
          format: int32
          type: integer
        Message:
          description: Defines that the file’s remote storage is unavailable or its
            URL cannot be found.
          type: string
      type: object
    ServiceChannel.Api.Model.Entities.UserAnnouncements:
      example:
        UnreadAnnouncements:
        - ImageName: ImageName
          ImageLink: ImageLink
          CreatedById: 6
          CallToAction: CallToAction
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Title: Title
          UrlLink: UrlLink
          Id: 0
          AnnouncementType: NonModal
          MessageBody: MessageBody
        - ImageName: ImageName
          ImageLink: ImageLink
          CreatedById: 6
          CallToAction: CallToAction
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Title: Title
          UrlLink: UrlLink
          Id: 0
          AnnouncementType: NonModal
          MessageBody: MessageBody
        ReadAnnouncements:
        - ImageName: ImageName
          ImageLink: ImageLink
          CreatedById: 6
          CallToAction: CallToAction
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Title: Title
          UrlLink: UrlLink
          Id: 0
          AnnouncementType: NonModal
          MessageBody: MessageBody
        - ImageName: ImageName
          ImageLink: ImageLink
          CreatedById: 6
          CallToAction: CallToAction
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Title: Title
          UrlLink: UrlLink
          Id: 0
          AnnouncementType: NonModal
          MessageBody: MessageBody
      properties:
        ReadAnnouncements:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.UserAnnouncement'
          type: array
        UnreadAnnouncements:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.UserAnnouncement'
          type: array
      type: object
    ServiceChannel.Api.Model.Entities.UserAnnouncement:
      example:
        ImageName: ImageName
        ImageLink: ImageLink
        CreatedById: 6
        CallToAction: CallToAction
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        Title: Title
        UrlLink: UrlLink
        Id: 0
        AnnouncementType: NonModal
        MessageBody: MessageBody
      properties:
        Id:
          format: int32
          type: integer
        Title:
          type: string
        AnnouncementType:
          enum:
          - NonModal
          - Modal
          - SCProviderMobile
          type: string
        CreatedDate:
          format: date-time
          type: string
        CreatedById:
          format: int32
          type: integer
        MessageBody:
          type: string
        CallToAction:
          type: string
        ImageLink:
          type: string
        UrlLink:
          type: string
        ImageName:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetResponse:
      description: Object details of an asset.
      example:
        ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
        ImportedFrom: 3
        ManufacturerDate: 2000-01-23T04:56:07.000+00:00
        AssetLeakDetectorConnectionId: 4
        LeasePeriod: 3
        AssetRefrigerant:
          RackId: RackId
          RefrigerantUsageType: 1
          AssetTypeId: 3
          RefrigerantPartNumber: RefrigerantPartNumber
          RefrigerantPurposeName: RefrigerantPurposeName
          AssetLeakDetectorId: 2
          CurrentChargeMetrics: 6.683562403749608
          ParentId: 1
          EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
          CarbID: CarbID
          RackEntityId: 4
          RackTypeName: RackTypeName
          OperationalStatus: OperationalStatus
          SystemLocation: SystemLocation
          CreateOperationalStatusHistory: false
          IsCarbReporting: false
          RackTypeId: 9
          RefrigerantPurposeId: 6
          HasLeakDetector: false
          ChargeProviderName: ChargeProviderName
          UserId: 6
          TagId: TagId
          OperationStatusDate: 2000-01-23T04:56:07.000+00:00
          CurrentChargeOunces: 8.762042012749001
          CurrentCharge: 9.369310271410669
          ChargeDescriptionId: 9
          Id: 6
          PartNumberId: 5
          AssetId: 7
        LastModifiedUserName: LastModifiedUserName
        BrandId: 5
        AssetValidationStatus: 6
        Trade: Trade
        EnergyEfficiency: EnergyEfficiency
        CustomAttributes:
        - ValueText: ValueText
          Required: false
          ValueType: 8
          EquipmentId: 7
          Value: "{}"
          Visible: false
          EquipmentTypeAttributeId: 4
          SelectedOptionsText: SelectedOptionsText
          Editable: false
          Custom: false
          EquipmentAttributeId: 0
          Name: Name
        - ValueText: ValueText
          Required: false
          ValueType: 8
          EquipmentId: 7
          Value: "{}"
          Visible: false
          EquipmentTypeAttributeId: 4
          SelectedOptionsText: SelectedOptionsText
          Editable: false
          Custom: false
          EquipmentAttributeId: 0
          Name: Name
        Capacity: Capacity
        SubscriberId: 7
        Currency: 3
        Manufacturer: Manufacturer
        SubName: SubName
        SerialNo: SerialNo
        Warranty:
          ProviderId: 7
          Category: Category
          ExpirationDate: 2000-01-23T04:56:07.000+00:00
          Priority: Priority
          Expiration:
            Type: FromPurchaseDate
            Period: 1
          NTE: 1.2315135367772556
          Provider:
            ProviderName: ProviderName
            Type: Fixed
            Value: 1
        UsesRefrigerant: 2
        AssetUpdatesStatus: AssetUpdatesStatus
        LifeExpectancy: 7
        OriginalValue: 9.301444243932576
        AssetAttributesMap:
          EditableForProvidersAttributesMap: 5
          ViewableForProvidersAttributesMap: 6
          RequiredStandardAttributesMap: 6
          StandardAttributesMap: 6
        AssetTag: AssetTag
        IsCircuit: false
        Area: Area
        Active: false
        IsCarbReporting: false
        HasLeakDetector: false
        PurchaseDate: PurchaseDate
        HasCircuits: false
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        Id: 0
        IsLeased: false
        LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
        HasComponents: false
        AdditionalTradesNames: AdditionalTradesNames
        Description: Description
        AssetStatus: AssetStatus
        ModifiedDate: 2000-01-23T04:56:07.000+00:00
        HasChilds: false
        RetiredDate: 2000-01-23T04:56:07.000+00:00
        AssetTypeId: 5
        StoreId: StoreId
        ConditionString: ConditionString
        LeaseDate: LeaseDate
        AssetValidated: false
        HasTagged: false
        AssetTypeGroupId: 0
        WorkOrderArea: WorkOrderArea
        Condition: 2
        ParentId: 3
        TradeId: 1
        IsLeakDetector: false
        LocationId: 6
        InstallDate: InstallDate
        ModelNo: ModelNo
        IsReplaceEquipment: false
        Type: Type
        Spend: 7.058770351582356
        Tag: Tag
        ManufacturerDateStr: ManufacturerDateStr
        Location: Location
        ValidationRequired: false
      properties:
        Id:
          description: Unique numeric asset identifier assigned by the system.
          format: int32
          type: integer
        Tag:
          description: Alphanumeric asset identifier assigned by the client.
          type: string
        Manufacturer:
          description: Company name that produces an asset.
          type: string
        ModelNo:
          description: Asset model number.
          type: string
        SerialNo:
          description: Asset serial number.
          type: string
        LocationId:
          description: Unique numeric identifier of a location an asset is assigned
            to.
          format: int32
          type: integer
        Area:
          description: Place where an asset is physically located.
          type: string
        WorkOrderArea:
          description: "Work order area, such as *Dining Room*, *Kitchen*, *Storage*."
          type: string
        StoreId:
          description: Alphanumeric location identifier assigned by the client.
          type: string
        Trade:
          description: "Trade of an asset type the asset is assigned to, for example,\
            \ *HVAC*, *DOORS*, *ELECTRICAL*."
          type: string
        TradeId:
          description: Numeric identifier of the primary trade of an asset.
          format: int32
          type: integer
        Type:
          description: "Asset type, for example, *Refrigerator*, *Computer Monitor*,\
            \ etc."
          type: string
        AssetTypeId:
          description: Unique numeric identifier of an asset type.
          format: int32
          type: integer
        BrandId:
          description: Unique numeric identifier of a manufacturer that produces an
            asset.
          format: int32
          type: integer
        InstallDate:
          description: Date and time when an asset was installed at the current location.
          type: string
        ManufacturerDate:
          description: Date and time when an asset was produced.
          format: date-time
          type: string
        ManufacturerDateStr:
          description: Date and time when an asset was produced by the manufacturer.
          type: string
        PurchaseDate:
          description: Date and time when an asset was purchased.
          type: string
        UsesRefrigerant:
          description: "Defines whether an asset uses a refrigerant.  **Possible values**:\
            \ 0 - no, 1 - yes."
          format: int32
          type: integer
        Active:
          default: false
          description: "Shows whether an asset is still in use. **Possible values**:\
            \ *true*, *false*."
          type: boolean
        IsLeased:
          default: false
          description: "Defines whether an asset is leased. **Possible values**: *true*,\
            \ *false*."
          type: boolean
        LifeExpectancy:
          description: Estimated useful life of an asset in months.
          format: int32
          type: integer
        OriginalValue:
          description: Original asset price.
          format: double
          type: number
        LeaseDate:
          description: Date and time when a lease was signed.
          type: string
        LeasePeriod:
          description: Period of time in months a contracted lease is in place.
          format: int32
          type: integer
        Condition:
          description: "Value representation of an asset condition. **Possible values**:\
            \ `0` - *broken*, `25` - *poor*, `50` - *average*, `75` - *good*, `100`\
            \ - *excellent*."
          format: int32
          type: integer
        ConditionString:
          description: "Current condition of an asset. **Possible values**: *broken*,\
            \ *poor*, *average*, *good*, *excellent*."
          type: string
        EnergyEfficiency:
          description: Provides information on energy efficiency of a particular asset.
            Maximum is 150 characters.
          type: string
        Capacity:
          description: Provides information on the maximum amount of the refrigerant
            an asset can contain. Maximum is 150 characters.
          type: string
        HasLeakDetector:
          default: false
          description: "Defines whether an asset has a leak detector and belongs to\
            \ the Leak Detector asset type. **Possible values**: *true*, *false*."
          type: boolean
        AssetLeakDetectorConnectionId:
          description: ID of the leak detector that is connected to an asset.
          format: int32
          type: integer
        Location:
          description: Place where an asset is physically located.
          readOnly: true
          type: string
        Warranty:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.Warranty'
        IsReplaceEquipment:
          default: false
          description: "Defines if the current asset is a replacement for another\
            \ on condition that a tracking number is provided. **Possible values**:\
            \ *true*, *false*."
          type: boolean
        HasTagged:
          default: false
          description: Defines if an asset contains ‘Asset Tag’.
          type: boolean
        LastModifiedUseDate:
          description: Date and time when an asset was last updated.
          format: date-time
          type: string
        LastModifiedUserName:
          description: Name of the user who updated an asset.
          type: string
        SubName:
          description: Subscriber’s name who added an asset.
          type: string
        AssetRefrigerant:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AssetRefrigerant'
        AssetAttributesMap:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttributesMap'
        AssetTag:
          description: "Unique alphanumeric decoded value contained in a barcode,\
            \ QR code, or NFC tag of an asset. It is used to scan assets via [ServiceChannel\
            \ Mobile](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/575341308/Asset+Tagging#AssetTagging-AccessingtheAssetScanningModuleinSCMobile)\
            \ and [ServiceChannel Provider](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1181745372/Scanning+and+Validating+Assets+via+SC+Provider+for+FTM+Internal+Techs)."
          type: string
        ImportedFrom:
          description: Provides the number of the template an asset was imported from.
          format: int32
          type: integer
        ParentId:
          description: Unique numeric identification of an asset that has a circuit
            or component.
          format: int32
          type: integer
        Description:
          description: Comment created by a user when adding an asset.
          type: string
        HasComponents:
          default: false
          description: "Defines whether an asset has components. **Possible values**:\
            \ *true*, *false*."
          type: boolean
        HasCircuits:
          default: false
          description: "Defines if an asset has an added circuit. **Possible values**:\
            \ *true*, *false*."
          type: boolean
        IsCircuit:
          default: false
          description: "Defines whether an asset is a circuit. **Possible values**:\
            \ *true*, *false*."
          type: boolean
        SubscriberId:
          description: Unique numeric ID of the subscriber an asset belongs to.
          format: int32
          type: integer
        AssetValidated:
          default: false
          description: "Defines whether the asset has been validated by a technician.\
            \  **Possible values**: *true*, *false*."
          type: boolean
        ValidationRequired:
          default: false
          description: Defines whether an asset needs to be validated by a technician
            upon check-in.
          type: boolean
        IsLeakDetector:
          default: false
          description: Defines whether an asset belongs to the *Leak Detector* asset
            type.
          type: boolean
        AssetStatus:
          description: "Defines an asset repair status. **Possible values**: `0` -\
            \ *In Use*, `1` - *Out For Repair*, `2` - *Replacement Recommended*, `3`\
            \ - *Repaired*."
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        AssetUpdatesStatus:
          description: "Defines the asset update status. **Possible values**: 0 -\
            \ Attributes updated by provider, 1- New unconfirmed - asset created by\
            \ provider, 2 - Rejected, 3 - Asset change confirmed."
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        AdditionalTradesNames:
          description: Names of the additional trades for an asset type.
          type: string
        CreatedDate:
          description: Date and time of the asset creation.
          format: date-time
          type: string
        ModifiedDate:
          description: Date and time of the last asset update.
          format: date-time
          type: string
        AssetTypeGroupId:
          description: Unique ID of an asset type group.
          format: int32
          type: integer
        Spend:
          description: Total asset cost. Can be calculated if the *IncludeTotalCostOfOwnership*
            feature flag is enabled.
          format: double
          type: number
        IsCarbReporting:
          default: false
          description: "Defines whether an asset is included in a CARB report. **Possible\
            \ values**: *true*, *false*."
          type: boolean
        AssetValidationStatus:
          description: ""
          format: int32
          type: integer
        CustomAttributes:
          description: Custom Attributes
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.EquipmentAttributeDescription'
          type: array
        HasChilds:
          default: false
          description: ""
          type: boolean
        Currency:
          format: int32
          type: integer
        ModifiedDateDto:
          description: ModifiedDate datetime offset
          format: date-time
          type: string
        RetiredDate:
          description: Date and time of the asset deactivation.
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.Warranty:
      description: Object containing warranty parameters.
      example:
        ProviderId: 7
        Category: Category
        ExpirationDate: 2000-01-23T04:56:07.000+00:00
        Priority: Priority
        Expiration:
          Type: FromPurchaseDate
          Period: 1
        NTE: 1.2315135367772556
        Provider:
          ProviderName: ProviderName
          Type: Fixed
          Value: 1
      properties:
        ExpirationDate:
          description: Warranty expiration date based on the warranty expiration settings.
          format: date-time
          type: string
        ProviderId:
          description: ID of a provider who is in charge of warranty services.
          format: int32
          type: integer
        NTE:
          description: Maximum amount of money to be spent on warranty services in
            USD. Value -1  means that the amount is not applicable.
          format: double
          type: number
        Priority:
          description: "Defines how quickly warranty services should be provided,\
            \ for example, *Emergency-4 Hours*, *Normal-48 Hours*, *7 Days*."
          type: string
        Category:
          description: "Warranty category, for example, *ADVISE ONLY*, *REPAIR*, *DISASTER*."
          type: string
        Provider:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.WarrantyProvider'
        Expiration:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.WarrantyExpiration'
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.AssetRefrigerant:
      example:
        RackId: RackId
        RefrigerantUsageType: 1
        AssetTypeId: 3
        RefrigerantPartNumber: RefrigerantPartNumber
        RefrigerantPurposeName: RefrigerantPurposeName
        AssetLeakDetectorId: 2
        CurrentChargeMetrics: 6.683562403749608
        ParentId: 1
        EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
        CarbID: CarbID
        RackEntityId: 4
        RackTypeName: RackTypeName
        OperationalStatus: OperationalStatus
        SystemLocation: SystemLocation
        CreateOperationalStatusHistory: false
        IsCarbReporting: false
        RackTypeId: 9
        RefrigerantPurposeId: 6
        HasLeakDetector: false
        ChargeProviderName: ChargeProviderName
        UserId: 6
        TagId: TagId
        OperationStatusDate: 2000-01-23T04:56:07.000+00:00
        CurrentChargeOunces: 8.762042012749001
        CurrentCharge: 9.369310271410669
        ChargeDescriptionId: 9
        Id: 6
        PartNumberId: 5
        AssetId: 7
      properties:
        Id:
          format: int32
          type: integer
        AssetId:
          format: int32
          type: integer
        RefrigerantUsageType:
          format: int32
          type: integer
        RackId:
          type: string
        RackEntityId:
          format: int32
          type: integer
        CarbID:
          type: string
        IsCarbReporting:
          default: false
          type: boolean
        SystemLocation:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        OperationalStatus:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        RefrigerantPartNumber:
          type: string
        PartNumberId:
          format: int32
          type: integer
        RackTypeId:
          format: int32
          type: integer
        CurrentCharge:
          format: double
          type: number
        CurrentChargeMetrics:
          format: double
          type: number
        CurrentChargeOunces:
          format: double
          type: number
        ChargeDescriptionId:
          format: int32
          type: integer
        ChargeProviderName:
          type: string
        EffectiveChargeDate:
          format: date-time
          type: string
        RackTypeName:
          type: string
        UserId:
          format: int32
          type: integer
        TagId:
          type: string
        AssetTypeId:
          format: int32
          type: integer
        RefrigerantPurposeId:
          format: int32
          type: integer
        RefrigerantPurposeName:
          type: string
        ParentId:
          format: int32
          type: integer
        CreateOperationalStatusHistory:
          default: false
          type: boolean
        OperationStatusDate:
          format: date-time
          type: string
        HasLeakDetector:
          default: false
          type: boolean
        AssetLeakDetectorId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetAttributesMap:
      example:
        EditableForProvidersAttributesMap: 5
        ViewableForProvidersAttributesMap: 6
        RequiredStandardAttributesMap: 6
        StandardAttributesMap: 6
      properties:
        StandardAttributesMap:
          format: int32
          type: integer
        ViewableForProvidersAttributesMap:
          format: int32
          type: integer
        EditableForProvidersAttributesMap:
          format: int32
          type: integer
        RequiredStandardAttributesMap:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Equipments.EquipmentAttributeDescription:
      example:
        ValueText: ValueText
        Required: false
        ValueType: 8
        EquipmentId: 7
        Value: "{}"
        Visible: false
        EquipmentTypeAttributeId: 4
        SelectedOptionsText: SelectedOptionsText
        Editable: false
        Custom: false
        EquipmentAttributeId: 0
        Name: Name
      properties:
        EquipmentAttributeId:
          format: int32
          type: integer
        EquipmentTypeAttributeId:
          format: int32
          type: integer
        ValueType:
          format: int32
          type: integer
        EquipmentId:
          format: int32
          type: integer
        Value:
          type: object
        ValueText:
          type: string
        SelectedOptionsText:
          type: string
        Visible:
          default: false
          type: boolean
        Editable:
          default: false
          type: boolean
        Required:
          default: false
          type: boolean
        Name:
          type: string
        Custom:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Assets.WarrantyProvider:
      description: Object containing warranty provider details.
      example:
        ProviderName: ProviderName
        Type: Fixed
        Value: 1
      properties:
        Type:
          description: "Defines the provider type responsible for warranty services.\
            \ **Possible values**: `0` - Fixed provider, `1`- Primary rank provider,\
            \ `2` - Fixed rank provider."
          enum:
          - Fixed
          - PrimaryRanked
          - FixedRanked
          type: string
        Value:
          description: Provider type value. Displays provider ID for the fixed provider
            type; provider rank number — from 1 to 100 — for the fixed rank type;
            1 for a primary rank provider.
          format: int32
          type: integer
        ProviderName:
          description: Name of the provider who is in charge of warranty services.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.WarrantyExpiration:
      description: Object containing warranty expiration details.
      example:
        Type: FromPurchaseDate
        Period: 1
      properties:
        Type:
          description: "Warranty expiration calculation type. **Possible values**:\
            \ 0 - the expiration date is calculated starting from the asset purchase\
            \ data; 1 - the expiration date is calculated starting from the asset\
            \ installation date."
          enum:
          - FromPurchaseDate
          - FromInstallDate
          type: string
        Period:
          description: Warranty period in months.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Equipments.AssociateAssetRequest:
      properties:
        AssetId:
          format: int32
          type: integer
        Code:
          type: string
        ProcessDuplicatedAssetTag:
          default: false
          type: boolean
        NeedUpdateRevision:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Equipments.SearchAssetRequest:
      properties:
        LocationId:
          format: int32
          type: integer
        Code:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.GetAssetsForReplacementRequest:
      properties:
        StartIndex:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        SearchValue:
          type: string
        AssetTypes:
          items:
            format: int32
            type: integer
          type: array
        AssetId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Equipments.AssetComponentsRequest:
      properties:
        ParentIds:
          items:
            format: int32
            type: integer
          type: array
        OnlyRefrigerantTrackingAssets:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Assets.GetFilteredAssetsRequest:
      properties:
        AssetIds:
          items:
            format: int32
            type: integer
          type: array
        AssetStatuses:
          items:
            format: int32
            type: integer
          type: array
        ParentIds:
          items:
            format: int32
            type: integer
          type: array
        LocationIds:
          items:
            format: int32
            type: integer
          type: array
        StoreIds:
          items:
            type: string
          type: array
        AssetTypes:
          items:
            format: int32
            type: integer
          type: array
        AssetTypeNames:
          items:
            type: string
          type: array
        TradeIds:
          items:
            format: int32
            type: integer
          type: array
        ProviderTrades:
          items:
            type: string
          type: array
        Brands:
          items:
            format: int32
            type: integer
          type: array
        TagIds:
          items:
            type: string
          type: array
        ModelNumbers:
          items:
            type: string
          type: array
        SerialNumbers:
          items:
            type: string
          type: array
        LeakDetectorIds:
          items:
            format: int32
            type: integer
          type: array
        WarantyExpirationDateFrom:
          format: date-time
          type: string
        WarrantyExpirationDateTo:
          format: date-time
          type: string
        InstallDeactivatedDateFrom:
          format: date-time
          type: string
        InstallDeactivatedDateTo:
          format: date-time
          type: string
        DeactivatedDateFrom:
          format: date-time
          type: string
        DeactivatedDateTo:
          format: date-time
          type: string
        InstallDateFrom:
          format: date-time
          type: string
        InstallDateTo:
          format: date-time
          type: string
        PurchaseDateFrom:
          format: date-time
          type: string
        PurchaseDateTo:
          format: date-time
          type: string
        LeaseDateFrom:
          format: date-time
          type: string
        LeaseDateTo:
          format: date-time
          type: string
        CreatedDateFrom:
          format: date-time
          type: string
        CreatedDateTo:
          format: date-time
          type: string
        ModifiedDateFrom:
          format: date-time
          type: string
        ModifiedDateTo:
          format: date-time
          type: string
        SortField:
          enum:
          - None
          - AssetType
          - Trade
          - Brand
          - LastUpdatedDate
          - AssetTag
          - ModelNo
          - SerialNo
          - Location
          type: string
        SortDirection:
          type: string
        IsWoDateNecessary:
          default: false
          type: boolean
        RefrigerantOnly:
          default: false
          type: boolean
        IncludeDeactivated:
          default: false
          type: boolean
        DeactivatedOnly:
          default: false
          type: boolean
        HasCircuits:
          default: false
          type: boolean
        IsCircuit:
          default: false
          type: boolean
        HasComponents:
          default: false
          type: boolean
        IsComponent:
          default: false
          type: boolean
        HasAssetTag:
          default: false
          type: boolean
        ChronicLeakRate:
          default: false
          type: boolean
        StartIndex:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        Conditions:
          items:
            format: int32
            type: integer
          type: array
        AssetUpdatesStatuses:
          items:
            format: int32
            type: integer
          type: array
        SearchAdditionalTrades:
          default: false
          type: boolean
        IsLeakDetector:
          default: false
          type: boolean
        IncludeRetiredContracts:
          default: false
          type: boolean
        SearchByText:
          type: string
        SubscriberId:
          format: int32
          type: integer
        AssetTypeGroupIds:
          items:
            format: int32
            type: integer
          type: array
        AssetTags:
          items:
            type: string
          type: array
        Districts:
          items:
            type: string
          type: array
        Regions:
          items:
            type: string
          type: array
        Countries:
          items:
            format: int32
            type: integer
          type: array
        States:
          items:
            format: int32
            type: integer
          type: array
        LocationNames:
          items:
            type: string
          type: array
        Cities:
          items:
            type: string
          type: array
        AssetStatus:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        AssetUpdatesStatus:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        RecIds:
          items:
            format: int32
            type: integer
          type: array
        UncategorizedOnly:
          default: false
          type: boolean
        WarrantyStatuses:
          items:
            format: int32
            type: integer
          type: array
        ExternalSubscriberIds:
          items:
            format: int32
            type: integer
          type: array
        IncludeTotalCostOfOwnership:
          default: false
          type: boolean
        AssetValidationStatuses:
          items:
            format: int32
            type: integer
          type: array
        IncludeCustomAttributes:
          default: false
          type: boolean
        WithoutCircuitsOnly:
          default: false
          type: boolean
        LocationNotes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetLocationNote'
          type: array
        WithoutAssetTags:
          default: false
          type: boolean
        SubscriberIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetLocationNote:
      properties:
        Id:
          format: int32
          type: integer
        Header:
          type: string
        Note:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetsInfoResponse:
      example:
        AssetEntry: AssetEntry
        Assets:
        - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
          ImportedFrom: 3
          ManufacturerDate: 2000-01-23T04:56:07.000+00:00
          AssetLeakDetectorConnectionId: 4
          LeasePeriod: 3
          AssetRefrigerant:
            RackId: RackId
            RefrigerantUsageType: 1
            AssetTypeId: 3
            RefrigerantPartNumber: RefrigerantPartNumber
            RefrigerantPurposeName: RefrigerantPurposeName
            AssetLeakDetectorId: 2
            CurrentChargeMetrics: 6.683562403749608
            ParentId: 1
            EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
            CarbID: CarbID
            RackEntityId: 4
            RackTypeName: RackTypeName
            OperationalStatus: OperationalStatus
            SystemLocation: SystemLocation
            CreateOperationalStatusHistory: false
            IsCarbReporting: false
            RackTypeId: 9
            RefrigerantPurposeId: 6
            HasLeakDetector: false
            ChargeProviderName: ChargeProviderName
            UserId: 6
            TagId: TagId
            OperationStatusDate: 2000-01-23T04:56:07.000+00:00
            CurrentChargeOunces: 8.762042012749001
            CurrentCharge: 9.369310271410669
            ChargeDescriptionId: 9
            Id: 6
            PartNumberId: 5
            AssetId: 7
          LastModifiedUserName: LastModifiedUserName
          BrandId: 5
          AssetValidationStatus: 6
          Trade: Trade
          EnergyEfficiency: EnergyEfficiency
          CustomAttributes:
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          Capacity: Capacity
          SubscriberId: 7
          Currency: 3
          Manufacturer: Manufacturer
          SubName: SubName
          SerialNo: SerialNo
          Warranty:
            ProviderId: 7
            Category: Category
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            Priority: Priority
            Expiration:
              Type: FromPurchaseDate
              Period: 1
            NTE: 1.2315135367772556
            Provider:
              ProviderName: ProviderName
              Type: Fixed
              Value: 1
          UsesRefrigerant: 2
          AssetUpdatesStatus: AssetUpdatesStatus
          LifeExpectancy: 7
          OriginalValue: 9.301444243932576
          AssetAttributesMap:
            EditableForProvidersAttributesMap: 5
            ViewableForProvidersAttributesMap: 6
            RequiredStandardAttributesMap: 6
            StandardAttributesMap: 6
          AssetTag: AssetTag
          IsCircuit: false
          Area: Area
          Active: false
          IsCarbReporting: false
          HasLeakDetector: false
          PurchaseDate: PurchaseDate
          HasCircuits: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
          IsLeased: false
          LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
          HasComponents: false
          AdditionalTradesNames: AdditionalTradesNames
          Description: Description
          AssetStatus: AssetStatus
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          HasChilds: false
          RetiredDate: 2000-01-23T04:56:07.000+00:00
          AssetTypeId: 5
          StoreId: StoreId
          ConditionString: ConditionString
          LeaseDate: LeaseDate
          AssetValidated: false
          HasTagged: false
          AssetTypeGroupId: 0
          WorkOrderArea: WorkOrderArea
          Condition: 2
          ParentId: 3
          TradeId: 1
          IsLeakDetector: false
          LocationId: 6
          InstallDate: InstallDate
          ModelNo: ModelNo
          IsReplaceEquipment: false
          Type: Type
          Spend: 7.058770351582356
          Tag: Tag
          ManufacturerDateStr: ManufacturerDateStr
          Location: Location
          ValidationRequired: false
        - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
          ImportedFrom: 3
          ManufacturerDate: 2000-01-23T04:56:07.000+00:00
          AssetLeakDetectorConnectionId: 4
          LeasePeriod: 3
          AssetRefrigerant:
            RackId: RackId
            RefrigerantUsageType: 1
            AssetTypeId: 3
            RefrigerantPartNumber: RefrigerantPartNumber
            RefrigerantPurposeName: RefrigerantPurposeName
            AssetLeakDetectorId: 2
            CurrentChargeMetrics: 6.683562403749608
            ParentId: 1
            EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
            CarbID: CarbID
            RackEntityId: 4
            RackTypeName: RackTypeName
            OperationalStatus: OperationalStatus
            SystemLocation: SystemLocation
            CreateOperationalStatusHistory: false
            IsCarbReporting: false
            RackTypeId: 9
            RefrigerantPurposeId: 6
            HasLeakDetector: false
            ChargeProviderName: ChargeProviderName
            UserId: 6
            TagId: TagId
            OperationStatusDate: 2000-01-23T04:56:07.000+00:00
            CurrentChargeOunces: 8.762042012749001
            CurrentCharge: 9.369310271410669
            ChargeDescriptionId: 9
            Id: 6
            PartNumberId: 5
            AssetId: 7
          LastModifiedUserName: LastModifiedUserName
          BrandId: 5
          AssetValidationStatus: 6
          Trade: Trade
          EnergyEfficiency: EnergyEfficiency
          CustomAttributes:
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          Capacity: Capacity
          SubscriberId: 7
          Currency: 3
          Manufacturer: Manufacturer
          SubName: SubName
          SerialNo: SerialNo
          Warranty:
            ProviderId: 7
            Category: Category
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            Priority: Priority
            Expiration:
              Type: FromPurchaseDate
              Period: 1
            NTE: 1.2315135367772556
            Provider:
              ProviderName: ProviderName
              Type: Fixed
              Value: 1
          UsesRefrigerant: 2
          AssetUpdatesStatus: AssetUpdatesStatus
          LifeExpectancy: 7
          OriginalValue: 9.301444243932576
          AssetAttributesMap:
            EditableForProvidersAttributesMap: 5
            ViewableForProvidersAttributesMap: 6
            RequiredStandardAttributesMap: 6
            StandardAttributesMap: 6
          AssetTag: AssetTag
          IsCircuit: false
          Area: Area
          Active: false
          IsCarbReporting: false
          HasLeakDetector: false
          PurchaseDate: PurchaseDate
          HasCircuits: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
          IsLeased: false
          LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
          HasComponents: false
          AdditionalTradesNames: AdditionalTradesNames
          Description: Description
          AssetStatus: AssetStatus
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          HasChilds: false
          RetiredDate: 2000-01-23T04:56:07.000+00:00
          AssetTypeId: 5
          StoreId: StoreId
          ConditionString: ConditionString
          LeaseDate: LeaseDate
          AssetValidated: false
          HasTagged: false
          AssetTypeGroupId: 0
          WorkOrderArea: WorkOrderArea
          Condition: 2
          ParentId: 3
          TradeId: 1
          IsLeakDetector: false
          LocationId: 6
          InstallDate: InstallDate
          ModelNo: ModelNo
          IsReplaceEquipment: false
          Type: Type
          Spend: 7.058770351582356
          Tag: Tag
          ManufacturerDateStr: ManufacturerDateStr
          Location: Location
          ValidationRequired: false
        AssetRequired: false
      properties:
        Assets:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
          type: array
        AssetRequired:
          default: false
          type: boolean
        AssetEntry:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetsResponseTreeNode:
      example:
        Components:
        - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
          ImportedFrom: 3
          ManufacturerDate: 2000-01-23T04:56:07.000+00:00
          AssetLeakDetectorConnectionId: 4
          LeasePeriod: 3
          AssetRefrigerant:
            RackId: RackId
            RefrigerantUsageType: 1
            AssetTypeId: 3
            RefrigerantPartNumber: RefrigerantPartNumber
            RefrigerantPurposeName: RefrigerantPurposeName
            AssetLeakDetectorId: 2
            CurrentChargeMetrics: 6.683562403749608
            ParentId: 1
            EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
            CarbID: CarbID
            RackEntityId: 4
            RackTypeName: RackTypeName
            OperationalStatus: OperationalStatus
            SystemLocation: SystemLocation
            CreateOperationalStatusHistory: false
            IsCarbReporting: false
            RackTypeId: 9
            RefrigerantPurposeId: 6
            HasLeakDetector: false
            ChargeProviderName: ChargeProviderName
            UserId: 6
            TagId: TagId
            OperationStatusDate: 2000-01-23T04:56:07.000+00:00
            CurrentChargeOunces: 8.762042012749001
            CurrentCharge: 9.369310271410669
            ChargeDescriptionId: 9
            Id: 6
            PartNumberId: 5
            AssetId: 7
          LastModifiedUserName: LastModifiedUserName
          BrandId: 5
          AssetValidationStatus: 6
          Trade: Trade
          EnergyEfficiency: EnergyEfficiency
          CustomAttributes:
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          Capacity: Capacity
          SubscriberId: 7
          Currency: 3
          Manufacturer: Manufacturer
          SubName: SubName
          SerialNo: SerialNo
          Warranty:
            ProviderId: 7
            Category: Category
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            Priority: Priority
            Expiration:
              Type: FromPurchaseDate
              Period: 1
            NTE: 1.2315135367772556
            Provider:
              ProviderName: ProviderName
              Type: Fixed
              Value: 1
          UsesRefrigerant: 2
          AssetUpdatesStatus: AssetUpdatesStatus
          LifeExpectancy: 7
          OriginalValue: 9.301444243932576
          AssetAttributesMap:
            EditableForProvidersAttributesMap: 5
            ViewableForProvidersAttributesMap: 6
            RequiredStandardAttributesMap: 6
            StandardAttributesMap: 6
          AssetTag: AssetTag
          IsCircuit: false
          Area: Area
          Active: false
          IsCarbReporting: false
          HasLeakDetector: false
          PurchaseDate: PurchaseDate
          HasCircuits: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
          IsLeased: false
          LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
          HasComponents: false
          AdditionalTradesNames: AdditionalTradesNames
          Description: Description
          AssetStatus: AssetStatus
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          HasChilds: false
          RetiredDate: 2000-01-23T04:56:07.000+00:00
          AssetTypeId: 5
          StoreId: StoreId
          ConditionString: ConditionString
          LeaseDate: LeaseDate
          AssetValidated: false
          HasTagged: false
          AssetTypeGroupId: 0
          WorkOrderArea: WorkOrderArea
          Condition: 2
          ParentId: 3
          TradeId: 1
          IsLeakDetector: false
          LocationId: 6
          InstallDate: InstallDate
          ModelNo: ModelNo
          IsReplaceEquipment: false
          Type: Type
          Spend: 7.058770351582356
          Tag: Tag
          ManufacturerDateStr: ManufacturerDateStr
          Location: Location
          ValidationRequired: false
        - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
          ImportedFrom: 3
          ManufacturerDate: 2000-01-23T04:56:07.000+00:00
          AssetLeakDetectorConnectionId: 4
          LeasePeriod: 3
          AssetRefrigerant:
            RackId: RackId
            RefrigerantUsageType: 1
            AssetTypeId: 3
            RefrigerantPartNumber: RefrigerantPartNumber
            RefrigerantPurposeName: RefrigerantPurposeName
            AssetLeakDetectorId: 2
            CurrentChargeMetrics: 6.683562403749608
            ParentId: 1
            EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
            CarbID: CarbID
            RackEntityId: 4
            RackTypeName: RackTypeName
            OperationalStatus: OperationalStatus
            SystemLocation: SystemLocation
            CreateOperationalStatusHistory: false
            IsCarbReporting: false
            RackTypeId: 9
            RefrigerantPurposeId: 6
            HasLeakDetector: false
            ChargeProviderName: ChargeProviderName
            UserId: 6
            TagId: TagId
            OperationStatusDate: 2000-01-23T04:56:07.000+00:00
            CurrentChargeOunces: 8.762042012749001
            CurrentCharge: 9.369310271410669
            ChargeDescriptionId: 9
            Id: 6
            PartNumberId: 5
            AssetId: 7
          LastModifiedUserName: LastModifiedUserName
          BrandId: 5
          AssetValidationStatus: 6
          Trade: Trade
          EnergyEfficiency: EnergyEfficiency
          CustomAttributes:
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          Capacity: Capacity
          SubscriberId: 7
          Currency: 3
          Manufacturer: Manufacturer
          SubName: SubName
          SerialNo: SerialNo
          Warranty:
            ProviderId: 7
            Category: Category
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            Priority: Priority
            Expiration:
              Type: FromPurchaseDate
              Period: 1
            NTE: 1.2315135367772556
            Provider:
              ProviderName: ProviderName
              Type: Fixed
              Value: 1
          UsesRefrigerant: 2
          AssetUpdatesStatus: AssetUpdatesStatus
          LifeExpectancy: 7
          OriginalValue: 9.301444243932576
          AssetAttributesMap:
            EditableForProvidersAttributesMap: 5
            ViewableForProvidersAttributesMap: 6
            RequiredStandardAttributesMap: 6
            StandardAttributesMap: 6
          AssetTag: AssetTag
          IsCircuit: false
          Area: Area
          Active: false
          IsCarbReporting: false
          HasLeakDetector: false
          PurchaseDate: PurchaseDate
          HasCircuits: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
          IsLeased: false
          LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
          HasComponents: false
          AdditionalTradesNames: AdditionalTradesNames
          Description: Description
          AssetStatus: AssetStatus
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          HasChilds: false
          RetiredDate: 2000-01-23T04:56:07.000+00:00
          AssetTypeId: 5
          StoreId: StoreId
          ConditionString: ConditionString
          LeaseDate: LeaseDate
          AssetValidated: false
          HasTagged: false
          AssetTypeGroupId: 0
          WorkOrderArea: WorkOrderArea
          Condition: 2
          ParentId: 3
          TradeId: 1
          IsLeakDetector: false
          LocationId: 6
          InstallDate: InstallDate
          ModelNo: ModelNo
          IsReplaceEquipment: false
          Type: Type
          Spend: 7.058770351582356
          Tag: Tag
          ManufacturerDateStr: ManufacturerDateStr
          Location: Location
          ValidationRequired: false
        Circuits:
        - null
        - null
        Asset:
          ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
          ImportedFrom: 3
          ManufacturerDate: 2000-01-23T04:56:07.000+00:00
          AssetLeakDetectorConnectionId: 4
          LeasePeriod: 3
          AssetRefrigerant:
            RackId: RackId
            RefrigerantUsageType: 1
            AssetTypeId: 3
            RefrigerantPartNumber: RefrigerantPartNumber
            RefrigerantPurposeName: RefrigerantPurposeName
            AssetLeakDetectorId: 2
            CurrentChargeMetrics: 6.683562403749608
            ParentId: 1
            EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
            CarbID: CarbID
            RackEntityId: 4
            RackTypeName: RackTypeName
            OperationalStatus: OperationalStatus
            SystemLocation: SystemLocation
            CreateOperationalStatusHistory: false
            IsCarbReporting: false
            RackTypeId: 9
            RefrigerantPurposeId: 6
            HasLeakDetector: false
            ChargeProviderName: ChargeProviderName
            UserId: 6
            TagId: TagId
            OperationStatusDate: 2000-01-23T04:56:07.000+00:00
            CurrentChargeOunces: 8.762042012749001
            CurrentCharge: 9.369310271410669
            ChargeDescriptionId: 9
            Id: 6
            PartNumberId: 5
            AssetId: 7
          LastModifiedUserName: LastModifiedUserName
          BrandId: 5
          AssetValidationStatus: 6
          Trade: Trade
          EnergyEfficiency: EnergyEfficiency
          CustomAttributes:
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          Capacity: Capacity
          SubscriberId: 7
          Currency: 3
          Manufacturer: Manufacturer
          SubName: SubName
          SerialNo: SerialNo
          Warranty:
            ProviderId: 7
            Category: Category
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            Priority: Priority
            Expiration:
              Type: FromPurchaseDate
              Period: 1
            NTE: 1.2315135367772556
            Provider:
              ProviderName: ProviderName
              Type: Fixed
              Value: 1
          UsesRefrigerant: 2
          AssetUpdatesStatus: AssetUpdatesStatus
          LifeExpectancy: 7
          OriginalValue: 9.301444243932576
          AssetAttributesMap:
            EditableForProvidersAttributesMap: 5
            ViewableForProvidersAttributesMap: 6
            RequiredStandardAttributesMap: 6
            StandardAttributesMap: 6
          AssetTag: AssetTag
          IsCircuit: false
          Area: Area
          Active: false
          IsCarbReporting: false
          HasLeakDetector: false
          PurchaseDate: PurchaseDate
          HasCircuits: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
          IsLeased: false
          LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
          HasComponents: false
          AdditionalTradesNames: AdditionalTradesNames
          Description: Description
          AssetStatus: AssetStatus
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          HasChilds: false
          RetiredDate: 2000-01-23T04:56:07.000+00:00
          AssetTypeId: 5
          StoreId: StoreId
          ConditionString: ConditionString
          LeaseDate: LeaseDate
          AssetValidated: false
          HasTagged: false
          AssetTypeGroupId: 0
          WorkOrderArea: WorkOrderArea
          Condition: 2
          ParentId: 3
          TradeId: 1
          IsLeakDetector: false
          LocationId: 6
          InstallDate: InstallDate
          ModelNo: ModelNo
          IsReplaceEquipment: false
          Type: Type
          Spend: 7.058770351582356
          Tag: Tag
          ManufacturerDateStr: ManufacturerDateStr
          Location: Location
          ValidationRequired: false
      properties:
        Asset:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
        Circuits:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsResponseTreeNode'
          type: array
        Components:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkOrder:
      description: Workorder object for Messages exchenge.
      example:
        Invoice:
          StatusChangeUser: StatusChangeUser
          WoTrackingNumber: 6
          NonTaxableOther: 9
          WoAssignedTo: WoAssignedTo
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          Materials:
          - MarkUpPercent: 6.073898085781152
            Description: Description
            PartNum: PartNum
            Amount: 0.43431398824148815
            IsRateDiscrepancy: false
            Quantity: 3.901545264248647
            IsPartPriceDiscrepancy: false
            AgreedPartPrice: 4.459605034958679
            PriceDiscrepancyReason: PriceDiscrepancyReason
            InvoiceId: 5
            UnitPrice: 4.86315908102884
            ApprovalCodeGroup:
              ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            PartName: PartName
            UnitType: UnitType
            MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
            isNontaxableVATEU: false
            Id: 7
            AgreedMarkUpPercent: 8.251625748923757
            IsMarkUpDiscrepancy: false
          - MarkUpPercent: 6.073898085781152
            Description: Description
            PartNum: PartNum
            Amount: 0.43431398824148815
            IsRateDiscrepancy: false
            Quantity: 3.901545264248647
            IsPartPriceDiscrepancy: false
            AgreedPartPrice: 4.459605034958679
            PriceDiscrepancyReason: PriceDiscrepancyReason
            InvoiceId: 5
            UnitPrice: 4.86315908102884
            ApprovalCodeGroup:
              ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            PartName: PartName
            UnitType: UnitType
            MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
            isNontaxableVATEU: false
            Id: 7
            AgreedMarkUpPercent: 8.251625748923757
            IsMarkUpDiscrepancy: false
          PostedTaxRate: 1.4894159
          Payments:
          - PaymentDate: 2000-01-23T04:56:07.000+00:00
            PaidBy: PaidBy
            Id: 1
            PaymentAmount: 6.84685269835264
            PaymentNumber: PaymentNumber
          - PaymentDate: 2000-01-23T04:56:07.000+00:00
            PaidBy: PaidBy
            Id: 1
            PaymentAmount: 6.84685269835264
            PaymentNumber: PaymentNumber
          InvoiceBalance: 4.965218492984954
          TravelTaxIncluded: false
          StarredDate: 2000-01-23T04:56:07.000+00:00
          Trade: Trade
          InvoiceAmountsDetails:
            MaterialAmount: 6.878052220127876
            TravelAmount: 5.944895607614016
            FreightAmount: 6.704019297950036
            OtherDescription: OtherDescription
            LaborAmount: 6.778324963048013
            OtherAmount: 3.353193347011243
          Subscriber:
            Zip: Zip
            DecimalSeparator: DecimalSeparator
            TimeFormat: TimeFormat
            Email: Email
            PrimaryCurrency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            IsOutsourcedWorkOn: false
            Address2: Address2
            ShortName: ShortName
            Users:
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            Address1: Address1
            City: City
            Name: Name
            State: State
            Phone: Phone
            DateFormat: DateFormat
            Country: Country
            Id: 7
            Fax: Fax
            ContactName: ContactName
          Currency:
            DecimalCount: 1
            Entity: Entity
            AlphabeticalCode: AlphabeticalCode
            NumericCode: NumericCode
            Rate: 4.965218492984954
            Id: 7
            CurrencyName: CurrencyName
          PostedBy: PostedBy
          InvoiceTax: 1.0246457001441578
          FreightApprovalCodeGroups:
          - ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          WithMismatchedRates: false
          IsStarred: false
          NonTaxableMaterial: 6
          Status: Status
          ApprovalCodes:
          - ParentId: 2
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 3
            Id: 7
            InternalParentId: 8
            InvoiceId: 0
            InvoiceChargeId: 3
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 2
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 3
            Id: 7
            InternalParentId: 8
            InvoiceId: 0
            InvoiceChargeId: 3
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          StatusHistoryShort:
          - Status: Status
            CreatedBy: CreatedBy
            CreatedById: 9
            InvId: 5
            ActionDate: ActionDate
          - Status: Status
            CreatedBy: CreatedBy
            CreatedById: 9
            InvId: 5
            ActionDate: ActionDate
          Tax2ApprovalCodeGroups:
          - ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          BatchNumber: BatchNumber
          ApprovedDate: 2000-01-23T04:56:07.000+00:00
          LaborTaxIncluded: false
          IsDuplicate: false
          Subtotal: 5.025004791520295
          Terms: Terms
          VendorPayeeId: 7
          InvoiceTotal: 1.1730742509559433
          PostedDate: 2000-01-23T04:56:07.000+00:00
          NonTaxableFreight: 8
          Id: 1
          TaxApprovalCodeGroups:
          - ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          MaterialsTaxIncluded: false
          StoredFeatures:
          - StoredFeatures
          - StoredFeatures
          Description: Description
          IsTransferred: false
          Tax2Details:
            Tax2Amount: 3.0576100241049344
            Tax2Name: Tax2Name
          InvoiceTaxesDetails:
            LaborTaxPercent: 3.0937452626664474
            TravelTaxPercent: 0.8851374739011653
            FreightTaxPercent: 7.058770351582356
            TravelTax: 8.969578798196912
            MaterialTax: 4.652396432933246
            OtherTax: 3.0205796992916243
            MaterialTaxPercent: 7.143538047012306
            OtherTaxPercent: 6.519180951018382
            LaborTax: 0.10263654006109402
            FreightTax: 7.740351818741173
          LastActionDate: 2000-01-23T04:56:07.000+00:00
          NonTaxableLabor: 9
          PaidDate: 2000-01-23T04:56:07.000+00:00
          FreightTaxIncluded: false
          Number: Number
          Labors:
          - SkillLevel: SkillLevel
            Hours: 4.078845849666752
            Amount: 0.2025324113236393
            IsRateDiscrepancy: false
            RateDiscrepancyReason: RateDiscrepancyReason
            CityPerformed: CityPerformed
            InvoiceId: 5
            NumOfTech: NumOfTech
            HourlyRate: 3.2588565619047607
            IsOffShore: false
            AgreedRate: 6.628464275087742
            ApprovalCodeGroup:
              ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            LaborType: LaborType
            ServiceType: ServiceType
            isNontaxableVATEU: false
            Id: 7
          - SkillLevel: SkillLevel
            Hours: 4.078845849666752
            Amount: 0.2025324113236393
            IsRateDiscrepancy: false
            RateDiscrepancyReason: RateDiscrepancyReason
            CityPerformed: CityPerformed
            InvoiceId: 5
            NumOfTech: NumOfTech
            HourlyRate: 3.2588565619047607
            IsOffShore: false
            AgreedRate: 6.628464275087742
            ApprovalCodeGroup:
              ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            LaborType: LaborType
            ServiceType: ServiceType
            isNontaxableVATEU: false
            Id: 7
          Travels:
          - IsOffShore: false
            UnitPrice: 8.28965939814297
            Description: Description
            ApprovalCodeGroup:
              ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            UnitType: UnitType
            Amount: 4.573936264232251
            Quantity: 6.623518433804886
            isNontaxableVATEU: false
            Id: 2
            InvoiceId: 1
          - IsOffShore: false
            UnitPrice: 8.28965939814297
            Description: Description
            ApprovalCodeGroup:
              ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            UnitType: UnitType
            Amount: 4.573936264232251
            Quantity: 6.623518433804886
            isNontaxableVATEU: false
            Id: 2
            InvoiceId: 1
          NonTaxableTravel: 9
          InvoiceDate: 2000-01-23T04:56:07.000+00:00
          IsOutsourced: false
          IsChargesApprovalCodesDefault: false
          Others:
          - Description: Description
            Amount: 1.8268702177058116
            Quantity: 9.183123594773994
            InvoiceId: 9
            AgreedUnitPrice: 8.761432466225475
            PriceListOtherChargeId: 0
            Type: Type
            UnitPrice: 3.502657762086401
            ApprovalCodeGroup:
              ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            UnitType: UnitType
            IsUnitPriceDiscrepancy: false
            UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
            isNontaxableVATEU: false
            Id: 8
          - Description: Description
            Amount: 1.8268702177058116
            Quantity: 9.183123594773994
            InvoiceId: 9
            AgreedUnitPrice: 8.761432466225475
            PriceListOtherChargeId: 0
            Type: Type
            UnitPrice: 3.502657762086401
            ApprovalCodeGroup:
              ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            UnitType: UnitType
            IsUnitPriceDiscrepancy: false
            UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
            isNontaxableVATEU: false
            Id: 8
          StarredBy: StarredBy
          Comments: Comments
          PostedTax2Rate: 6.846853
          EditableAdditionalApprovalCode:
            SetupId: 8
            Options:
            - Value: Value
              Id: 1
            - Value: Value
              Id: 1
            DefaultValue: DefaultValue
            ValueFormat: 3
            Header: Header
            DefaultOptionId: 6
            EditableAtLineItemLevel: 6
            Value: Value
            LocationId: 9
          IsExists: false
          ApprovalCode: ApprovalCode
          Provider:
            Zip: Zip
            MailFrequency: 1
            Email: Email
            ImageFile: ImageFile
            DateCreated: 2000-01-23T04:56:07.000+00:00
            TaxId: TaxId
            Name: Name
            Trade: Trade
            Phone: Phone
            FaxNumber: FaxNumber
            LastTrainingDate: 2000-01-23T04:56:07.000+00:00
            FormId: 5
            SuperUser: SuperUser
            MailInfo: MailInfo
            NightRequest: 5
            ReturnMail: ReturnMail
            MainContact: MainContact
            Address2: Address2
            Address1: Address1
            City: City
            IsInternal: false
            ProcessingEmail: ProcessingEmail
            ShortFormatEmail: ShortFormatEmail
            DoNotDispatch: false
            IsOnOffShoreFeatureEnabled: false
            State: State
            FullName: FullName
            Pager: Pager
            WebSite: WebSite
            Country: Country
            LastUserDate: LastUserDate
            Id: 2
            SuiteFloor: SuiteFloor
            LastTrainingDateStr: LastTrainingDateStr
          OtherTaxIncluded: false
          StatusChangeDate: 2000-01-23T04:56:07.000+00:00
          TransferredDate: 2000-01-23T04:56:07.000+00:00
          StatusChangeUserid: StatusChangeUserid
          Location:
            Zip: Zip
            Radius: 3.5571952270680973
            Email: Email
            TimeZoneInfoId: 6
            TimeZoneIanaName: TimeZoneIanaName
            OpenDate: 2000-01-23T04:56:07.000+00:00
            SquareValue: 6.778324963048013
            StateId: 1
            ShortName: ShortName
            Latitude: 8.762042012749001
            CountyId: 5
            Name: Name
            AddressTypeId: 7
            StoreId: StoreId
            SquareMeasure: SquareMeasure
            TimeZoneShortDescription: TimeZoneShortDescription
            SubscriberId: 6
            Phone: Phone
            FaxNumber: FaxNumber
            SubscriberName: SubscriberName
            Supplier: Supplier
            HasInventory: false
            Distance: 6.438423552598547
            Notes:
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            CountryId: 2
            Status: Status
            Address2: Address2
            TypeLabel: TypeLabel
            FormattedAddress: FormattedAddress
            Address1: Address1
            City: City
            TimeShiftToEST: 3
            Longitude: 9.018348186070783
            Contact: Contact
            LocationFormattedAddressTail: LocationFormattedAddressTail
            LocationTypeId: 6
            State: State
            Region: Region
            Country: Country
            Id: 9
            ClosedDate: 2000-01-23T04:56:07.000+00:00
            District: District
            TimeZoneMsName: TimeZoneMsName
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        FrequencyId: 6
        CheckInDeniedReason: CheckInDeniedReason
        ScheduledDate: 2000-01-23T04:56:07.000+00:00
        Tax: 2.027123023002322
        AutoInvoice: false
        Trade: Trade
        ProviderRank: 7
        Subscriber:
          Zip: Zip
          DecimalSeparator: DecimalSeparator
          TimeFormat: TimeFormat
          Email: Email
          PrimaryCurrency:
            DecimalCount: 1
            Entity: Entity
            AlphabeticalCode: AlphabeticalCode
            NumericCode: NumericCode
            Rate: 4.965218492984954
            Id: 7
            CurrencyName: CurrencyName
          IsOutsourcedWorkOn: false
          Address2: Address2
          ShortName: ShortName
          Users:
          - UserName: UserName
            Email: Email
            MlpUserInfo:
              Id: 1
              MlpLevel: MlpLevel
              MlpLocations:
              - 6
              - 6
            Access:
              Trades:
              - Trades
              - Trades
              Locations:
              - Locations
              - Locations
              Districts:
              - Districts
              - Districts
              Regions:
              - Regions
              - Regions
            Dashboard:
              Id: 2
              RedirectToDashboard: false
              Name: Name
            MliUserInfo:
              MliLocations:
              - 1
              - 1
              Id: 1
              MliLevel: MliLevel
            Roles:
            - Roles
            - Roles
            Limits:
              NteLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              ProposalLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              InvoiceLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
            SubscriberId: 3
            FullName: FullName
            PsmEmail: PsmEmail
            Permissions:
            - Permissions
            - Permissions
            Id: 9
            Disabled: false
            UserType: Corporate
            FeedRole: FeedRole
          - UserName: UserName
            Email: Email
            MlpUserInfo:
              Id: 1
              MlpLevel: MlpLevel
              MlpLocations:
              - 6
              - 6
            Access:
              Trades:
              - Trades
              - Trades
              Locations:
              - Locations
              - Locations
              Districts:
              - Districts
              - Districts
              Regions:
              - Regions
              - Regions
            Dashboard:
              Id: 2
              RedirectToDashboard: false
              Name: Name
            MliUserInfo:
              MliLocations:
              - 1
              - 1
              Id: 1
              MliLevel: MliLevel
            Roles:
            - Roles
            - Roles
            Limits:
              NteLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              ProposalLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              InvoiceLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
            SubscriberId: 3
            FullName: FullName
            PsmEmail: PsmEmail
            Permissions:
            - Permissions
            - Permissions
            Id: 9
            Disabled: false
            UserType: Corporate
            FeedRole: FeedRole
          Address1: Address1
          City: City
          Name: Name
          State: State
          Phone: Phone
          DateFormat: DateFormat
          Country: Country
          Id: 7
          Fax: Fax
          ContactName: ContactName
        Currency:
          DecimalCount: 1
          Entity: Entity
          AlphabeticalCode: AlphabeticalCode
          NumericCode: NumericCode
          Rate: 4.965218492984954
          Id: 7
          CurrencyName: CurrencyName
        UpdatedDate_DTO: 2000-01-23T04:56:07.000+00:00
        Asset:
          ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
          ImportedFrom: 3
          ManufacturerDate: 2000-01-23T04:56:07.000+00:00
          AssetLeakDetectorConnectionId: 4
          LeasePeriod: 3
          AssetRefrigerant:
            RackId: RackId
            RefrigerantUsageType: 1
            AssetTypeId: 3
            RefrigerantPartNumber: RefrigerantPartNumber
            RefrigerantPurposeName: RefrigerantPurposeName
            AssetLeakDetectorId: 2
            CurrentChargeMetrics: 6.683562403749608
            ParentId: 1
            EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
            CarbID: CarbID
            RackEntityId: 4
            RackTypeName: RackTypeName
            OperationalStatus: OperationalStatus
            SystemLocation: SystemLocation
            CreateOperationalStatusHistory: false
            IsCarbReporting: false
            RackTypeId: 9
            RefrigerantPurposeId: 6
            HasLeakDetector: false
            ChargeProviderName: ChargeProviderName
            UserId: 6
            TagId: TagId
            OperationStatusDate: 2000-01-23T04:56:07.000+00:00
            CurrentChargeOunces: 8.762042012749001
            CurrentCharge: 9.369310271410669
            ChargeDescriptionId: 9
            Id: 6
            PartNumberId: 5
            AssetId: 7
          LastModifiedUserName: LastModifiedUserName
          BrandId: 5
          AssetValidationStatus: 6
          Trade: Trade
          EnergyEfficiency: EnergyEfficiency
          CustomAttributes:
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          Capacity: Capacity
          SubscriberId: 7
          Currency: 3
          Manufacturer: Manufacturer
          SubName: SubName
          SerialNo: SerialNo
          Warranty:
            ProviderId: 7
            Category: Category
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            Priority: Priority
            Expiration:
              Type: FromPurchaseDate
              Period: 1
            NTE: 1.2315135367772556
            Provider:
              ProviderName: ProviderName
              Type: Fixed
              Value: 1
          UsesRefrigerant: 2
          AssetUpdatesStatus: AssetUpdatesStatus
          LifeExpectancy: 7
          OriginalValue: 9.301444243932576
          AssetAttributesMap:
            EditableForProvidersAttributesMap: 5
            ViewableForProvidersAttributesMap: 6
            RequiredStandardAttributesMap: 6
            StandardAttributesMap: 6
          AssetTag: AssetTag
          IsCircuit: false
          Area: Area
          Active: false
          IsCarbReporting: false
          HasLeakDetector: false
          PurchaseDate: PurchaseDate
          HasCircuits: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
          IsLeased: false
          LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
          HasComponents: false
          AdditionalTradesNames: AdditionalTradesNames
          Description: Description
          AssetStatus: AssetStatus
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          HasChilds: false
          RetiredDate: 2000-01-23T04:56:07.000+00:00
          AssetTypeId: 5
          StoreId: StoreId
          ConditionString: ConditionString
          LeaseDate: LeaseDate
          AssetValidated: false
          HasTagged: false
          AssetTypeGroupId: 0
          WorkOrderArea: WorkOrderArea
          Condition: 2
          ParentId: 3
          TradeId: 1
          IsLeakDetector: false
          LocationId: 6
          InstallDate: InstallDate
          ModelNo: ModelNo
          IsReplaceEquipment: false
          Type: Type
          Spend: 7.058770351582356
          Tag: Tag
          ManufacturerDateStr: ManufacturerDateStr
          Location: Location
          ValidationRequired: false
        AutoComplete: false
        OriginalEta_DTO: 2000-01-23T04:56:07.000+00:00
        Status:
          Primary: Primary
          Extended: Extended
          CanCreateInvoice: false
        EstimatedCompletionDate: 2000-01-23T04:56:07.000+00:00
        Tax2: 4.145608029883936
        IssueTicketInfo:
          AreaName: AreaName
          SetupId: 5
          Equipment: Equipment
          AreaId: 5
          ProblemGroup: ProblemGroup
          ProblemCode: ProblemCode
          Id: 1
          TicketType: TicketType
        IsExpired: false
        Assignee:
          UserName: UserName
          UserId: 0
        CreatedBy: CreatedBy
        Priority: Priority
        ReassignDate_DTO: 2000-01-23T04:56:07.000+00:00
        AssetCount: 3
        ProblemCode: ProblemCode
        Labels:
        - Label: Label
          Id: 7
        - Label: Label
          Id: 7
        LocationOpenDate: LocationOpenDate
        Tax2Type: Tax2Type
        CompletedDate: 2000-01-23T04:56:07.000+00:00
        ScheduledDate_DTO: 2000-01-23T04:56:07.000+00:00
        Price: 7.386281948385884
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        IsInvoiced: false
        Id: 0
        Nte: 3.616076749251911
        CallerId: 3
        LocationRemodelDate: LocationRemodelDate
        Resolution: Resolution
        CategoryId: 9
        LinkedWorkOrders:
        - Id: 5
        - Id: 5
        Description: Description
        Category: Category
        HasWorkActivity: false
        CallDate: 2000-01-23T04:56:07.000+00:00
        RecallWorkOrder: 6
        IsCheckInDenied: false
        Attachments:
          Count:
            Total: 6
            Own: 1
        Source: Source
        ServiceId: 0
        Number: Number
        LinkedInWorkOrders:
        - Id: 5
        - Id: 5
        Assets:
        - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
          ImportedFrom: 3
          ManufacturerDate: 2000-01-23T04:56:07.000+00:00
          AssetLeakDetectorConnectionId: 4
          LeasePeriod: 3
          AssetRefrigerant:
            RackId: RackId
            RefrigerantUsageType: 1
            AssetTypeId: 3
            RefrigerantPartNumber: RefrigerantPartNumber
            RefrigerantPurposeName: RefrigerantPurposeName
            AssetLeakDetectorId: 2
            CurrentChargeMetrics: 6.683562403749608
            ParentId: 1
            EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
            CarbID: CarbID
            RackEntityId: 4
            RackTypeName: RackTypeName
            OperationalStatus: OperationalStatus
            SystemLocation: SystemLocation
            CreateOperationalStatusHistory: false
            IsCarbReporting: false
            RackTypeId: 9
            RefrigerantPurposeId: 6
            HasLeakDetector: false
            ChargeProviderName: ChargeProviderName
            UserId: 6
            TagId: TagId
            OperationStatusDate: 2000-01-23T04:56:07.000+00:00
            CurrentChargeOunces: 8.762042012749001
            CurrentCharge: 9.369310271410669
            ChargeDescriptionId: 9
            Id: 6
            PartNumberId: 5
            AssetId: 7
          LastModifiedUserName: LastModifiedUserName
          BrandId: 5
          AssetValidationStatus: 6
          Trade: Trade
          EnergyEfficiency: EnergyEfficiency
          CustomAttributes:
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          Capacity: Capacity
          SubscriberId: 7
          Currency: 3
          Manufacturer: Manufacturer
          SubName: SubName
          SerialNo: SerialNo
          Warranty:
            ProviderId: 7
            Category: Category
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            Priority: Priority
            Expiration:
              Type: FromPurchaseDate
              Period: 1
            NTE: 1.2315135367772556
            Provider:
              ProviderName: ProviderName
              Type: Fixed
              Value: 1
          UsesRefrigerant: 2
          AssetUpdatesStatus: AssetUpdatesStatus
          LifeExpectancy: 7
          OriginalValue: 9.301444243932576
          AssetAttributesMap:
            EditableForProvidersAttributesMap: 5
            ViewableForProvidersAttributesMap: 6
            RequiredStandardAttributesMap: 6
            StandardAttributesMap: 6
          AssetTag: AssetTag
          IsCircuit: false
          Area: Area
          Active: false
          IsCarbReporting: false
          HasLeakDetector: false
          PurchaseDate: PurchaseDate
          HasCircuits: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
          IsLeased: false
          LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
          HasComponents: false
          AdditionalTradesNames: AdditionalTradesNames
          Description: Description
          AssetStatus: AssetStatus
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          HasChilds: false
          RetiredDate: 2000-01-23T04:56:07.000+00:00
          AssetTypeId: 5
          StoreId: StoreId
          ConditionString: ConditionString
          LeaseDate: LeaseDate
          AssetValidated: false
          HasTagged: false
          AssetTypeGroupId: 0
          WorkOrderArea: WorkOrderArea
          Condition: 2
          ParentId: 3
          TradeId: 1
          IsLeakDetector: false
          LocationId: 6
          InstallDate: InstallDate
          ModelNo: ModelNo
          IsReplaceEquipment: false
          Type: Type
          Spend: 7.058770351582356
          Tag: Tag
          ManufacturerDateStr: ManufacturerDateStr
          Location: Location
          ValidationRequired: false
        - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
          ImportedFrom: 3
          ManufacturerDate: 2000-01-23T04:56:07.000+00:00
          AssetLeakDetectorConnectionId: 4
          LeasePeriod: 3
          AssetRefrigerant:
            RackId: RackId
            RefrigerantUsageType: 1
            AssetTypeId: 3
            RefrigerantPartNumber: RefrigerantPartNumber
            RefrigerantPurposeName: RefrigerantPurposeName
            AssetLeakDetectorId: 2
            CurrentChargeMetrics: 6.683562403749608
            ParentId: 1
            EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
            CarbID: CarbID
            RackEntityId: 4
            RackTypeName: RackTypeName
            OperationalStatus: OperationalStatus
            SystemLocation: SystemLocation
            CreateOperationalStatusHistory: false
            IsCarbReporting: false
            RackTypeId: 9
            RefrigerantPurposeId: 6
            HasLeakDetector: false
            ChargeProviderName: ChargeProviderName
            UserId: 6
            TagId: TagId
            OperationStatusDate: 2000-01-23T04:56:07.000+00:00
            CurrentChargeOunces: 8.762042012749001
            CurrentCharge: 9.369310271410669
            ChargeDescriptionId: 9
            Id: 6
            PartNumberId: 5
            AssetId: 7
          LastModifiedUserName: LastModifiedUserName
          BrandId: 5
          AssetValidationStatus: 6
          Trade: Trade
          EnergyEfficiency: EnergyEfficiency
          CustomAttributes:
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          Capacity: Capacity
          SubscriberId: 7
          Currency: 3
          Manufacturer: Manufacturer
          SubName: SubName
          SerialNo: SerialNo
          Warranty:
            ProviderId: 7
            Category: Category
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            Priority: Priority
            Expiration:
              Type: FromPurchaseDate
              Period: 1
            NTE: 1.2315135367772556
            Provider:
              ProviderName: ProviderName
              Type: Fixed
              Value: 1
          UsesRefrigerant: 2
          AssetUpdatesStatus: AssetUpdatesStatus
          LifeExpectancy: 7
          OriginalValue: 9.301444243932576
          AssetAttributesMap:
            EditableForProvidersAttributesMap: 5
            ViewableForProvidersAttributesMap: 6
            RequiredStandardAttributesMap: 6
            StandardAttributesMap: 6
          AssetTag: AssetTag
          IsCircuit: false
          Area: Area
          Active: false
          IsCarbReporting: false
          HasLeakDetector: false
          PurchaseDate: PurchaseDate
          HasCircuits: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
          IsLeased: false
          LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
          HasComponents: false
          AdditionalTradesNames: AdditionalTradesNames
          Description: Description
          AssetStatus: AssetStatus
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          HasChilds: false
          RetiredDate: 2000-01-23T04:56:07.000+00:00
          AssetTypeId: 5
          StoreId: StoreId
          ConditionString: ConditionString
          LeaseDate: LeaseDate
          AssetValidated: false
          HasTagged: false
          AssetTypeGroupId: 0
          WorkOrderArea: WorkOrderArea
          Condition: 2
          ParentId: 3
          TradeId: 1
          IsLeakDetector: false
          LocationId: 6
          InstallDate: InstallDate
          ModelNo: ModelNo
          IsReplaceEquipment: false
          Type: Type
          Spend: 7.058770351582356
          Tag: Tag
          ManufacturerDateStr: ManufacturerDateStr
          Location: Location
          ValidationRequired: false
        CreatedDate_DTO: 2000-01-23T04:56:07.000+00:00
        PostedId: 6
        Notes:
          Last:
            CreatedBy: CreatedBy
            Number: 6
            MailedTo: MailedTo
            ActionRequired: false
            DateCreated: 2000-01-23T04:56:07.000+00:00
            Id: 2
            NoteData: NoteData
          Count:
            Total: 6
            Own: 1
        TradeId: 2
        ClosingAuthorizationNumber: 3
        LocationId: 6
        ProjectId: 7
        IsEnabledForMobile: false
        ReassignDate: 2000-01-23T04:56:07.000+00:00
        CompletedDate_DTO: 2000-01-23T04:56:07.000+00:00
        ExpirationDate_DTO: 2000-01-23T04:56:07.000+00:00
        WeatherEvent:
          Id: 4
          Name: Name
        ApprovalCode: ApprovalCode
        Provider:
          Zip: Zip
          MailFrequency: 1
          Email: Email
          ImageFile: ImageFile
          DateCreated: 2000-01-23T04:56:07.000+00:00
          TaxId: TaxId
          Name: Name
          Trade: Trade
          Phone: Phone
          FaxNumber: FaxNumber
          LastTrainingDate: 2000-01-23T04:56:07.000+00:00
          FormId: 5
          SuperUser: SuperUser
          MailInfo: MailInfo
          NightRequest: 5
          ReturnMail: ReturnMail
          MainContact: MainContact
          Address2: Address2
          Address1: Address1
          City: City
          IsInternal: false
          ProcessingEmail: ProcessingEmail
          ShortFormatEmail: ShortFormatEmail
          DoNotDispatch: false
          IsOnOffShoreFeatureEnabled: false
          State: State
          FullName: FullName
          Pager: Pager
          WebSite: WebSite
          Country: Country
          LastUserDate: LastUserDate
          Id: 2
          SuiteFloor: SuiteFloor
          LastTrainingDateStr: LastTrainingDateStr
        ExpirationDate: 2000-01-23T04:56:07.000+00:00
        Caller: Caller
        PurchaseNumber: PurchaseNumber
        CallDate_DTO: 2000-01-23T04:56:07.000+00:00
        Location:
          Zip: Zip
          Radius: 3.5571952270680973
          Email: Email
          TimeZoneInfoId: 6
          TimeZoneIanaName: TimeZoneIanaName
          OpenDate: 2000-01-23T04:56:07.000+00:00
          SquareValue: 6.778324963048013
          StateId: 1
          ShortName: ShortName
          Latitude: 8.762042012749001
          CountyId: 5
          Name: Name
          AddressTypeId: 7
          StoreId: StoreId
          SquareMeasure: SquareMeasure
          TimeZoneShortDescription: TimeZoneShortDescription
          SubscriberId: 6
          Phone: Phone
          FaxNumber: FaxNumber
          SubscriberName: SubscriberName
          Supplier: Supplier
          HasInventory: false
          Distance: 6.438423552598547
          Notes:
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          CountryId: 2
          Status: Status
          Address2: Address2
          TypeLabel: TypeLabel
          FormattedAddress: FormattedAddress
          Address1: Address1
          City: City
          TimeShiftToEST: 3
          Longitude: 9.018348186070783
          Contact: Contact
          LocationFormattedAddressTail: LocationFormattedAddressTail
          LocationTypeId: 6
          State: State
          Region: Region
          Country: Country
          Id: 9
          ClosedDate: 2000-01-23T04:56:07.000+00:00
          District: District
          TimeZoneMsName: TimeZoneMsName
        OriginalEta: 2000-01-23T04:56:07.000+00:00
      properties:
        Id:
          description: Work Order identifier.
          format: int32
          type: integer
        Number:
          description: Work Order Number
          type: string
        PurchaseNumber:
          description: Purchase number of work order
          type: string
        Subscriber:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.Subscriber'
        Provider:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.Provider'
        Location:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.Location'
        LocationId:
          description: LocationId for use in ODATA calls without expanding Location
            property (ref. PLAT-55878)
          format: int32
          type: integer
        Status:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderStatusDescriptor'
        IssueTicketInfo:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.IssueTicketInformation'
        Caller:
          description: Caller
          type: string
        CreatedBy:
          type: string
        CallDate:
          format: date-time
          type: string
        CallDate_DTO:
          format: date-time
          type: string
        ReassignDate:
          format: date-time
          type: string
        ReassignDate_DTO:
          format: date-time
          type: string
        LocationOpenDate:
          type: string
        LocationRemodelDate:
          type: string
        EstimatedCompletionDate:
          format: date-time
          type: string
        Priority:
          type: string
        Trade:
          type: string
        TradeId:
          format: int32
          type: integer
        ProviderRank:
          format: int32
          type: integer
        ApprovalCode:
          type: string
        ScheduledDate:
          format: date-time
          type: string
        ScheduledDate_DTO:
          format: date-time
          type: string
        CompletedDate:
          format: date-time
          type: string
        CompletedDate_DTO:
          format: date-time
          type: string
        ExpirationDate:
          description: Gets or sets ExpirationDate.
          format: date-time
          type: string
        ExpirationDate_DTO:
          format: date-time
          type: string
        OriginalEta:
          format: date-time
          type: string
        OriginalEta_DTO:
          format: date-time
          type: string
        UpdatedDate:
          description: Updated Date
          format: date-time
          type: string
        UpdatedDate_DTO:
          format: date-time
          type: string
        CreatedDate:
          description: "s\r\n            Created Date"
          format: date-time
          type: string
        CreatedDate_DTO:
          format: date-time
          type: string
        Description:
          type: string
        CategoryId:
          format: int32
          type: integer
        Category:
          type: string
        Nte:
          format: double
          type: number
        Tax:
          description: Tax
          format: double
          type: number
        Tax2:
          description: Tax2
          format: double
          type: number
        Tax2Type:
          description: Tax2Type
          type: string
        Price:
          description: Price (subtotal)
          format: double
          type: number
        Currency:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Currencies.Currency'
        ProblemCode:
          type: string
        Invoice:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.Invoice'
        Resolution:
          type: string
        Asset:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
        Assets:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
          type: array
        AssetCount:
          format: int32
          type: integer
        Attachments:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.AttachmentsDescriptor'
        Notes:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.NotesDescriptor'
        PostedId:
          description: Gets or sets PostedId.
          format: int32
          type: integer
        LinkedWorkOrders:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IdentityObject'
          type: array
        LinkedInWorkOrders:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IdentityObject'
          type: array
        IsCheckInDenied:
          default: false
          description: Gets or sets a value indicating whether IsDenied.
          type: boolean
        CheckInDeniedReason:
          description: Gets or sets Reason.
          type: string
        RecallWorkOrder:
          description: Recall WorkOrder Id
          format: int32
          type: integer
        IsInvoiced:
          default: false
          description: Gets or sets IsInvoiced.
          readOnly: true
          type: boolean
        IsExpired:
          default: false
          description: Gets or sets IsExpired.
          type: boolean
        IsEnabledForMobile:
          default: false
          description: Gets or sets value that allowed clients to manage their vendors
            to participate in the mobile App process.
          type: boolean
        HasWorkActivity:
          default: false
          type: boolean
        Source:
          type: string
        ClosingAuthorizationNumber:
          format: int32
          type: integer
        CallerId:
          format: int32
          type: integer
        AutoComplete:
          default: false
          type: boolean
        Labels:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.Workorders.WorkOrderLabel'
          type: array
        AutoInvoice:
          default: false
          type: boolean
        Assignee:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.AssigneeUser'
        ProjectId:
          format: int32
          type: integer
        FrequencyId:
          format: int32
          type: integer
        ServiceId:
          format: int32
          type: integer
        WeatherEvent:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WeatherEvent'
      type: object
    ServiceChannel.Services.Messaging.Subscribers.Subscriber:
      example:
        Zip: Zip
        DecimalSeparator: DecimalSeparator
        TimeFormat: TimeFormat
        Email: Email
        PrimaryCurrency:
          DecimalCount: 1
          Entity: Entity
          AlphabeticalCode: AlphabeticalCode
          NumericCode: NumericCode
          Rate: 4.965218492984954
          Id: 7
          CurrencyName: CurrencyName
        IsOutsourcedWorkOn: false
        Address2: Address2
        ShortName: ShortName
        Users:
        - UserName: UserName
          Email: Email
          MlpUserInfo:
            Id: 1
            MlpLevel: MlpLevel
            MlpLocations:
            - 6
            - 6
          Access:
            Trades:
            - Trades
            - Trades
            Locations:
            - Locations
            - Locations
            Districts:
            - Districts
            - Districts
            Regions:
            - Regions
            - Regions
          Dashboard:
            Id: 2
            RedirectToDashboard: false
            Name: Name
          MliUserInfo:
            MliLocations:
            - 1
            - 1
            Id: 1
            MliLevel: MliLevel
          Roles:
          - Roles
          - Roles
          Limits:
            NteLimit:
              Amount: 4.145608029883936
              CurrencyId: 7
            ProposalLimit:
              Amount: 4.145608029883936
              CurrencyId: 7
            InvoiceLimit:
              Amount: 4.145608029883936
              CurrencyId: 7
          SubscriberId: 3
          FullName: FullName
          PsmEmail: PsmEmail
          Permissions:
          - Permissions
          - Permissions
          Id: 9
          Disabled: false
          UserType: Corporate
          FeedRole: FeedRole
        - UserName: UserName
          Email: Email
          MlpUserInfo:
            Id: 1
            MlpLevel: MlpLevel
            MlpLocations:
            - 6
            - 6
          Access:
            Trades:
            - Trades
            - Trades
            Locations:
            - Locations
            - Locations
            Districts:
            - Districts
            - Districts
            Regions:
            - Regions
            - Regions
          Dashboard:
            Id: 2
            RedirectToDashboard: false
            Name: Name
          MliUserInfo:
            MliLocations:
            - 1
            - 1
            Id: 1
            MliLevel: MliLevel
          Roles:
          - Roles
          - Roles
          Limits:
            NteLimit:
              Amount: 4.145608029883936
              CurrencyId: 7
            ProposalLimit:
              Amount: 4.145608029883936
              CurrencyId: 7
            InvoiceLimit:
              Amount: 4.145608029883936
              CurrencyId: 7
          SubscriberId: 3
          FullName: FullName
          PsmEmail: PsmEmail
          Permissions:
          - Permissions
          - Permissions
          Id: 9
          Disabled: false
          UserType: Corporate
          FeedRole: FeedRole
        Address1: Address1
        City: City
        Name: Name
        State: State
        Phone: Phone
        DateFormat: DateFormat
        Country: Country
        Id: 7
        Fax: Fax
        ContactName: ContactName
      properties:
        Id:
          format: int32
          type: integer
        ShortName:
          type: string
        Email:
          type: string
        Users:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
          type: array
        PrimaryCurrency:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Currencies.Currency'
        IsOutsourcedWorkOn:
          default: false
          type: boolean
        Name:
          description: "Required Name\r\n            Name - name of the subscriber"
          type: string
        Address1:
          description: Optional
          type: string
        Address2:
          description: Optional
          type: string
        Country:
          description: Optional
          type: string
        State:
          description: Optional
          type: string
        City:
          description: Optional
          type: string
        Zip:
          description: Optional
          type: string
        Phone:
          description: Optional
          type: string
        Fax:
          description: Optional
          type: string
        ContactName:
          description: Optional
          type: string
        TimeFormat:
          type: string
        DateFormat:
          type: string
        DecimalSeparator:
          type: string
      required:
      - Name
      type: object
    ServiceChannel.Services.Messaging.Providers.Provider:
      example:
        Zip: Zip
        MailFrequency: 1
        Email: Email
        ImageFile: ImageFile
        DateCreated: 2000-01-23T04:56:07.000+00:00
        TaxId: TaxId
        Name: Name
        Trade: Trade
        Phone: Phone
        FaxNumber: FaxNumber
        LastTrainingDate: 2000-01-23T04:56:07.000+00:00
        FormId: 5
        SuperUser: SuperUser
        MailInfo: MailInfo
        NightRequest: 5
        ReturnMail: ReturnMail
        MainContact: MainContact
        Address2: Address2
        Address1: Address1
        City: City
        IsInternal: false
        ProcessingEmail: ProcessingEmail
        ShortFormatEmail: ShortFormatEmail
        DoNotDispatch: false
        IsOnOffShoreFeatureEnabled: false
        State: State
        FullName: FullName
        Pager: Pager
        WebSite: WebSite
        Country: Country
        LastUserDate: LastUserDate
        Id: 2
        SuiteFloor: SuiteFloor
        LastTrainingDateStr: LastTrainingDateStr
      properties:
        Phone:
          type: string
        FullName:
          description: Full Name
          type: string
        Address1:
          description: Address1
          type: string
        Address2:
          description: Adress2
          type: string
        City:
          description: City
          type: string
        State:
          description: State
          type: string
        Zip:
          description: Zip
          type: string
        Country:
          description: Country
          type: string
        MainContact:
          description: Main Contact
          type: string
        DateCreated:
          description: Date Created
          format: date-time
          type: string
        LastUserDate:
          description: Last User Date
          type: string
        SuperUser:
          description: SuperUser
          type: string
        WebSite:
          description: WebSite
          type: string
        Email:
          description: Email
          type: string
        TaxId:
          description: Tax Id
          type: string
        Trade:
          description: Trade
          type: string
        ProcessingEmail:
          description: Processing Email
          type: string
        FaxNumber:
          description: Fax Number
          type: string
        SuiteFloor:
          description: Suite Floor
          type: string
        MailInfo:
          description: Mail Info
          type: string
        ImageFile:
          description: Image File
          type: string
        ReturnMail:
          description: Return Mail
          type: string
        MailFrequency:
          description: Mail Frequency
          format: int32
          type: integer
        FormId:
          description: Form Id
          format: int32
          type: integer
        Pager:
          description: Pager
          type: string
        NightRequest:
          description: NightRequest
          format: int32
          type: integer
        ShortFormatEmail:
          description: Short Format Email
          type: string
        LastTrainingDate:
          description: Last Training Date
          format: date-time
          type: string
        LastTrainingDateStr:
          description: Last Training Date as a string
          type: string
        IsInternal:
          default: false
          description: Is Internal
          type: boolean
        IsOnOffShoreFeatureEnabled:
          default: false
          description: Is OnOffShoreFeature Enabled
          type: boolean
        Id:
          description: Id
          format: int32
          type: integer
        Name:
          description: Name
          type: string
        DoNotDispatch:
          default: false
          description: DoNotDispatch enabled?
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Location.Location:
      description: General location details object.
      example:
        Zip: Zip
        Radius: 3.5571952270680973
        Email: Email
        TimeZoneInfoId: 6
        TimeZoneIanaName: TimeZoneIanaName
        OpenDate: 2000-01-23T04:56:07.000+00:00
        SquareValue: 6.778324963048013
        StateId: 1
        ShortName: ShortName
        Latitude: 8.762042012749001
        CountyId: 5
        Name: Name
        AddressTypeId: 7
        StoreId: StoreId
        SquareMeasure: SquareMeasure
        TimeZoneShortDescription: TimeZoneShortDescription
        SubscriberId: 6
        Phone: Phone
        FaxNumber: FaxNumber
        SubscriberName: SubscriberName
        Supplier: Supplier
        HasInventory: false
        Distance: 6.438423552598547
        Notes:
        - Header: Header
          HeaderId: 3
          Value: Value
          Id: 6
        - Header: Header
          HeaderId: 3
          Value: Value
          Id: 6
        CountryId: 2
        Status: Status
        Address2: Address2
        TypeLabel: TypeLabel
        FormattedAddress: FormattedAddress
        Address1: Address1
        City: City
        TimeShiftToEST: 3
        Longitude: 9.018348186070783
        Contact: Contact
        LocationFormattedAddressTail: LocationFormattedAddressTail
        LocationTypeId: 6
        State: State
        Region: Region
        Country: Country
        Id: 9
        ClosedDate: 2000-01-23T04:56:07.000+00:00
        District: District
        TimeZoneMsName: TimeZoneMsName
      properties:
        Id:
          description: Unique location identifier.
          format: int32
          type: integer
        SubscriberId:
          description: Unique subscriber identifier.
          format: int32
          type: integer
        SubscriberName:
          type: string
        StoreId:
          description: Alphanumeric identifier of the store in the client's system.
            Assigned by and unique per subscriber.
          type: string
        Name:
          description: Location name.
          type: string
        ShortName:
          description: Shortened location name.
          type: string
        Latitude:
          description: Global position. Latitude.
          format: double
          type: number
        Longitude:
          description: Global position. Longitude.
          format: double
          type: number
        Distance:
          description: Distance from GPS coordinate to this location
          format: double
          type: number
        Radius:
          description: GPS radius for the location.
          format: double
          type: number
        LocationTypeId:
          description: Numeric identifier of the location type.
          format: int32
          type: integer
        Address1:
          description: Additional location address.
          type: string
        Address2:
          description: Main location address.
          type: string
        City:
          description: Location city.
          type: string
        State:
          description: State where the location is situated.
          type: string
        StateId:
          description: Numeric identifier of the location’s state.
          format: int32
          type: integer
        Region:
          description: Part of the country where the location is situated.
          type: string
        District:
          description: Abbreviation of the town or country area where the location
            is situated.
          type: string
        Zip:
          description: Location ZIP or postal code.
          type: string
        Country:
          description: Abbreviation of the country name where the location is situated.
          type: string
        CountryId:
          description: Numeric identifier of the country of the location.
          format: int32
          type: integer
        ClosedDate:
          description: Last day when the location is open for business.
          format: date-time
          type: string
        OpenDate:
          description: First day when the location is open for business.
          format: date-time
          type: string
        Status:
          description: "Status of the location. Possible values: *open*, *closed*."
          type: string
        Email:
          description: Email the location can be contacted at.
          type: string
        FaxNumber:
          description: Fax number the location can be contacted at.
          type: string
        Phone:
          description: Contact phone number of the location.
          type: string
        Contact:
          description: Name of the main person to contact at the location.
          type: string
        HasInventory:
          default: false
          description: "Indicates whether it’s an inventory location or not. Possible\
            \ values: *true*, *false*."
          type: boolean
        SquareValue:
          description: Square value of the facility.
          format: double
          type: number
        SquareMeasure:
          description: Unit or system of units for measuring location area.
          type: string
        TimeZoneInfoId:
          description: Numeric identifier of the location time zone.
          format: int32
          type: integer
        TimeZoneShortDescription:
          description: Location time zone abbreviation.
          type: string
        TimeZoneMsName:
          description: Location time zone Microsoft Name. e.g "Eastern Standard Time"
          type: string
        TimeZoneIanaName:
          description: Location time zone Iana Name. e.g. "America/New_York"
          type: string
        TypeLabel:
          description: "[Inventory location type](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1209106525/Creating+Inventory+Locations?preview=%2F1209106525%2F1205830388%2FSupply-House-Type.png).\
            \ Possible values: *Location*, *Warehouse*, *Supply House*, *Truck*."
          type: string
        Supplier:
          description: Supplier’s location name.
          type: string
        CountyId:
          description: County numeric identifier.
          format: int32
          type: integer
        Notes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.LocationNote'
          type: array
        TimeShiftToEST:
          format: int32
          type: integer
        AddressTypeId:
          description: Address format pattern Id
          format: int32
          type: integer
        FormattedAddress:
          type: string
        LocationFormattedAddressTail:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkorderStatusDescriptor:
      example:
        Primary: Primary
        Extended: Extended
        CanCreateInvoice: false
      properties:
        Primary:
          description: "Primary work order status value, you can pass status id or\
            \ its name here. To get all subscriber's statuses see [Statuses] in Statuses\
            \ section"
          type: string
        Extended:
          description: Extended status value
          type: string
        CanCreateInvoice:
          default: false
          description: True if invoice creation is allowed
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.IssueLists.IssueTicketInformation:
      example:
        AreaName: AreaName
        SetupId: 5
        Equipment: Equipment
        AreaId: 5
        ProblemGroup: ProblemGroup
        ProblemCode: ProblemCode
        Id: 1
        TicketType: TicketType
      properties:
        Id:
          format: int32
          type: integer
        AreaId:
          format: int32
          type: integer
        AreaName:
          type: string
        ProblemGroup:
          type: string
        Equipment:
          type: string
        ProblemCode:
          type: string
        TicketType:
          type: string
        SetupId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Currencies.Currency:
      example:
        DecimalCount: 1
        Entity: Entity
        AlphabeticalCode: AlphabeticalCode
        NumericCode: NumericCode
        Rate: 4.965218492984954
        Id: 7
        CurrencyName: CurrencyName
      properties:
        Id:
          format: int32
          type: integer
        AlphabeticalCode:
          type: string
        DecimalCount:
          format: int32
          type: integer
        Entity:
          type: string
        CurrencyName:
          type: string
        NumericCode:
          type: string
        Rate:
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.Invoices.Invoice:
      example:
        StatusChangeUser: StatusChangeUser
        WoTrackingNumber: 6
        NonTaxableOther: 9
        WoAssignedTo: WoAssignedTo
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        Materials:
        - MarkUpPercent: 6.073898085781152
          Description: Description
          PartNum: PartNum
          Amount: 0.43431398824148815
          IsRateDiscrepancy: false
          Quantity: 3.901545264248647
          IsPartPriceDiscrepancy: false
          AgreedPartPrice: 4.459605034958679
          PriceDiscrepancyReason: PriceDiscrepancyReason
          InvoiceId: 5
          UnitPrice: 4.86315908102884
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          PartName: PartName
          UnitType: UnitType
          MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
          isNontaxableVATEU: false
          Id: 7
          AgreedMarkUpPercent: 8.251625748923757
          IsMarkUpDiscrepancy: false
        - MarkUpPercent: 6.073898085781152
          Description: Description
          PartNum: PartNum
          Amount: 0.43431398824148815
          IsRateDiscrepancy: false
          Quantity: 3.901545264248647
          IsPartPriceDiscrepancy: false
          AgreedPartPrice: 4.459605034958679
          PriceDiscrepancyReason: PriceDiscrepancyReason
          InvoiceId: 5
          UnitPrice: 4.86315908102884
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          PartName: PartName
          UnitType: UnitType
          MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
          isNontaxableVATEU: false
          Id: 7
          AgreedMarkUpPercent: 8.251625748923757
          IsMarkUpDiscrepancy: false
        PostedTaxRate: 1.4894159
        Payments:
        - PaymentDate: 2000-01-23T04:56:07.000+00:00
          PaidBy: PaidBy
          Id: 1
          PaymentAmount: 6.84685269835264
          PaymentNumber: PaymentNumber
        - PaymentDate: 2000-01-23T04:56:07.000+00:00
          PaidBy: PaidBy
          Id: 1
          PaymentAmount: 6.84685269835264
          PaymentNumber: PaymentNumber
        InvoiceBalance: 4.965218492984954
        TravelTaxIncluded: false
        StarredDate: 2000-01-23T04:56:07.000+00:00
        Trade: Trade
        InvoiceAmountsDetails:
          MaterialAmount: 6.878052220127876
          TravelAmount: 5.944895607614016
          FreightAmount: 6.704019297950036
          OtherDescription: OtherDescription
          LaborAmount: 6.778324963048013
          OtherAmount: 3.353193347011243
        Subscriber:
          Zip: Zip
          DecimalSeparator: DecimalSeparator
          TimeFormat: TimeFormat
          Email: Email
          PrimaryCurrency:
            DecimalCount: 1
            Entity: Entity
            AlphabeticalCode: AlphabeticalCode
            NumericCode: NumericCode
            Rate: 4.965218492984954
            Id: 7
            CurrencyName: CurrencyName
          IsOutsourcedWorkOn: false
          Address2: Address2
          ShortName: ShortName
          Users:
          - UserName: UserName
            Email: Email
            MlpUserInfo:
              Id: 1
              MlpLevel: MlpLevel
              MlpLocations:
              - 6
              - 6
            Access:
              Trades:
              - Trades
              - Trades
              Locations:
              - Locations
              - Locations
              Districts:
              - Districts
              - Districts
              Regions:
              - Regions
              - Regions
            Dashboard:
              Id: 2
              RedirectToDashboard: false
              Name: Name
            MliUserInfo:
              MliLocations:
              - 1
              - 1
              Id: 1
              MliLevel: MliLevel
            Roles:
            - Roles
            - Roles
            Limits:
              NteLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              ProposalLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              InvoiceLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
            SubscriberId: 3
            FullName: FullName
            PsmEmail: PsmEmail
            Permissions:
            - Permissions
            - Permissions
            Id: 9
            Disabled: false
            UserType: Corporate
            FeedRole: FeedRole
          - UserName: UserName
            Email: Email
            MlpUserInfo:
              Id: 1
              MlpLevel: MlpLevel
              MlpLocations:
              - 6
              - 6
            Access:
              Trades:
              - Trades
              - Trades
              Locations:
              - Locations
              - Locations
              Districts:
              - Districts
              - Districts
              Regions:
              - Regions
              - Regions
            Dashboard:
              Id: 2
              RedirectToDashboard: false
              Name: Name
            MliUserInfo:
              MliLocations:
              - 1
              - 1
              Id: 1
              MliLevel: MliLevel
            Roles:
            - Roles
            - Roles
            Limits:
              NteLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              ProposalLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              InvoiceLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
            SubscriberId: 3
            FullName: FullName
            PsmEmail: PsmEmail
            Permissions:
            - Permissions
            - Permissions
            Id: 9
            Disabled: false
            UserType: Corporate
            FeedRole: FeedRole
          Address1: Address1
          City: City
          Name: Name
          State: State
          Phone: Phone
          DateFormat: DateFormat
          Country: Country
          Id: 7
          Fax: Fax
          ContactName: ContactName
        Currency:
          DecimalCount: 1
          Entity: Entity
          AlphabeticalCode: AlphabeticalCode
          NumericCode: NumericCode
          Rate: 4.965218492984954
          Id: 7
          CurrencyName: CurrencyName
        PostedBy: PostedBy
        InvoiceTax: 1.0246457001441578
        FreightApprovalCodeGroups:
        - ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        - ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        WithMismatchedRates: false
        IsStarred: false
        NonTaxableMaterial: 6
        Status: Status
        ApprovalCodes:
        - ParentId: 2
          IsDefault: false
          ApprovalCodeType: Labor
          InternalId: 3
          Id: 7
          InternalParentId: 8
          InvoiceId: 0
          InvoiceChargeId: 3
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        - ParentId: 2
          IsDefault: false
          ApprovalCodeType: Labor
          InternalId: 3
          Id: 7
          InternalParentId: 8
          InvoiceId: 0
          InvoiceChargeId: 3
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        StatusHistoryShort:
        - Status: Status
          CreatedBy: CreatedBy
          CreatedById: 9
          InvId: 5
          ActionDate: ActionDate
        - Status: Status
          CreatedBy: CreatedBy
          CreatedById: 9
          InvId: 5
          ActionDate: ActionDate
        Tax2ApprovalCodeGroups:
        - ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        - ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        BatchNumber: BatchNumber
        ApprovedDate: 2000-01-23T04:56:07.000+00:00
        LaborTaxIncluded: false
        IsDuplicate: false
        Subtotal: 5.025004791520295
        Terms: Terms
        VendorPayeeId: 7
        InvoiceTotal: 1.1730742509559433
        PostedDate: 2000-01-23T04:56:07.000+00:00
        NonTaxableFreight: 8
        Id: 1
        TaxApprovalCodeGroups:
        - ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        - ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        MaterialsTaxIncluded: false
        StoredFeatures:
        - StoredFeatures
        - StoredFeatures
        Description: Description
        IsTransferred: false
        Tax2Details:
          Tax2Amount: 3.0576100241049344
          Tax2Name: Tax2Name
        InvoiceTaxesDetails:
          LaborTaxPercent: 3.0937452626664474
          TravelTaxPercent: 0.8851374739011653
          FreightTaxPercent: 7.058770351582356
          TravelTax: 8.969578798196912
          MaterialTax: 4.652396432933246
          OtherTax: 3.0205796992916243
          MaterialTaxPercent: 7.143538047012306
          OtherTaxPercent: 6.519180951018382
          LaborTax: 0.10263654006109402
          FreightTax: 7.740351818741173
        LastActionDate: 2000-01-23T04:56:07.000+00:00
        NonTaxableLabor: 9
        PaidDate: 2000-01-23T04:56:07.000+00:00
        FreightTaxIncluded: false
        Number: Number
        Labors:
        - SkillLevel: SkillLevel
          Hours: 4.078845849666752
          Amount: 0.2025324113236393
          IsRateDiscrepancy: false
          RateDiscrepancyReason: RateDiscrepancyReason
          CityPerformed: CityPerformed
          InvoiceId: 5
          NumOfTech: NumOfTech
          HourlyRate: 3.2588565619047607
          IsOffShore: false
          AgreedRate: 6.628464275087742
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          LaborType: LaborType
          ServiceType: ServiceType
          isNontaxableVATEU: false
          Id: 7
        - SkillLevel: SkillLevel
          Hours: 4.078845849666752
          Amount: 0.2025324113236393
          IsRateDiscrepancy: false
          RateDiscrepancyReason: RateDiscrepancyReason
          CityPerformed: CityPerformed
          InvoiceId: 5
          NumOfTech: NumOfTech
          HourlyRate: 3.2588565619047607
          IsOffShore: false
          AgreedRate: 6.628464275087742
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          LaborType: LaborType
          ServiceType: ServiceType
          isNontaxableVATEU: false
          Id: 7
        Travels:
        - IsOffShore: false
          UnitPrice: 8.28965939814297
          Description: Description
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          UnitType: UnitType
          Amount: 4.573936264232251
          Quantity: 6.623518433804886
          isNontaxableVATEU: false
          Id: 2
          InvoiceId: 1
        - IsOffShore: false
          UnitPrice: 8.28965939814297
          Description: Description
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          UnitType: UnitType
          Amount: 4.573936264232251
          Quantity: 6.623518433804886
          isNontaxableVATEU: false
          Id: 2
          InvoiceId: 1
        NonTaxableTravel: 9
        InvoiceDate: 2000-01-23T04:56:07.000+00:00
        IsOutsourced: false
        IsChargesApprovalCodesDefault: false
        Others:
        - Description: Description
          Amount: 1.8268702177058116
          Quantity: 9.183123594773994
          InvoiceId: 9
          AgreedUnitPrice: 8.761432466225475
          PriceListOtherChargeId: 0
          Type: Type
          UnitPrice: 3.502657762086401
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          UnitType: UnitType
          IsUnitPriceDiscrepancy: false
          UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
          isNontaxableVATEU: false
          Id: 8
        - Description: Description
          Amount: 1.8268702177058116
          Quantity: 9.183123594773994
          InvoiceId: 9
          AgreedUnitPrice: 8.761432466225475
          PriceListOtherChargeId: 0
          Type: Type
          UnitPrice: 3.502657762086401
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          UnitType: UnitType
          IsUnitPriceDiscrepancy: false
          UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
          isNontaxableVATEU: false
          Id: 8
        StarredBy: StarredBy
        Comments: Comments
        PostedTax2Rate: 6.846853
        EditableAdditionalApprovalCode:
          SetupId: 8
          Options:
          - Value: Value
            Id: 1
          - Value: Value
            Id: 1
          DefaultValue: DefaultValue
          ValueFormat: 3
          Header: Header
          DefaultOptionId: 6
          EditableAtLineItemLevel: 6
          Value: Value
          LocationId: 9
        IsExists: false
        ApprovalCode: ApprovalCode
        Provider:
          Zip: Zip
          MailFrequency: 1
          Email: Email
          ImageFile: ImageFile
          DateCreated: 2000-01-23T04:56:07.000+00:00
          TaxId: TaxId
          Name: Name
          Trade: Trade
          Phone: Phone
          FaxNumber: FaxNumber
          LastTrainingDate: 2000-01-23T04:56:07.000+00:00
          FormId: 5
          SuperUser: SuperUser
          MailInfo: MailInfo
          NightRequest: 5
          ReturnMail: ReturnMail
          MainContact: MainContact
          Address2: Address2
          Address1: Address1
          City: City
          IsInternal: false
          ProcessingEmail: ProcessingEmail
          ShortFormatEmail: ShortFormatEmail
          DoNotDispatch: false
          IsOnOffShoreFeatureEnabled: false
          State: State
          FullName: FullName
          Pager: Pager
          WebSite: WebSite
          Country: Country
          LastUserDate: LastUserDate
          Id: 2
          SuiteFloor: SuiteFloor
          LastTrainingDateStr: LastTrainingDateStr
        OtherTaxIncluded: false
        StatusChangeDate: 2000-01-23T04:56:07.000+00:00
        TransferredDate: 2000-01-23T04:56:07.000+00:00
        StatusChangeUserid: StatusChangeUserid
        Location:
          Zip: Zip
          Radius: 3.5571952270680973
          Email: Email
          TimeZoneInfoId: 6
          TimeZoneIanaName: TimeZoneIanaName
          OpenDate: 2000-01-23T04:56:07.000+00:00
          SquareValue: 6.778324963048013
          StateId: 1
          ShortName: ShortName
          Latitude: 8.762042012749001
          CountyId: 5
          Name: Name
          AddressTypeId: 7
          StoreId: StoreId
          SquareMeasure: SquareMeasure
          TimeZoneShortDescription: TimeZoneShortDescription
          SubscriberId: 6
          Phone: Phone
          FaxNumber: FaxNumber
          SubscriberName: SubscriberName
          Supplier: Supplier
          HasInventory: false
          Distance: 6.438423552598547
          Notes:
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          CountryId: 2
          Status: Status
          Address2: Address2
          TypeLabel: TypeLabel
          FormattedAddress: FormattedAddress
          Address1: Address1
          City: City
          TimeShiftToEST: 3
          Longitude: 9.018348186070783
          Contact: Contact
          LocationFormattedAddressTail: LocationFormattedAddressTail
          LocationTypeId: 6
          State: State
          Region: Region
          Country: Country
          Id: 9
          ClosedDate: 2000-01-23T04:56:07.000+00:00
          District: District
          TimeZoneMsName: TimeZoneMsName
      properties:
        Provider:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.Provider'
        Subscriber:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.Subscriber'
        Location:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.Location'
        Id:
          format: int32
          type: integer
        Number:
          description: Gets or sets invoice number.
          type: string
        BatchNumber:
          description: Gets or sets Batch number.
          type: string
        InvoiceTax:
          format: double
          type: number
        PostedTaxRate:
          format: float
          type: number
        PostedTax2Rate:
          format: float
          type: number
        VendorPayeeId:
          format: int32
          type: integer
        InvoiceTotal:
          description: Gets or sets total with tax amounts.
          format: double
          type: number
        InvoiceBalance:
          format: double
          type: number
        Currency:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Currencies.Currency'
        ApprovedDate:
          format: date-time
          type: string
        ApprovalCode:
          type: string
        EditableAdditionalApprovalCode:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApprovalCodes.EditableAdditionalApprovalCode'
        PostedDate:
          format: date-time
          type: string
        PostedBy:
          type: string
        Subtotal:
          format: double
          type: number
        Status:
          type: string
        Trade:
          type: string
        InvoiceAmountsDetails:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceAmountsDetails'
        InvoiceTaxesDetails:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceTaxesDetails'
        Tax2Details:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.Tax2Details'
        Labors:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceLabor'
          type: array
        Materials:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceMaterial'
          type: array
        Travels:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceTravel'
          type: array
        Others:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceOther'
          type: array
        TaxApprovalCodeGroups:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup'
          type: array
        Tax2ApprovalCodeGroups:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup'
          type: array
        FreightApprovalCodeGroups:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup'
          type: array
        WithMismatchedRates:
          default: false
          type: boolean
        IsOutsourced:
          default: false
          type: boolean
        StarredBy:
          type: string
        IsStarred:
          default: false
          type: boolean
        IsTransferred:
          default: false
          readOnly: true
          type: boolean
        StarredDate:
          format: date-time
          type: string
        Description:
          type: string
        InvoiceDate:
          format: date-time
          type: string
        LaborTaxIncluded:
          default: false
          type: boolean
        TravelTaxIncluded:
          default: false
          type: boolean
        MaterialsTaxIncluded:
          default: false
          type: boolean
        FreightTaxIncluded:
          default: false
          type: boolean
        OtherTaxIncluded:
          default: false
          type: boolean
        NonTaxableLabor:
          format: int32
          type: integer
        NonTaxableTravel:
          format: int32
          type: integer
        NonTaxableMaterial:
          format: int32
          type: integer
        NonTaxableFreight:
          format: int32
          type: integer
        NonTaxableOther:
          format: int32
          type: integer
        IsExists:
          default: false
          readOnly: true
          type: boolean
        StatusChangeDate:
          format: date-time
          type: string
        StatusChangeUser:
          type: string
        StatusChangeUserid:
          type: string
        IsDuplicate:
          default: false
          type: boolean
        WoTrackingNumber:
          description: Gets or sets work order tracking number.
          format: int32
          type: integer
        Terms:
          description: terms
          type: string
        Comments:
          type: string
        PaidDate:
          format: date-time
          type: string
        TransferredDate:
          format: date-time
          type: string
        LastActionDate:
          format: date-time
          type: string
        UpdatedDate:
          description: Updated Date
          format: date-time
          type: string
        StatusHistoryShort:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.StatusHistoryShort'
          type: array
        WoAssignedTo:
          description: Gets or sets WO Assignee
          type: string
        ApprovalCodes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCode'
          type: array
        IsChargesApprovalCodesDefault:
          default: false
          type: boolean
        Payments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentResponse'
          type: array
        StoredFeatures:
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.Attachments.AttachmentsDescriptor:
      example:
        Count:
          Total: 6
          Own: 1
      properties:
        Count:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CountDescriptor'
      type: object
    ServiceChannel.Services.Messaging.Notes.NotesDescriptor:
      example:
        Last:
          CreatedBy: CreatedBy
          Number: 6
          MailedTo: MailedTo
          ActionRequired: false
          DateCreated: 2000-01-23T04:56:07.000+00:00
          Id: 2
          NoteData: NoteData
        Count:
          Total: 6
          Own: 1
      properties:
        Last:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.NoteInfo'
        Count:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CountDescriptor'
      type: object
    ServiceChannel.Services.Messaging.IdentityObject:
      example:
        Id: 5
      properties:
        Id:
          format: int32
          type: integer
      type: object
    ServiceChannel.Api.Model.Workorders.WorkOrderLabel:
      example:
        Label: Label
        Id: 7
      properties:
        Id:
          format: int32
          type: integer
        Label:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.AssigneeUser:
      example:
        UserName: UserName
        UserId: 0
      properties:
        UserId:
          format: int32
          type: integer
        UserName:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.WeatherEvent:
      example:
        Id: 4
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Users.User:
      description: User details object.
      example:
        UserName: UserName
        Email: Email
        MlpUserInfo:
          Id: 1
          MlpLevel: MlpLevel
          MlpLocations:
          - 6
          - 6
        Access:
          Trades:
          - Trades
          - Trades
          Locations:
          - Locations
          - Locations
          Districts:
          - Districts
          - Districts
          Regions:
          - Regions
          - Regions
        Dashboard:
          Id: 2
          RedirectToDashboard: false
          Name: Name
        MliUserInfo:
          MliLocations:
          - 1
          - 1
          Id: 1
          MliLevel: MliLevel
        Roles:
        - Roles
        - Roles
        Limits:
          NteLimit:
            Amount: 4.145608029883936
            CurrencyId: 7
          ProposalLimit:
            Amount: 4.145608029883936
            CurrencyId: 7
          InvoiceLimit:
            Amount: 4.145608029883936
            CurrencyId: 7
        SubscriberId: 3
        FullName: FullName
        PsmEmail: PsmEmail
        Permissions:
        - Permissions
        - Permissions
        Id: 9
        Disabled: false
        UserType: Corporate
        FeedRole: FeedRole
      properties:
        Id:
          description: Unique user identifier.
          format: int32
          type: integer
        SubscriberId:
          description: Unique subscriber ID.
          format: int32
          type: integer
        UserName:
          description: "Username of the user.<br /> • For subscriber users, the username\
            \ appears as **User Id** on the \"General Info\" tab of the user profile\
            \ page.<br /> • For provider users, the username is listed as **UserID**\
            \ under \"Access\" on the \"General\" tab of the user profile page."
          pattern: ^$|(\A\S+).(\S).(\S)\z
          type: string
        FullName:
          description: "Full name of the user.<br /> • For subscriber users, the full\
            \ name appears as **User Name** on the \"General Info\" tab of the user\
            \ profile page.<br /> • For provider users, you can see their first and\
            \ last name under \"Basic\" on the \"General\" tab of the user profile\
            \ page."
          type: string
        Email:
          description: User’s email address.
          type: string
        PsmEmail:
          description: Email address through which a user can reset their password.
          type: string
        Disabled:
          default: false
          description: Defines if a user is deactivated.
          type: boolean
        Roles:
          description: Secondary roles assigned to a subscriber user that determine
            their permissions and level of access to various Service Automation modules.
          items:
            type: string
          type: array
        Permissions:
          description: Permissions assigned to a subscriber user that determine whether
            they have full or read-only access to various Service Automation modules.
          items:
            type: string
          type: array
        UserType:
          description: Subscriber user type defining their level of access to ServiceChannel:<br
            /> • `Corporate` — a user can work in Service Automation.<br /> • `Dashboard`
            — a user can only access the dashboard assigned to them.<br />`0` is returned
            for provider users.
          enum:
          - Corporate
          - Dashboard
          - ServiceChannel
          type: string
        Dashboard:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.DashboardInfo'
        Access:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.AccessOptions'
        Limits:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.LimitOptions'
        FeedRole:
          type: string
        MliUserInfo:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.MliUserInfo'
        MlpUserInfo:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.MlpUserInfo'
      type: object
    ServiceChannel.Services.Messaging.LocationNote.LocationNote:
      description: Object with the location note details.
      example:
        Header: Header
        HeaderId: 3
        Value: Value
        Id: 6
      properties:
        Id:
          description: Location note numeric identifier.
          format: int32
          type: integer
        HeaderId:
          description: Unique location note header identifier.
          format: int32
          type: integer
        Value:
          description: Location note content.
          type: string
        Header:
          description: Name of the note.
          type: string
      type: object
    ServiceChannel.Services.Messaging.ApprovalCodes.EditableAdditionalApprovalCode:
      example:
        SetupId: 8
        Options:
        - Value: Value
          Id: 1
        - Value: Value
          Id: 1
        DefaultValue: DefaultValue
        ValueFormat: 3
        Header: Header
        DefaultOptionId: 6
        EditableAtLineItemLevel: 6
        Value: Value
        LocationId: 9
      properties:
        Header:
          type: string
        Value:
          type: string
        SetupId:
          format: int32
          type: integer
        LocationId:
          format: int32
          type: integer
        DefaultOptionId:
          format: int32
          type: integer
        ValueFormat:
          format: int32
          type: integer
        EditableAtLineItemLevel:
          format: int32
          type: integer
        Options:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApprovalCodes.AdditionalApprovalCodeOption'
          type: array
        DefaultValue:
          readOnly: true
          type: string
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceAmountsDetails:
      description: Object containing the list of the invoice charges.
      example:
        MaterialAmount: 6.878052220127876
        TravelAmount: 5.944895607614016
        FreightAmount: 6.704019297950036
        OtherDescription: OtherDescription
        LaborAmount: 6.778324963048013
        OtherAmount: 3.353193347011243
      properties:
        LaborAmount:
          description: Amount of the labor charge. Must equal `Labors.Amount`.
          format: double
          type: number
        MaterialAmount:
          description: Amount of the material charge. Must equal `Materials.Amount`.
          format: double
          type: number
        TravelAmount:
          description: Amount of the trip charge.
          format: double
          type: number
        FreightAmount:
          description: Amount of the freight charge.
          format: double
          type: number
        OtherAmount:
          description: "Amount of other charges. When you add this parameter, also\
            \ specify `InvoiceAmountsDetails.OtherDescription`."
          format: double
          type: number
        OtherDescription:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceTaxesDetails:
      description: Object containing the list of taxes. You can add taxes as a fixed
        amount or as a percentage.
      example:
        LaborTaxPercent: 3.0937452626664474
        TravelTaxPercent: 0.8851374739011653
        FreightTaxPercent: 7.058770351582356
        TravelTax: 8.969578798196912
        MaterialTax: 4.652396432933246
        OtherTax: 3.0205796992916243
        MaterialTaxPercent: 7.143538047012306
        OtherTaxPercent: 6.519180951018382
        LaborTax: 0.10263654006109402
        FreightTax: 7.740351818741173
      properties:
        LaborTaxPercent:
          description: Amount of the labor tax in percentage (for countries other
            than USA and Canada).
          format: double
          type: number
        MaterialTaxPercent:
          description: Amount of the material tax in percentage (for countries other
            than USA and Canada).
          format: double
          type: number
        TravelTaxPercent:
          description: Amount of the travel tax in percentage (for countries other
            than USA and Canada).
          format: double
          type: number
        FreightTaxPercent:
          description: Amount of the freight tax in percentage (for countries other
            than USA and Canada).
          format: double
          type: number
        OtherTaxPercent:
          description: Amount of other taxes in percentage (for countries other than
            USA and Canada).
          format: double
          type: number
        LaborTax:
          description: Amount of the labor tax.
          format: double
          type: number
        MaterialTax:
          description: Amount of the material tax.
          format: double
          type: number
        TravelTax:
          description: Amount of the travel tax.
          format: double
          type: number
        FreightTax:
          description: Amount of the freight tax.
          format: double
          type: number
        OtherTax:
          description: Amount of other taxes.
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.Invoices.Tax2Details:
      description: Information on the additional tax. Only Canadian or European locations
        can have Tax2Details.
      example:
        Tax2Amount: 3.0576100241049344
        Tax2Name: Tax2Name
      properties:
        Tax2Amount:
          description: Amount of the additional tax.
          format: double
          type: number
        Tax2Name:
          description: "Name of the additional tax, for example, *VAT*, *HST*, *PST*,\
            \ or *QST*."
          type: string
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceLabor:
      description: "Information on labor. Add a separate object for each worker. When\
        \ two or more workers have the same `SkillLevel`,`LaborType`, and `HourlyRate`,\
        \ use one object and specify `NumOfTech`."
      example:
        SkillLevel: SkillLevel
        Hours: 4.078845849666752
        Amount: 0.2025324113236393
        IsRateDiscrepancy: false
        RateDiscrepancyReason: RateDiscrepancyReason
        CityPerformed: CityPerformed
        InvoiceId: 5
        NumOfTech: NumOfTech
        HourlyRate: 3.2588565619047607
        IsOffShore: false
        AgreedRate: 6.628464275087742
        ApprovalCodeGroup:
          ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        LaborType: LaborType
        ServiceType: ServiceType
        isNontaxableVATEU: false
        Id: 7
      properties:
        Id:
          format: int32
          type: integer
        InvoiceId:
          description: Invoice identifier.
          format: int32
          type: integer
        SkillLevel:
          description: "The skill level of a worker. Valid values: `1` - Supervisor,\
            \ `2` - Technician, `3` - Helper."
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        LaborType:
          description: "The type of the pay rate. Valid values: `1` - Regular, `2`\
            \ - Overtime, `3` - Double time."
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        NumOfTech:
          description: Number of workers.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        HourlyRate:
          description: Worker hourly rate.
          format: double
          type: number
        Hours:
          description: Total hours the worker spent to complete the work order.
          format: double
          type: number
        Amount:
          description: The amount of the labor charge. The sum of all `Amount` parameters
            in the `Labors` array must equal `InvoiceAmountsDetails.LaborAmount`.
          format: double
          type: number
        IsOffShore:
          default: false
          description: "Type of the shore (`1` - Onshore, `2` - Offshore)."
          type: boolean
        ServiceType:
          description: "Type of the service (`1` - Design Engineering, Architecture,\
            \ Technical Service, `2` - Installation and Supervision, `3` - Survey\
            \ and Troubleshooting)."
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        CityPerformed:
          description: City where services are performed.
          type: string
        RateDiscrepancyReason:
          description: Rate discrepancy reason.
          type: string
        AgreedRate:
          description: Agreed rate.
          format: double
          type: number
        ApprovalCodeGroup:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup'
        IsRateDiscrepancy:
          default: false
          readOnly: true
          type: boolean
        isNontaxableVATEU:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceMaterial:
      description: Information on the materials used. Add a separate object for each
        material.
      example:
        MarkUpPercent: 6.073898085781152
        Description: Description
        PartNum: PartNum
        Amount: 0.43431398824148815
        IsRateDiscrepancy: false
        Quantity: 3.901545264248647
        IsPartPriceDiscrepancy: false
        AgreedPartPrice: 4.459605034958679
        PriceDiscrepancyReason: PriceDiscrepancyReason
        InvoiceId: 5
        UnitPrice: 4.86315908102884
        ApprovalCodeGroup:
          ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        PartName: PartName
        UnitType: UnitType
        MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
        isNontaxableVATEU: false
        Id: 7
        AgreedMarkUpPercent: 8.251625748923757
        IsMarkUpDiscrepancy: false
      properties:
        Id:
          format: int32
          type: integer
        InvoiceId:
          description: Invoice identifier.
          format: int32
          type: integer
        Description:
          description: Name or description of the material. Length limit is 100 symbols.
          type: string
        PartNum:
          description: "Part, serial, or manufacturer number of the material. Length\
            \ limit is 100 symbols."
          type: string
        UnitType:
          description: "Unit of measurement. Valid values: 1 — Each; 2 — Box; 3 —\
            \ Feet; 4 — Sqft; 5 — Lbs; 6 — Gal; 7 — Oz. Default value: 1."
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        UnitPrice:
          description: Price per unit.
          format: double
          type: number
        PartName:
          description: Part name.
          type: string
        MarkUpPercent:
          description: Markup percent.
          format: double
          type: number
        AgreedMarkUpPercent:
          description: Agreed markup percent.
          format: double
          type: number
        MarkUpDiscrepancyReason:
          description: Mark up discrepancy reason.
          type: string
        AgreedPartPrice:
          description: Agreed part price.
          format: double
          type: number
        Quantity:
          description: Quantity of the material.
          format: double
          type: number
        Amount:
          description: The amount of the material cost. The sum of all `Amount` parameters
            in the `Materials` array must equal `InvoiceAmountsDetails.MaterialAmount`.
          format: double
          type: number
        ApprovalCodeGroup:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup'
        IsMarkUpDiscrepancy:
          default: false
          description: Markup discrepancy.
          type: boolean
        IsPartPriceDiscrepancy:
          default: false
          description: Part price discrepancy.
          type: boolean
        PriceDiscrepancyReason:
          description: Price discrepancy reason.
          type: string
        IsRateDiscrepancy:
          default: false
          readOnly: true
          type: boolean
        isNontaxableVATEU:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceTravel:
      description: Information on the trip.
      example:
        IsOffShore: false
        UnitPrice: 8.28965939814297
        Description: Description
        ApprovalCodeGroup:
          ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        UnitType: UnitType
        Amount: 4.573936264232251
        Quantity: 6.623518433804886
        isNontaxableVATEU: false
        Id: 2
        InvoiceId: 1
      properties:
        Id:
          format: int32
          type: integer
        InvoiceId:
          description: Invoice identifier.
          format: int32
          type: integer
        Description:
          description: Description of the trip.
          type: string
        UnitType:
          description: Unit of measurement.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        UnitPrice:
          description: Price per unit.
          format: double
          type: number
        Quantity:
          description: Quantity.
          format: double
          type: number
        Amount:
          description: The amount of the trip cost. The sum of all `Amount` parameters
            in the `Travels` array must equal `InvoiceAmountsDetails.TravelAmount`.
          format: double
          type: number
        IsOffShore:
          default: false
          description: "Type of the shore (`1` - Onshore, `2` - Offshore)."
          type: boolean
        ApprovalCodeGroup:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup'
        isNontaxableVATEU:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceOther:
      description: The invoices material
      example:
        Description: Description
        Amount: 1.8268702177058116
        Quantity: 9.183123594773994
        InvoiceId: 9
        AgreedUnitPrice: 8.761432466225475
        PriceListOtherChargeId: 0
        Type: Type
        UnitPrice: 3.502657762086401
        ApprovalCodeGroup:
          ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        UnitType: UnitType
        IsUnitPriceDiscrepancy: false
        UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
        isNontaxableVATEU: false
        Id: 8
      properties:
        Id:
          format: int32
          type: integer
        InvoiceId:
          description: Invoice identifier.
          format: int32
          type: integer
        Description:
          description: Get or set description.
          type: string
        Type:
          description: Get or set type of charge.
          type: string
        Amount:
          description: Get or set the amount of money that is charged.
          format: double
          type: number
        UnitType:
          description: Get or set the unit of measure
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        UnitPrice:
          description: Get or set the price of unit
          format: double
          type: number
        Quantity:
          description: Get or set the quantity
          format: double
          type: number
        AgreedUnitPrice:
          description: Get or set the AgreedUnitPrice
          format: double
          type: number
        UnitPriceDiscrepancyReason:
          description: UnitPriceDiscrepancyReason
          type: string
        PriceListOtherChargeId:
          description: Get or set the PriceListOtherChargeId
          format: int32
          type: integer
        IsUnitPriceDiscrepancy:
          default: false
          description: Get IsUnitPriceDiscrepancy
          readOnly: true
          type: boolean
        ApprovalCodeGroup:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup'
        isNontaxableVATEU:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup:
      example:
        ApprovalCodeType: Labor
        ApprovalCodes:
        - ParentId: 0
          IsDefault: false
          ApprovalCodeType: Labor
          InternalId: 9
          Amount: 1.041444916118296
          Id: 4
          InternalParentId: 0
          InvoiceId: 7
          InvoiceChargeId: 9
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        - ParentId: 0
          IsDefault: false
          ApprovalCodeType: Labor
          InternalId: 9
          Amount: 1.041444916118296
          Id: 4
          InternalParentId: 0
          InvoiceId: 7
          InvoiceChargeId: 9
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        Amount: 4.258773108174356
        ApprovalCode: ApprovalCode
        AdditionalApprovalCode: AdditionalApprovalCode
      properties:
        ApprovalCodeType:
          enum:
          - Labor
          - Travel
          - Material
          - Freight
          - Other
          - Tax
          - Tax2
          - LineItem
          - FreightGenerated
          type: string
        ApprovalCode:
          type: string
        AdditionalApprovalCode:
          type: string
        Amount:
          format: double
          type: number
        ApprovalCodes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeChild'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Invoices.StatusHistoryShort:
      example:
        Status: Status
        CreatedBy: CreatedBy
        CreatedById: 9
        InvId: 5
        ActionDate: ActionDate
      properties:
        CreatedBy:
          type: string
        CreatedById:
          format: int32
          type: integer
        Status:
          type: string
        InvId:
          format: int32
          type: integer
        ActionDate:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCode:
      example:
        ParentId: 2
        IsDefault: false
        ApprovalCodeType: Labor
        InternalId: 3
        Id: 7
        InternalParentId: 8
        InvoiceId: 0
        InvoiceChargeId: 3
        ApprovalCode: ApprovalCode
        AdditionalApprovalCode: AdditionalApprovalCode
      properties:
        Id:
          format: int32
          type: integer
        InvoiceId:
          format: int32
          type: integer
        InvoiceChargeId:
          format: int32
          type: integer
        ApprovalCodeType:
          enum:
          - Labor
          - Travel
          - Material
          - Freight
          - Other
          - Tax
          - Tax2
          - LineItem
          - FreightGenerated
          type: string
        ApprovalCode:
          type: string
        AdditionalApprovalCode:
          type: string
        ParentId:
          format: int32
          type: integer
        InternalId:
          format: int32
          type: integer
        InternalParentId:
          format: int32
          type: integer
        IsDefault:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoicePaymentResponse:
      description: Object containing the invoice payment details.
      example:
        PaymentDate: 2000-01-23T04:56:07.000+00:00
        PaidBy: PaidBy
        Id: 1
        PaymentAmount: 6.84685269835264
        PaymentNumber: PaymentNumber
      properties:
        Id:
          description: Numeric identifier of the payment.
          format: int32
          type: integer
        PaymentDate:
          description: Date and time when the specified invoice was paid.
          format: date-time
          type: string
        PaidBy:
          description: Username of the employee who made the payment.
          type: string
        PaymentNumber:
          description: Order number of payment.
          type: string
        PaymentAmount:
          description: Amount paid for the invoice. The value is negative if it’s
            a credited invoice.
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.CountDescriptor:
      example:
        Total: 6
        Own: 1
      properties:
        Total:
          format: int32
          type: integer
        Own:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Notes.NoteInfo:
      example:
        CreatedBy: CreatedBy
        Number: 6
        MailedTo: MailedTo
        ActionRequired: false
        DateCreated: 2000-01-23T04:56:07.000+00:00
        Id: 2
        NoteData: NoteData
      properties:
        Id:
          format: int32
          type: integer
        Number:
          format: int32
          type: integer
        NoteData:
          type: string
        DateCreated:
          format: date-time
          type: string
        ActionRequired:
          default: false
          type: boolean
        MailedTo:
          type: string
        CreatedBy:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Users.DashboardInfo:
      description: Dashboard details object.
      example:
        Id: 2
        RedirectToDashboard: false
        Name: Name
      properties:
        Id:
          description: Unique dashboard identifier.
          format: int32
          type: integer
        Name:
          description: Dashboard name.
          type: string
        RedirectToDashboard:
          default: false
          description: Defines whether a subscriber user is redirected to a dashboard
            once they log in.
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Users.AccessOptions:
      description: "Object listing locations, districts, regions, and trades a subscriber\
        \ user has access to. Learn more about [granting access based on locations,\
        \ districts, and regions](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/585107276/Location+District+Region+Access+Tab)\
        \ in ServiceChannel University."
      example:
        Trades:
        - Trades
        - Trades
        Locations:
        - Locations
        - Locations
        Districts:
        - Districts
        - Districts
        Regions:
        - Regions
        - Regions
      properties:
        Locations:
          description: Locations a user has access to.
          items:
            type: string
          type: array
        Districts:
          description: Districts a user has access to.
          items:
            type: string
          type: array
        Regions:
          description: Regions a user has access to.
          items:
            type: string
          type: array
        Trades:
          description: Trades a user is permitted to work with.
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.Users.LimitOptions:
      description: "Object for NTE, proposal, and invoice limits set for a subscriber\
        \ user."
      example:
        NteLimit:
          Amount: 4.145608029883936
          CurrencyId: 7
        ProposalLimit:
          Amount: 4.145608029883936
          CurrencyId: 7
        InvoiceLimit:
          Amount: 4.145608029883936
          CurrencyId: 7
      properties:
        NteLimit:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.Limit'
        ProposalLimit:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.Limit'
        InvoiceLimit:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.Limit'
      type: object
    ServiceChannel.Services.Messaging.Users.MliUserInfo:
      example:
        MliLocations:
        - 1
        - 1
        Id: 1
        MliLevel: MliLevel
      properties:
        Id:
          format: int32
          type: integer
        MliLevel:
          type: string
        MliLocations:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Users.MlpUserInfo:
      example:
        Id: 1
        MlpLevel: MlpLevel
        MlpLocations:
        - 6
        - 6
      properties:
        Id:
          format: int32
          type: integer
        MlpLevel:
          type: string
        MlpLocations:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.ApprovalCodes.AdditionalApprovalCodeOption:
      example:
        Value: Value
        Id: 1
      properties:
        Id:
          format: int32
          type: integer
        Value:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeChild:
      example:
        ParentId: 0
        IsDefault: false
        ApprovalCodeType: Labor
        InternalId: 9
        Amount: 1.041444916118296
        Id: 4
        InternalParentId: 0
        InvoiceId: 7
        InvoiceChargeId: 9
        ApprovalCode: ApprovalCode
        AdditionalApprovalCode: AdditionalApprovalCode
      properties:
        Amount:
          format: double
          type: number
        Id:
          format: int32
          type: integer
        InvoiceId:
          format: int32
          type: integer
        InvoiceChargeId:
          format: int32
          type: integer
        ApprovalCodeType:
          enum:
          - Labor
          - Travel
          - Material
          - Freight
          - Other
          - Tax
          - Tax2
          - LineItem
          - FreightGenerated
          type: string
        ApprovalCode:
          type: string
        AdditionalApprovalCode:
          type: string
        ParentId:
          format: int32
          type: integer
        InternalId:
          format: int32
          type: integer
        InternalParentId:
          format: int32
          type: integer
        IsDefault:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Users.Limit:
      description: Object for limit details set for a subscriber user.
      example:
        Amount: 4.145608029883936
        CurrencyId: 7
      properties:
        Amount:
          description: Limit amount.
          format: double
          type: number
        CurrencyId:
          description: Identifier of the currency the limit is set in.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Assets.AddAssetRequest:
      properties:
        Tag:
          description: "Required, Should be unique for subscriber"
          type: string
        ParentAssetTagId:
          type: string
        Manufacturer:
          description: "Required, Must be existing manufacturer name"
          type: string
        ModelNo:
          description: Model Number of asset
          type: string
        SerialNo:
          description: Serial Number of asset
          type: string
        LocationId:
          description: "ID of location, Ignored. Use StoreId to setup Location"
          format: int32
          type: integer
        Area:
          type: string
        WorkOrderArea:
          type: string
        StoreId:
          description: "Required, Should be unique for subscriber"
          type: string
        Trade:
          description: "Trade of asset. Examples: HVAC, DOORS, ELECTRICAL"
          type: string
        TradeId:
          format: int32
          type: integer
        Type:
          description: "Required, Type of asset. Examples: Refrigerator, Computer\
            \ Monitor and etc"
          type: string
        AssetTypeId:
          format: int32
          type: integer
        BrandId:
          format: int32
          type: integer
        Active:
          default: false
          type: boolean
        InstallDate:
          description: If not specified the current date is taken
          type: string
        PurchaseDate:
          description: If not specified the current date is taken
          type: string
        ManufacturedDate:
          description: If not specified the current date is taken
          type: string
        Warranty:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.WarrantyInfo'
        UsesRefrigerant:
          description: Refrigerant Usage options
          format: int32
          type: integer
        IsLeased:
          default: false
          description: Is Leased
          type: boolean
        LifeExpectancy:
          description: Life Expectancy
          format: int32
          type: integer
        OriginalValue:
          description: Original Value
          format: double
          type: number
        LeaseDate:
          description: Lease Date
          type: string
        LeasePeriod:
          description: Lease Period
          format: int32
          type: integer
        Condition:
          format: int32
          type: integer
        EnergyEfficiency:
          type: string
        Capacity:
          type: string
        HasLeakDetector:
          default: false
          description: Has Leak Detector
          type: boolean
        ParentId:
          description: Parent Id
          format: int32
          type: integer
        Description:
          type: string
        HasComponents:
          default: false
          type: boolean
        HasCircuits:
          default: false
          type: boolean
        ClearAssetTag:
          default: false
          type: boolean
        AssetTag:
          type: string
        IsInspection:
          default: false
          type: boolean
        ProcessDuplicatedAssetTag:
          default: false
          type: boolean
        IsCarbReporting:
          default: false
          type: boolean
        ApplyCustom:
          default: false
          type: boolean
        CustomAttributes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.EquipmentAttributeDescription'
          type: array
        AssetUpdatesStatus:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        LocationNoteHeader:
          description: Location Note Header
          type: string
        LocationNoteValue:
          description: Location Note Value
          type: string
        Currency:
          format: int32
          type: integer
      required:
      - Manufacturer
      - StoreId
      - Tag
      - Type
      type: object
    ServiceChannel.Services.Messaging.Assets.WarrantyInfo:
      properties:
        NTE:
          description: Maximum amount of money to be spent on warranty services in
            USD. Value -1  means that the amount is not applicable.
          format: double
          type: number
        Priority:
          description: "Defines how quickly warranty services should be provided,\
            \ for example, *Emergency-4 Hours*, *Normal-48 Hours*, *7 Days*."
          type: string
        Category:
          description: "Warranty category, for example, *ADVISE ONLY*, *REPAIR*, *DISASTER*."
          type: string
        Provider:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.WarrantyProvider'
        Expiration:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.WarrantyExpiration'
      type: object
    ServiceChannel.Services.Messaging.Assets.UpdateAssetRequest:
      properties:
        Id:
          description: The unique Equipment ID in Service Click system
          format: int32
          type: integer
        NeedUpdateParentId:
          default: false
          description: Flag Need Update ParenId
          type: boolean
        ProcessDuplicatedAssetTag:
          default: false
          type: boolean
        Tag:
          description: "Required, Should be unique for subscriber"
          type: string
        ParentAssetTagId:
          type: string
        Manufacturer:
          description: "Required, Must be existing manufacturer name"
          type: string
        ModelNo:
          description: Model Number of asset
          type: string
        SerialNo:
          description: Serial Number of asset
          type: string
        LocationId:
          description: "ID of location, Ignored. Use StoreId to setup Location"
          format: int32
          type: integer
        Area:
          type: string
        WorkOrderArea:
          type: string
        StoreId:
          description: "Required, Should be unique for subscriber"
          type: string
        Trade:
          description: "Trade of asset. Examples: HVAC, DOORS, ELECTRICAL"
          type: string
        TradeId:
          format: int32
          type: integer
        Type:
          description: "Required, Type of asset. Examples: Refrigerator, Computer\
            \ Monitor and etc"
          type: string
        AssetTypeId:
          format: int32
          type: integer
        BrandId:
          format: int32
          type: integer
        Active:
          default: false
          type: boolean
        InstallDate:
          description: If not specified the current date is taken
          type: string
        PurchaseDate:
          description: If not specified the current date is taken
          type: string
        ManufacturedDate:
          description: If not specified the current date is taken
          type: string
        Warranty:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.WarrantyInfo'
        UsesRefrigerant:
          description: Refrigerant Usage options
          format: int32
          type: integer
        IsLeased:
          default: false
          description: Is Leased
          type: boolean
        LifeExpectancy:
          description: Life Expectancy
          format: int32
          type: integer
        OriginalValue:
          description: Original Value
          format: double
          type: number
        LeaseDate:
          description: Lease Date
          type: string
        LeasePeriod:
          description: Lease Period
          format: int32
          type: integer
        Condition:
          format: int32
          type: integer
        EnergyEfficiency:
          type: string
        Capacity:
          type: string
        HasLeakDetector:
          default: false
          description: Has Leak Detector
          type: boolean
        ParentId:
          description: Parent Id
          format: int32
          type: integer
        Description:
          type: string
        HasComponents:
          default: false
          type: boolean
        HasCircuits:
          default: false
          type: boolean
        ClearAssetTag:
          default: false
          type: boolean
        AssetTag:
          type: string
        IsInspection:
          default: false
          type: boolean
        IsCarbReporting:
          default: false
          type: boolean
        ApplyCustom:
          default: false
          type: boolean
        CustomAttributes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.EquipmentAttributeDescription'
          type: array
        AssetUpdatesStatus:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        LocationNoteHeader:
          description: Location Note Header
          type: string
        LocationNoteValue:
          description: Location Note Value
          type: string
        Currency:
          format: int32
          type: integer
      required:
      - Manufacturer
      - StoreId
      - Tag
      - Type
      type: object
    ServiceChannel.Services.Messaging.Assets.AddUpdateAssetRequest:
      properties:
        OriginalTagId:
          description: "Tag Id of an existing asset. If is empty, it means a new Asset\
            \ should be created"
          type: string
        NewTagId:
          description: "In case of asset update it should be a new Tag Id value\r\n\
            \            In case of asset creation it should be Tag ID of created\
            \ asset"
          type: string
        LocationNoteHeaderName:
          type: string
        LocationNoteHeaderValue:
          type: string
        BrandId:
          format: int32
          type: integer
        BrandName:
          type: string
        AssetTypeId:
          format: int32
          type: integer
        ApplyEmptyFields:
          default: false
          type: boolean
        Warranty:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.WarrantyInfo'
        CustomAttributes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Equipments.EquipmentAttributeDescription'
          type: array
        ModelNo:
          type: string
        SerialNo:
          type: string
        Area:
          type: string
        WorkOrderArea:
          type: string
        InstallDateStr:
          type: string
        PurchaseDateStr:
          type: string
        ManufacturedDateStr:
          type: string
        EnergyEfficiency:
          type: string
        Capacity:
          type: string
        Description:
          type: string
        AssetTag:
          type: string
        UsesRefrigerant:
          format: int32
          type: integer
        TradeId:
          format: int32
          type: integer
        LifeExpectancy:
          format: int32
          type: integer
        LeasePeriod:
          format: int32
          type: integer
        Condition:
          format: int32
          type: integer
        ParentId:
          format: int32
          type: integer
        Currency:
          format: int32
          type: integer
        OriginalValue:
          format: double
          type: number
        ClearAssetTag:
          default: false
          type: boolean
        IsInspection:
          default: false
          type: boolean
        ApplyCustom:
          default: false
          type: boolean
        HasLeakDetector:
          default: false
          type: boolean
        Active:
          default: false
          type: boolean
        IsLeased:
          default: false
          type: boolean
        HasComponents:
          default: false
          type: boolean
        HasCircuits:
          default: false
          type: boolean
        IsCarbReporting:
          default: false
          type: boolean
        AssetUpdatesStatus:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        ProcessDuplicatedAssetTag:
          default: false
          type: boolean
      required:
      - AssetTypeId
      - BrandId
      - BrandName
      - LocationNoteHeaderValue
      - NewTagId
      type: object
    ServiceChannel.Services.Messaging.Equipments.ActivateAssetRequest:
      description: A class containing parameters for "ActivateAsset" method of AssetsController
      properties:
        AssetId:
          format: int32
          type: integer
        IsActive:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Assets.AttachAssetRequest:
      properties:
        AssetId:
          description: Unique numeric identifier of the asset you want to attach to
            a work order.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Assets.UpdateAssetsInWORequest:
      properties:
        RecId:
          format: int32
          type: integer
        Assets:
          additionalProperties:
            default: false
            type: boolean
          type: object
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetsWorkRequest:
      properties:
        WorkRequestId:
          format: int32
          type: integer
        Assets:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Assets.RemoveAssetsWorkRequest:
      properties:
        WorkRequestId:
          format: int32
          type: integer
        AssetIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Assets.RemoveAssetsFromWORequest:
      properties:
        RecId:
          format: int32
          type: integer
        AssetIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Api.Model.Equipments.AssetWorkHistory:
      example:
        ProviderId: 6
        WOStatusExtended: WOStatusExtended
        Technician: Technician
        WOStatusPrimary: WOStatusPrimary
        WO: WO
        RecId: 0
        ProblemCode: ProblemCode
        ScheduledDate: 2000-01-23T04:56:07.000+00:00
        Date: 2000-01-23T04:56:07.000+00:00
        CompletedDate: 2000-01-23T04:56:07.000+00:00
      properties:
        Date:
          format: date-time
          type: string
        WO:
          type: string
        WOStatusExtended:
          type: string
        WOStatusPrimary:
          type: string
        ProblemCode:
          type: string
        Technician:
          type: string
        RecId:
          format: int32
          type: integer
        ProviderId:
          format: int32
          type: integer
        ScheduledDate:
          format: date-time
          type: string
        CompletedDate:
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.Manufacturer:
      example:
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.ManufacturersResponce:
      example:
        Manufacturers:
        - Id: 0
          Name: Name
        - Id: 0
          Name: Name
        Count: 0
      properties:
        Count:
          format: int32
          type: integer
        Manufacturers:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.Manufacturer'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetStatusHistoryResponse:
      example:
        ChangedTo: InUse
        ReplacedByEquipment_Id: 1
        ReplacedByEquipmentTag: ReplacedByEquipmentTag
        Description: Description
        UpdatedByApplication: UpdatedByApplication
        CreateUserId: 6
        ChangeDate: 2000-01-23T04:56:07.000+00:00
        ChangedToStr: ChangedToStr
        InitialStatus: InUse
        CreateUserIdStr: CreateUserIdStr
        UpdatedByApplicationStr: UpdatedByApplicationStr
        ChangeDateStr: ChangeDateStr
        AssetId: 0
        InitialStatusStr: InitialStatusStr
      properties:
        AssetId:
          format: int32
          type: integer
        InitialStatus:
          enum:
          - InUse
          - OutForRepair
          - ReplacementRecommended
          - Repaired
          type: string
        InitialStatusStr:
          type: string
        ChangedTo:
          enum:
          - InUse
          - OutForRepair
          - ReplacementRecommended
          - Repaired
          type: string
        ChangedToStr:
          type: string
        Description:
          type: string
        CreateUserId:
          format: int32
          type: integer
        CreateUserIdStr:
          type: string
        ChangeDate:
          format: date-time
          type: string
        ChangeDateStr:
          type: string
        ReplacedByEquipment_Id:
          format: int32
          type: integer
        ReplacedByEquipmentTag:
          type: string
        UpdatedByApplication:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        UpdatedByApplicationStr:
          readOnly: true
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.UpdateAssetRepairStatusRequest:
      properties:
        AssetId:
          format: int32
          type: integer
        Status:
          enum:
          - InUse
          - OutForRepair
          - ReplacementRecommended
          - Repaired
          type: string
        Description:
          type: string
        UpdatedByApplication:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        ReplacedByEquipmentId:
          format: int32
          type: integer
        AssetForReplacement:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetForReplacement'
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetForReplacement:
      properties:
        LocationId:
          format: int32
          type: integer
        TagId:
          type: string
        AssetTag:
          type: string
        BrandId:
          format: int32
          type: integer
        ModelNumber:
          type: string
        SerialNumber:
          type: string
        InstallDate:
          format: date-time
          type: string
        AssetForReplacementRackData:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetForReplacementRackData'
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetForReplacementRackData:
      properties:
        RackId:
          type: string
        RackTypeId:
          format: int32
          type: integer
        PartNumberId:
          format: int32
          type: integer
        RefrigerantPartNumber:
          type: string
        OperationStatusId:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        ProviderName:
          type: string
        EffectiveDate:
          format: date-time
          type: string
        DescriptionId:
          format: int32
          type: integer
        Quantity:
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetTagScanAuditRecord:
      description: Holds information about scanned asset tags.  This class must be
        kept in sync with ContractorTools.BL.Models.AssetTagScanAuditRecord
      example:
        UnableToScanReasonId: 5
        TrackingNumber: 6
        WorkOrderID: WorkOrderID
        AssetValidated: false
        AssetTagStatus: Unknown
        OtherReason: OtherReason
        AssetID: 0
        AssetTagNotScannedReason: AssetTagNotScannedReason
        ManuallyEntered: false
        ValidationRequired: false
        UnableToValidateReasonId: 1
      properties:
        AssetID:
          description: Asset/Equipment ID of asset whose tag was scanned
          format: int32
          type: integer
        TrackingNumber:
          description: Tracking ID associated with work order
          format: int32
          type: integer
        WorkOrderID:
          description: Work order number associated with this asset tag scan
          type: string
        AssetTagStatus:
          description: Asset tag validation status
          enum:
          - Unknown
          - NotAvailable
          - NotValidated
          - PendingValidation
          - Validated
          type: string
        ManuallyEntered:
          default: false
          description: Indicates whether or not asset tag was manually entered instead
            of being scanned
          type: boolean
        AssetTagNotScannedReason:
          description: Reason for asset tag not being scanned
          type: string
        ValidationRequired:
          default: false
          description: Indicates whether or not *this* asset needs its asset tag validated
          type: boolean
        AssetValidated:
          default: false
          description: The current validation status of *this* asset
          type: boolean
        UnableToValidateReasonId:
          description: Reason for asset tag not being validated
          format: int32
          type: integer
        OtherReason:
          description: Custom reason for asset tag not being validated
          type: string
        UnableToScanReasonId:
          description: Reason for asset tag not being scanned
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Administration.AssetRules.AssetTagging:
      example:
        AssetChange: AssetChange
        UpdateAssetStatusByProviderMobile: UpdateAssetStatusByProviderMobile
        SubscriberId: 6
        AllowAssetChangeForMobile: AllowAssetChangeForMobile
        ValidationType: ValidationType
        Id: 0
        PromptAssetAssociation: PromptAssetAssociation
        UpdateAssetByProvider: UpdateAssetByProvider
        CreateAssetOnMobile: CreateAssetOnMobile
        ManageAttachmentsByProvider: ManageAttachmentsByProvider
        ScanMethod: ScanMethod
        UpdateAssetStatusByProviderWeb: UpdateAssetStatusByProviderWeb
      properties:
        Id:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        ScanMethod:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        AssetChange:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        ValidationType:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        AllowAssetChangeForMobile:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        UpdateAssetStatusByProviderWeb:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        UpdateAssetStatusByProviderMobile:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        UpdateAssetByProvider:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        PromptAssetAssociation:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        CreateAssetOnMobile:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        ManageAttachmentsByProvider:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReason:
      example:
        Id: 0
        Reason: Reason
      properties:
        Id:
          format: int32
          type: integer
        Reason:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.UnableToValidateAssetReasonRequest:
      example:
        ReasonText: ReasonText
        RecId: 0
        ReasonId: 6
      properties:
        RecId:
          format: int32
          type: integer
        ReasonId:
          format: int32
          type: integer
        ReasonText:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReason:
      example:
        Active: false
        ReasonCodePurpose: ReasonCodePurpose
        SubscriberId: 6
        Id: 0
        Reason: Reason
      properties:
        Id:
          format: int32
          type: integer
        Reason:
          type: string
        Active:
          default: false
          type: boolean
        SubscriberId:
          format: int32
          type: integer
        ReasonCodePurpose:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.UnableToScanAssetReasonRequest:
      example:
        ReasonText: ReasonText
        RecId: 0
        ReasonId: 6
      properties:
        RecId:
          format: int32
          type: integer
        ReasonId:
          format: int32
          type: integer
        ReasonText:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToAddReason:
      example:
        Id: 0
        Reason: Reason
      properties:
        Id:
          format: int32
          type: integer
        Reason:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.UnableToAddAssetReasonRequest:
      example:
        ReasonText: ReasonText
        RecId: 0
        ReasonId: 6
      properties:
        RecId:
          format: int32
          type: integer
        ReasonId:
          format: int32
          type: integer
        ReasonText:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToScanReasonsNotAttachedAsset:
      example:
        Id: 0
        Reason: Reason
      properties:
        Id:
          format: int32
          type: integer
        Reason:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Administration.AssetRules.UnableToValidateReasonsNotAttachedAsset:
      example:
        Id: 0
        Reason: Reason
      properties:
        Id:
          format: int32
          type: integer
        Reason:
          type: string
      type: object
    ServiceChannel.Services.Core.InternalRequests.Administration.GetAssetTagValidationRequest:
      properties:
        SubscriberIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetValidationHistoryRequestInternal:
      properties:
        AssetId:
          format: int32
          type: integer
        TrackingNumber:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetPrimaryAttachment:
      example:
        FilePath: FilePath
        FileName: FileName
        ThumbnailUri: ThumbnailUri
        ThumbnailPath: ThumbnailPath
        AssetId: 0
        Uri: Uri
      properties:
        AssetId:
          format: int32
          type: integer
        FileName:
          type: string
        FilePath:
          type: string
        ThumbnailPath:
          type: string
        ThumbnailUri:
          type: string
        Uri:
          type: string
      type: object
    ServiceChannel.Services.WebApi.Models.AssetAttachmentsRequest:
      properties:
        AssetIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.AssetTypes.AssetTypeGroup:
      description: Asset type group object.
      example:
        FilePath: FilePath
        ImgPath: ImgPath
        AssetTypeCategoryId: 5
        AssetTypeIds:
        - 1
        - 1
        SubscriberId: 6
        FileName: FileName
        ThumbnailUri: ThumbnailUri
        ThumbnailPath: ThumbnailPath
        Id: 0
        Uri: Uri
        Name: Name
      properties:
        Id:
          description: Unique numeric identifier of the asset type group.
          format: int32
          type: integer
        SubscriberId:
          description: Unique numeric identifier of the subscriber.
          format: int32
          type: integer
        Name:
          description: The name of the asset type group.
          type: string
        FileName:
          description: "The file name of the image attached to the asset type group.\
            \ For example, *audioequipment.png* or *AEE323FF8091.jpeg*."
          type: string
        FilePath:
          description: "Path snippet to the full-size image version attached to the\
            \ asset type group. For example, *#assets/6cb4f87b-3d5f-49ba-9971-11442dcf3d1e*."
          type: string
        ThumbnailPath:
          description: "Path snippet to the reduced-size image version attached to\
            \ the asset type group. For example, *#assets/7bc49564-5ac4-4002-9ffc-2282483e6df8*."
          type: string
        AssetTypeIds:
          description: A list of unique numeric identifiers of the asset types.
          items:
            format: int32
            type: integer
          type: array
        ImgPath:
          description: Path to the cloud location of the full-size image version attached
            to the asset type group.
          readOnly: true
          type: string
        Uri:
          description: The URI of the full-size image version attached to the asset
            type group.
          type: string
        ThumbnailUri:
          description: The URI of the reduced-size image version attached to the asset
            type group.
          type: string
        AssetTypeCategoryId:
          description: Unique numeric identifier of the asset category.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.AssetTypes.GetAssetTypeGroupsRequest:
      properties:
        AssetIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Equipments.SearchAssetsByGroupIDRequest:
      properties:
        SubscriberId:
          format: int32
          type: integer
        LocationId:
          format: int32
          type: integer
        SearchByText:
          type: string
        AssetTypeGroupIds:
          items:
            format: int32
            type: integer
          type: array
        AssetTypes:
          items:
            format: int32
            type: integer
          type: array
        StartIndex:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        UncategorizedOnly:
          default: false
          type: boolean
        IncludeTotalCostOfOwnership:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetsGroupedByCategoriesResponse:
      example:
        GroupName: GroupName
        Assets:
        - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
          ImportedFrom: 3
          ManufacturerDate: 2000-01-23T04:56:07.000+00:00
          AssetLeakDetectorConnectionId: 4
          LeasePeriod: 3
          AssetRefrigerant:
            RackId: RackId
            RefrigerantUsageType: 1
            AssetTypeId: 3
            RefrigerantPartNumber: RefrigerantPartNumber
            RefrigerantPurposeName: RefrigerantPurposeName
            AssetLeakDetectorId: 2
            CurrentChargeMetrics: 6.683562403749608
            ParentId: 1
            EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
            CarbID: CarbID
            RackEntityId: 4
            RackTypeName: RackTypeName
            OperationalStatus: OperationalStatus
            SystemLocation: SystemLocation
            CreateOperationalStatusHistory: false
            IsCarbReporting: false
            RackTypeId: 9
            RefrigerantPurposeId: 6
            HasLeakDetector: false
            ChargeProviderName: ChargeProviderName
            UserId: 6
            TagId: TagId
            OperationStatusDate: 2000-01-23T04:56:07.000+00:00
            CurrentChargeOunces: 8.762042012749001
            CurrentCharge: 9.369310271410669
            ChargeDescriptionId: 9
            Id: 6
            PartNumberId: 5
            AssetId: 7
          LastModifiedUserName: LastModifiedUserName
          BrandId: 5
          AssetValidationStatus: 6
          Trade: Trade
          EnergyEfficiency: EnergyEfficiency
          CustomAttributes:
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          Capacity: Capacity
          SubscriberId: 7
          Currency: 3
          Manufacturer: Manufacturer
          SubName: SubName
          SerialNo: SerialNo
          Warranty:
            ProviderId: 7
            Category: Category
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            Priority: Priority
            Expiration:
              Type: FromPurchaseDate
              Period: 1
            NTE: 1.2315135367772556
            Provider:
              ProviderName: ProviderName
              Type: Fixed
              Value: 1
          UsesRefrigerant: 2
          AssetUpdatesStatus: AssetUpdatesStatus
          LifeExpectancy: 7
          OriginalValue: 9.301444243932576
          AssetAttributesMap:
            EditableForProvidersAttributesMap: 5
            ViewableForProvidersAttributesMap: 6
            RequiredStandardAttributesMap: 6
            StandardAttributesMap: 6
          AssetTag: AssetTag
          IsCircuit: false
          Area: Area
          Active: false
          IsCarbReporting: false
          HasLeakDetector: false
          PurchaseDate: PurchaseDate
          HasCircuits: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
          IsLeased: false
          LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
          HasComponents: false
          AdditionalTradesNames: AdditionalTradesNames
          Description: Description
          AssetStatus: AssetStatus
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          HasChilds: false
          RetiredDate: 2000-01-23T04:56:07.000+00:00
          AssetTypeId: 5
          StoreId: StoreId
          ConditionString: ConditionString
          LeaseDate: LeaseDate
          AssetValidated: false
          HasTagged: false
          AssetTypeGroupId: 0
          WorkOrderArea: WorkOrderArea
          Condition: 2
          ParentId: 3
          TradeId: 1
          IsLeakDetector: false
          LocationId: 6
          InstallDate: InstallDate
          ModelNo: ModelNo
          IsReplaceEquipment: false
          Type: Type
          Spend: 7.058770351582356
          Tag: Tag
          ManufacturerDateStr: ManufacturerDateStr
          Location: Location
          ValidationRequired: false
        - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
          ImportedFrom: 3
          ManufacturerDate: 2000-01-23T04:56:07.000+00:00
          AssetLeakDetectorConnectionId: 4
          LeasePeriod: 3
          AssetRefrigerant:
            RackId: RackId
            RefrigerantUsageType: 1
            AssetTypeId: 3
            RefrigerantPartNumber: RefrigerantPartNumber
            RefrigerantPurposeName: RefrigerantPurposeName
            AssetLeakDetectorId: 2
            CurrentChargeMetrics: 6.683562403749608
            ParentId: 1
            EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
            CarbID: CarbID
            RackEntityId: 4
            RackTypeName: RackTypeName
            OperationalStatus: OperationalStatus
            SystemLocation: SystemLocation
            CreateOperationalStatusHistory: false
            IsCarbReporting: false
            RackTypeId: 9
            RefrigerantPurposeId: 6
            HasLeakDetector: false
            ChargeProviderName: ChargeProviderName
            UserId: 6
            TagId: TagId
            OperationStatusDate: 2000-01-23T04:56:07.000+00:00
            CurrentChargeOunces: 8.762042012749001
            CurrentCharge: 9.369310271410669
            ChargeDescriptionId: 9
            Id: 6
            PartNumberId: 5
            AssetId: 7
          LastModifiedUserName: LastModifiedUserName
          BrandId: 5
          AssetValidationStatus: 6
          Trade: Trade
          EnergyEfficiency: EnergyEfficiency
          CustomAttributes:
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          - ValueText: ValueText
            Required: false
            ValueType: 8
            EquipmentId: 7
            Value: "{}"
            Visible: false
            EquipmentTypeAttributeId: 4
            SelectedOptionsText: SelectedOptionsText
            Editable: false
            Custom: false
            EquipmentAttributeId: 0
            Name: Name
          Capacity: Capacity
          SubscriberId: 7
          Currency: 3
          Manufacturer: Manufacturer
          SubName: SubName
          SerialNo: SerialNo
          Warranty:
            ProviderId: 7
            Category: Category
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            Priority: Priority
            Expiration:
              Type: FromPurchaseDate
              Period: 1
            NTE: 1.2315135367772556
            Provider:
              ProviderName: ProviderName
              Type: Fixed
              Value: 1
          UsesRefrigerant: 2
          AssetUpdatesStatus: AssetUpdatesStatus
          LifeExpectancy: 7
          OriginalValue: 9.301444243932576
          AssetAttributesMap:
            EditableForProvidersAttributesMap: 5
            ViewableForProvidersAttributesMap: 6
            RequiredStandardAttributesMap: 6
            StandardAttributesMap: 6
          AssetTag: AssetTag
          IsCircuit: false
          Area: Area
          Active: false
          IsCarbReporting: false
          HasLeakDetector: false
          PurchaseDate: PurchaseDate
          HasCircuits: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
          IsLeased: false
          LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
          HasComponents: false
          AdditionalTradesNames: AdditionalTradesNames
          Description: Description
          AssetStatus: AssetStatus
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          HasChilds: false
          RetiredDate: 2000-01-23T04:56:07.000+00:00
          AssetTypeId: 5
          StoreId: StoreId
          ConditionString: ConditionString
          LeaseDate: LeaseDate
          AssetValidated: false
          HasTagged: false
          AssetTypeGroupId: 0
          WorkOrderArea: WorkOrderArea
          Condition: 2
          ParentId: 3
          TradeId: 1
          IsLeakDetector: false
          LocationId: 6
          InstallDate: InstallDate
          ModelNo: ModelNo
          IsReplaceEquipment: false
          Type: Type
          Spend: 7.058770351582356
          Tag: Tag
          ManufacturerDateStr: ManufacturerDateStr
          Location: Location
          ValidationRequired: false
        GroupId: 0
      properties:
        GroupId:
          format: int32
          type: integer
        GroupName:
          type: string
        Assets:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetResponse'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetMeterReadingResponseItem:
      description: Asset type meter object.
      example:
        UpdatedBy: 7
        TrackingNumber: 2
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        UpdatedByUserName: UpdatedByUserName
        Value: 5.637376656633329
        UnitOfMeasureName: UnitOfMeasureName
        AssetTypeMeterId: 1
        Id: 0
        AssetTypeMeterName: AssetTypeMeterName
        UnitOfMeasureId: 5
        AssetMeterId: 6
        Notes: Notes
      properties:
        Id:
          description: Unique asset meter reading identifier.
          format: int32
          type: integer
        AssetMeterId:
          description: Unique numeric asset meter identifier.
          format: int32
          type: integer
        AssetTypeMeterId:
          description: Unique numeric identifier of the asset type meter.
          format: int32
          type: integer
        AssetTypeMeterName:
          description: Name of an asset type meter.
          type: string
        UnitOfMeasureId:
          description: Number of the unit of measure associated with a meter. This
            is a sequence number of the unit of measure as it is listed in the overlay
            for creating a meter.
          format: int32
          type: integer
        UnitOfMeasureName:
          description: Name of a unit of measure.
          type: string
        Value:
          description: Value that a user enters when recording a meter reading on
            an asset.
          format: double
          type: number
        TrackingNumber:
          description: Tracking number of a work order an asset is assigned to.
          format: int32
          type: integer
        Notes:
          description: Comment added when creating an asset meter reading.
          type: string
        UpdatedBy:
          description: ID of a user who added an asset meter reading.
          format: int32
          type: integer
        UpdatedByUserName:
          description: Username of an employee who added an asset meter reading.
          type: string
        UpdatedDate:
          description: Date and time when an asset meter reading was added.
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequest:
      description: Object containing the asset meter reading details to add.
      properties:
        AssetMeterId:
          description: Unique numeric asset meter identifier.
          format: int32
          type: integer
        TrackingNumber:
          description: Tracking number of a work order an asset meter reading is assigned
            to.
          format: int32
          type: integer
        Value:
          description: Value that a user enters when recording a meter reading on
            an asset.
          format: double
          type: number
        Notes:
          description: Comment added when creating an asset meter reading.
          type: string
        UpdateDate:
          description: Date and time when an asset meter reading is updated.
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequest:
      description: Object containing the asset meter reading details to update.
      properties:
        AssetMeterReadingId:
          description: Unique asset meter reading identifier.
          format: int32
          type: integer
        Value:
          description: Value that a user enters when recording a meter reading on
            an asset.
          format: double
          type: number
        Notes:
          description: Comment added when creating an asset meter reading.
          type: string
        UpdatedDate:
          description: Date and time when an asset meter reading is updated.
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.AddAssetMeterReadingRequestItem:
      description: Object containing the asset meter reading details to add.
      properties:
        AssetId:
          description: Unique numeric asset identifier.
          format: int32
          type: integer
        AssetMeterId:
          description: Unique numeric asset meter identifier.
          format: int32
          type: integer
        AssetTypeMeterId:
          description: Unique numeric asset type meter identifier.
          format: int32
          type: integer
        Value:
          description: Value that a user enters when recording a meter reading on
            an asset.
          format: double
          type: number
        Notes:
          description: Comment added when creating an asset meter reading.
          type: string
        TrackingNumber:
          description: Tracking number of a work order an asset is assigned to.
          format: int32
          type: integer
        UpdatedDate:
          description: Date and time when an asset meter reading is updated.
          format: date-time
          type: string
      required:
      - AssetId
      - Notes
      - UpdatedDate
      - Value
      type: object
    ServiceChannel.Services.Messaging.Assets.UpdateAssetMeterReadingRequestItem:
      properties:
        Id:
          description: Unique numeric asset type meter identifier.
          format: int32
          type: integer
        AssetId:
          description: Unique numeric asset identifier.
          format: int32
          type: integer
        Value:
          description: Value that a user enters when recording a meter reading on
            an asset.
          format: double
          type: number
        Notes:
          description: Comment added when creating an asset meter reading.
          type: string
        UpdatedDate:
          description: Date and time when an asset meter reading is updated.
          format: date-time
          type: string
      required:
      - AssetId
      - Id
      - Notes
      - UpdatedDate
      - Value
      type: object
    ServiceChannel.Services.Messaging.Assets.AddAssetMeterRequest:
      properties:
        AssetId:
          format: int32
          type: integer
        AssetTypeMeterId:
          format: int32
          type: integer
      required:
      - AssetId
      - AssetTypeMeterId
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetMeter:
      description: Asset meter object.
      example:
        MeterTypeName: MeterTypeName
        AssetTypeMeterId: 6
        Id: 0
        AssetId: 1
      properties:
        Id:
          description: Unique numeric identifier of an asset meter.
          format: int32
          type: integer
        AssetTypeMeterId:
          description: Unique numeric identifier of the asset type meter.
          format: int32
          type: integer
        AssetId:
          description: Unique numeric asset identifier.
          format: int32
          type: integer
        MeterTypeName:
          description: Name of an asset type meter.
          type: string
      type: object
    System.Collections.Generic.KeyValuePair[System.Int32,System.String]:
      example:
        Value: Value
        Key: 0
      properties:
        Key:
          format: int32
          readOnly: true
          type: integer
        Value:
          readOnly: true
          type: string
      type: object
    ServiceChannel.Services.Messaging.GetByIdsRequest:
      properties:
        Ids:
          description: A list of unique numeric identifiers.
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Assets.WorkOrderAssetsCommonValidationResponse:
      example:
        UserRuleValidationType: UserRuleValidationType
        WorkOrderId: 0
        CommonWOValidationStatus: CommonWOValidationStatus
        AssetsValidationStatuses:
        - UnableToValidateReason:
            Id: 5
            Reason: Reason
          ValidationStatus: Unknown
          TrackingNumber: 6
          AssetID: 1
        - UnableToValidateReason:
            Id: 5
            Reason: Reason
          ValidationStatus: Unknown
          TrackingNumber: 6
          AssetID: 1
      properties:
        CommonWOValidationStatus:
          type: string
        UserRuleValidationType:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        WorkOrderId:
          format: int32
          type: integer
        AssetsValidationStatuses:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetValidationStatusResponse'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetValidationStatusResponse:
      example:
        UnableToValidateReason:
          Id: 5
          Reason: Reason
        ValidationStatus: Unknown
        TrackingNumber: 6
        AssetID: 1
      properties:
        TrackingNumber:
          format: int32
          type: integer
        AssetID:
          format: int32
          type: integer
        ValidationStatus:
          enum:
          - Unknown
          - NotAvailable
          - NotValidated
          - PendingValidation
          - Validated
          type: string
        UnableToValidateReason:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.Administration.UnableToValidateReason'
      type: object
    ServiceChannel.Api.Model.Administration.UnableToValidateReason:
      example:
        Id: 5
        Reason: Reason
      properties:
        Id:
          format: int32
          type: integer
        Reason:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.UpdateAssetStatusRequest:
      properties:
        AssetId:
          format: int32
          type: integer
        Status:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Assets.UpdateAssetsStatusesRequest:
      properties:
        AssetIds:
          description: Unique numeric assets identifiers.
          items:
            format: int32
            type: integer
          type: array
        Status:
          description: Asset update status
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.AssetTasks.CreateAssetTaskResponseRequest:
      description: Create Asset Task Response Request
      properties:
        AssetTaskId:
          description: Asset Task Identifier
          format: int32
          type: integer
        AssetId:
          description: Asset Identifier
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetType:
      example:
        ParentId: 5
        PrimaryAssetTypeId: 3
        Parent: null
        IsActive: false
        TradeId: 1
        PrimaryTrade: PrimaryTrade
        BrandIds:
        - 2
        - 2
        Name: Name
        IsCircuit: false
        RefrigerantPurposeId: 5
        RefrigerantPurposeName: RefrigerantPurposeName
        SubscriberId: 6
        UserId: 7
        AdditionalTradesIds:
        - 2
        - 2
        AssetTypeGroupId: 9
        Id: 0
        AdditionalTrades:
        - AdditionalTrades
        - AdditionalTrades
      properties:
        Id:
          format: int32
          type: integer
        IsActive:
          default: false
          type: boolean
        SubscriberId:
          format: int32
          type: integer
        Parent:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetType'
        Name:
          type: string
        PrimaryTrade:
          type: string
        TradeId:
          format: int32
          type: integer
        ParentId:
          format: int32
          type: integer
        RefrigerantPurposeId:
          format: int32
          type: integer
        RefrigerantPurposeName:
          type: string
        AdditionalTrades:
          items:
            type: string
          type: array
        AdditionalTradesIds:
          items:
            format: int32
            type: integer
          type: array
        IsCircuit:
          default: false
          type: boolean
        UserId:
          format: int32
          type: integer
        AssetTypeGroupId:
          format: int32
          type: integer
        PrimaryAssetTypeId:
          format: int32
          type: integer
        BrandIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Assets.AddAssetTypeRequest:
      properties:
        ValidateTradeByName:
          default: false
          type: boolean
        AllowAdditionalTradesOnInheritance:
          default: false
          type: boolean
        Name:
          type: string
        PrimaryTrade:
          type: string
        TradeId:
          format: int32
          type: integer
        ParentId:
          format: int32
          type: integer
        RefrigerantPurposeId:
          format: int32
          type: integer
        RefrigerantPurposeName:
          type: string
        AdditionalTrades:
          items:
            type: string
          type: array
        AdditionalTradesIds:
          items:
            format: int32
            type: integer
          type: array
        IsCircuit:
          default: false
          type: boolean
        UserId:
          format: int32
          type: integer
        AssetTypeGroupId:
          format: int32
          type: integer
        PrimaryAssetTypeId:
          format: int32
          type: integer
        BrandIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Assets.AddAssetTypeResponse:
      description: Add Trade Response
      example:
        Message: Message
        Id: 0
        ErrorCode: 6
      properties:
        Id:
          format: int32
          type: integer
        ErrorCode:
          description: "Numeric identifier that determines the nature of an error.\
            \ Possible values: `0` - success, otherwise - error."
          format: int32
          type: integer
        Message:
          description: Defines that the file’s remote storage is unavailable or its
            URL cannot be found.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetTypeAttributeExternal:
      example:
        SortPosition: 6
        IsCustom: false
        AutoGeneratedValue: AutoGeneratedValue
        SingleOptions:
        - AssetTypeAttributeSelectOptionId: 1
          AssetAttributeSelectOptionId: 5
          AssetTypeAttributeId: 5
          AssetAttributeId: 2
          Text: Text
          Selected: false
        - AssetTypeAttributeSelectOptionId: 1
          AssetAttributeSelectOptionId: 5
          AssetTypeAttributeId: 5
          AssetAttributeId: 2
          Text: Text
          Selected: false
        MultipleOptions:
        - AssetTypeAttributeSelectOptionId: 1
          AssetAttributeSelectOptionId: 5
          AssetTypeAttributeId: 5
          AssetAttributeId: 2
          Text: Text
          Selected: false
        - AssetTypeAttributeSelectOptionId: 1
          AssetAttributeSelectOptionId: 5
          AssetTypeAttributeId: 5
          AssetAttributeId: 2
          Text: Text
          Selected: false
        Name: Name
        DefaultValue: DefaultValue
        Required: false
        AttributeType: String
        Viewable: false
        Hidden: false
        Editable: false
        Id: 0
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        DefaultValue:
          type: string
        Required:
          default: false
          type: boolean
        Viewable:
          default: false
          type: boolean
        Hidden:
          default: false
          type: boolean
        Editable:
          default: false
          type: boolean
        AutoGeneratedValue:
          type: string
        SortPosition:
          format: int32
          type: integer
        IsCustom:
          default: false
          type: boolean
        AttributeType:
          enum:
          - String
          - Integer
          - Date
          - Money
          - Choice
          - MultipleChoice
          - Boolean
          type: string
        SingleOptions:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttributeSelectOption'
          type: array
        MultipleOptions:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetAttributeSelectOption'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetAttributeSelectOption:
      example:
        AssetTypeAttributeSelectOptionId: 1
        AssetAttributeSelectOptionId: 5
        AssetTypeAttributeId: 5
        AssetAttributeId: 2
        Text: Text
        Selected: false
      properties:
        AssetTypeAttributeSelectOptionId:
          format: int32
          type: integer
        AssetTypeAttributeId:
          format: int32
          type: integer
        AssetAttributeSelectOptionId:
          format: int32
          type: integer
        AssetAttributeId:
          format: int32
          type: integer
        Text:
          type: string
        Selected:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Assets.GetSubscriberAssetCategoriesRequest:
      description: Asset categories request object.
      properties:
        SubscriberId:
          description: Unique numeric identifier of the subscriber.
          format: int32
          type: integer
        TradeNames:
          description: "The names of the trades, such as HVAC or PLUMBING."
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetTypeCategory:
      description: Asset category object.
      example:
        Id: 0
        Name: Name
      properties:
        Id:
          description: Unique numeric identifier of the asset category.
          format: int32
          type: integer
        Name:
          description: Asset category name.
          type: string
      type: object
    ServiceChannel.Services.Core.InternalRequests.Assets.GetAssetTypesByLocationRequestInternal:
      properties:
        LocationIds:
          items:
            format: int32
            type: integer
          type: array
        TradeIds:
          items:
            format: int32
            type: integer
          type: array
        IncludeDeactivated:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Assets.AddAssetTypeGroupAttachmentResponse:
      example:
        FilePath: FilePath
        IsSuccess: false
        Message: Message
        FileName: FileName
        ThumbnailUri: ThumbnailUri
        Uri: Uri
        Name: Name
        ImgPath: ImgPath
        AssetTypeCategoryId: 5
        AssetTypeIds:
        - 1
        - 1
        SubscriberId: 6
        ThumbnailPath: ThumbnailPath
        Id: 0
      properties:
        IsSuccess:
          default: false
          type: boolean
        Message:
          type: string
        Id:
          description: Unique numeric identifier of the asset type group.
          format: int32
          type: integer
        SubscriberId:
          description: Unique numeric identifier of the subscriber.
          format: int32
          type: integer
        Name:
          description: The name of the asset type group.
          type: string
        FileName:
          description: "The file name of the image attached to the asset type group.\
            \ For example, *audioequipment.png* or *AEE323FF8091.jpeg*."
          type: string
        FilePath:
          description: "Path snippet to the full-size image version attached to the\
            \ asset type group. For example, *#assets/6cb4f87b-3d5f-49ba-9971-11442dcf3d1e*."
          type: string
        ThumbnailPath:
          description: "Path snippet to the reduced-size image version attached to\
            \ the asset type group. For example, *#assets/7bc49564-5ac4-4002-9ffc-2282483e6df8*."
          type: string
        AssetTypeIds:
          description: A list of unique numeric identifiers of the asset types.
          items:
            format: int32
            type: integer
          type: array
        ImgPath:
          description: Path to the cloud location of the full-size image version attached
            to the asset type group.
          readOnly: true
          type: string
        Uri:
          description: The URI of the full-size image version attached to the asset
            type group.
          type: string
        ThumbnailUri:
          description: The URI of the reduced-size image version attached to the asset
            type group.
          type: string
        AssetTypeCategoryId:
          description: Unique numeric identifier of the asset category.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetTypeMeterResponseItem:
      description: Object with an asset type meter details.
      example:
        EditOnWO: false
        UnitOfMeasure: 1
        Inactive: false
        UnitOfMeasureName: UnitOfMeasureName
        Id: 0
        MaxValue: MaxValue
        Notes: Notes
        AssetTypeId: 6
        Name: Name
      properties:
        Id:
          description: Unique numeric identifier of an asset type meter.
          format: int32
          type: integer
        Name:
          description: Asset type meter name given by a user.
          type: string
        MaxValue:
          description: Maximum value that a user can enter when recording a meter
            reading on an asset.
          type: string
        Notes:
          description: Maximum value that a user can enter when recording a meter
            reading on an asset.
          type: string
        Inactive:
          default: false
          description: "Defines whether a meter is active or has been deactivated.\
            \ **Possible values:** *true*, *false*. Note that readings can be recorded\
            \ for active meters only."
          type: boolean
        EditOnWO:
          default: false
          description: "Defines whether a user can record asset meter readings on\
            \ a work order via Dashboard. **Possible values:** *true*, *false*."
          type: boolean
        AssetTypeId:
          description: Unique numeric identifier of an asset type.
          format: int32
          type: integer
        UnitOfMeasure:
          description: Number of the unit of measure associated with a meter. This
            is a sequence number of the unit of measure as it is listed in the overlay
            for creating a meter.
          format: int32
          type: integer
        UnitOfMeasureName:
          description: Unit Of Measure Name
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetTypeMeterRequestItem:
      description: Object with an asset type meter details.
      properties:
        Id:
          description: Unique numeric identifier of an asset type meter.
          format: int32
          type: integer
        Name:
          description: Asset type meter name given by a user.
          type: string
        MaxValue:
          description: Maximum value that a user can enter when recording a meter
            reading on an asset.
          type: string
        Notes:
          description: Comment added to a meter when creating or editing an asset
            type meter.
          type: string
        Inactive:
          default: false
          description: "Defines whether a meter is active or has been deactivated.\
            \ **Possible values:** *true*, *false*. Note that readings can be recorded\
            \ for active meters only."
          type: boolean
        EditOnWO:
          default: false
          description: "Defines whether a user can record asset meter readings on\
            \ a work order via Dashboard. **Possible values:** *true*, *false*."
          type: boolean
        AssetTypeId:
          description: Unique numeric identifier of an asset type.
          format: int32
          type: integer
        UnitOfMeasure:
          description: Number of the unit of measure associated with a meter. This
            is a sequence number of the unit of measure as it is listed in the overlay
            for creating a meter.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Attachments.AddAttachmentsRequest:
      properties:
        Attachments:
          description: "Required, Attachments"
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.AddAttachmentRequest'
          type: array
      required:
      - Attachments
      type: object
    ServiceChannel.Services.Messaging.Attachments.AddAttachmentRequest:
      properties:
        Name:
          type: string
        Description:
          type: string
        Path:
          type: string
        Type:
          enum:
          - File
          - RemoteStorage
          type: string
        MediaType:
          description: Mime type of the attachment
          type: string
        Visibility:
          description: "Note visibility - valid values: null, 1, 2, 3"
          format: int32
          type: integer
        IsInvoiceDigitalCopy:
          default: false
          description: Mark attachment as Invoice Digital Copy
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Attachments.AddBase64AttachmentsRequest:
      properties:
        poNumber:
          description: Purchase Order. Required.
          type: string
        file:
          description: File as a base64 encoded value.
          type: string
        fileName:
          description: File name with extension. Optional. GUID value by default.
          type: string
        extension:
          description: File extension. Ignored if fileName is passed. Optional.
          type: string
        description:
          description: Description for file. Optional.
          type: string
        actor:
          description: Name of the person on whose behalf you are performing the action.
            Optional.
          type: string
      type: object
    System.Threading.CancellationToken:
      properties:
        IsCancellationRequested:
          default: false
          readOnly: true
          type: boolean
        CanBeCanceled:
          default: false
          readOnly: true
          type: boolean
        WaitHandle:
          $ref: '#/components/schemas/System.Threading.WaitHandle'
      type: object
    System.Threading.WaitHandle:
      properties:
        SafeWaitHandle:
          $ref: '#/components/schemas/Microsoft.Win32.SafeHandles.SafeWaitHandle'
      type: object
    Microsoft.Win32.SafeHandles.SafeWaitHandle:
      properties:
        IsInvalid:
          default: false
          readOnly: true
          type: boolean
        IsClosed:
          default: false
          readOnly: true
          type: boolean
      type: object
    ServiceChannel.Api.Model.SiteAudit.AttachmentInComment:
      example:
        UrlResized: UrlResized
        Id: 0
        Url: Url
      properties:
        Id:
          format: int32
          type: integer
        Url:
          type: string
        UrlResized:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.AddAssetAttachmentResponse:
      example:
        FilePath: FilePath
        IsSuccess: false
        Comment: Comment
        Message: Message
        FileName: FileName
        ThumbnailUri: ThumbnailUri
        IsPrimary: false
        ThumbnailPath: ThumbnailPath
        Id: 0
        AssetId: 6
        Uri: Uri
        Date: 2000-01-23T04:56:07.000+00:00
      properties:
        IsSuccess:
          default: false
          type: boolean
        Message:
          type: string
        Id:
          format: int32
          type: integer
        AssetId:
          format: int32
          type: integer
        FileName:
          type: string
        Comment:
          type: string
        Date:
          format: date-time
          type: string
        FilePath:
          type: string
        IsPrimary:
          default: false
          type: boolean
        Uri:
          type: string
        ThumbnailPath:
          type: string
        ThumbnailUri:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.AssetAttachment:
      example:
        FilePath: FilePath
        Comment: Comment
        FileName: FileName
        ThumbnailUri: ThumbnailUri
        IsPrimary: false
        ThumbnailPath: ThumbnailPath
        Id: 0
        AssetId: 6
        Uri: Uri
        Date: 2000-01-23T04:56:07.000+00:00
      properties:
        Id:
          format: int32
          type: integer
        AssetId:
          format: int32
          type: integer
        FileName:
          type: string
        Comment:
          type: string
        Date:
          format: date-time
          type: string
        FilePath:
          type: string
        IsPrimary:
          default: false
          type: boolean
        Uri:
          type: string
        ThumbnailPath:
          type: string
        ThumbnailUri:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Attachments.Attachment:
      example:
        NoteId: 6
        Description: Description
        Visibility: 1
        Id: 0
        Uri: Uri
        TimeStamp: 2000-01-23T04:56:07.000+00:00
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Description:
          type: string
        Name:
          type: string
        TimeStamp:
          format: date-time
          type: string
        Uri:
          type: string
        NoteId:
          description: Note id. If it is a WO attachment equals null.
          format: int32
          type: integer
        Visibility:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.BatchRfp.BatchRfpRequest:
      properties:
        BatchCreateRfps:
          description: "Required, BatchCreateRfp to create the batch of Rfp's"
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.BatchRfp.BatchCreateRfp'
          type: array
        CallbackUri:
          description: "Required, URL where callback method will post the result"
          type: string
        BatchName:
          description: "Optional Batch Name, project module's Name from which this\
            \ Rfp was created"
          type: string
        BatchNumber:
          description: "Optional Batch Number, project module's GUID from which this\
            \ Rfp was created"
          type: string
        BatchTemplateFileName:
          description: Origin file name
          type: string
        BatchTemplateRemotePath:
          description: Path to blob
          type: string
        Attachments:
          description: "Optional, Attachments."
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.BatchRfpAttachment'
          type: array
      required:
      - BatchCreateRfps
      - BatchName
      - BatchNumber
      - BatchTemplateFileName
      - BatchTemplateRemotePath
      - CallbackUri
      type: object
    ServiceChannel.Services.Messaging.BatchRfp.BatchCreateRfp:
      properties:
        RfpNumber:
          description: The non-unique RFP identifier. The value is generated automatically
            if not provided. It cannot be modified.
          type: string
        TradeId:
          description: The unique trade identifier.
          format: int32
          type: integer
        Description:
          description: RFP description.
          type: string
        Date:
          description: The RFP creation date and time. The format is `YYYY-MM-DDThh:mm:ss.sssZ`.
            The default is the current date and time.
          format: date-time
          type: string
        DueHrs:
          description: Due time in hours for the provider to respond to the RFP and
            submit a proposal. The default is 48 hours unless a different value is
            specified in the `UiCreationRfpDefaultTime` settings group.
          format: double
          type: number
        DueDate:
          description: "Due date and time for the provider to respond to the RFP and\
            \ submit a proposal. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. If `DueHrs`\
            \ is passed, the `DueDate` value is `Date` plus `DueHrs`.\r\n        \
            \    The default is the current date and time plus 48 hours unless a different\
            \ value is specified in the `UiCreationRfpDefaultTime` settings group."
          format: date-time
          type: string
        LocationId:
          description: Location identifier
          format: int32
          type: integer
        CreateRequestId:
          description: Create Request Id from project module
          type: string
        LocationName:
          description: Store ID
          type: string
        ProviderId:
          description: The unique provider identifier.
          format: int32
          type: integer
        ProjectId:
          description: The unique project identifier.
          format: int32
          type: integer
        PurchaseOrder:
          description: The Purchase Order.
          type: string
        ProviderEmail:
          description: Provider's email
          type: string
        WaitingForPrpEmail:
          description: User's email
          type: string
      required:
      - Description
      - LocationId
      - LocationName
      - ProviderId
      - TradeId
      type: object
    ServiceChannel.Api.Model.Entities.BatchRfpAttachment:
      properties:
        OriginalFileName:
          type: string
        RemotePath:
          type: string
        Description:
          type: string
      type: object
    ServiceChannel.Services.Messaging.BatchWorkOrder.BatchCreateRfpResponse:
      description: The BatchCreateRfpResponse.
      example:
        SessionId: SessionId
      properties:
        SessionId:
          description: Session generated in batch handler during batch Rfp creation
            process
          type: string
      type: object
    ServiceChannel.Services.Broker.Common.ApiModels.AccessDto:
      example:
        Granted: false
      properties:
        Granted:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Category.CategoryResponse:
      description: Object containing the details of the available categories.
      example:
        PrimaryCategoryID: 1
        HasDependency: false
        SubscriberId: 6
        PrimaryCategoryName: PrimaryCategoryName
        Id: 0
        Name: Name
      properties:
        Id:
          description: Category ID.
          format: int32
          type: integer
        SubscriberId:
          description: Unique numeric subscriber ID.
          format: int32
          type: integer
        Name:
          description: Category name.
          type: string
        HasDependency:
          default: false
          description: Parameter is not populated. The only value is "false".
          type: boolean
        PrimaryCategoryID:
          description: Primary category ID.
          format: int32
          type: integer
        PrimaryCategoryName:
          description: Primary category name.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Category.AddCategoryRequest:
      description: Object containing the details of the new category.
      properties:
        Name:
          description: Category name. The maximum characters count is 50.
          type: string
        PrimaryCategoryId:
          description: Primary category ID.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Category.AddCategoryResponse:
      description: Category object.
      example:
        Message: Message
        Id: 0
        ErrorCode: 6
      properties:
        Id:
          description: Category ID.
          format: int32
          type: integer
        ErrorCode:
          description: "Numeric identifier that determines the nature of an error.\
            \ Possible values: `0` - success, otherwise - error."
          format: int32
          type: integer
        Message:
          description: Defines that the file’s remote storage is unavailable or its
            URL cannot be found.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Category.PrimaryCategoryResponse:
      description: Object containing the details of the available primary categories.
      example:
        Id: 0
        Name: Name
      properties:
        Id:
          description: Primary category ID.
          format: int32
          type: integer
        Name:
          description: Primary category name.
          type: string
      type: object
    ServiceChannel.Api.Model.Proposals.CategoryGLCode:
      example:
        CategoryId: 0
        GLCode: GLCode
        CategoryName: CategoryName
      properties:
        CategoryId:
          format: int32
          type: integer
        CategoryName:
          type: string
        GLCode:
          type: string
      type: object
    ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailExtendedResponse:
      description: Object containing the details of a standard checklist.
      example:
        CheckListDetails:
        - UpdatedBy: 1
          ChecklistName: ChecklistName
          CreatedBy: 6
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          IsActive: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Questions:
          - PictureFlag: Optional
            CheckListQuestionOptions:
            - Answer: Answer
              Id: 7
              Sequence: 9
              IsConditionalFollowUp: false
            - Answer: Answer
              Id: 7
              Sequence: 9
              IsConditionalFollowUp: false
            QuestionType: CheckBox
            CheckListTimingType: CheckIn
            Question: Question
            AnswerRequired: false
            AnswerCanPersist: false
            Id: 5
            Sequence: 2
            CheckListId: 5
            ShortDescription: ShortDescription
          - PictureFlag: Optional
            CheckListQuestionOptions:
            - Answer: Answer
              Id: 7
              Sequence: 9
              IsConditionalFollowUp: false
            - Answer: Answer
              Id: 7
              Sequence: 9
              IsConditionalFollowUp: false
            QuestionType: CheckBox
            CheckListTimingType: CheckIn
            Question: Question
            AnswerRequired: false
            AnswerCanPersist: false
            Id: 5
            Sequence: 2
            CheckListId: 5
            ShortDescription: ShortDescription
          Id: 0
        - UpdatedBy: 1
          ChecklistName: ChecklistName
          CreatedBy: 6
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          IsActive: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Questions:
          - PictureFlag: Optional
            CheckListQuestionOptions:
            - Answer: Answer
              Id: 7
              Sequence: 9
              IsConditionalFollowUp: false
            - Answer: Answer
              Id: 7
              Sequence: 9
              IsConditionalFollowUp: false
            QuestionType: CheckBox
            CheckListTimingType: CheckIn
            Question: Question
            AnswerRequired: false
            AnswerCanPersist: false
            Id: 5
            Sequence: 2
            CheckListId: 5
            ShortDescription: ShortDescription
          - PictureFlag: Optional
            CheckListQuestionOptions:
            - Answer: Answer
              Id: 7
              Sequence: 9
              IsConditionalFollowUp: false
            - Answer: Answer
              Id: 7
              Sequence: 9
              IsConditionalFollowUp: false
            QuestionType: CheckBox
            CheckListTimingType: CheckIn
            Question: Question
            AnswerRequired: false
            AnswerCanPersist: false
            Id: 5
            Sequence: 2
            CheckListId: 5
            ShortDescription: ShortDescription
          Id: 0
      properties:
        CheckListDetails:
          description: Details of a standard checklist including its parameters and
            configured questions.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailResponse'
          type: array
      type: object
    ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailResponse:
      description: Parameters of a standard checklist.
      example:
        UpdatedBy: 1
        ChecklistName: ChecklistName
        CreatedBy: 6
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        IsActive: false
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        Questions:
        - PictureFlag: Optional
          CheckListQuestionOptions:
          - Answer: Answer
            Id: 7
            Sequence: 9
            IsConditionalFollowUp: false
          - Answer: Answer
            Id: 7
            Sequence: 9
            IsConditionalFollowUp: false
          QuestionType: CheckBox
          CheckListTimingType: CheckIn
          Question: Question
          AnswerRequired: false
          AnswerCanPersist: false
          Id: 5
          Sequence: 2
          CheckListId: 5
          ShortDescription: ShortDescription
        - PictureFlag: Optional
          CheckListQuestionOptions:
          - Answer: Answer
            Id: 7
            Sequence: 9
            IsConditionalFollowUp: false
          - Answer: Answer
            Id: 7
            Sequence: 9
            IsConditionalFollowUp: false
          QuestionType: CheckBox
          CheckListTimingType: CheckIn
          Question: Question
          AnswerRequired: false
          AnswerCanPersist: false
          Id: 5
          Sequence: 2
          CheckListId: 5
          ShortDescription: ShortDescription
        Id: 0
      properties:
        ChecklistName:
          description: Checklist name.
          type: string
        Id:
          description: Checklist ID.
          format: int32
          type: integer
        IsActive:
          default: false
          description: Defines whether the checklist is active or not.
          type: boolean
        CreatedDate:
          description: Date and time when the checklist was created.
          format: date-time
          type: string
        UpdatedDate:
          description: Date and time when the checklist was last updated.
          format: date-time
          type: string
        CreatedBy:
          description: User ID of the employee who created the checklist.
          format: int32
          type: integer
        UpdatedBy:
          description: User ID of the employee who last updated the checklist.
          format: int32
          type: integer
        Questions:
          description: A list of questions configured for the checklist.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailQuestionsResponse'
          type: array
      type: object
    ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailQuestionsResponse:
      description: Checklist question details.
      example:
        PictureFlag: Optional
        CheckListQuestionOptions:
        - Answer: Answer
          Id: 7
          Sequence: 9
          IsConditionalFollowUp: false
        - Answer: Answer
          Id: 7
          Sequence: 9
          IsConditionalFollowUp: false
        QuestionType: CheckBox
        CheckListTimingType: CheckIn
        Question: Question
        AnswerRequired: false
        AnswerCanPersist: false
        Id: 5
        Sequence: 2
        CheckListId: 5
        ShortDescription: ShortDescription
      properties:
        Id:
          description: Checklist question ID.
          format: int32
          type: integer
        CheckListId:
          description: ID of the checklist the question belongs to.
          format: int32
          type: integer
        Question:
          description: Checklist question that a technician is prompted to answer
            when working on a service request.
          type: string
        ShortDescription:
          description: Not applicable to checklists.
          type: string
        AnswerRequired:
          default: false
          description: Defines whether answering this checklist question is mandatory.
          type: boolean
        PictureFlag:
          description: "Defines whether a technician is required to upload an attachment\
            \ when answering the question:\r\n             • 0 — Adding an attachment\
            \ is optional.\r\n             • 1 — An attachment is not required.\r\n\
            \             • 2 — Uploading an attachment is mandatory."
          enum:
          - Optional
          - "No"
          - Required
          type: string
        Sequence:
          description: Not applicable to checklists.
          format: int32
          type: integer
        QuestionType:
          description: "[Checklist question type](https://developer.servicechannel.com/guides/checklists/types-of-checklist-questions/):\r\
            \n             • 0 — **Acknowledgement**: Represents an on/off toggle\
            \ prompting a technician to give a positive or negative response to a\
            \ question.\r\n             • 1 — **Selector**: Provides multiple configured\
            \ answer options to choose from.\r\n             • 2 — **Text Entry**:\
            \ Allows entering a text answer.\r\n             • 4 — **Numeric Input**:\
            \ Prompts to submit a number as a response."
          enum:
          - CheckBox
          - RadioButton
          - TextEntry
          - TriState
          - NumericInput
          type: string
        CheckListQuestionOptions:
          description: Answer options for questions of the Selector type.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListQuestionOptionResponse'
          type: array
        AnswerCanPersist:
          default: false
          description: "Defines whether the answer to this question can persist. If\
            \ the answer is persistent, the last submitted response populates on the\
            \ question. A technician can either opt for the current response or update\
            \ it."
          type: boolean
        CheckListTimingType:
          description: "Defines the checklist segment the question belongs to: 1 —\
            \ check-in segment, 2 — check-out segment."
          enum:
          - CheckIn
          - CheckOut
          type: string
      type: object
    ServiceChannel.Services.Messaging.CheckListDetails.CheckListQuestionOptionResponse:
      description: Answer option configured for a checklist question of the **Selector**
        type.
      example:
        Answer: Answer
        Id: 7
        Sequence: 9
        IsConditionalFollowUp: false
      properties:
        Id:
          description: ID of the answer option for a checklist question of the **Selector**
            type.
          format: int32
          type: integer
        Answer:
          description: Answer option for a checklist question of the **Selector**
            type. A technician can select from a list of configured options when answering
            the question.
          type: string
        Sequence:
          description: Not applicable to checklists.
          format: int32
          type: integer
        IsConditionalFollowUp:
          default: false
          description: Defines whether a technician is prompted to add a comment to
            the selected answer option. A comment is mandatory if answering the checklist
            question is required.
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponsesResponsePicture:
      description: Objects for checklist response.
      example:
        CheckListResponsePicture:
          UpdatedBy: 4
          CheckListResponseId: 2
          ThumbnailPath: ThumbnailPath
          DocumentPath: DocumentPath
          Id: 3
          HasThumbnail: false
          DocumentName: DocumentName
        CheckListResponse:
          ProviderId: 1
          FreeTextAnswer: FreeTextAnswer
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          UpdatedDateDto: 2000-01-23T04:56:07.000+00:00
          EntityId: 2
          CheckListQuestionId: 0
          Answer: Answer
          TechnicianId: 5
          CheckListQuestionOptionId: 6
          Attempt: 9
          EntityTypeId: 7
          UpdatedDateStr: UpdatedDateStr
          Id: 5
      properties:
        CheckListResponse:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponseAdded'
        CheckListResponsePicture:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListPictureResponse'
      type: object
    ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponseAdded:
      description: Checklist response object.
      example:
        ProviderId: 1
        FreeTextAnswer: FreeTextAnswer
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        UpdatedDateDto: 2000-01-23T04:56:07.000+00:00
        EntityId: 2
        CheckListQuestionId: 0
        Answer: Answer
        TechnicianId: 5
        CheckListQuestionOptionId: 6
        Attempt: 9
        EntityTypeId: 7
        UpdatedDateStr: UpdatedDateStr
        Id: 5
      properties:
        CheckListQuestionId:
          format: int32
          type: integer
        CheckListQuestionOptionId:
          format: int32
          type: integer
        ProviderId:
          format: int32
          type: integer
        TechnicianId:
          format: int32
          type: integer
        Id:
          description: Checklist response ID.
          format: int32
          type: integer
        Answer:
          description: Answer to a checklist question.
          type: string
        FreeTextAnswer:
          description: Comment to an answer option with the `IsConditionalFollowUp`
            attribute. Answer options are configured for questions of the **Selector**
            type.
          type: string
        EntityId:
          description: ID of the work order the response was submitted for.
          format: int32
          type: integer
        EntityTypeId:
          description: ID of the entity the response was submitted for. 0 is returned
            for work orders.
          format: int32
          type: integer
        Attempt:
          description: Order of a technician’s on-site visit when the response was
            submitted.
          format: int32
          type: integer
        UpdatedDate:
          description: Date and time when the response was last updated set in EST.
            The format is `YYYY-MM-DDThh:mm:ss.sss`.
          format: date-time
          type: string
        UpdatedDateStr:
          description: Date and time when the response was last updated set in the
            location’s time zone. The format is `Month Day Year hh:mm`.
          type: string
        UpdatedDateDto:
          description: Date and time when the response was last updated set in the
            location’s time zone with the UTC offset. The format is `YYYY-MM-DDThh:mm:ss.sss±hh:mm`.
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.CheckListDetails.CheckListPictureResponse:
      description: Object for an attachment added to a checklist response.
      example:
        UpdatedBy: 4
        CheckListResponseId: 2
        ThumbnailPath: ThumbnailPath
        DocumentPath: DocumentPath
        Id: 3
        HasThumbnail: false
        DocumentName: DocumentName
      properties:
        Id:
          description: ID of the file attached to the checklist response.
          format: int32
          type: integer
        CheckListResponseId:
          description: ID of the checklist response the attachment is submitted for.
          format: int32
          type: integer
        DocumentName:
          description: Attachment name.
          type: string
        DocumentPath:
          description: Attachment path.
          type: string
        ThumbnailPath:
          description: Attachment thumbnail path.
          type: string
        HasThumbnail:
          default: false
          description: Defines whether a thumbnail is available for the attachment.
          type: boolean
        UpdatedBy:
          description: User Id.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Core.InternalRequests.Checklists.CheckListResponseRequest:
      properties:
        CheckListQuestionId:
          format: int32
          type: integer
        CheckListQuestionOptionID:
          format: int32
          type: integer
        Answer:
          type: string
        FreeTextAnswer:
          type: string
        EntityId:
          format: int32
          type: integer
        EntityTypeId:
          format: int32
          type: integer
        ProviderId:
          format: int32
          type: integer
        Attempt:
          format: int32
          type: integer
        TechnicianId:
          format: int32
          type: integer
        AuthUserId:
          format: int32
          type: integer
      required:
      - CheckListQuestionId
      - CheckListQuestionOptionID
      - EntityId
      type: object
    ServiceChannel.Services.Messaging.ChecklistTasks.CheckListWithTasksExtendedResponse:
      description: Object containing the details of a checklist with asset tasks.
      example:
        ChecklistWithTasks:
        - UpdatedBy: 1
          ChecklistName: ChecklistName
          CreatedBy: 6
          Tasks:
          - TypeId: 2
            Description: Description
            IsActive: false
            TaskTypeId: AssetTask
            Id: 5
            TaskTypeName: TaskTypeName
            CheckListId: 5
            Name: Name
          - TypeId: 2
            Description: Description
            IsActive: false
            TaskTypeId: AssetTask
            Id: 5
            TaskTypeName: TaskTypeName
            CheckListId: 5
            Name: Name
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          IsActive: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
        - UpdatedBy: 1
          ChecklistName: ChecklistName
          CreatedBy: 6
          Tasks:
          - TypeId: 2
            Description: Description
            IsActive: false
            TaskTypeId: AssetTask
            Id: 5
            TaskTypeName: TaskTypeName
            CheckListId: 5
            Name: Name
          - TypeId: 2
            Description: Description
            IsActive: false
            TaskTypeId: AssetTask
            Id: 5
            TaskTypeName: TaskTypeName
            CheckListId: 5
            Name: Name
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          IsActive: false
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
      properties:
        ChecklistWithTasks:
          description: Details of an asset task checklist including its parameters
            and configured asset-related tasks.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ChecklistTasks.CheckListWithTasksResponse'
          type: array
      type: object
    ServiceChannel.Services.Messaging.ChecklistTasks.CheckListWithTasksResponse:
      description: Parameters of a checklist with asset tasks.
      example:
        UpdatedBy: 1
        ChecklistName: ChecklistName
        CreatedBy: 6
        Tasks:
        - TypeId: 2
          Description: Description
          IsActive: false
          TaskTypeId: AssetTask
          Id: 5
          TaskTypeName: TaskTypeName
          CheckListId: 5
          Name: Name
        - TypeId: 2
          Description: Description
          IsActive: false
          TaskTypeId: AssetTask
          Id: 5
          TaskTypeName: TaskTypeName
          CheckListId: 5
          Name: Name
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        IsActive: false
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        Id: 0
      properties:
        ChecklistName:
          description: Checklist name.
          type: string
        Id:
          description: Checklist ID.
          format: int32
          type: integer
        IsActive:
          default: false
          description: Defines whether the checklist is active or not.
          type: boolean
        CreatedDate:
          description: Date and time when the checklist was created.
          format: date-time
          type: string
        UpdatedDate:
          description: Date and time when the checklist was last updated.
          format: date-time
          type: string
        CreatedBy:
          description: User ID of the employee who created the checklist.
          format: int32
          type: integer
        UpdatedBy:
          description: User ID of the employee who last updated the checklist.
          format: int32
          type: integer
        Tasks:
          description: A list of asset-related tasks configured for the checklist.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ChecklistTasks.ChecklistTaskResponse'
          type: array
      type: object
    ServiceChannel.Services.Messaging.ChecklistTasks.ChecklistTaskResponse:
      description: Asset task details.
      example:
        TypeId: 2
        Description: Description
        IsActive: false
        TaskTypeId: AssetTask
        Id: 5
        TaskTypeName: TaskTypeName
        CheckListId: 5
        Name: Name
      properties:
        Id:
          description: Asset task ID.
          format: int32
          type: integer
        CheckListId:
          description: ID of the checklist the asset task belongs to.
          format: int32
          type: integer
        TypeId:
          description: ID of the asset type the task is configured for.
          format: int32
          type: integer
        TaskTypeId:
          description: ID of the asset task type.
          enum:
          - AssetTask
          type: string
        TaskTypeName:
          description: Name of the asset task type.
          type: string
        Name:
          description: Asset task name.
          type: string
        Description:
          description: Asset task description.
          type: string
        IsActive:
          default: false
          description: Defines whether the asset task is active or not.
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Checklists.CheckListTypesExtendedResponse:
      description: Checklist type object.
      example:
        ChecklistTypes:
        - Type: Checklist
          id: 0
        - Type: Checklist
          id: 0
      properties:
        ChecklistTypes:
          description: A list of checklists with their ID and type.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Checklists.ChecklistTypesResponse'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Checklists.ChecklistTypesResponse:
      description: Object containing the checklist ID and type.
      example:
        Type: Checklist
        id: 0
      properties:
        id:
          description: Checklist ID.
          format: int32
          type: integer
        Type:
          description: "Checklist type:\r\n             • 0 — **Standard checklist**\
            \ with questions that a technician is prompted to answer when working\
            \ on a service request.\r\n             • 2 — **Asset task checklist**\
            \ containing tasks for specific asset types that a technician should complete\
            \ when servicing a work order."
          enum:
          - Checklist
          - Survey
          - AssetTask
          - PlannedMaintenance
          type: string
      type: object
    ServiceChannel.Services.Messaging.Location.AssignProviderRequest:
      properties:
        StoreId:
          type: string
        Trade:
          type: string
        ProviderId:
          format: int32
          type: integer
        Rank:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Contracts.GetContractsResponse:
      example:
        Contracts:
        - Trade:
            SubscriberId: 9
            Id: 5
            Name: Name
          Contractor:
            Zip: Zip
            MailFrequency: 1
            Email: Email
            ImageFile: ImageFile
            DateCreated: 2000-01-23T04:56:07.000+00:00
            TaxId: TaxId
            Name: Name
            Trade: Trade
            Phone: Phone
            FaxNumber: FaxNumber
            LastTrainingDate: 2000-01-23T04:56:07.000+00:00
            FormId: 5
            SuperUser: SuperUser
            MailInfo: MailInfo
            NightRequest: 5
            ReturnMail: ReturnMail
            MainContact: MainContact
            Address2: Address2
            Address1: Address1
            City: City
            IsInternal: false
            ProcessingEmail: ProcessingEmail
            ShortFormatEmail: ShortFormatEmail
            DoNotDispatch: false
            IsOnOffShoreFeatureEnabled: false
            State: State
            FullName: FullName
            Pager: Pager
            WebSite: WebSite
            Country: Country
            LastUserDate: LastUserDate
            Id: 2
            SuiteFloor: SuiteFloor
            LastTrainingDateStr: LastTrainingDateStr
          Category:
            HasDependency: false
            SubscriberId: 4
            UserId: 8
            PrimaryCategory:
              SubscriberId: 7
              UserId: 6
              Id: 0
              Name: Name
            Id: 0
            Name: Name
          Rank: 6
          Id: 0
          Client:
            Zip: Zip
            DecimalSeparator: DecimalSeparator
            TimeFormat: TimeFormat
            Email: Email
            PrimaryCurrency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            IsOutsourcedWorkOn: false
            Address2: Address2
            ShortName: ShortName
            Users:
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            Address1: Address1
            City: City
            Name: Name
            State: State
            Phone: Phone
            DateFormat: DateFormat
            Country: Country
            Id: 7
            Fax: Fax
            ContactName: ContactName
          Location:
            Zip: Zip
            Radius: 3.5571952270680973
            Email: Email
            TimeZoneInfoId: 6
            TimeZoneIanaName: TimeZoneIanaName
            OpenDate: 2000-01-23T04:56:07.000+00:00
            SquareValue: 6.778324963048013
            StateId: 1
            ShortName: ShortName
            Latitude: 8.762042012749001
            CountyId: 5
            Name: Name
            AddressTypeId: 7
            StoreId: StoreId
            SquareMeasure: SquareMeasure
            TimeZoneShortDescription: TimeZoneShortDescription
            SubscriberId: 6
            Phone: Phone
            FaxNumber: FaxNumber
            SubscriberName: SubscriberName
            Supplier: Supplier
            HasInventory: false
            Distance: 6.438423552598547
            Notes:
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            CountryId: 2
            Status: Status
            Address2: Address2
            TypeLabel: TypeLabel
            FormattedAddress: FormattedAddress
            Address1: Address1
            City: City
            TimeShiftToEST: 3
            Longitude: 9.018348186070783
            Contact: Contact
            LocationFormattedAddressTail: LocationFormattedAddressTail
            LocationTypeId: 6
            State: State
            Region: Region
            Country: Country
            Id: 9
            ClosedDate: 2000-01-23T04:56:07.000+00:00
            District: District
            TimeZoneMsName: TimeZoneMsName
        - Trade:
            SubscriberId: 9
            Id: 5
            Name: Name
          Contractor:
            Zip: Zip
            MailFrequency: 1
            Email: Email
            ImageFile: ImageFile
            DateCreated: 2000-01-23T04:56:07.000+00:00
            TaxId: TaxId
            Name: Name
            Trade: Trade
            Phone: Phone
            FaxNumber: FaxNumber
            LastTrainingDate: 2000-01-23T04:56:07.000+00:00
            FormId: 5
            SuperUser: SuperUser
            MailInfo: MailInfo
            NightRequest: 5
            ReturnMail: ReturnMail
            MainContact: MainContact
            Address2: Address2
            Address1: Address1
            City: City
            IsInternal: false
            ProcessingEmail: ProcessingEmail
            ShortFormatEmail: ShortFormatEmail
            DoNotDispatch: false
            IsOnOffShoreFeatureEnabled: false
            State: State
            FullName: FullName
            Pager: Pager
            WebSite: WebSite
            Country: Country
            LastUserDate: LastUserDate
            Id: 2
            SuiteFloor: SuiteFloor
            LastTrainingDateStr: LastTrainingDateStr
          Category:
            HasDependency: false
            SubscriberId: 4
            UserId: 8
            PrimaryCategory:
              SubscriberId: 7
              UserId: 6
              Id: 0
              Name: Name
            Id: 0
            Name: Name
          Rank: 6
          Id: 0
          Client:
            Zip: Zip
            DecimalSeparator: DecimalSeparator
            TimeFormat: TimeFormat
            Email: Email
            PrimaryCurrency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            IsOutsourcedWorkOn: false
            Address2: Address2
            ShortName: ShortName
            Users:
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            Address1: Address1
            City: City
            Name: Name
            State: State
            Phone: Phone
            DateFormat: DateFormat
            Country: Country
            Id: 7
            Fax: Fax
            ContactName: ContactName
          Location:
            Zip: Zip
            Radius: 3.5571952270680973
            Email: Email
            TimeZoneInfoId: 6
            TimeZoneIanaName: TimeZoneIanaName
            OpenDate: 2000-01-23T04:56:07.000+00:00
            SquareValue: 6.778324963048013
            StateId: 1
            ShortName: ShortName
            Latitude: 8.762042012749001
            CountyId: 5
            Name: Name
            AddressTypeId: 7
            StoreId: StoreId
            SquareMeasure: SquareMeasure
            TimeZoneShortDescription: TimeZoneShortDescription
            SubscriberId: 6
            Phone: Phone
            FaxNumber: FaxNumber
            SubscriberName: SubscriberName
            Supplier: Supplier
            HasInventory: false
            Distance: 6.438423552598547
            Notes:
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            CountryId: 2
            Status: Status
            Address2: Address2
            TypeLabel: TypeLabel
            FormattedAddress: FormattedAddress
            Address1: Address1
            City: City
            TimeShiftToEST: 3
            Longitude: 9.018348186070783
            Contact: Contact
            LocationFormattedAddressTail: LocationFormattedAddressTail
            LocationTypeId: 6
            State: State
            Region: Region
            Country: Country
            Id: 9
            ClosedDate: 2000-01-23T04:56:07.000+00:00
            District: District
            TimeZoneMsName: TimeZoneMsName
      properties:
        Contracts:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Contracts.Contract'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Contracts.Contract:
      description: Contract object.
      example:
        Trade:
          SubscriberId: 9
          Id: 5
          Name: Name
        Contractor:
          Zip: Zip
          MailFrequency: 1
          Email: Email
          ImageFile: ImageFile
          DateCreated: 2000-01-23T04:56:07.000+00:00
          TaxId: TaxId
          Name: Name
          Trade: Trade
          Phone: Phone
          FaxNumber: FaxNumber
          LastTrainingDate: 2000-01-23T04:56:07.000+00:00
          FormId: 5
          SuperUser: SuperUser
          MailInfo: MailInfo
          NightRequest: 5
          ReturnMail: ReturnMail
          MainContact: MainContact
          Address2: Address2
          Address1: Address1
          City: City
          IsInternal: false
          ProcessingEmail: ProcessingEmail
          ShortFormatEmail: ShortFormatEmail
          DoNotDispatch: false
          IsOnOffShoreFeatureEnabled: false
          State: State
          FullName: FullName
          Pager: Pager
          WebSite: WebSite
          Country: Country
          LastUserDate: LastUserDate
          Id: 2
          SuiteFloor: SuiteFloor
          LastTrainingDateStr: LastTrainingDateStr
        Category:
          HasDependency: false
          SubscriberId: 4
          UserId: 8
          PrimaryCategory:
            SubscriberId: 7
            UserId: 6
            Id: 0
            Name: Name
          Id: 0
          Name: Name
        Rank: 6
        Id: 0
        Client:
          Zip: Zip
          DecimalSeparator: DecimalSeparator
          TimeFormat: TimeFormat
          Email: Email
          PrimaryCurrency:
            DecimalCount: 1
            Entity: Entity
            AlphabeticalCode: AlphabeticalCode
            NumericCode: NumericCode
            Rate: 4.965218492984954
            Id: 7
            CurrencyName: CurrencyName
          IsOutsourcedWorkOn: false
          Address2: Address2
          ShortName: ShortName
          Users:
          - UserName: UserName
            Email: Email
            MlpUserInfo:
              Id: 1
              MlpLevel: MlpLevel
              MlpLocations:
              - 6
              - 6
            Access:
              Trades:
              - Trades
              - Trades
              Locations:
              - Locations
              - Locations
              Districts:
              - Districts
              - Districts
              Regions:
              - Regions
              - Regions
            Dashboard:
              Id: 2
              RedirectToDashboard: false
              Name: Name
            MliUserInfo:
              MliLocations:
              - 1
              - 1
              Id: 1
              MliLevel: MliLevel
            Roles:
            - Roles
            - Roles
            Limits:
              NteLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              ProposalLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              InvoiceLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
            SubscriberId: 3
            FullName: FullName
            PsmEmail: PsmEmail
            Permissions:
            - Permissions
            - Permissions
            Id: 9
            Disabled: false
            UserType: Corporate
            FeedRole: FeedRole
          - UserName: UserName
            Email: Email
            MlpUserInfo:
              Id: 1
              MlpLevel: MlpLevel
              MlpLocations:
              - 6
              - 6
            Access:
              Trades:
              - Trades
              - Trades
              Locations:
              - Locations
              - Locations
              Districts:
              - Districts
              - Districts
              Regions:
              - Regions
              - Regions
            Dashboard:
              Id: 2
              RedirectToDashboard: false
              Name: Name
            MliUserInfo:
              MliLocations:
              - 1
              - 1
              Id: 1
              MliLevel: MliLevel
            Roles:
            - Roles
            - Roles
            Limits:
              NteLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              ProposalLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              InvoiceLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
            SubscriberId: 3
            FullName: FullName
            PsmEmail: PsmEmail
            Permissions:
            - Permissions
            - Permissions
            Id: 9
            Disabled: false
            UserType: Corporate
            FeedRole: FeedRole
          Address1: Address1
          City: City
          Name: Name
          State: State
          Phone: Phone
          DateFormat: DateFormat
          Country: Country
          Id: 7
          Fax: Fax
          ContactName: ContactName
        Location:
          Zip: Zip
          Radius: 3.5571952270680973
          Email: Email
          TimeZoneInfoId: 6
          TimeZoneIanaName: TimeZoneIanaName
          OpenDate: 2000-01-23T04:56:07.000+00:00
          SquareValue: 6.778324963048013
          StateId: 1
          ShortName: ShortName
          Latitude: 8.762042012749001
          CountyId: 5
          Name: Name
          AddressTypeId: 7
          StoreId: StoreId
          SquareMeasure: SquareMeasure
          TimeZoneShortDescription: TimeZoneShortDescription
          SubscriberId: 6
          Phone: Phone
          FaxNumber: FaxNumber
          SubscriberName: SubscriberName
          Supplier: Supplier
          HasInventory: false
          Distance: 6.438423552598547
          Notes:
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          CountryId: 2
          Status: Status
          Address2: Address2
          TypeLabel: TypeLabel
          FormattedAddress: FormattedAddress
          Address1: Address1
          City: City
          TimeShiftToEST: 3
          Longitude: 9.018348186070783
          Contact: Contact
          LocationFormattedAddressTail: LocationFormattedAddressTail
          LocationTypeId: 6
          State: State
          Region: Region
          Country: Country
          Id: 9
          ClosedDate: 2000-01-23T04:56:07.000+00:00
          District: District
          TimeZoneMsName: TimeZoneMsName
      properties:
        Id:
          description: Numeric identifier of the provider’s assignment.
          format: int32
          type: integer
        Rank:
          description: Provider’s rank for the trade and location combo in the subscriber’s
            system.
          format: int32
          type: integer
        Contractor:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.Provider'
        Client:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.Subscriber'
        Trade:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.Trade'
        Location:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.Location'
        Category:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.Category'
      type: object
    ServiceChannel.Services.Messaging.Trade.Trade:
      description: Trade object.
      example:
        SubscriberId: 9
        Id: 5
        Name: Name
      properties:
        Id:
          description: Numeric identifier of the trade.
          format: int32
          type: integer
        Name:
          description: Trade name.
          type: string
        SubscriberId:
          description: Unique subscriber ID.
          format: int32
          type: integer
      type: object
    ServiceChannel.Api.Model.Entities.Category:
      example:
        HasDependency: false
        SubscriberId: 4
        UserId: 8
        PrimaryCategory:
          SubscriberId: 7
          UserId: 6
          Id: 0
          Name: Name
        Id: 0
        Name: Name
      properties:
        Name:
          type: string
        HasDependency:
          default: false
          type: boolean
        PrimaryCategory:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.PrimaryCategory'
        Id:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Api.Model.Entities.PrimaryCategory:
      example:
        SubscriberId: 7
        UserId: 6
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        SubscriberId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Location.RetireProviderRequest:
      properties:
        StoreId:
          description: "Optional, When 'Trade' and 'StoreId' are not specified then\
            \ provider is 'retired' from all subscriber's stores."
          type: string
        Trade:
          description: "Optional, When 'Trade' and 'StoreId' are not specified then\
            \ provider is 'retired' from all subscriber's stores."
          type: string
        ProviderId:
          description: Required Provider Id
          format: int32
          type: integer
      required:
      - ProviderId
      type: object
    ServiceChannel.Services.Messaging.ContractorTools.TechnicianDto:
      description: The technician details object.
      example:
        LoginName: LoginName
        TechnicianAccessLevel:
        - TechnicianAccessLevel
        - TechnicianAccessLevel
        MobileNumber: MobileNumber
        Email: Email
        FirstName: FirstName
        UserId: 0
        LastName: LastName
        EmployeeId: EmployeeId
      properties:
        FirstName:
          description: The first name of the technician.
          type: string
        LoginName:
          description: The login name of the technician.
          type: string
        LastName:
          description: The last name of the technician.
          type: string
        UserId:
          description: The ID of the technician in the Authentication service.
          format: int64
          type: integer
        Email:
          description: The email address of the technician.
          type: string
        MobileNumber:
          description: The mobile phone number of the technician.
          type: string
        TechnicianAccessLevel:
          description: The access level of the technician.
          items:
            type: string
          type: array
        EmployeeId:
          description: The employee ID of the technician.
          type: string
      type: object
    ServiceChannel.Services.Messaging.ContractorTools.ExtendedRefrigerantCertificationDTO:
      description: Object containing the details of a refrigerant certification.
      example:
        CertificationLevelId: 1
        FileUrl: FileUrl
        CertificationExpirationDateTime: 2000-01-23T04:56:07.000+00:00
        AuthUserId: 6
        Description: Description
        CertificationDateTime: 2000-01-23T04:56:07.000+00:00
        FileName: FileName
        Id: 0
        TechnicianFullName: TechnicianFullName
        CertificationLevel: CertificationLevel
        CertificationNumber: CertificationNumber
      properties:
        Id:
          description: Numeric identifier of the certificate in the system.
          format: int32
          type: integer
        CertificationNumber:
          description: Unique certificate number given by the party that granted the
            certificate.
          type: string
        CertificationExpirationDateTime:
          description: Date and time when the certificate expires.
          format: date-time
          type: string
        Description:
          description: Comment added to the attached file.
          type: string
        FileUrl:
          description: Path of the attached file.
          type: string
        FileName:
          description: Name of the attached file.
          type: string
        TechnicianFullName:
          description: First and last name of the technician who received the refrigerant
            certification.
          type: string
        AuthUserId:
          description: Single sign-on (SSO) ID of the technician who received the
            refrigerant certification.
          format: int64
          type: integer
        CertificationDateTime:
          description: Date and time when the refrigerant certification becomes valid.
          format: date-time
          type: string
        CertificationLevelId:
          description: "Type ID of EPA 608 Technician Certification. Possible values:\
            \ 1 - Type I, 2 - Type II , 3 - Type III, 4 - Universal."
          format: int32
          type: integer
        CertificationLevel:
          description: "Type of EPA Section 608 Technician Certification. Possible\
            \ values: Type Ⅰ - service of small appliances containing 5 lbs or less\
            \ of refrigerant; Type Ⅱ - service or disposal of high- or very high-pressure\
            \ appliances (containing more than 5 lbs of refrigerant); Type Ⅲ - service\
            \ or disposal of low-pressure appliances; Universal - service of refrigerated\
            \ appliances of all types."
          type: string
      type: object
    ServiceChannel.Services.Messaging.Currencies.GetAlphabeticalCodeResponse:
      description: GetAlphabeticalCodeResponse
      example:
        AlphabeticalCode: AlphabeticalCode
      properties:
        AlphabeticalCode:
          description: AlphabeticalCode
          type: string
      type: object
    ServiceChannel.Services.Messaging.DashboardSettings.SetupFeedbackResponse:
      example:
        SetupId: 0
        CustomUnsatisfactoryMessage: CustomUnsatisfactoryMessage
        EnableAutoConfirm: false
        EnableSupplyManagerEmailConfirmation: false
        EmailHeader: EmailHeader
        SendFeedbackToCreatedByUser: false
        ShowResolution: false
        UnsatisfactorySubmitAttemptsNotification: false
        EnableNegativeFeedback: false
        SkipUnsatisfactoryAlertsToProviders: false
        EnableScheduledDate: false
        SupplyManagerEmailConfirmationHoursAfter: 5
        DaysPeriod: 1
        EnablePositiveFeedback: false
        EnableNegFeedNotification: false
        EnableFeedback: false
        ShowDays: 6
        Statuses:
        - Statuses
        - Statuses
        SupplyManagerEmailConfirmationCustomNotificationMessage: SupplyManagerEmailConfirmationCustomNotificationMessage
        AnsweringCustomQuestionOptional: false
        CustomMessage: CustomMessage
        ShowCompletedDate: false
      properties:
        SetupId:
          format: int32
          type: integer
        EnableFeedback:
          default: false
          type: boolean
        EmailHeader:
          type: string
        CustomUnsatisfactoryMessage:
          type: string
        EnableNegativeFeedback:
          default: false
          type: boolean
        EnablePositiveFeedback:
          default: false
          type: boolean
        ShowDays:
          format: int32
          type: integer
        ShowCompletedDate:
          default: false
          type: boolean
        ShowResolution:
          default: false
          type: boolean
        EnableNegFeedNotification:
          default: false
          type: boolean
        EnableAutoConfirm:
          default: false
          type: boolean
        DaysPeriod:
          format: int32
          type: integer
        CustomMessage:
          type: string
        Statuses:
          items:
            type: string
          type: array
        EnableScheduledDate:
          default: false
          type: boolean
        SkipUnsatisfactoryAlertsToProviders:
          default: false
          type: boolean
        UnsatisfactorySubmitAttemptsNotification:
          default: false
          type: boolean
        SendFeedbackToCreatedByUser:
          default: false
          type: boolean
        EnableSupplyManagerEmailConfirmation:
          default: false
          type: boolean
        SupplyManagerEmailConfirmationHoursAfter:
          format: int32
          type: integer
        SupplyManagerEmailConfirmationCustomNotificationMessage:
          type: string
        AnsweringCustomQuestionOptional:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestResponse:
      example:
        SetupId: 0
        ShowProviderPhoneNumber: false
        NteToZeroForRecalls: false
        TurnOffDescription: false
        ProviderNotFoundMessage: ProviderNotFoundMessage
        AlwaysShowLocationNotes: false
        AssetFirstWorkOrderCreation: false
        DuplicateFilters:
        - DuplicateFilters
        - DuplicateFilters
        SkipTroubleshootingStep: false
        EnableEquipment: false
        ShowLastServiceCall: false
        ExcludedStatuses:
        - ExcludedStatuses
        - ExcludedStatuses
        ExcludedCategoriesOpenDup:
        - ExcludedCategoriesOpenDup
        - ExcludedCategoriesOpenDup
        EnableLocationNotes: false
        StoreWarrantyMessage: StoreWarrantyMessage
        ConfirmationMessage: ConfirmationMessage
        EnableRequestWizard: false
        ShowPrivateStoreNotes: false
        EnableRequestWizardMobile: false
        EnableEquipmentReplacement: false
        ExcludedTradesOpenDup:
        - ExcludedTradesOpenDup
        - ExcludedTradesOpenDup
        ShowStoreWarrantyStr: ShowStoreWarrantyStr
        EnableIssueListKeywordSearch: false
        SetOriginalVendorForRecalls: false
        DaysOfHistoryToDisplay: 6
        ExcludedCategoriesClosedDup:
        - ExcludedCategoriesClosedDup
        - ExcludedCategoriesClosedDup
        HideGPSRadius: false
        HidePriority: false
        EnableEquipmentReplacementFlag: false
        SendAlertToFM: false
      properties:
        SetupId:
          description: Store Dashboard Setup ID.
          format: int32
          type: integer
        EnableRequestWizard:
          default: false
          description: This flag enables/disables request wizard for the dashboard.
          type: boolean
        ShowPrivateStoreNotes:
          default: false
          description: Show/hide private store notes in the 'location notes' field
            on the first step of the service request wizard page.
          type: boolean
        ShowProviderPhoneNumber:
          default: false
          description: Show/hide provider phone number on the confirmation step after
            an issue has been submitted.
          type: boolean
        ShowLastServiceCall:
          default: false
          description: Show last service call and last description in the body of
            alert email.
          type: boolean
        SetOriginalVendorForRecalls:
          default: false
          description: This option controls whether original vendor is assigned to
            the work order in case of a recall.
          type: boolean
        NteToZeroForRecalls:
          default: false
          description: Set NTE to zero if a new service request is marked as a recall.
          type: boolean
        SendAlertToFM:
          default: false
          description: This flag controls whether service request email will be sent
            to the facility managers or not.
          type: boolean
        TurnOffDescription:
          default: false
          description: Show/hide problem description field.
          type: boolean
        DaysOfHistoryToDisplay:
          description: How many days of work order history to display on the dublicates
            warning report.
          format: int32
          type: integer
        ShowStoreWarrantyStr:
          description: "There are three possible options: 1) 'none' hides a StoreWarrantyMessage\
            \ on the first step of the Request Wizard;\r\n            2) 'show' shows\
            \ a StoreWarrantyMessage on the first step of the Request Wizard;\r\n\
            \            3) 'stop' shows a StoreWarrantyMessage without a possibility\
            \ to move to the next step."
          type: string
        StoreWarrantyMessage:
          description: A store warranty message to show on the first step of the request
            wizard page.
          type: string
        ConfirmationMessage:
          description: This message is shown on the confirmation page after the user
            submits their request.
          type: string
        ProviderNotFoundMessage:
          description: An error message to show when provider is not found for the
            specified issue choice.
          type: string
        EnableEquipment:
          default: false
          description: Show equipment
          type: boolean
        DuplicateFilters:
          items:
            type: string
          type: array
        ExcludedCategoriesOpenDup:
          items:
            type: string
          type: array
        ExcludedCategoriesClosedDup:
          items:
            type: string
          type: array
        ExcludedStatuses:
          items:
            type: string
          type: array
        ExcludedTradesOpenDup:
          items:
            type: string
          type: array
        EnableEquipmentReplacementFlag:
          default: false
          type: boolean
        EnableRequestWizardMobile:
          default: false
          description: This flag enables/disables request wizard for the SC Mobile.
          type: boolean
        EnableLocationNotes:
          default: false
          type: boolean
        AlwaysShowLocationNotes:
          default: false
          type: boolean
        SkipTroubleshootingStep:
          default: false
          type: boolean
        HidePriority:
          default: false
          type: boolean
        EnableIssueListKeywordSearch:
          default: false
          description: "This flag enables/disables the keyword search functionality\
            \ on the request wizard.\r\n            When enabled, users can type keywords\
            \ to more quickly identify issue list selections."
          type: boolean
        HideGPSRadius:
          default: false
          type: boolean
        AssetFirstWorkOrderCreation:
          default: false
          description: Enables asset-first approach for work order creation.
          type: boolean
        EnableEquipmentReplacement:
          default: false
          type: boolean
      type: object
    ServiceChannel.Api.Model.Dashboard.Settings.SetupRequest:
      example:
        SetupId: 0
        ShowProviderPhoneNumber: false
        NteToZeroForRecalls: false
        TurnOffDescription: false
        ProviderNotFoundMessage: ProviderNotFoundMessage
        ShowStoreWarranty: None
        AlwaysShowLocationNotes: false
        AssetFirstWorkOrderCreation: false
        DuplicateFilters:
        - DuplicateFilters
        - DuplicateFilters
        SkipTroubleshootingStep: false
        EnableEquipment: false
        ShowLastServiceCall: false
        ExcludedCategoriesOpenDup:
        - ExcludedCategoriesOpenDup
        - ExcludedCategoriesOpenDup
        EnableLocationNotes: false
        StoreWarrantyMessage: StoreWarrantyMessage
        ConfirmationMessage: ConfirmationMessage
        EnableRequestWizard: false
        ShowPrivateStoreNotes: false
        EnableRequestWizardMobile: false
        ExcludedTradesOpenDup:
        - ExcludedTradesOpenDup
        - ExcludedTradesOpenDup
        ShowStoreWarrantyStr: ShowStoreWarrantyStr
        EnableIssueListKeywordSearch: false
        SetOriginalVendorForRecalls: false
        DaysOfHistoryToDisplay: 6
        ExcludedCategoriesClosedDup:
        - ExcludedCategoriesClosedDup
        - ExcludedCategoriesClosedDup
        HideGPSRadius: false
        DuplicateMessage: DuplicateMessage
        HidePriority: false
        EnableEquipmentReplacementFlag: false
        SendAlertToFM: false
      properties:
        SetupId:
          format: int32
          type: integer
        EnableRequestWizard:
          default: false
          type: boolean
        ShowPrivateStoreNotes:
          default: false
          type: boolean
        ShowProviderPhoneNumber:
          default: false
          type: boolean
        ShowLastServiceCall:
          default: false
          type: boolean
        SetOriginalVendorForRecalls:
          default: false
          type: boolean
        NteToZeroForRecalls:
          default: false
          type: boolean
        SendAlertToFM:
          default: false
          type: boolean
        TurnOffDescription:
          default: false
          type: boolean
        DaysOfHistoryToDisplay:
          format: int32
          type: integer
        ShowStoreWarrantyStr:
          type: string
        ShowStoreWarranty:
          enum:
          - None
          - Show
          - Stop
          readOnly: true
          type: string
        StoreWarrantyMessage:
          type: string
        ConfirmationMessage:
          type: string
        ProviderNotFoundMessage:
          type: string
        EnableEquipment:
          default: false
          type: boolean
        DuplicateFilters:
          items:
            type: string
          type: array
        ExcludedCategoriesOpenDup:
          items:
            type: string
          type: array
        ExcludedCategoriesClosedDup:
          items:
            type: string
          type: array
        ExcludedTradesOpenDup:
          items:
            type: string
          type: array
        EnableEquipmentReplacementFlag:
          default: false
          type: boolean
        EnableRequestWizardMobile:
          default: false
          type: boolean
        EnableLocationNotes:
          default: false
          type: boolean
        AlwaysShowLocationNotes:
          default: false
          type: boolean
        SkipTroubleshootingStep:
          default: false
          type: boolean
        HidePriority:
          default: false
          type: boolean
        EnableIssueListKeywordSearch:
          default: false
          type: boolean
        AssetFirstWorkOrderCreation:
          default: false
          type: boolean
        HideGPSRadius:
          default: false
          type: boolean
        DuplicateMessage:
          type: string
      type: object
    ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestConfirmResponse:
      example:
        ShowRecipients: false
        DeleteCopyRecipients: false
        CreateLinkedRequest: false
        RequirePO: false
        EnableAdditionalCodes: false
        EnableWO: false
        AddCopyRecipient: false
        MaintainOrDecreasePriority: false
        ChangeablePriority: false
        LabelsAsSelectOnly: false
        ChangeableScheduledDate: false
        ChangeableGlCode: false
        EnableLabels: false
        ChangeableNte: false
        AllowChangeableCurrency: false
        ChangeableCategory: false
        AvoidDispatching: false
        ChangeablePrioritySetDefault: false
        ChangeableProvider: false
        EmptyProviderEmailNotification: false
        EnablePO: false
        EditWeatherType: false
      properties:
        ChangeableCategory:
          default: false
          type: boolean
        ChangeablePriority:
          default: false
          type: boolean
        ChangeablePrioritySetDefault:
          default: false
          type: boolean
        ChangeableNte:
          default: false
          type: boolean
        AllowChangeableCurrency:
          default: false
          type: boolean
        ChangeableScheduledDate:
          default: false
          type: boolean
        ChangeableProvider:
          default: false
          type: boolean
        EnableAdditionalCodes:
          default: false
          type: boolean
        ChangeableGlCode:
          default: false
          type: boolean
        CreateLinkedRequest:
          default: false
          type: boolean
        AvoidDispatching:
          default: false
          type: boolean
        ShowRecipients:
          default: false
          type: boolean
        AddCopyRecipient:
          default: false
          type: boolean
        DeleteCopyRecipients:
          default: false
          type: boolean
        EmptyProviderEmailNotification:
          default: false
          type: boolean
        EnablePO:
          default: false
          type: boolean
        RequirePO:
          default: false
          type: boolean
        EnableWO:
          default: false
          type: boolean
        EnableLabels:
          default: false
          type: boolean
        LabelsAsSelectOnly:
          default: false
          type: boolean
        EditWeatherType:
          default: false
          type: boolean
        MaintainOrDecreasePriority:
          default: false
          type: boolean
      type: object
    ServiceChannel.Api.Model.Dashboard.Settings.SetupRequestConfirm:
      example:
        SetupId: 0
        DeleteCopyRecipients: false
        CreateLinkedRequest: false
        RequirePO: false
        EnableAdditionalCodes: false
        EnableWO: false
        MaintainOrDecreasePriority: false
        ChangeablePriority: false
        ShowAsset: false
        ChangeableGlCode: false
        AllowChangeableCurrency: false
        ChangeableCategory: false
        ChangeablePrioritySetDefault: false
        EmptyProviderEmailNotification: false
        EnablePO: false
        ShowRecipients: false
        AddCopyRecipient: false
        EnableAssignee: false
        LabelsAsSelectOnly: false
        ChangeableScheduledDate: false
        EnableLabels: false
        ChangeableNte: false
        AvoidDispatching: false
        ChangeableProvider: false
        EditWeatherType: false
      properties:
        SetupId:
          format: int32
          type: integer
        ChangeableCategory:
          default: false
          type: boolean
        ChangeablePriority:
          default: false
          type: boolean
        ChangeableNte:
          default: false
          type: boolean
        ChangeableScheduledDate:
          default: false
          type: boolean
        ChangeableProvider:
          default: false
          type: boolean
        CreateLinkedRequest:
          default: false
          type: boolean
        ShowRecipients:
          default: false
          type: boolean
        AddCopyRecipient:
          default: false
          type: boolean
        DeleteCopyRecipients:
          default: false
          type: boolean
        EnableAdditionalCodes:
          default: false
          type: boolean
        EmptyProviderEmailNotification:
          default: false
          type: boolean
        EnablePO:
          default: false
          type: boolean
        RequirePO:
          default: false
          type: boolean
        EnableWO:
          default: false
          type: boolean
        ChangeablePrioritySetDefault:
          default: false
          type: boolean
        AllowChangeableCurrency:
          default: false
          type: boolean
        AvoidDispatching:
          default: false
          type: boolean
        EnableLabels:
          default: false
          type: boolean
        LabelsAsSelectOnly:
          default: false
          type: boolean
        EditWeatherType:
          default: false
          type: boolean
        ChangeableGlCode:
          default: false
          type: boolean
        MaintainOrDecreasePriority:
          default: false
          type: boolean
        ShowAsset:
          default: false
          type: boolean
        EnableAssignee:
          default: false
          type: boolean
      type: object
    ServiceChannel.Api.Model.Dashboard.Settings.SetupGeneral:
      example:
        SetupId: 0
        DecimalSeparator: DecimalSeparator
        TimeFormat: TimeFormat
        ShowOtherCategories: false
        IssueList: IssueList
        RequireAttachments: false
        NavigationMap: NavigationMap
        Title: Title
        RedirectUri: RedirectUri
        CurrencyId: 1
        DefaultUri: DefaultUri
        FavIcon: FavIcon
        SecondCulture: SecondCulture
        HideDashboardSelection: false
        SubscriberId: 6
        DateFormat: DateFormat
        UseObjectIssueList: false
        HideLateToArrive: false
        Theme: Theme
        AllowAddingAttachments: false
        SpacesWoPlacementConfirmation: false
        Culture: Culture
        DashboardDescription: DashboardDescription
      properties:
        SetupId:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        CurrencyId:
          format: int32
          type: integer
        Title:
          type: string
        Theme:
          type: string
        NavigationMap:
          type: string
        IssueList:
          type: string
        FavIcon:
          type: string
        Culture:
          type: string
        SecondCulture:
          type: string
        DefaultUri:
          type: string
        RedirectUri:
          type: string
        AllowAddingAttachments:
          default: false
          type: boolean
        RequireAttachments:
          default: false
          type: boolean
        UseObjectIssueList:
          default: false
          type: boolean
        ShowOtherCategories:
          default: false
          type: boolean
        HideDashboardSelection:
          default: false
          type: boolean
        HideLateToArrive:
          default: false
          type: boolean
        DashboardDescription:
          type: string
        SpacesWoPlacementConfirmation:
          default: false
          type: boolean
        DateFormat:
          type: string
        TimeFormat:
          type: string
        DecimalSeparator:
          type: string
      type: object
    ServiceChannel.Services.Messaging.DashboardSettings.SetupNoteResponse:
      description: Settings for Dashboard Notes
      example:
        SetupId: 0
        AllowAddingNotes: false
        MaskPhone: false
        LocationNotesAsRecipients: LocationNotesAsRecipients
        ShowProviderRecipients: false
        AllowAddingNotesForCompletedWorkorders: false
        MaskMoney: false
        DisableNotes: false
        ShowUniversalRecipients: false
        Statuses:
        - Statuses
        - Statuses
        ShowPublicUserEmailsOnly: false
        MaskEmail: false
        ShowSubscriberRecipients: false
        CustomNoteRecipients: CustomNoteRecipients
        AutoCopyContractorNotes: false
        NoteEmails:
        - NoteEmails
        - NoteEmails
      properties:
        SetupId:
          description: Store Dashboard Setup ID.
          format: int32
          type: integer
        AllowAddingNotes:
          default: false
          description: Enable / disable an ability to add workorder notes.
          type: boolean
        AllowAddingNotesForCompletedWorkorders:
          default: false
          description: Enable / disable an ability to add notes for workorders with
            status "completed".
          type: boolean
        MaskMoney:
          default: false
          description: Parse a work order description and a note text in order to
            mask money.
          type: boolean
        MaskPhone:
          default: false
          description: Parse a work order description and a note text in order to
            mask phone numbers.
          type: boolean
        MaskEmail:
          default: false
          description: Parse a work order description and a note text in order to
            mask email.
          type: boolean
        ShowProviderRecipients:
          default: false
          description: Show provider recipients as wo note recipients.
          type: boolean
        ShowSubscriberRecipients:
          default: false
          description: Show subscriber recipients as wo note recipients.
          type: boolean
        ShowPublicUserEmailsOnly:
          default: false
          description: Show only users with public emails as wo note recipients.
          type: boolean
        ShowUniversalRecipients:
          default: false
          description: Show universal users as wo note recipients.
          type: boolean
        LocationNotesAsRecipients:
          description: Show emails from location notes as wo note recipients.
          type: string
        AutoCopyContractorNotes:
          default: false
          description: Specify custom addressees to show as wo note recipients.
          type: boolean
        CustomNoteRecipients:
          description: Specify custom addressees to show as wo note recipients.
          type: string
        Statuses:
          items:
            type: string
          type: array
        DisableNotes:
          default: false
          type: boolean
        NoteEmails:
          description: Get addresses without dublicates.
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.Notifications.EmailNotificationSubscriptionRequest:
      description: Subscribe Email Notification Request model
      properties:
        NotificationType:
          description: "Notification type: Check In , ...."
          enum:
          - CheckIn
          - CheckOut
          - BadgeScanRequired
          type: string
        LanguageCode:
          description: ISO 639-1 two-letter code for the language.
          type: string
        NotificationRules:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.NotificationRulesRequest'
      required:
      - NotificationType
      type: object
    ServiceChannel.Services.Messaging.Notifications.NotificationRulesRequest:
      description: Rules for Notification Request model
      properties:
        Rules:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.Rule'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Notifications.Rule:
      properties:
        Field:
          type: string
        Value:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Eula.EulaAgreement:
      description: Represents an EULA agreement
      example:
        Text: Text
      properties:
        Text:
          description: EULA agreement text
          type: string
      type: object
    System.Collections.Generic.KeyValuePair[System.String,System.String]:
      properties:
        Key:
          readOnly: true
          type: string
        Value:
          readOnly: true
          type: string
      type: object
    ServiceChannel.Services.Messaging.Features.SetFeatureRequest:
      properties:
        Name:
          description: Name
          type: string
        AdditionalData:
          description: AdditionalData
          type: string
        IsOn:
          default: false
          description: IsOn
          type: boolean
        EnableForAll:
          default: false
          description: EnableForAll
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Feedback.FeedbackRequest:
      properties:
        SetupId:
          description: Dashboard SetupId (optional)
          format: int32
          type: integer
        LocationId:
          format: int32
          type: integer
        Answer:
          description: "Satisfactory answer.\r\n            Supported values: satisfactory,\
            \ unsatisfactory"
          type: string
        Comment:
          description: "User text comment.\r\n            Required if answer is \"\
            unsatisfactory\".\r\n            Required if score lower than 3"
          type: string
        StarScore:
          description: Star scrore. The integer value from 1 to 5 (Required for satisfactory
            answer)
          format: int32
          type: integer
        SubscriberId:
          description: Subscriber Id
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Feedback.FeedbacksForReviewRequest:
      properties:
        LocationId:
          description: LocationId
          format: int32
          type: integer
        SetupId:
          description: Dashboard setupId (optional)
          format: int32
          type: integer
        OrderByField:
          description: Order by field
          enum:
          - TrackingNumber
          - Trade
          - ScheduledDate
          - Vendor
          - Priority
          - Caller
          - Status
          - Area
          - ComplitionDate
          - FeedbackLeft
          type: string
        OrderDirection:
          description: Order direction
          enum:
          - Ascending
          - Descending
          type: string
        ShowMyWorkOrders:
          default: false
          description: Activates filter by current user id
          type: boolean
        SubscriberId:
          description: Subscriber Id
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Feedback.WorkorderFeedback:
      example:
        Status:
          Primary: Primary
          Extended: Extended
          CanCreateInvoice: false
        Description: Description
        CreatedBy: CreatedBy
        Category: Category
        TrackingNumber: 0
        NotesCount: 5
        ScheduledDateString: ScheduledDateString
        Vendor: Vendor
        Review:
          ReviewedDate: 2000-01-23T04:56:07.000+00:00
          Comment: Comment
          TrackingNumber: 1
          SubscriberName: SubscriberName
          Id: 6
          UserFullName: UserFullName
          StarScore: 5
          LocationName: LocationName
        CompletedDate: 2000-01-23T04:56:07.000+00:00
        Trade: Trade
        ScheduledDate_DTO: 2000-01-23T04:56:07.000+00:00
        PrioritySub: PrioritySub
        Area: Area
        Caller: Caller
        CallDate_DTO: 2000-01-23T04:56:07.000+00:00
        VendorPhone: VendorPhone
        CallDateString: CallDateString
      properties:
        TrackingNumber:
          format: int32
          type: integer
        Description:
          type: string
        Caller:
          type: string
        CallDateString:
          type: string
        CallDate_DTO:
          format: date-time
          type: string
        ScheduledDateString:
          type: string
        ScheduledDate_DTO:
          format: date-time
          type: string
        CreatedBy:
          type: string
        Vendor:
          type: string
        VendorPhone:
          type: string
        PrioritySub:
          type: string
        Trade:
          type: string
        Category:
          type: string
        Review:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackReview'
        Status:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderStatusDescriptor'
        Area:
          type: string
        CompletedDate:
          format: date-time
          type: string
        NotesCount:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Feedback.FeedbackReview:
      example:
        ReviewedDate: 2000-01-23T04:56:07.000+00:00
        Comment: Comment
        TrackingNumber: 1
        SubscriberName: SubscriberName
        Id: 6
        UserFullName: UserFullName
        StarScore: 5
        LocationName: LocationName
      properties:
        Id:
          description: Entity Id
          format: int32
          type: integer
        TrackingNumber:
          description: Work order tracking number. For provider reviews it is null
          format: int32
          type: integer
        SubscriberName:
          description: Subscriber display name
          type: string
        LocationName:
          description: Location name (Store Id)
          type: string
        UserFullName:
          description: User name who submit a review
          type: string
        ReviewedDate:
          description: Date when user posted or updated a review
          format: date-time
          type: string
        StarScore:
          description: Review star score. From 1 to 5
          format: int32
          type: integer
        Comment:
          description: User comment
          type: string
      type: object
    ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForProviderRequest:
      properties:
        ProviderId:
          description: Provider Id
          format: int32
          type: integer
        SearchWithin:
          description: Search within reviews comment
          type: string
        PageSize:
          description: Response page size (default 10)
          format: int32
          type: integer
        PageOffset:
          description: Response page offset (default 0)
          format: int32
          type: integer
        SortBy:
          description: Sort by field (default by Recent)
          enum:
          - Recent
          - HighestScoreFirst
          - LowestScoreFirst
          type: string
        SubscriberId:
          description: Subscriber Id
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForProviderResponse:
      example:
        TotalCount: 0
        Reviews:
        - ReviewedDate: 2000-01-23T04:56:07.000+00:00
          Comment: Comment
          TrackingNumber: 1
          SubscriberName: SubscriberName
          Id: 6
          UserFullName: UserFullName
          StarScore: 5
          LocationName: LocationName
        - ReviewedDate: 2000-01-23T04:56:07.000+00:00
          Comment: Comment
          TrackingNumber: 1
          SubscriberName: SubscriberName
          Id: 6
          UserFullName: UserFullName
          StarScore: 5
          LocationName: LocationName
        PageSize: 1
        TotalFilteredCount: 6
        PageOffset: 5
      properties:
        Reviews:
          description: User reviews for work orders or providers
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackReview'
          type: array
        TotalCount:
          format: int32
          type: integer
        TotalFilteredCount:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        PageOffset:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Feedback.ReviewProviderRequest:
      example:
        ProviderId: 6
        Comment: Comment
        SubscriberId: 5
        LocationId: 0
        Id: 5
        StarScore: 1
      properties:
        LocationId:
          description: Location Id
          format: int32
          type: integer
        ProviderId:
          description: Provider Id
          format: int32
          type: integer
        StarScore:
          description: Review star score. From 1 to 5
          format: int32
          type: integer
        Comment:
          description: User comment
          type: string
        Id:
          description: Provide review Id to update Comment and StarScore (optional)
          format: int32
          type: integer
        SubscriberId:
          description: Subscriber Id
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsInfoRequest:
      properties:
        ProviderId:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Feedback.FeedbackReviewsForWorkOrdersResponse:
      example:
        Reviews:
        - ReviewedDate: 2000-01-23T04:56:07.000+00:00
          Comment: Comment
          TrackingNumber: 1
          SubscriberName: SubscriberName
          Id: 6
          UserFullName: UserFullName
          StarScore: 5
          LocationName: LocationName
        - ReviewedDate: 2000-01-23T04:56:07.000+00:00
          Comment: Comment
          TrackingNumber: 1
          SubscriberName: SubscriberName
          Id: 6
          UserFullName: UserFullName
          StarScore: 5
          LocationName: LocationName
      properties:
        Reviews:
          description: User reviews for work orders
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.FeedbackReview'
          type: array
      type: object
    ServiceChannel.Services.Messaging.GlCode.RetrieveGlCodesResponse:
      description: Object containing the details of a GL Code.
      example:
        GetGlCodeResponses:
        - Trade: Trade
          Category: Category
          GlCode: GlCode
          Location: Location
        - Trade: Trade
          Category: Category
          GlCode: GlCode
          Location: Location
      properties:
        GetGlCodeResponses:
          description: Details of a GL Code returned for the authorized subscriber.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.GlCode.GetGlCodeResponse'
          type: array
      type: object
    ServiceChannel.Services.Messaging.GlCode.GetGlCodeResponse:
      description: GL Code object.
      example:
        Trade: Trade
        Category: Category
        GlCode: GlCode
        Location: Location
      properties:
        GlCode:
          description: GL Code numeric identifier.
          type: string
        Trade:
          description: Trade name that corresponds to the GL Code.
          type: string
        Category:
          description: Category name that corresponds to the GL Code.
          type: string
        Location:
          description: "The numeric identifier of the store, StoreId, in the client's\
            \ system. Assigned by and unique per subscriber."
          type: string
      type: object
    ServiceChannel.Services.Messaging.ApprovalCodes.GetApprovalCodesWithOptionsResponse:
      description: Holds response.
      example:
        ApprovalCodes:
        - CategoryId: 7
          Options:
          - AdditionalApprovalCodeId: 5
            OptionValue: OptionValue
            Id: 5
          - AdditionalApprovalCodeId: 5
            OptionValue: OptionValue
            Id: 5
          ValueFormat: 6
          Category: Category
          DefaultOptionId: 1
          IsEnabled: false
          EditableAtLineItemLevel: false
          LocationId: 0
          DefaultOption: DefaultOption
          OrderNumber: 9
          Code: Code
          LocationName: LocationName
          Name: Name
          SubscriberId: 3
          LocationStoreId: LocationStoreId
          Id: 2
        - CategoryId: 7
          Options:
          - AdditionalApprovalCodeId: 5
            OptionValue: OptionValue
            Id: 5
          - AdditionalApprovalCodeId: 5
            OptionValue: OptionValue
            Id: 5
          ValueFormat: 6
          Category: Category
          DefaultOptionId: 1
          IsEnabled: false
          EditableAtLineItemLevel: false
          LocationId: 0
          DefaultOption: DefaultOption
          OrderNumber: 9
          Code: Code
          LocationName: LocationName
          Name: Name
          SubscriberId: 3
          LocationStoreId: LocationStoreId
          Id: 2
        Message: Message
        ErrorCode: 2
      properties:
        ApprovalCodes:
          description: Gets or sets ApprovalCodes.
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.ApprovalCodes.ApprovalCodeWithOptions'
          type: array
        ErrorCode:
          description: "Numeric identifier that determines the nature of an error.\
            \ Possible values: `0` - success, otherwise - error."
          format: int32
          type: integer
        Message:
          description: Defines that the file’s remote storage is unavailable or its
            URL cannot be found.
          type: string
      type: object
    ServiceChannel.Api.Model.Entities.ApprovalCodes.ApprovalCodeWithOptions:
      example:
        CategoryId: 7
        Options:
        - AdditionalApprovalCodeId: 5
          OptionValue: OptionValue
          Id: 5
        - AdditionalApprovalCodeId: 5
          OptionValue: OptionValue
          Id: 5
        ValueFormat: 6
        Category: Category
        DefaultOptionId: 1
        IsEnabled: false
        EditableAtLineItemLevel: false
        LocationId: 0
        DefaultOption: DefaultOption
        OrderNumber: 9
        Code: Code
        LocationName: LocationName
        Name: Name
        SubscriberId: 3
        LocationStoreId: LocationStoreId
        Id: 2
      properties:
        LocationId:
          format: int32
          type: integer
        LocationName:
          type: string
        LocationStoreId:
          type: string
        EditableAtLineItemLevel:
          default: false
          type: boolean
        ValueFormat:
          format: int32
          type: integer
        DefaultOptionId:
          format: int32
          type: integer
        DefaultOption:
          type: string
        Options:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.ApprovalCodes.AdditionalApprovalCodeOption'
          type: array
        Id:
          format: int32
          type: integer
        CategoryId:
          format: int32
          type: integer
        Category:
          type: string
        Name:
          type: string
        Code:
          type: string
        OrderNumber:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        IsEnabled:
          default: false
          type: boolean
      type: object
    ServiceChannel.Api.Model.Entities.ApprovalCodes.AdditionalApprovalCodeOption:
      example:
        AdditionalApprovalCodeId: 5
        OptionValue: OptionValue
        Id: 5
      properties:
        Id:
          format: int32
          type: integer
        AdditionalApprovalCodeId:
          format: int32
          type: integer
        OptionValue:
          type: string
      type: object
    ServiceChannel.Services.Messaging.GlCode.GetGlCodeResponseMessage:
      description: GL Code name.
      example:
        GlCode: GlCode
      properties:
        GlCode:
          description: GL Code numeric identifier.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceSettingsGeneral:
      description: General invoice settings object.
      example:
        OtherCategoryIds:
        - 2
        - 2
        IsInvoiceNegativeFeatureEnabled: false
        IsInvoiceZeroVATEU: false
        TravelCategoryIds:
        - 3
        - 3
        IsInvoiceNumberValidationFeatureEnabled: false
        RequireResolutionText: false
        AvailableTrades: AvailableTrades
        OtherTradeIds:
        - 2
        - 2
        MaxDaysAfterPostingDate: 6
        MaterialsCategoryIds:
        - 9
        - 9
        RequireApprovalText: false
        LaborTradeIds:
        - 1
        - 1
        NumberRequirementsModel:
          ReuseInvoiceNumbersSelect:
          - Value: 4
            Name: Name
          - Value: 4
            Name: Name
          DefaultRestrictionComments:
            key: DefaultRestrictionComments
          InvoiceNumberRequirement:
            Pattern: Pattern
            Comment: Comment
            UpdatedByUser: UpdatedByUser
            AutoGenerationType: None
            CreatedByUser: CreatedByUser
            UpdatedDate: 2000-01-23T04:56:07.000+00:00
            ReuseInvoiceNumber: ReuseInvoiceNumber
            IsNew: false
            RestrictionType: None
            CreatedDateString: CreatedDateString
            CreatedByUserId: 1
            UpdatedDateString: UpdatedDateString
            SubscriberId: 1
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            Id: 7
            UpdatedByUserId: 1
          DefaultRestrictionPatterns:
            key: DefaultRestrictionPatterns
          AutoGenerationTypesSelect:
          - Value: 4
            Name: Name
          - Value: 4
            Name: Name
          RestrictionTypesSelect:
          - Value: 4
            Name: Name
          - Value: 4
            Name: Name
          Resources:
            InvoiceNumberLabel: InvoiceNumberLabel
            CommentPlaceHolder: CommentPlaceHolder
            RestrictionLabel: RestrictionLabel
            HelpStringLabel: HelpStringLabel
            GenerationRuleLabel: GenerationRuleLabel
            LastModifiedLabel: LastModifiedLabel
            PatternPlaceHolder: PatternPlaceHolder
        IsProviderAbleToAddSalesTax: false
        IsInvoiceApprovalCommentFeatureEnabled: false
        DaysBeforePostingDate: 0
        TravelTradeIds:
        - 5
        - 5
        AvailableCategories: AvailableCategories
        MaterialsTradeIds:
        - 5
        - 5
        LaborCategoryIds:
        - 7
        - 7
      properties:
        DaysBeforePostingDate:
          description: The number of days prior to the invoice posting date within
            which the invoice creation date can be set. Providers can not create invoices
            for a date in the past that is older than the specified number of days
            from the invoice posting date.
          format: int32
          type: integer
        MaxDaysAfterPostingDate:
          description: The number of days after the invoice posting date within which
            the invoice creation date can be set. Providers can not generate invoices
            for a date in the future that is greater than the specified number of
            days from the invoice posting date.
          format: int32
          type: integer
        RequireResolutionText:
          default: false
          description: Defines whether providers are required to enter a resolution
            when creating an invoice.
          type: boolean
        RequireApprovalText:
          default: false
          description: Defines whether subscriber’s employees are required to enter
            a comment when approving invoices.
          type: boolean
        IsInvoiceApprovalCommentFeatureEnabled:
          default: false
          description: Defines whether the feature that prompts subscriber’s employees
            to enter a comment when approving invoices is turned on.
          type: boolean
        IsInvoiceNumberValidationFeatureEnabled:
          default: false
          description: Defines whether the feature that enables the invoice number
            validation is turned on.
          type: boolean
        IsInvoiceNegativeFeatureEnabled:
          default: false
          description: Defines whether the feature that enables the invoice negative
            amounts for the required line items.
          type: boolean
        IsInvoiceZeroVATEU:
          default: false
          description: Use Us UI model in international locations.
          type: boolean
        AvailableTrades:
          description: A list of trades configured for the subscriber. The following
            parameters are returned for each trade:<br /> • `Id` — trade ID.<br /> •
            `Name` — trade name.<br /> • `PrimaryTradeName` — name of the primary
            trade for this trade.
          type: string
        AvailableCategories:
          description: A list of categories set up for the subscriber. The following
            parameters are returned for each category:<br /> • `Id` — category ID.<br
            /> • `SubscriberId` — subscriber ID.<br /> • `Name` — category name.<br
            /> • `HasDependency` — defines whether the category has dependent categories.<br
            /> • `PrimaryCategoryID` — ID of the primary category for this category.<br
            /> • `PrimaryCategoryName` — name of the primary category for this category.
          type: string
        LaborTradeIds:
          description: Trade IDs for which providers must itemize Labor charges when
            creating a line-item invoice.
          items:
            format: int32
            type: integer
          type: array
        MaterialsTradeIds:
          description: Trade IDs for which providers must itemize Material charges
            when creating a line-item invoice.
          items:
            format: int32
            type: integer
          type: array
        TravelTradeIds:
          description: Trade IDs for which providers must itemize Travel charges when
            creating a line-item invoice.
          items:
            format: int32
            type: integer
          type: array
        OtherTradeIds:
          description: Trade IDs for which providers must itemize Other charges when
            creating a line-item invoice.
          items:
            format: int32
            type: integer
          type: array
        LaborCategoryIds:
          description: Category IDs for which providers must itemize Labor charges
            when creating a line-item invoice.
          items:
            format: int32
            type: integer
          type: array
        MaterialsCategoryIds:
          description: Category IDs for which providers must itemize Material charges
            when creating a line-item invoice.
          items:
            format: int32
            type: integer
          type: array
        TravelCategoryIds:
          description: Category IDs for which providers must itemize Travel charges
            when creating a line-item invoice.
          items:
            format: int32
            type: integer
          type: array
        OtherCategoryIds:
          description: Category IDs for which providers must itemize Other charges
            when creating a line-item invoice.
          items:
            format: int32
            type: integer
          type: array
        NumberRequirementsModel:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.NumberRequirementsModel'
        IsProviderAbleToAddSalesTax:
          default: false
          description: Defines whether the provider can add sales tax to its ivoices
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Invoices.NumberRequirementsModel:
      description: Invoice number requirements object.
      example:
        ReuseInvoiceNumbersSelect:
        - Value: 4
          Name: Name
        - Value: 4
          Name: Name
        DefaultRestrictionComments:
          key: DefaultRestrictionComments
        InvoiceNumberRequirement:
          Pattern: Pattern
          Comment: Comment
          UpdatedByUser: UpdatedByUser
          AutoGenerationType: None
          CreatedByUser: CreatedByUser
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          ReuseInvoiceNumber: ReuseInvoiceNumber
          IsNew: false
          RestrictionType: None
          CreatedDateString: CreatedDateString
          CreatedByUserId: 1
          UpdatedDateString: UpdatedDateString
          SubscriberId: 1
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 7
          UpdatedByUserId: 1
        DefaultRestrictionPatterns:
          key: DefaultRestrictionPatterns
        AutoGenerationTypesSelect:
        - Value: 4
          Name: Name
        - Value: 4
          Name: Name
        RestrictionTypesSelect:
        - Value: 4
          Name: Name
        - Value: 4
          Name: Name
        Resources:
          InvoiceNumberLabel: InvoiceNumberLabel
          CommentPlaceHolder: CommentPlaceHolder
          RestrictionLabel: RestrictionLabel
          HelpStringLabel: HelpStringLabel
          GenerationRuleLabel: GenerationRuleLabel
          LastModifiedLabel: LastModifiedLabel
          PatternPlaceHolder: PatternPlaceHolder
      properties:
        AutoGenerationTypesSelect:
          description: A list of options in the "Generation uniqueness rule" drop-down
            list a subscriber admin can choose from when configuring invoice number
            rules for automatically generated invoices.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.SelectItem'
          type: array
        RestrictionTypesSelect:
          description: A list of options in the "Restrictions" drop-down list a subscriber
            admin can choose from when configuring invoice number restrictions for
            manually created invoices.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.SelectItem'
          type: array
        ReuseInvoiceNumbersSelect:
          description: A list of options in the "ReuseInvoiceNumber" drop-down list
            a subscriber admin can choose from when configuring invoice number.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.SelectItem'
          type: array
        InvoiceNumberRequirement:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceNumberRequirement'
        DefaultRestrictionComments:
          additionalProperties:
            type: string
          description: "A list of default explanatory comments on the invoice number\
            \ format for the corresponding restrictions. A comment is displayed to\
            \ a provider user in a tooltip when they try to submit an invoice whose\
            \ number does not meet the restrictions specified by their subscriber.\
            \ See `RestrictionTypesSelect` to identify which number (`Value`) corresponds\
            \ to which restriction type: `2` — *Digits Only*, `3` — *Alphanumeric\
            \ Only*."
          type: object
        DefaultRestrictionPatterns:
          additionalProperties:
            type: string
          description: "A list of default regular expressions that define search patterns\
            \ used to validate the number format of invoices created manually. See\
            \ `RestrictionTypesSelect` to identify which number (`Value`) corresponds\
            \ to which restriction type: `2` — *Digits Only*, `3` — *Alphanumeric\
            \ Only*."
          type: object
        Resources:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.Localizations'
      type: object
    ServiceChannel.Services.Messaging.Invoices.SelectItem:
      description: Object containing options a subscriber admin can choose from when
        configuring restrictions and rules for invoice numbers.
      example:
        Value: 4
        Name: Name
      properties:
        Value:
          description: Number indicating the order of the option in the corresponding
            drop-down list for configuring invoice number restrictions and rules.
            The count starts from 0.<br /> • Check `RestrictionTypesSelect` to find
            out which options are available in the "Restrictions" drop-down list where
            a subscriber admin can set up number restrictions for manually created
            invoices.<br /> • See `AutoGenerationTypesSelect` for options in the "Generation
            uniqueness rule" drop-down list used for configuring number generation
            rules for automatically created invoices.
          format: int32
          type: integer
        Name:
          description: Name of the option in the corresponding drop-down list — "Restrictions"
            or "Generation uniqueness rule".
          type: string
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceNumberRequirement:
      description: Invoice number requirements object.
      example:
        Pattern: Pattern
        Comment: Comment
        UpdatedByUser: UpdatedByUser
        AutoGenerationType: None
        CreatedByUser: CreatedByUser
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        ReuseInvoiceNumber: ReuseInvoiceNumber
        IsNew: false
        RestrictionType: None
        CreatedDateString: CreatedDateString
        CreatedByUserId: 1
        UpdatedDateString: UpdatedDateString
        SubscriberId: 1
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        Id: 7
        UpdatedByUserId: 1
      properties:
        Id:
          description: ID of the regular expression pattern used to validate the numbers
            of invoices created manually.
          format: int32
          type: integer
        SubscriberId:
          description: Unique ID of the subscriber whose invoice number requirements
            are returned.
          format: int32
          type: integer
        Pattern:
          description: "Regular expression pattern used to validate the numbers of\
            \ invoices created manually.<br />A value is returned even if the selected\
            \ `RestrictionType` is `0` — *None*. In this case, it’s the last pattern\
            \ entered in the field."
          type: string
        Comment:
          description: "Comment on the invoice number format displayed to a provider\
            \ user in a tooltip when they try to submit an invoice whose number does\
            \ not meet the specified restrictions. Invoice numbers are validated by\
            \ the regular expression pattern specified in `Pattern`.<br />A value\
            \ is returned even if the selected `RestrictionType` is `0` — *None*.\
            \ In this case, it’s the last comment entered in the field."
          type: string
        RestrictionType:
          description: Selected restriction for the numbers of invoices created manually.
            See `RestrictionTypesSelect` to identify which number (`Value`) corresponds
            to which restriction type.
          enum:
          - None
          - Custom
          - DigitsOnly
          - AlphaNumericOnly
          type: string
        AutoGenerationType:
          description: Selected rule for the numbers of invoices generated automatically.
            See `AutoGenerationTypesSelect` to identify which number (`Value`) corresponds
            to which rule.
          enum:
          - None
          - CurrentDate
          type: string
        CreatedDate:
          description: Date and time when the invoice number requirements were created.
          format: date-time
          type: string
        UpdatedDate:
          description: Date and time when the invoice number requirements were last
            updated.
          format: date-time
          type: string
        CreatedByUserId:
          description: Unique ID of the subscriber admin user who created the invoice
            number requirements.
          format: int32
          type: integer
        UpdatedByUserId:
          description: Unique ID of the subscriber admin user who last updated the
            invoice number requirements.
          format: int32
          type: integer
        CreatedByUser:
          description: Username of the subscriber admin who created the invoice number
            requirements.
          type: string
        UpdatedByUser:
          description: Username of the subscriber admin who last updated the invoice
            number requirements. The username appears in the **Invoice Number** section
            next to **Last modified**.
          type: string
        ReuseInvoiceNumber:
          description: Reuse invoice number
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        IsNew:
          default: false
          description: Defines whether a default restriction pattern is used.
          readOnly: true
          type: boolean
        CreatedDateString:
          description: Date when the invoice number requirements were created.
          readOnly: true
          type: string
        UpdatedDateString:
          description: Date when the invoice number requirements were last updated.
            The date appears in the **Invoice Number** section next to **Last modified**.
          readOnly: true
          type: string
      type: object
    ServiceChannel.Services.Messaging.Invoices.Localizations:
      description: The object for UI labels that appear in the "Invoice Number" section
        on the "General" tab of the "Admin - Invoices" page in Service Automation.
        Note that only subscriber users with the Super Admin secondary role can access
        this page.
      example:
        InvoiceNumberLabel: InvoiceNumberLabel
        CommentPlaceHolder: CommentPlaceHolder
        RestrictionLabel: RestrictionLabel
        HelpStringLabel: HelpStringLabel
        GenerationRuleLabel: GenerationRuleLabel
        LastModifiedLabel: LastModifiedLabel
        PatternPlaceHolder: PatternPlaceHolder
      properties:
        InvoiceNumberLabel:
          description: Label for the "Invoice Number" section name.
          type: string
        LastModifiedLabel:
          description: The "Last modified" label for details about who last updated
            the invoice requirements and when.
          type: string
        RestrictionLabel:
          description: Label for the "Restrictions" drop-down list where a subscriber
            admin selects which restriction should apply to the numbers of manually
            created invoices.
          type: string
        GenerationRuleLabel:
          description: Label for the "Generation uniqueness rule" drop-down list where
            a subscriber admin selects which rule should apply to the numbers of automatically
            generated invoices.
          type: string
        HelpStringLabel:
          description: The "Help string (to show vendors)" label for the field containing
            comments shown to a provider when they try to submit an invoice whose
            number does not meet the restrictions specified by a subscriber.
          type: string
        PatternPlaceHolder:
          description: A placeholder text shown in the field where a subscriber admin
            enters a regular expression pattern to set restrictions for the numbers
            of manually created invoices.
          type: string
        CommentPlaceHolder:
          description: A placeholder text shown in the field where a subscriber admin
            enters a comment for the restriction applied to the numbers of manually
            created invoices based on the selected restriction type.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceRejectionReasonResponse:
      example:
        Description: Description
        Retired: false
        SubscriberId: 6
        ReasonType: Custom
        Id: 0
      properties:
        Id:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        Description:
          type: string
        Retired:
          default: false
          type: boolean
        ReasonType:
          enum:
          - Custom
          - WorkOrderNotInvoiceable
          - InvoiceRequiresCorrection
          - Other
          type: string
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceStatisticsResponse:
      description: Invoice statistics response class
      example:
        ApprovedInvoices: 5
        DaysPeriod: 0
        ApprovedInvoicesDaysPeriod: 5
        OpenInvoices: 1
        WoReadyForInvoices: 6
      properties:
        DaysPeriod:
          description: "Gets or sets the period in days, last X days for which Invoices\
            \ statistics was collected"
          format: int32
          type: integer
        WoReadyForInvoices:
          description: Gets or sets the count of Work Orders ready for Invoices
          format: int32
          type: integer
        OpenInvoices:
          description: Gets or sets the count of open Invoices
          format: int32
          type: integer
        ApprovedInvoicesDaysPeriod:
          description: "Gets or sets the period in days, last X days during which\
            \ Invoices are approved"
          format: int32
          type: integer
        ApprovedInvoices:
          description: Gets or sets the count of Invoices approved in the past <ApprovedInvoicesDaysPeriod
            /> days
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Invoices.CreateInvoiceRequest:
      properties:
        InvoiceNumber:
          description: Invoice identifier. Must be unique for each invoice.
          type: string
        InvoiceDate:
          description: Date and time when the invoice was issued.
          format: date-time
          type: string
        InvoiceDateDTO:
          description: Date and time when the invoice was issued. Indicated with the
            UTC offset.
          format: date-time
          type: string
        WoIdentifier:
          type: string
        InvoiceTax:
          description: The amount of the tax.
          format: double
          type: number
        PostedTaxRate:
          format: float
          type: number
        NonTaxableLabor:
          format: int32
          type: integer
        NonTaxableTravel:
          format: int32
          type: integer
        NonTaxableMaterial:
          format: int32
          type: integer
        NonTaxableFreight:
          format: int32
          type: integer
        NonTaxableOther:
          format: int32
          type: integer
        WithMismatchedRates:
          default: false
          type: boolean
        InvoiceTotal:
          format: double
          type: number
        InvoiceText:
          description: Detailed description of the work completed. Subscriber can
            change this field to `required`.
          type: string
        InvoiceAmountsDetails:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceAmountsDetails'
        InvoiceTaxesDetails:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceTaxesDetails'
        Tax2Details:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.Tax2Details'
        TaxIncluded:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.CreatingInvoiceTaxIncludedRequest'
        Labors:
          description: Get or set the labors description (Subscriber can change this
            field to required).
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceLabor'
          type: array
        Materials:
          description: Get or set the materials description (Subscriber can change
            this field to required).
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceMaterial'
          type: array
        Travels:
          description: Get or set the materials description (Subscriber can change
            this field to required).
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceTravel'
          type: array
        Others:
          description: Get or set the others description (Subscriber can change this
            field to required).
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceOther'
          type: array
        ExplainDispute:
          description: Gets or sets the explain dispute.
          type: string
        SubmitDisputed:
          default: false
          type: boolean
        VendorId:
          description: Gets or sets vendor payee identifier.
          format: int32
          type: integer
        Terms:
          description: Invoice Terms
          type: string
        Attachments:
          description: Optional
          items:
            $ref: '#/components/schemas/AddInvoiceAttachmentRequest'
          type: array
      required:
      - InvoiceNumber
      - WoIdentifier
      type: object
    ServiceChannel.Services.Messaging.Invoices.CreatingInvoiceTaxIncludedRequest:
      description: The invoice tax included request model.
      properties:
        LaborTaxIncluded:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        TravelTaxIncluded:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        MaterialTaxIncluded:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        FreightTaxIncluded:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        OtherTaxIncluded:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    AddInvoiceAttachmentRequest:
      properties:
        Name:
          type: string
        Description:
          type: string
        Path:
          type: string
        Visibility:
          description: "Note visibility - valid values: null, 1, 2, 3"
          format: int32
          type: integer
        IsInvoiceDigitalCopy:
          default: false
          description: Mark attachment as Invoice Digital Copy
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Invoices.ApiGetInvoiceResponse:
      example:
        ProviderId: 6
        StatusChangeUser: StatusChangeUser
        WoTrackingNumber: 3
        WithAutoApprovalCriteria: false
        NonTaxableOther: 3
        WoAssignedTo: WoAssignedTo
        PaidDateStr: PaidDateStr
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        Materials:
        - MarkUpPercent: 6.073898085781152
          Description: Description
          PartNum: PartNum
          Amount: 0.43431398824148815
          IsRateDiscrepancy: false
          Quantity: 3.901545264248647
          IsPartPriceDiscrepancy: false
          AgreedPartPrice: 4.459605034958679
          PriceDiscrepancyReason: PriceDiscrepancyReason
          InvoiceId: 5
          UnitPrice: 4.86315908102884
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          PartName: PartName
          UnitType: UnitType
          MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
          isNontaxableVATEU: false
          Id: 7
          AgreedMarkUpPercent: 8.251625748923757
          IsMarkUpDiscrepancy: false
        - MarkUpPercent: 6.073898085781152
          Description: Description
          PartNum: PartNum
          Amount: 0.43431398824148815
          IsRateDiscrepancy: false
          Quantity: 3.901545264248647
          IsPartPriceDiscrepancy: false
          AgreedPartPrice: 4.459605034958679
          PriceDiscrepancyReason: PriceDiscrepancyReason
          InvoiceId: 5
          UnitPrice: 4.86315908102884
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          PartName: PartName
          UnitType: UnitType
          MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
          isNontaxableVATEU: false
          Id: 7
          AgreedMarkUpPercent: 8.251625748923757
          IsMarkUpDiscrepancy: false
        PostedTaxRate: 4.9652185
        Payments:
        - PaymentDate: 2000-01-23T04:56:07.000+00:00
          PaidBy: PaidBy
          Id: 1
          PaymentAmount: 6.84685269835264
          PaymentNumber: PaymentNumber
        - PaymentDate: 2000-01-23T04:56:07.000+00:00
          PaidBy: PaidBy
          Id: 1
          PaymentAmount: 6.84685269835264
          PaymentNumber: PaymentNumber
        InvoiceBalance: 6.683562403749608
        TravelTaxIncluded: false
        StarredDate: 2000-01-23T04:56:07.000+00:00
        Trade: Trade
        StarredDateStr: StarredDateStr
        InvoiceAmountsDetails:
          MaterialAmount: 6.878052220127876
          TravelAmount: 5.944895607614016
          FreightAmount: 6.704019297950036
          OtherDescription: OtherDescription
          LaborAmount: 6.778324963048013
          OtherAmount: 3.353193347011243
        InvoiceDateStr: InvoiceDateStr
        SubscriberId: 1
        IsInvoiceNegativeLineItemsEnabled: false
        Currency:
          DecimalCount: 1
          Entity: Entity
          AlphabeticalCode: AlphabeticalCode
          NumericCode: NumericCode
          Rate: 4.965218492984954
          Id: 7
          CurrencyName: CurrencyName
        PostedBy: PostedBy
        InvoiceTax: 1.1730742509559433
        FreightApprovalCodeGroups:
        - ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        - ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        WithMismatchedRates: false
        InvoiceNumber: InvoiceNumber
        IsStarred: false
        IsHolidayLaborRate: false
        DiscountPercent: 9.301444243932576
        PreviousUpdated: PreviousUpdated
        NonTaxableMaterial: 8
        TransferredDateStr: TransferredDateStr
        Status: Status
        ApprovalCodes:
        - ParentId: 2
          IsDefault: false
          ApprovalCodeType: Labor
          InternalId: 3
          Id: 7
          InternalParentId: 8
          InvoiceId: 0
          InvoiceChargeId: 3
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        - ParentId: 2
          IsDefault: false
          ApprovalCodeType: Labor
          InternalId: 3
          Id: 7
          InternalParentId: 8
          InvoiceId: 0
          InvoiceChargeId: 3
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        StatusHistoryShort:
        - Status: Status
          CreatedBy: CreatedBy
          CreatedById: 9
          InvId: 5
          ActionDate: ActionDate
        - Status: Status
          CreatedBy: CreatedBy
          CreatedById: 9
          InvId: 5
          ActionDate: ActionDate
        Tax2ApprovalCodeGroups:
        - ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        - ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        BatchNumber: BatchNumber
        ApprovedDate: 2000-01-23T04:56:07.000+00:00
        LaborTaxIncluded: false
        IsDuplicate: false
        Subtotal: 2.8841621266687802
        Terms: Terms
        ApprovedDateStr: ApprovedDateStr
        VendorPayeeId: 9
        Labels:
        - IsActive: false
          LabelText: LabelText
          LabelId: 4
          InvoiceId: 2
        - IsActive: false
          LabelText: LabelText
          LabelId: 4
          InvoiceId: 2
        EarlyPayFeePercent: 3.616076749251911
        IsHideUsernameOnInvoice: false
        InvoiceTotal: 9.369310271410669
        PostedDate: 2000-01-23T04:56:07.000+00:00
        NonTaxableFreight: 7
        Id: 7
        SubscriberFee: 2.3021358869347655
        TaxApprovalCodeGroups:
        - ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        - ApprovalCodeType: Labor
          ApprovalCodes:
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          - ParentId: 0
            IsDefault: false
            ApprovalCodeType: Labor
            InternalId: 9
            Amount: 1.041444916118296
            Id: 4
            InternalParentId: 0
            InvoiceId: 7
            InvoiceChargeId: 9
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          Amount: 4.258773108174356
          ApprovalCode: ApprovalCode
          AdditionalApprovalCode: AdditionalApprovalCode
        MaterialsTaxIncluded: false
        StoredFeatures:
        - StoredFeatures
        - StoredFeatures
        Discount: 5.637376656633329
        Description: Description
        IsTransferred: false
        Tax2Details:
          Tax2Amount: 3.0576100241049344
          Tax2Name: Tax2Name
        InvoiceTaxesDetails:
          LaborTaxPercent: 3.0937452626664474
          TravelTaxPercent: 0.8851374739011653
          FreightTaxPercent: 7.058770351582356
          TravelTax: 8.969578798196912
          MaterialTax: 4.652396432933246
          OtherTax: 3.0205796992916243
          MaterialTaxPercent: 7.143538047012306
          OtherTaxPercent: 6.519180951018382
          LaborTax: 0.10263654006109402
          FreightTax: 7.740351818741173
        LastActionDate: 2000-01-23T04:56:07.000+00:00
        ProviderFee: 7.061401241503109
        NonTaxableLabor: 5
        PaidDate: 2000-01-23T04:56:07.000+00:00
        FreightTaxIncluded: false
        Number: Number
        Labors:
        - SkillLevel: SkillLevel
          Hours: 4.078845849666752
          Amount: 0.2025324113236393
          IsRateDiscrepancy: false
          RateDiscrepancyReason: RateDiscrepancyReason
          CityPerformed: CityPerformed
          InvoiceId: 5
          NumOfTech: NumOfTech
          HourlyRate: 3.2588565619047607
          IsOffShore: false
          AgreedRate: 6.628464275087742
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          LaborType: LaborType
          ServiceType: ServiceType
          isNontaxableVATEU: false
          Id: 7
        - SkillLevel: SkillLevel
          Hours: 4.078845849666752
          Amount: 0.2025324113236393
          IsRateDiscrepancy: false
          RateDiscrepancyReason: RateDiscrepancyReason
          CityPerformed: CityPerformed
          InvoiceId: 5
          NumOfTech: NumOfTech
          HourlyRate: 3.2588565619047607
          IsOffShore: false
          AgreedRate: 6.628464275087742
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          LaborType: LaborType
          ServiceType: ServiceType
          isNontaxableVATEU: false
          Id: 7
        Travels:
        - IsOffShore: false
          UnitPrice: 8.28965939814297
          Description: Description
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          UnitType: UnitType
          Amount: 4.573936264232251
          Quantity: 6.623518433804886
          isNontaxableVATEU: false
          Id: 2
          InvoiceId: 1
        - IsOffShore: false
          UnitPrice: 8.28965939814297
          Description: Description
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          UnitType: UnitType
          Amount: 4.573936264232251
          Quantity: 6.623518433804886
          isNontaxableVATEU: false
          Id: 2
          InvoiceId: 1
        NonTaxableTravel: 5
        InvoiceDate: 2000-01-23T04:56:07.000+00:00
        VendorPayee:
          Zip: Zip
          State: State
          FullName: FullName
          Address2: Address2
          VendorNumber: VendorNumber
          Country: Country
          Id: 0
          Address1: Address1
          City: City
        LastActionDateStr: LastActionDateStr
        DisputeReason: DisputeReason
        IsOutsourced: false
        IsChargesApprovalCodesDefault: false
        Others:
        - Description: Description
          Amount: 1.8268702177058116
          Quantity: 9.183123594773994
          InvoiceId: 9
          AgreedUnitPrice: 8.761432466225475
          PriceListOtherChargeId: 0
          Type: Type
          UnitPrice: 3.502657762086401
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          UnitType: UnitType
          IsUnitPriceDiscrepancy: false
          UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
          isNontaxableVATEU: false
          Id: 8
        - Description: Description
          Amount: 1.8268702177058116
          Quantity: 9.183123594773994
          InvoiceId: 9
          AgreedUnitPrice: 8.761432466225475
          PriceListOtherChargeId: 0
          Type: Type
          UnitPrice: 3.502657762086401
          ApprovalCodeGroup:
            ApprovalCodeType: Labor
            ApprovalCodes:
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 0
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 9
              Amount: 1.041444916118296
              Id: 4
              InternalParentId: 0
              InvoiceId: 7
              InvoiceChargeId: 9
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            Amount: 4.258773108174356
            ApprovalCode: ApprovalCode
            AdditionalApprovalCode: AdditionalApprovalCode
          UnitType: UnitType
          IsUnitPriceDiscrepancy: false
          UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
          isNontaxableVATEU: false
          Id: 8
        StatusChangeDateStr: StatusChangeDateStr
        StarredBy: StarredBy
        Comments: Comments
        LocationId: 5
        ProjectId: 1
        IsRestrictedForChanges: false
        PostedTax2Rate: 5.025005
        EditableAdditionalApprovalCode:
          SetupId: 8
          Options:
          - Value: Value
            Id: 1
          - Value: Value
            Id: 1
          DefaultValue: DefaultValue
          ValueFormat: 3
          Header: Header
          DefaultOptionId: 6
          EditableAtLineItemLevel: 6
          Value: Value
          LocationId: 9
        IsExists: false
        ApprovalCode: ApprovalCode
        ProviderName: ProviderName
        OtherTaxIncluded: false
        StatusChangeDate: 2000-01-23T04:56:07.000+00:00
        PostedDateStr: PostedDateStr
        TransferredDate: 2000-01-23T04:56:07.000+00:00
        RejectionReasonDescription: RejectionReasonDescription
        StatusChangeUserid: StatusChangeUserid
        WeatherEventTypeForInvoice:
          Description: Description
          Id: 7
          InvoiceId: 1
          Name: Name
        InPaymentManager: false
      properties:
        VendorPayee:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.ApiVendorPayee'
        ProviderId:
          description: Gets or sets provider identifier.
          format: int32
          type: integer
        SubscriberId:
          description: Gets or sets subscriber identifier.
          format: int32
          type: integer
        LocationId:
          description: Gets or sets location identifier.
          format: int32
          type: integer
        InvoiceNumber:
          description: Gets or sets invoice number.
          readOnly: true
          type: string
        WithAutoApprovalCriteria:
          default: false
          description: Gets or sets if invoice meets Auto Approval Criteria.
          type: boolean
        PostedDateStr:
          readOnly: true
          type: string
        InvoiceDateStr:
          readOnly: true
          type: string
        PaidDateStr:
          readOnly: true
          type: string
        StarredDateStr:
          readOnly: true
          type: string
        ApprovedDateStr:
          readOnly: true
          type: string
        TransferredDateStr:
          readOnly: true
          type: string
        LastActionDateStr:
          readOnly: true
          type: string
        StatusChangeDateStr:
          readOnly: true
          type: string
        ProviderName:
          type: string
        PreviousUpdated:
          type: string
        Discount:
          format: double
          type: number
        SubscriberFee:
          format: double
          type: number
        ProviderFee:
          format: double
          type: number
        InPaymentManager:
          default: false
          type: boolean
        DiscountPercent:
          format: double
          type: number
        Status:
          type: string
        EarlyPayFeePercent:
          format: double
          type: number
        Labels:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.Workorders.Label'
          type: array
        WeatherEventTypeForInvoice:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.Invoices.WeatherEventTypeForInvoice'
        IsHideUsernameOnInvoice:
          default: false
          type: boolean
        IsInvoiceNegativeLineItemsEnabled:
          default: false
          type: boolean
        IsHolidayLaborRate:
          default: false
          type: boolean
        ProjectId:
          description: WO ProjectId
          format: int32
          type: integer
        IsRestrictedForChanges:
          default: false
          type: boolean
        Payments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentResponse'
          type: array
        DisputeReason:
          type: string
        RejectionReasonDescription:
          type: string
        Id:
          format: int32
          type: integer
        Number:
          description: Gets or sets invoice number.
          type: string
        BatchNumber:
          description: Gets or sets Batch number.
          type: string
        InvoiceTax:
          format: double
          type: number
        PostedTaxRate:
          format: float
          type: number
        PostedTax2Rate:
          format: float
          type: number
        VendorPayeeId:
          format: int32
          type: integer
        InvoiceTotal:
          description: Gets or sets total with tax amounts.
          format: double
          type: number
        InvoiceBalance:
          format: double
          type: number
        Currency:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Currencies.Currency'
        ApprovedDate:
          format: date-time
          type: string
        ApprovalCode:
          type: string
        EditableAdditionalApprovalCode:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApprovalCodes.EditableAdditionalApprovalCode'
        PostedDate:
          format: date-time
          type: string
        PostedBy:
          type: string
        Subtotal:
          format: double
          type: number
        Trade:
          type: string
        InvoiceAmountsDetails:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceAmountsDetails'
        InvoiceTaxesDetails:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceTaxesDetails'
        Tax2Details:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.Tax2Details'
        Labors:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceLabor'
          type: array
        Materials:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceMaterial'
          type: array
        Travels:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceTravel'
          type: array
        Others:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceOther'
          type: array
        TaxApprovalCodeGroups:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup'
          type: array
        Tax2ApprovalCodeGroups:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup'
          type: array
        FreightApprovalCodeGroups:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCodeGroup'
          type: array
        WithMismatchedRates:
          default: false
          type: boolean
        IsOutsourced:
          default: false
          type: boolean
        StarredBy:
          type: string
        IsStarred:
          default: false
          type: boolean
        IsTransferred:
          default: false
          readOnly: true
          type: boolean
        StarredDate:
          format: date-time
          type: string
        Description:
          type: string
        InvoiceDate:
          format: date-time
          type: string
        LaborTaxIncluded:
          default: false
          type: boolean
        TravelTaxIncluded:
          default: false
          type: boolean
        MaterialsTaxIncluded:
          default: false
          type: boolean
        FreightTaxIncluded:
          default: false
          type: boolean
        OtherTaxIncluded:
          default: false
          type: boolean
        NonTaxableLabor:
          format: int32
          type: integer
        NonTaxableTravel:
          format: int32
          type: integer
        NonTaxableMaterial:
          format: int32
          type: integer
        NonTaxableFreight:
          format: int32
          type: integer
        NonTaxableOther:
          format: int32
          type: integer
        IsExists:
          default: false
          readOnly: true
          type: boolean
        StatusChangeDate:
          format: date-time
          type: string
        StatusChangeUser:
          type: string
        StatusChangeUserid:
          type: string
        IsDuplicate:
          default: false
          type: boolean
        WoTrackingNumber:
          description: Gets or sets work order tracking number.
          format: int32
          type: integer
        Terms:
          description: terms
          type: string
        Comments:
          type: string
        PaidDate:
          format: date-time
          type: string
        TransferredDate:
          format: date-time
          type: string
        LastActionDate:
          format: date-time
          type: string
        UpdatedDate:
          description: Updated Date
          format: date-time
          type: string
        StatusHistoryShort:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.StatusHistoryShort'
          type: array
        WoAssignedTo:
          description: Gets or sets WO Assignee
          type: string
        ApprovalCodes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoiceApprovalCode'
          type: array
        IsChargesApprovalCodesDefault:
          default: false
          type: boolean
        StoredFeatures:
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.Invoices.ApiVendorPayee:
      example:
        Zip: Zip
        State: State
        FullName: FullName
        Address2: Address2
        VendorNumber: VendorNumber
        Country: Country
        Id: 0
        Address1: Address1
        City: City
      properties:
        Id:
          format: int32
          type: integer
        VendorNumber:
          type: string
        FullName:
          type: string
        Address1:
          type: string
        Address2:
          type: string
        City:
          type: string
        State:
          type: string
        Zip:
          type: string
        Country:
          type: string
      type: object
    ServiceChannel.Api.Model.Workorders.Label:
      example:
        IsActive: false
        LabelText: LabelText
        LabelId: 4
        InvoiceId: 2
      properties:
        LabelText:
          type: string
        InvoiceId:
          format: int32
          type: integer
        LabelId:
          format: int32
          type: integer
        IsActive:
          default: false
          type: boolean
      type: object
    ServiceChannel.Api.Model.Invoices.WeatherEventTypeForInvoice:
      example:
        Description: Description
        Id: 7
        InvoiceId: 1
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Description:
          type: string
        InvoiceId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy:
      description: Rate Discrepancy Item
      example:
        SkillLevel: 0
        AgreedRate: 5.962133916683182
        LaborType: 6
        SkillLevelName: SkillLevelName
        LaborHours: 5.637376656633329
        RateDiscrepancyReason: RateDiscrepancyReason
        NumOfTech: NumOfTech
        LaborTypeName: LaborTypeName
        HourlyRate: 1.4658129805029452
      properties:
        SkillLevel:
          description: "Get or set skill level (1 - Supervisor, 2 - Technician, 3\
            \ - Helper)."
          format: int32
          type: integer
        SkillLevelName:
          description: Get or set skill level name
          type: string
        LaborType:
          description: "Get or set type of the labor (1 - Regular, 2 - Overtime, 3\
            \ - Double Time)."
          format: int32
          type: integer
        LaborTypeName:
          description: Get or set labor type name.
          type: string
        HourlyRate:
          description: Get or set hourly rate.
          format: double
          type: number
        AgreedRate:
          description: Get or set agreed hourly rate.
          format: double
          type: number
        NumOfTech:
          description: Get or set number of techs.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        LaborHours:
          description: Get or set spent hours.
          format: double
          type: number
        RateDiscrepancyReason:
          description: Get or set rate discrepancy reason.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoiceDiscrepancy:
      example:
        LaborRateDiscrepancies:
        - SkillLevel: 0
          AgreedRate: 5.962133916683182
          LaborType: 6
          SkillLevelName: SkillLevelName
          LaborHours: 5.637376656633329
          RateDiscrepancyReason: RateDiscrepancyReason
          NumOfTech: NumOfTech
          LaborTypeName: LaborTypeName
          HourlyRate: 1.4658129805029452
        - SkillLevel: 0
          AgreedRate: 5.962133916683182
          LaborType: 6
          SkillLevelName: SkillLevelName
          LaborHours: 5.637376656633329
          RateDiscrepancyReason: RateDiscrepancyReason
          NumOfTech: NumOfTech
          LaborTypeName: LaborTypeName
          HourlyRate: 1.4658129805029452
        MaterialMarkupDiscrepancies:
        - AgreedMarkupPercent: 1.4658129805029452
          AppliedMarkupPercent: 6.027456183070403
          LineItemId: 0
          DiscrepancyReason: DiscrepancyReason
        - AgreedMarkupPercent: 1.4658129805029452
          AppliedMarkupPercent: 6.027456183070403
          LineItemId: 0
          DiscrepancyReason: DiscrepancyReason
        OtherPriceDiscrepancies:
        - LineItemId: 5
          AppliedUnitPrice: 5.637376656633329
          DiscrepancyReason: DiscrepancyReason
          AgreedUnitPrice: 2.3021358869347655
        - LineItemId: 5
          AppliedUnitPrice: 5.637376656633329
          DiscrepancyReason: DiscrepancyReason
          AgreedUnitPrice: 2.3021358869347655
      properties:
        LaborRateDiscrepancies:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.RateDiscrepancy'
          type: array
        MaterialMarkupDiscrepancies:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.MaterialMarkupDiscrepancy'
          type: array
        OtherPriceDiscrepancies:
          description: Get or set OtherPriceDiscrepancies
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.OtherPriceDiscrepancy'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Invoices.MaterialMarkupDiscrepancy:
      example:
        AgreedMarkupPercent: 1.4658129805029452
        AppliedMarkupPercent: 6.027456183070403
        LineItemId: 0
        DiscrepancyReason: DiscrepancyReason
      properties:
        LineItemId:
          format: int32
          type: integer
        AppliedMarkupPercent:
          format: double
          type: number
        AgreedMarkupPercent:
          format: double
          type: number
        DiscrepancyReason:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Invoices.OtherPriceDiscrepancy:
      description: OtherPriceDiscrepancies
      example:
        LineItemId: 5
        AppliedUnitPrice: 5.637376656633329
        DiscrepancyReason: DiscrepancyReason
        AgreedUnitPrice: 2.3021358869347655
      properties:
        LineItemId:
          description: Get or set LineItemId
          format: int32
          type: integer
        AppliedUnitPrice:
          description: Get or set AppliedUnitPrice
          format: double
          type: number
        AgreedUnitPrice:
          description: Get or set AgreedUnitPrice
          format: double
          type: number
        DiscrepancyReason:
          description: Get or set DiscrepancyReason
          type: string
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoicePaymentRequest:
      description: Request object to add a payment to an invoice.
      properties:
        PaymentDate:
          description: Date and time when the specified invoice is paid. Cannot be
            a past date.
          format: date-time
          type: string
        PaymentNumber:
          description: Order number of payment for the invoice.
          type: string
        PaymentAmount:
          description: "Amount you want to pay. Cannot exceed the invoice total amount.\
            \ If it’s a credited invoice, a single payment is required with a minus\
            \ before the payment amount."
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkRequest:
      description: Request model to add payment records in bulk.
      properties:
        Payments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.AddInvoicePaymentRequest'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Invoices.AddInvoicePaymentRequest:
      description: Object details to add payment to an invoice.
      properties:
        InvoiceId:
          description: Unique numeric invoice identifier.
          format: int32
          type: integer
        PaymentDate:
          description: Date and time when the specified invoice is paid. Cannot be
            prior to the invoice creation date.
          format: date-time
          type: string
        PaymentNumber:
          description: Number provided by a user when adding a payment record.
          type: string
        PaymentAmount:
          description: "Amount of the payment. Cannot exceed the total amount of the\
            \ invoice. If it’s a credited invoice, a single payment is required with\
            \ a minus before the payment amount."
          format: double
          type: number
      type: object
    System.Web.Http.Results.NegotiatedContentResult[ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkResponse]:
      properties:
        StatusCode:
          enum:
          - Continue
          - SwitchingProtocols
          - OK
          - Created
          - Accepted
          - NonAuthoritativeInformation
          - NoContent
          - ResetContent
          - PartialContent
          - MultipleChoices
          - Ambiguous
          - MovedPermanently
          - Moved
          - Found
          - Redirect
          - SeeOther
          - RedirectMethod
          - NotModified
          - UseProxy
          - Unused
          - TemporaryRedirect
          - RedirectKeepVerb
          - BadRequest
          - Unauthorized
          - PaymentRequired
          - Forbidden
          - NotFound
          - MethodNotAllowed
          - NotAcceptable
          - ProxyAuthenticationRequired
          - RequestTimeout
          - Conflict
          - Gone
          - LengthRequired
          - PreconditionFailed
          - RequestEntityTooLarge
          - RequestUriTooLong
          - UnsupportedMediaType
          - RequestedRangeNotSatisfiable
          - ExpectationFailed
          - UpgradeRequired
          - InternalServerError
          - NotImplemented
          - BadGateway
          - ServiceUnavailable
          - GatewayTimeout
          - HttpVersionNotSupported
          readOnly: true
          type: string
        Content:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkResponse'
        ContentNegotiator:
          type: object
        Request:
          type: object
        Formatters:
          items:
            $ref: '#/components/schemas/System.Net.Http.Formatting.MediaTypeFormatter'
          readOnly: true
          type: array
      type: object
    ServiceChannel.Services.Messaging.Invoices.InvoicePaymentBulkResponse:
      description: Invoice payments response object.
      example:
        Payments:
        - PaymentDate: 2000-01-23T04:56:07.000+00:00
          PaymentId: 0
          Error:
            Message: Message
            Code: 6
          InvoiceId: 1
          PaymentAmount: 5.962133916683182
          PaymentNumber: PaymentNumber
        - PaymentDate: 2000-01-23T04:56:07.000+00:00
          PaymentId: 0
          Error:
            Message: Message
            Code: 6
          InvoiceId: 1
          PaymentAmount: 5.962133916683182
          PaymentNumber: PaymentNumber
      properties:
        Payments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.AddInvoicePaymentResponse'
          type: array
      type: object
    System.Net.Http.Formatting.IContentNegotiator:
      type: object
    System.Net.Http.Formatting.MediaTypeFormatter:
      properties:
        SupportedMediaTypes:
          items:
            $ref: '#/components/schemas/System.Net.Http.Headers.MediaTypeHeaderValue'
          readOnly: true
          type: array
        SupportedEncodings:
          items:
            $ref: '#/components/schemas/System.Text.Encoding'
          readOnly: true
          type: array
        MediaTypeMappings:
          items:
            $ref: '#/components/schemas/System.Net.Http.Formatting.MediaTypeMapping'
          readOnly: true
          type: array
        RequiredMemberSelector:
          type: object
      type: object
    ServiceChannel.Services.Messaging.Invoices.AddInvoicePaymentResponse:
      description: Object details of the added payment.
      example:
        PaymentDate: 2000-01-23T04:56:07.000+00:00
        PaymentId: 0
        Error:
          Message: Message
          Code: 6
        InvoiceId: 1
        PaymentAmount: 5.962133916683182
        PaymentNumber: PaymentNumber
      properties:
        PaymentDate:
          description: Date and time when the specified invoice is paid.
          format: date-time
          type: string
        PaymentId:
          description: Unique numeric invoice payment ID.
          format: int32
          type: integer
        Error:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Invoices.ResponseError'
        InvoiceId:
          description: Unique numeric invoice identifier.
          format: int32
          type: integer
        PaymentNumber:
          description: Number provided by a user when adding a payment record.
          type: string
        PaymentAmount:
          description: "Amount of the payment. Cannot exceed the total amount of the\
            \ invoice. If it’s a credited invoice, a single payment is required with\
            \ a minus before the payment amount."
          format: double
          type: number
      type: object
    System.Net.Http.Headers.MediaTypeHeaderValue:
      properties:
        CharSet:
          type: string
        Parameters:
          items:
            $ref: '#/components/schemas/System.Net.Http.Headers.NameValueHeaderValue'
          readOnly: true
          type: array
        MediaType:
          type: string
      type: object
    System.Text.Encoding:
      properties:
        BodyName:
          readOnly: true
          type: string
        EncodingName:
          readOnly: true
          type: string
        HeaderName:
          readOnly: true
          type: string
        WebName:
          readOnly: true
          type: string
        WindowsCodePage:
          format: int32
          readOnly: true
          type: integer
        IsBrowserDisplay:
          default: false
          readOnly: true
          type: boolean
        IsBrowserSave:
          default: false
          readOnly: true
          type: boolean
        IsMailNewsDisplay:
          default: false
          readOnly: true
          type: boolean
        IsMailNewsSave:
          default: false
          readOnly: true
          type: boolean
        IsSingleByte:
          default: false
          readOnly: true
          type: boolean
        EncoderFallback:
          $ref: '#/components/schemas/System.Text.EncoderFallback'
        DecoderFallback:
          $ref: '#/components/schemas/System.Text.DecoderFallback'
        IsReadOnly:
          default: false
          readOnly: true
          type: boolean
        CodePage:
          format: int32
          readOnly: true
          type: integer
      type: object
    System.Net.Http.Formatting.MediaTypeMapping:
      properties:
        MediaType:
          $ref: '#/components/schemas/System.Net.Http.Headers.MediaTypeHeaderValue'
      type: object
    System.Net.Http.Formatting.IRequiredMemberSelector:
      type: object
    ServiceChannel.Services.Messaging.Invoices.ResponseError:
      description: Object details of the response error.
      example:
        Message: Message
        Code: 6
      properties:
        Code:
          description: Code of an error that shows why the request has failed.
          format: int32
          type: integer
        Message:
          description: Reason for the request failure.
          type: string
      type: object
    System.Net.Http.Headers.NameValueHeaderValue:
      properties:
        Name:
          readOnly: true
          type: string
        Value:
          type: string
      type: object
    System.Text.EncoderFallback:
      properties:
        MaxCharCount:
          format: int32
          readOnly: true
          type: integer
      type: object
    System.Text.DecoderFallback:
      properties:
        MaxCharCount:
          format: int32
          readOnly: true
          type: integer
      type: object
    ServiceChannel.Services.Messaging.IssueLists.PostIssueListRequest:
      properties:
        IssueListData:
          type: string
        IssueListName:
          type: string
        SubscriberId:
          format: int32
          type: integer
        UserName:
          type: string
      type: object
    ServiceChannel.Services.Messaging.IssueLists.SetIssueListForDashboardRequest:
      properties:
        IssueListId:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        DashboardId:
          format: int32
          type: integer
        UserName:
          type: string
      type: object
    ServiceChannel.Services.Messaging.IssueLists.GetProblemTypesResponse:
      example:
        ProblemGroupNames:
        - ProblemGroupNames
        - ProblemGroupNames
      properties:
        ProblemGroupNames:
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceRequest:
      description: Get Issue Choice request
      properties:
        SubscriberId:
          description: The subsriber id.
          format: int32
          type: integer
        SetupId:
          description: The dashboard Id.
          format: int32
          type: integer
        ProblemType:
          description: The problem type.
          type: string
        EquipmentType:
          description: The equipment type.
          type: string
        ProblemCode:
          description: The problem code
          type: string
        LocationId:
          description: Location Id
          format: int32
          type: integer
        AreaName:
          description: Name of the area
          type: string
        UserFeatures:
          description: User's features
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceSpecificRequest:
      properties:
        SubscriberId:
          format: int32
          type: integer
        DashboardSetupId:
          format: int32
          type: integer
        Trade:
          type: string
        Priority:
          type: string
        Category:
          type: string
      required:
      - Category
      - DashboardSetupId
      - Priority
      - SubscriberId
      - Trade
      type: object
    ServiceChannel.Services.Messaging.IssueLists.GetIssueAreasResponse:
      example:
        IssueAreas:
        - ID: 0
          Name: Name
        - ID: 0
          Name: Name
      properties:
        IssueAreas:
          description: The List of issue areas.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.IssueArea'
          type: array
      type: object
    ServiceChannel.Services.Messaging.IssueLists.IssueArea:
      description: The issue area.
      example:
        ID: 0
        Name: Name
      properties:
        ID:
          description: Area ID.
          format: int32
          type: integer
        Name:
          description: Area Name.
          type: string
      type: object
    ServiceChannel.Services.Messaging.IssueLists.GetIssueEquipmentTypesResponse:
      example:
        IssueEquipmentTypes:
        - IssueEquipmentTypes
        - IssueEquipmentTypes
      properties:
        IssueEquipmentTypes:
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.IssueLists.GetProblemsFilteredByAreaTypeAndLocationResponse:
      example:
        Problems:
        - Problems
        - Problems
      properties:
        Problems:
          description: List of Problems
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.IVR.IvrMessagesRequest:
      properties:
        MessageId:
          type: string
        Language:
          type: string
        SetupPhoneId:
          format: int32
          type: integer
      required:
      - Language
      - MessageId
      - SetupPhoneId
      type: object
    ServiceChannel.Services.Messaging.IVR.IvrMessageResponse:
      example:
        ApiResponseCode: ApiResponseCode
        CallSid: CallSid
        AudioUrl: AudioUrl
        ApiReturnCode: ApiReturnCode
      properties:
        AudioUrl:
          type: string
        ApiReturnCode:
          type: string
        ApiResponseCode:
          type: string
        CallSid:
          type: string
      type: object
    ServiceChannel.Services.Messaging.IVR.IvrBaseResponse:
      example:
        ApiResponseCode: ApiResponseCode
        CallSid: CallSid
        ApiReturnCode: ApiReturnCode
      properties:
        ApiReturnCode:
          type: string
        ApiResponseCode:
          type: string
        CallSid:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Languages.UpdateLanguagesRequest:
      properties:
        SubscriberId:
          format: int32
          type: integer
        ProviderId:
          format: int32
          type: integer
        CultureName:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Location.GetLocationsSimpleRequest:
      properties:
        Id:
          description: Unique location identifier.
          format: int32
          type: integer
        storeIdentifier:
          description: Alphanumeric location identifier in the client’s system. Assigned
            by and unique per subscriber.
          type: string
        Name:
          description: Location name.
          type: string
        LocationId:
          description: The unique store ID in the ServiceClick system
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.Int32]"
          readOnly: true
          type: array
        LocationName:
          description: Name of the location
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          readOnly: true
          type: array
        StoreId:
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          readOnly: true
          type: array
        Sort:
          description: Sort resources by the specified property in the response.
          type: string
        Page:
          description: Results page number.
          format: int32
          type: integer
        IsPageSizeDefault:
          default: false
          readOnly: true
          type: boolean
        PageSize:
          description: Number of objects on the results page. The default and maximum
            per page is 50.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.FilterItem[System.Int32]:
      properties:
        OperationType:
          enum:
          - Equal
          - NotEqual
          - Greater
          - Less
          - Like
          - StartsWith
          - GreaterOrEqual
          - LessOrEqual
          type: string
        LogicalOperationType:
          enum:
          - Or
          - And
          type: string
        ConnectedFilterItemName:
          type: string
        FilterValue:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.FilterItem[System.String]:
      properties:
        OperationType:
          enum:
          - Equal
          - NotEqual
          - Greater
          - Less
          - Like
          - StartsWith
          - GreaterOrEqual
          - LessOrEqual
          type: string
        LogicalOperationType:
          enum:
          - Or
          - And
          type: string
        ConnectedFilterItemName:
          type: string
        FilterValue:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Location.GetLocationsWithTotalResponse:
      description: Response details object.
      example:
        TotalCount: 0
        Locations:
        - Zip: Zip
          Radius: 3.5571952270680973
          Email: Email
          TimeZoneInfoId: 6
          TimeZoneIanaName: TimeZoneIanaName
          OpenDate: 2000-01-23T04:56:07.000+00:00
          SquareValue: 6.778324963048013
          StateId: 1
          ShortName: ShortName
          Latitude: 8.762042012749001
          CountyId: 5
          Name: Name
          AddressTypeId: 7
          StoreId: StoreId
          SquareMeasure: SquareMeasure
          TimeZoneShortDescription: TimeZoneShortDescription
          SubscriberId: 6
          Phone: Phone
          FaxNumber: FaxNumber
          SubscriberName: SubscriberName
          Supplier: Supplier
          HasInventory: false
          Distance: 6.438423552598547
          Notes:
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          CountryId: 2
          Status: Status
          Address2: Address2
          TypeLabel: TypeLabel
          FormattedAddress: FormattedAddress
          Address1: Address1
          City: City
          TimeShiftToEST: 3
          Longitude: 9.018348186070783
          Contact: Contact
          LocationFormattedAddressTail: LocationFormattedAddressTail
          LocationTypeId: 6
          State: State
          Region: Region
          Country: Country
          Id: 9
          ClosedDate: 2000-01-23T04:56:07.000+00:00
          District: District
          TimeZoneMsName: TimeZoneMsName
        - Zip: Zip
          Radius: 3.5571952270680973
          Email: Email
          TimeZoneInfoId: 6
          TimeZoneIanaName: TimeZoneIanaName
          OpenDate: 2000-01-23T04:56:07.000+00:00
          SquareValue: 6.778324963048013
          StateId: 1
          ShortName: ShortName
          Latitude: 8.762042012749001
          CountyId: 5
          Name: Name
          AddressTypeId: 7
          StoreId: StoreId
          SquareMeasure: SquareMeasure
          TimeZoneShortDescription: TimeZoneShortDescription
          SubscriberId: 6
          Phone: Phone
          FaxNumber: FaxNumber
          SubscriberName: SubscriberName
          Supplier: Supplier
          HasInventory: false
          Distance: 6.438423552598547
          Notes:
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          CountryId: 2
          Status: Status
          Address2: Address2
          TypeLabel: TypeLabel
          FormattedAddress: FormattedAddress
          Address1: Address1
          City: City
          TimeShiftToEST: 3
          Longitude: 9.018348186070783
          Contact: Contact
          LocationFormattedAddressTail: LocationFormattedAddressTail
          LocationTypeId: 6
          State: State
          Region: Region
          Country: Country
          Id: 9
          ClosedDate: 2000-01-23T04:56:07.000+00:00
          District: District
          TimeZoneMsName: TimeZoneMsName
      properties:
        Locations:
          description: Location details.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.Location'
          type: array
        TotalCount:
          description: "Total count of all accessible locations unless one of the\
            \ filters is filled out. For example, specifying the `Id` filter brings\
            \ out details of the particular location."
          format: int64
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Location.CreateLocationRequest:
      description: Object containing the details of a new location.
      properties:
        StoreId:
          description: Numeric location identifier in the client’s system.
          type: string
        Name:
          description: Location name.
          type: string
        Latitude:
          description: Global position. Latitude.
          format: double
          type: number
        Longitude:
          description: Global position. Longitude.
          format: double
          type: number
        Distance:
          description: Distance from GPS coordinates to the location.
          format: double
          type: number
        Address1:
          description: Additional location address.
          type: string
        Address2:
          description: Main location address.
          type: string
        City:
          description: Location city.
          type: string
        State:
          description: State where the location is placed.
          type: string
        StateId:
          description: Numeric identifier of the location’s state.
          format: int32
          type: integer
        Region:
          description: Part of the country where the location is placed.
          type: string
        District:
          description: Abbreviation of the town or country area where the location
            is placed.
          type: string
        Zip:
          description: Postal code of the location.
          type: string
        Country:
          description: Abbreviation of the country name where the location is placed.
          type: string
        CountryId:
          description: Numeric identifier of the country of the location.
          format: int32
          type: integer
        ClosedDate:
          description: Last day when the location is open for business.
          format: date-time
          type: string
        OpenDate:
          description: First day when the location is open for business.
          format: date-time
          type: string
        Email:
          description: Email the location can be contacted at.
          type: string
        Phone:
          description: Contact phone number of the location.
          type: string
        Contact:
          description: Name of the main person to contact at the location.
          type: string
        FaxNumber:
          description: Fax number the location can be contacted at.
          type: string
        LocationTypeId:
          description: Numeric identifier of the location type.
          format: int32
          type: integer
        SquareValue:
          description: Square value
          format: double
          type: number
        SquareMeasure:
          description: Square measure
          type: string
      required:
      - Name
      - StoreId
      type: object
    ServiceChannel.Services.Messaging.Location.UpdateLocationExRequest:
      description: Request object to update location details.
      properties:
        StoreId:
          description: Numeric location identifier in the client’s system.
          type: string
        Name:
          description: Location name.
          type: string
        Latitude:
          description: Global position. Latitude.
          format: double
          type: number
        Longitude:
          description: Global position. Longitude.
          format: double
          type: number
        Distance:
          description: Distance from GPS coordinates to the location.
          format: double
          type: number
        Address1:
          description: Additional location address.
          type: string
        Address2:
          description: Main location address.
          type: string
        City:
          description: Location city.
          type: string
        State:
          description: State where the location is placed.
          type: string
        StateId:
          description: Numeric identifier of the location’s state.
          format: int32
          type: integer
        Region:
          description: Part of the country where the location is placed.
          type: string
        District:
          description: Abbreviation of the town or country area where the location
            is placed.
          type: string
        Zip:
          description: Postal code of the location.
          type: string
        Country:
          description: Abbreviation of the country name where the location is placed.
          type: string
        CountryId:
          description: Numeric identifier of the country of the location.
          format: int32
          type: integer
        ClosedDate:
          description: Last day when the location is open for business.
          format: date-time
          type: string
        OpenDate:
          description: First day when the location is open for business.
          format: date-time
          type: string
        Email:
          description: Email the location can be contacted at.
          type: string
        Phone:
          description: Contact phone number of the location.
          type: string
        Contact:
          description: Name of the main person to contact at the location.
          type: string
        FaxNumber:
          description: Fax number the location can be contacted at.
          type: string
        LocationTypeId:
          description: Numeric identifier of the location type.
          format: int32
          type: integer
        SquareValue:
          description: Square value
          format: double
          type: number
        SquareMeasure:
          description: Square measure
          type: string
      required:
      - Name
      - StoreId
      type: object
    ServiceChannel.Services.Messaging.Location.LocationWithTimezoneName:
      description: LocationWithTimezoneName
      example:
        Zip: Zip
        Radius: 2.3021358869347655
        Email: Email
        TimeZoneInfoId: 4
        TimeZoneIanaName: TimeZoneIanaName
        OpenDate: 2000-01-23T04:56:07.000+00:00
        SquareValue: 2.027123023002322
        StateId: 9
        ShortName: ShortName
        Latitude: 1.4658129805029452
        CountyId: 7
        Name: Name
        AddressTypeId: 1
        StoreId: StoreId
        SquareMeasure: SquareMeasure
        TimeZoneShortDescription: TimeZoneShortDescription
        SubscriberId: 6
        Phone: Phone
        FaxNumber: FaxNumber
        SubscriberName: SubscriberName
        Supplier: Supplier
        HasInventory: false
        Distance: 5.637376656633329
        Notes:
        - Header: Header
          HeaderId: 3
          Value: Value
          Id: 6
        - Header: Header
          HeaderId: 3
          Value: Value
          Id: 6
        CountryId: 3
        Status: Status
        Address2: Address2
        TypeLabel: TypeLabel
        FormattedAddress: FormattedAddress
        Address1: Address1
        City: City
        TimezoneName: TimezoneName
        TimeShiftToEST: 1
        Longitude: 5.962133916683182
        Contact: Contact
        LocationFormattedAddressTail: LocationFormattedAddressTail
        LocationTypeId: 7
        State: State
        Region: Region
        Country: Country
        Id: 0
        ClosedDate: 2000-01-23T04:56:07.000+00:00
        District: District
        TimeZoneMsName: TimeZoneMsName
      properties:
        TimezoneName:
          description: The time zone identifier
          type: string
        Id:
          description: Unique location identifier.
          format: int32
          type: integer
        SubscriberId:
          description: Unique subscriber identifier.
          format: int32
          type: integer
        SubscriberName:
          type: string
        StoreId:
          description: Alphanumeric identifier of the store in the client's system.
            Assigned by and unique per subscriber.
          type: string
        Name:
          description: Location name.
          type: string
        ShortName:
          description: Shortened location name.
          type: string
        Latitude:
          description: Global position. Latitude.
          format: double
          type: number
        Longitude:
          description: Global position. Longitude.
          format: double
          type: number
        Distance:
          description: Distance from GPS coordinate to this location
          format: double
          type: number
        Radius:
          description: GPS radius for the location.
          format: double
          type: number
        LocationTypeId:
          description: Numeric identifier of the location type.
          format: int32
          type: integer
        Address1:
          description: Additional location address.
          type: string
        Address2:
          description: Main location address.
          type: string
        City:
          description: Location city.
          type: string
        State:
          description: State where the location is situated.
          type: string
        StateId:
          description: Numeric identifier of the location’s state.
          format: int32
          type: integer
        Region:
          description: Part of the country where the location is situated.
          type: string
        District:
          description: Abbreviation of the town or country area where the location
            is situated.
          type: string
        Zip:
          description: Location ZIP or postal code.
          type: string
        Country:
          description: Abbreviation of the country name where the location is situated.
          type: string
        CountryId:
          description: Numeric identifier of the country of the location.
          format: int32
          type: integer
        ClosedDate:
          description: Last day when the location is open for business.
          format: date-time
          type: string
        OpenDate:
          description: First day when the location is open for business.
          format: date-time
          type: string
        Status:
          description: "Status of the location. Possible values: *open*, *closed*."
          type: string
        Email:
          description: Email the location can be contacted at.
          type: string
        FaxNumber:
          description: Fax number the location can be contacted at.
          type: string
        Phone:
          description: Contact phone number of the location.
          type: string
        Contact:
          description: Name of the main person to contact at the location.
          type: string
        HasInventory:
          default: false
          description: "Indicates whether it’s an inventory location or not. Possible\
            \ values: *true*, *false*."
          type: boolean
        SquareValue:
          description: Square value of the facility.
          format: double
          type: number
        SquareMeasure:
          description: Unit or system of units for measuring location area.
          type: string
        TimeZoneInfoId:
          description: Numeric identifier of the location time zone.
          format: int32
          type: integer
        TimeZoneShortDescription:
          description: Location time zone abbreviation.
          type: string
        TimeZoneMsName:
          description: Location time zone Microsoft Name. e.g "Eastern Standard Time"
          type: string
        TimeZoneIanaName:
          description: Location time zone Iana Name. e.g. "America/New_York"
          type: string
        TypeLabel:
          description: "[Inventory location type](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1209106525/Creating+Inventory+Locations?preview=%2F1209106525%2F1205830388%2FSupply-House-Type.png).\
            \ Possible values: *Location*, *Warehouse*, *Supply House*, *Truck*."
          type: string
        Supplier:
          description: Supplier’s location name.
          type: string
        CountyId:
          description: County numeric identifier.
          format: int32
          type: integer
        Notes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.LocationNote'
          type: array
        TimeShiftToEST:
          format: int32
          type: integer
        AddressTypeId:
          description: Address format pattern Id
          format: int32
          type: integer
        FormattedAddress:
          type: string
        LocationFormattedAddressTail:
          type: string
      type: object
    ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeaderApiModelRequest:
      description: Object containing the details of the location note.
      properties:
        Header:
          description: "Name of the existing location note to add, update or delete\
            \ a note for. The maximum length is 100 characters."
          type: string
        Value:
          description: Text of the note a user wants to replace the existing note
            with. The maximum length is 7000 characters including spaces.
          type: string
      type: object
    ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeadersApiModelRequest:
      description: Object containing the details of the location notes.
      properties:
        Notes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.UpdateLocationNoteHeaderApiModelRequest'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Location.GetProviderAssignmentExtendedLocationsResponse:
      example:
        WarehousesCount: 4
        Locations:
        - Zip: Zip
          Radius: 7.061401241503109
          Email: Email
          TimeZoneInfoId: 7
          TimeZoneIanaName: TimeZoneIanaName
          OpenDate: 2000-01-23T04:56:07.000+00:00
          SquareValue: 4.145608029883936
          StateId: 3
          ShortName: ShortName
          Latitude: 5.962133916683182
          CountyId: 1
          Name: Name
          AddressTypeId: 1
          StoreId: StoreId
          SquareMeasure: SquareMeasure
          TimeZoneShortDescription: TimeZoneShortDescription
          SubscriberId: 1
          Phone: Phone
          FaxNumber: FaxNumber
          SubscriberName: SubscriberName
          Supplier: Supplier
          HasInventory: false
          Contracts:
          - Trade:
              SubscriberId: 9
              Id: 5
              Name: Name
            Contractor:
              Zip: Zip
              MailFrequency: 1
              Email: Email
              ImageFile: ImageFile
              DateCreated: 2000-01-23T04:56:07.000+00:00
              TaxId: TaxId
              Name: Name
              Trade: Trade
              Phone: Phone
              FaxNumber: FaxNumber
              LastTrainingDate: 2000-01-23T04:56:07.000+00:00
              FormId: 5
              SuperUser: SuperUser
              MailInfo: MailInfo
              NightRequest: 5
              ReturnMail: ReturnMail
              MainContact: MainContact
              Address2: Address2
              Address1: Address1
              City: City
              IsInternal: false
              ProcessingEmail: ProcessingEmail
              ShortFormatEmail: ShortFormatEmail
              DoNotDispatch: false
              IsOnOffShoreFeatureEnabled: false
              State: State
              FullName: FullName
              Pager: Pager
              WebSite: WebSite
              Country: Country
              LastUserDate: LastUserDate
              Id: 2
              SuiteFloor: SuiteFloor
              LastTrainingDateStr: LastTrainingDateStr
            Category:
              HasDependency: false
              SubscriberId: 4
              UserId: 8
              PrimaryCategory:
                SubscriberId: 7
                UserId: 6
                Id: 0
                Name: Name
              Id: 0
              Name: Name
            Rank: 6
            Id: 0
            Client:
              Zip: Zip
              DecimalSeparator: DecimalSeparator
              TimeFormat: TimeFormat
              Email: Email
              PrimaryCurrency:
                DecimalCount: 1
                Entity: Entity
                AlphabeticalCode: AlphabeticalCode
                NumericCode: NumericCode
                Rate: 4.965218492984954
                Id: 7
                CurrencyName: CurrencyName
              IsOutsourcedWorkOn: false
              Address2: Address2
              ShortName: ShortName
              Users:
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              Address1: Address1
              City: City
              Name: Name
              State: State
              Phone: Phone
              DateFormat: DateFormat
              Country: Country
              Id: 7
              Fax: Fax
              ContactName: ContactName
            Location:
              Zip: Zip
              Radius: 3.5571952270680973
              Email: Email
              TimeZoneInfoId: 6
              TimeZoneIanaName: TimeZoneIanaName
              OpenDate: 2000-01-23T04:56:07.000+00:00
              SquareValue: 6.778324963048013
              StateId: 1
              ShortName: ShortName
              Latitude: 8.762042012749001
              CountyId: 5
              Name: Name
              AddressTypeId: 7
              StoreId: StoreId
              SquareMeasure: SquareMeasure
              TimeZoneShortDescription: TimeZoneShortDescription
              SubscriberId: 6
              Phone: Phone
              FaxNumber: FaxNumber
              SubscriberName: SubscriberName
              Supplier: Supplier
              HasInventory: false
              Distance: 6.438423552598547
              Notes:
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              CountryId: 2
              Status: Status
              Address2: Address2
              TypeLabel: TypeLabel
              FormattedAddress: FormattedAddress
              Address1: Address1
              City: City
              TimeShiftToEST: 3
              Longitude: 9.018348186070783
              Contact: Contact
              LocationFormattedAddressTail: LocationFormattedAddressTail
              LocationTypeId: 6
              State: State
              Region: Region
              Country: Country
              Id: 9
              ClosedDate: 2000-01-23T04:56:07.000+00:00
              District: District
              TimeZoneMsName: TimeZoneMsName
          - Trade:
              SubscriberId: 9
              Id: 5
              Name: Name
            Contractor:
              Zip: Zip
              MailFrequency: 1
              Email: Email
              ImageFile: ImageFile
              DateCreated: 2000-01-23T04:56:07.000+00:00
              TaxId: TaxId
              Name: Name
              Trade: Trade
              Phone: Phone
              FaxNumber: FaxNumber
              LastTrainingDate: 2000-01-23T04:56:07.000+00:00
              FormId: 5
              SuperUser: SuperUser
              MailInfo: MailInfo
              NightRequest: 5
              ReturnMail: ReturnMail
              MainContact: MainContact
              Address2: Address2
              Address1: Address1
              City: City
              IsInternal: false
              ProcessingEmail: ProcessingEmail
              ShortFormatEmail: ShortFormatEmail
              DoNotDispatch: false
              IsOnOffShoreFeatureEnabled: false
              State: State
              FullName: FullName
              Pager: Pager
              WebSite: WebSite
              Country: Country
              LastUserDate: LastUserDate
              Id: 2
              SuiteFloor: SuiteFloor
              LastTrainingDateStr: LastTrainingDateStr
            Category:
              HasDependency: false
              SubscriberId: 4
              UserId: 8
              PrimaryCategory:
                SubscriberId: 7
                UserId: 6
                Id: 0
                Name: Name
              Id: 0
              Name: Name
            Rank: 6
            Id: 0
            Client:
              Zip: Zip
              DecimalSeparator: DecimalSeparator
              TimeFormat: TimeFormat
              Email: Email
              PrimaryCurrency:
                DecimalCount: 1
                Entity: Entity
                AlphabeticalCode: AlphabeticalCode
                NumericCode: NumericCode
                Rate: 4.965218492984954
                Id: 7
                CurrencyName: CurrencyName
              IsOutsourcedWorkOn: false
              Address2: Address2
              ShortName: ShortName
              Users:
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              Address1: Address1
              City: City
              Name: Name
              State: State
              Phone: Phone
              DateFormat: DateFormat
              Country: Country
              Id: 7
              Fax: Fax
              ContactName: ContactName
            Location:
              Zip: Zip
              Radius: 3.5571952270680973
              Email: Email
              TimeZoneInfoId: 6
              TimeZoneIanaName: TimeZoneIanaName
              OpenDate: 2000-01-23T04:56:07.000+00:00
              SquareValue: 6.778324963048013
              StateId: 1
              ShortName: ShortName
              Latitude: 8.762042012749001
              CountyId: 5
              Name: Name
              AddressTypeId: 7
              StoreId: StoreId
              SquareMeasure: SquareMeasure
              TimeZoneShortDescription: TimeZoneShortDescription
              SubscriberId: 6
              Phone: Phone
              FaxNumber: FaxNumber
              SubscriberName: SubscriberName
              Supplier: Supplier
              HasInventory: false
              Distance: 6.438423552598547
              Notes:
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              CountryId: 2
              Status: Status
              Address2: Address2
              TypeLabel: TypeLabel
              FormattedAddress: FormattedAddress
              Address1: Address1
              City: City
              TimeShiftToEST: 3
              Longitude: 9.018348186070783
              Contact: Contact
              LocationFormattedAddressTail: LocationFormattedAddressTail
              LocationTypeId: 6
              State: State
              Region: Region
              Country: Country
              Id: 9
              ClosedDate: 2000-01-23T04:56:07.000+00:00
              District: District
              TimeZoneMsName: TimeZoneMsName
          Distance: 2.3021358869347655
          Notes:
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          CountryId: 2
          Status: Status
          Address2: Address2
          TypeLabel: TypeLabel
          FormattedAddress: FormattedAddress
          Address1: Address1
          City: City
          TimeShiftToEST: 1
          Longitude: 5.637376656633329
          WorkOrdersCount: 0
          Contact: Contact
          LocationFormattedAddressTail: LocationFormattedAddressTail
          LocationTypeId: 9
          State: State
          Region: Region
          Country: Country
          Id: 6
          ClosedDate: 2000-01-23T04:56:07.000+00:00
          District: District
          TimeZoneMsName: TimeZoneMsName
        - Zip: Zip
          Radius: 7.061401241503109
          Email: Email
          TimeZoneInfoId: 7
          TimeZoneIanaName: TimeZoneIanaName
          OpenDate: 2000-01-23T04:56:07.000+00:00
          SquareValue: 4.145608029883936
          StateId: 3
          ShortName: ShortName
          Latitude: 5.962133916683182
          CountyId: 1
          Name: Name
          AddressTypeId: 1
          StoreId: StoreId
          SquareMeasure: SquareMeasure
          TimeZoneShortDescription: TimeZoneShortDescription
          SubscriberId: 1
          Phone: Phone
          FaxNumber: FaxNumber
          SubscriberName: SubscriberName
          Supplier: Supplier
          HasInventory: false
          Contracts:
          - Trade:
              SubscriberId: 9
              Id: 5
              Name: Name
            Contractor:
              Zip: Zip
              MailFrequency: 1
              Email: Email
              ImageFile: ImageFile
              DateCreated: 2000-01-23T04:56:07.000+00:00
              TaxId: TaxId
              Name: Name
              Trade: Trade
              Phone: Phone
              FaxNumber: FaxNumber
              LastTrainingDate: 2000-01-23T04:56:07.000+00:00
              FormId: 5
              SuperUser: SuperUser
              MailInfo: MailInfo
              NightRequest: 5
              ReturnMail: ReturnMail
              MainContact: MainContact
              Address2: Address2
              Address1: Address1
              City: City
              IsInternal: false
              ProcessingEmail: ProcessingEmail
              ShortFormatEmail: ShortFormatEmail
              DoNotDispatch: false
              IsOnOffShoreFeatureEnabled: false
              State: State
              FullName: FullName
              Pager: Pager
              WebSite: WebSite
              Country: Country
              LastUserDate: LastUserDate
              Id: 2
              SuiteFloor: SuiteFloor
              LastTrainingDateStr: LastTrainingDateStr
            Category:
              HasDependency: false
              SubscriberId: 4
              UserId: 8
              PrimaryCategory:
                SubscriberId: 7
                UserId: 6
                Id: 0
                Name: Name
              Id: 0
              Name: Name
            Rank: 6
            Id: 0
            Client:
              Zip: Zip
              DecimalSeparator: DecimalSeparator
              TimeFormat: TimeFormat
              Email: Email
              PrimaryCurrency:
                DecimalCount: 1
                Entity: Entity
                AlphabeticalCode: AlphabeticalCode
                NumericCode: NumericCode
                Rate: 4.965218492984954
                Id: 7
                CurrencyName: CurrencyName
              IsOutsourcedWorkOn: false
              Address2: Address2
              ShortName: ShortName
              Users:
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              Address1: Address1
              City: City
              Name: Name
              State: State
              Phone: Phone
              DateFormat: DateFormat
              Country: Country
              Id: 7
              Fax: Fax
              ContactName: ContactName
            Location:
              Zip: Zip
              Radius: 3.5571952270680973
              Email: Email
              TimeZoneInfoId: 6
              TimeZoneIanaName: TimeZoneIanaName
              OpenDate: 2000-01-23T04:56:07.000+00:00
              SquareValue: 6.778324963048013
              StateId: 1
              ShortName: ShortName
              Latitude: 8.762042012749001
              CountyId: 5
              Name: Name
              AddressTypeId: 7
              StoreId: StoreId
              SquareMeasure: SquareMeasure
              TimeZoneShortDescription: TimeZoneShortDescription
              SubscriberId: 6
              Phone: Phone
              FaxNumber: FaxNumber
              SubscriberName: SubscriberName
              Supplier: Supplier
              HasInventory: false
              Distance: 6.438423552598547
              Notes:
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              CountryId: 2
              Status: Status
              Address2: Address2
              TypeLabel: TypeLabel
              FormattedAddress: FormattedAddress
              Address1: Address1
              City: City
              TimeShiftToEST: 3
              Longitude: 9.018348186070783
              Contact: Contact
              LocationFormattedAddressTail: LocationFormattedAddressTail
              LocationTypeId: 6
              State: State
              Region: Region
              Country: Country
              Id: 9
              ClosedDate: 2000-01-23T04:56:07.000+00:00
              District: District
              TimeZoneMsName: TimeZoneMsName
          - Trade:
              SubscriberId: 9
              Id: 5
              Name: Name
            Contractor:
              Zip: Zip
              MailFrequency: 1
              Email: Email
              ImageFile: ImageFile
              DateCreated: 2000-01-23T04:56:07.000+00:00
              TaxId: TaxId
              Name: Name
              Trade: Trade
              Phone: Phone
              FaxNumber: FaxNumber
              LastTrainingDate: 2000-01-23T04:56:07.000+00:00
              FormId: 5
              SuperUser: SuperUser
              MailInfo: MailInfo
              NightRequest: 5
              ReturnMail: ReturnMail
              MainContact: MainContact
              Address2: Address2
              Address1: Address1
              City: City
              IsInternal: false
              ProcessingEmail: ProcessingEmail
              ShortFormatEmail: ShortFormatEmail
              DoNotDispatch: false
              IsOnOffShoreFeatureEnabled: false
              State: State
              FullName: FullName
              Pager: Pager
              WebSite: WebSite
              Country: Country
              LastUserDate: LastUserDate
              Id: 2
              SuiteFloor: SuiteFloor
              LastTrainingDateStr: LastTrainingDateStr
            Category:
              HasDependency: false
              SubscriberId: 4
              UserId: 8
              PrimaryCategory:
                SubscriberId: 7
                UserId: 6
                Id: 0
                Name: Name
              Id: 0
              Name: Name
            Rank: 6
            Id: 0
            Client:
              Zip: Zip
              DecimalSeparator: DecimalSeparator
              TimeFormat: TimeFormat
              Email: Email
              PrimaryCurrency:
                DecimalCount: 1
                Entity: Entity
                AlphabeticalCode: AlphabeticalCode
                NumericCode: NumericCode
                Rate: 4.965218492984954
                Id: 7
                CurrencyName: CurrencyName
              IsOutsourcedWorkOn: false
              Address2: Address2
              ShortName: ShortName
              Users:
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              Address1: Address1
              City: City
              Name: Name
              State: State
              Phone: Phone
              DateFormat: DateFormat
              Country: Country
              Id: 7
              Fax: Fax
              ContactName: ContactName
            Location:
              Zip: Zip
              Radius: 3.5571952270680973
              Email: Email
              TimeZoneInfoId: 6
              TimeZoneIanaName: TimeZoneIanaName
              OpenDate: 2000-01-23T04:56:07.000+00:00
              SquareValue: 6.778324963048013
              StateId: 1
              ShortName: ShortName
              Latitude: 8.762042012749001
              CountyId: 5
              Name: Name
              AddressTypeId: 7
              StoreId: StoreId
              SquareMeasure: SquareMeasure
              TimeZoneShortDescription: TimeZoneShortDescription
              SubscriberId: 6
              Phone: Phone
              FaxNumber: FaxNumber
              SubscriberName: SubscriberName
              Supplier: Supplier
              HasInventory: false
              Distance: 6.438423552598547
              Notes:
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              CountryId: 2
              Status: Status
              Address2: Address2
              TypeLabel: TypeLabel
              FormattedAddress: FormattedAddress
              Address1: Address1
              City: City
              TimeShiftToEST: 3
              Longitude: 9.018348186070783
              Contact: Contact
              LocationFormattedAddressTail: LocationFormattedAddressTail
              LocationTypeId: 6
              State: State
              Region: Region
              Country: Country
              Id: 9
              ClosedDate: 2000-01-23T04:56:07.000+00:00
              District: District
              TimeZoneMsName: TimeZoneMsName
          Distance: 2.3021358869347655
          Notes:
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          CountryId: 2
          Status: Status
          Address2: Address2
          TypeLabel: TypeLabel
          FormattedAddress: FormattedAddress
          Address1: Address1
          City: City
          TimeShiftToEST: 1
          Longitude: 5.637376656633329
          WorkOrdersCount: 0
          Contact: Contact
          LocationFormattedAddressTail: LocationFormattedAddressTail
          LocationTypeId: 9
          State: State
          Region: Region
          Country: Country
          Id: 6
          ClosedDate: 2000-01-23T04:56:07.000+00:00
          District: District
          TimeZoneMsName: TimeZoneMsName
        AllLocationsCount: 6
        SupplyHousesCount: 5
        TrucksCount: 7
        LocationsCount: 1
      properties:
        Locations:
          description: Response details object
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.ProviderAssignmentExtendedLocation'
          type: array
        AllLocationsCount:
          description: Total number of all locations displayed in the response.
          format: int32
          type: integer
        TrucksCount:
          description: Number of mobile units that move around locations to fix the
            broken equipment.
          format: int32
          type: integer
        LocationsCount:
          description: Number of retail locations that have inventory.
          format: int32
          type: integer
        WarehousesCount:
          description: Number of company-owned locations that supply other locations
            with parts.
          format: int32
          type: integer
        SupplyHousesCount:
          description: Number of non-company-owned locations where goods are purchased
            from.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Location.ProviderAssignmentExtendedLocation:
      example:
        Zip: Zip
        Radius: 7.061401241503109
        Email: Email
        TimeZoneInfoId: 7
        TimeZoneIanaName: TimeZoneIanaName
        OpenDate: 2000-01-23T04:56:07.000+00:00
        SquareValue: 4.145608029883936
        StateId: 3
        ShortName: ShortName
        Latitude: 5.962133916683182
        CountyId: 1
        Name: Name
        AddressTypeId: 1
        StoreId: StoreId
        SquareMeasure: SquareMeasure
        TimeZoneShortDescription: TimeZoneShortDescription
        SubscriberId: 1
        Phone: Phone
        FaxNumber: FaxNumber
        SubscriberName: SubscriberName
        Supplier: Supplier
        HasInventory: false
        Contracts:
        - Trade:
            SubscriberId: 9
            Id: 5
            Name: Name
          Contractor:
            Zip: Zip
            MailFrequency: 1
            Email: Email
            ImageFile: ImageFile
            DateCreated: 2000-01-23T04:56:07.000+00:00
            TaxId: TaxId
            Name: Name
            Trade: Trade
            Phone: Phone
            FaxNumber: FaxNumber
            LastTrainingDate: 2000-01-23T04:56:07.000+00:00
            FormId: 5
            SuperUser: SuperUser
            MailInfo: MailInfo
            NightRequest: 5
            ReturnMail: ReturnMail
            MainContact: MainContact
            Address2: Address2
            Address1: Address1
            City: City
            IsInternal: false
            ProcessingEmail: ProcessingEmail
            ShortFormatEmail: ShortFormatEmail
            DoNotDispatch: false
            IsOnOffShoreFeatureEnabled: false
            State: State
            FullName: FullName
            Pager: Pager
            WebSite: WebSite
            Country: Country
            LastUserDate: LastUserDate
            Id: 2
            SuiteFloor: SuiteFloor
            LastTrainingDateStr: LastTrainingDateStr
          Category:
            HasDependency: false
            SubscriberId: 4
            UserId: 8
            PrimaryCategory:
              SubscriberId: 7
              UserId: 6
              Id: 0
              Name: Name
            Id: 0
            Name: Name
          Rank: 6
          Id: 0
          Client:
            Zip: Zip
            DecimalSeparator: DecimalSeparator
            TimeFormat: TimeFormat
            Email: Email
            PrimaryCurrency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            IsOutsourcedWorkOn: false
            Address2: Address2
            ShortName: ShortName
            Users:
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            Address1: Address1
            City: City
            Name: Name
            State: State
            Phone: Phone
            DateFormat: DateFormat
            Country: Country
            Id: 7
            Fax: Fax
            ContactName: ContactName
          Location:
            Zip: Zip
            Radius: 3.5571952270680973
            Email: Email
            TimeZoneInfoId: 6
            TimeZoneIanaName: TimeZoneIanaName
            OpenDate: 2000-01-23T04:56:07.000+00:00
            SquareValue: 6.778324963048013
            StateId: 1
            ShortName: ShortName
            Latitude: 8.762042012749001
            CountyId: 5
            Name: Name
            AddressTypeId: 7
            StoreId: StoreId
            SquareMeasure: SquareMeasure
            TimeZoneShortDescription: TimeZoneShortDescription
            SubscriberId: 6
            Phone: Phone
            FaxNumber: FaxNumber
            SubscriberName: SubscriberName
            Supplier: Supplier
            HasInventory: false
            Distance: 6.438423552598547
            Notes:
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            CountryId: 2
            Status: Status
            Address2: Address2
            TypeLabel: TypeLabel
            FormattedAddress: FormattedAddress
            Address1: Address1
            City: City
            TimeShiftToEST: 3
            Longitude: 9.018348186070783
            Contact: Contact
            LocationFormattedAddressTail: LocationFormattedAddressTail
            LocationTypeId: 6
            State: State
            Region: Region
            Country: Country
            Id: 9
            ClosedDate: 2000-01-23T04:56:07.000+00:00
            District: District
            TimeZoneMsName: TimeZoneMsName
        - Trade:
            SubscriberId: 9
            Id: 5
            Name: Name
          Contractor:
            Zip: Zip
            MailFrequency: 1
            Email: Email
            ImageFile: ImageFile
            DateCreated: 2000-01-23T04:56:07.000+00:00
            TaxId: TaxId
            Name: Name
            Trade: Trade
            Phone: Phone
            FaxNumber: FaxNumber
            LastTrainingDate: 2000-01-23T04:56:07.000+00:00
            FormId: 5
            SuperUser: SuperUser
            MailInfo: MailInfo
            NightRequest: 5
            ReturnMail: ReturnMail
            MainContact: MainContact
            Address2: Address2
            Address1: Address1
            City: City
            IsInternal: false
            ProcessingEmail: ProcessingEmail
            ShortFormatEmail: ShortFormatEmail
            DoNotDispatch: false
            IsOnOffShoreFeatureEnabled: false
            State: State
            FullName: FullName
            Pager: Pager
            WebSite: WebSite
            Country: Country
            LastUserDate: LastUserDate
            Id: 2
            SuiteFloor: SuiteFloor
            LastTrainingDateStr: LastTrainingDateStr
          Category:
            HasDependency: false
            SubscriberId: 4
            UserId: 8
            PrimaryCategory:
              SubscriberId: 7
              UserId: 6
              Id: 0
              Name: Name
            Id: 0
            Name: Name
          Rank: 6
          Id: 0
          Client:
            Zip: Zip
            DecimalSeparator: DecimalSeparator
            TimeFormat: TimeFormat
            Email: Email
            PrimaryCurrency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            IsOutsourcedWorkOn: false
            Address2: Address2
            ShortName: ShortName
            Users:
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            Address1: Address1
            City: City
            Name: Name
            State: State
            Phone: Phone
            DateFormat: DateFormat
            Country: Country
            Id: 7
            Fax: Fax
            ContactName: ContactName
          Location:
            Zip: Zip
            Radius: 3.5571952270680973
            Email: Email
            TimeZoneInfoId: 6
            TimeZoneIanaName: TimeZoneIanaName
            OpenDate: 2000-01-23T04:56:07.000+00:00
            SquareValue: 6.778324963048013
            StateId: 1
            ShortName: ShortName
            Latitude: 8.762042012749001
            CountyId: 5
            Name: Name
            AddressTypeId: 7
            StoreId: StoreId
            SquareMeasure: SquareMeasure
            TimeZoneShortDescription: TimeZoneShortDescription
            SubscriberId: 6
            Phone: Phone
            FaxNumber: FaxNumber
            SubscriberName: SubscriberName
            Supplier: Supplier
            HasInventory: false
            Distance: 6.438423552598547
            Notes:
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            CountryId: 2
            Status: Status
            Address2: Address2
            TypeLabel: TypeLabel
            FormattedAddress: FormattedAddress
            Address1: Address1
            City: City
            TimeShiftToEST: 3
            Longitude: 9.018348186070783
            Contact: Contact
            LocationFormattedAddressTail: LocationFormattedAddressTail
            LocationTypeId: 6
            State: State
            Region: Region
            Country: Country
            Id: 9
            ClosedDate: 2000-01-23T04:56:07.000+00:00
            District: District
            TimeZoneMsName: TimeZoneMsName
        Distance: 2.3021358869347655
        Notes:
        - Header: Header
          HeaderId: 3
          Value: Value
          Id: 6
        - Header: Header
          HeaderId: 3
          Value: Value
          Id: 6
        CountryId: 2
        Status: Status
        Address2: Address2
        TypeLabel: TypeLabel
        FormattedAddress: FormattedAddress
        Address1: Address1
        City: City
        TimeShiftToEST: 1
        Longitude: 5.637376656633329
        WorkOrdersCount: 0
        Contact: Contact
        LocationFormattedAddressTail: LocationFormattedAddressTail
        LocationTypeId: 9
        State: State
        Region: Region
        Country: Country
        Id: 6
        ClosedDate: 2000-01-23T04:56:07.000+00:00
        District: District
        TimeZoneMsName: TimeZoneMsName
      properties:
        WorkOrdersCount:
          format: int32
          type: integer
        Contracts:
          description: List of Contracts
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Contracts.Contract'
          type: array
        Id:
          description: Unique location identifier.
          format: int32
          type: integer
        SubscriberId:
          description: Unique subscriber identifier.
          format: int32
          type: integer
        SubscriberName:
          type: string
        StoreId:
          description: Alphanumeric identifier of the store in the client's system.
            Assigned by and unique per subscriber.
          type: string
        Name:
          description: Location name.
          type: string
        ShortName:
          description: Shortened location name.
          type: string
        Latitude:
          description: Global position. Latitude.
          format: double
          type: number
        Longitude:
          description: Global position. Longitude.
          format: double
          type: number
        Distance:
          description: Distance from GPS coordinate to this location
          format: double
          type: number
        Radius:
          description: GPS radius for the location.
          format: double
          type: number
        LocationTypeId:
          description: Numeric identifier of the location type.
          format: int32
          type: integer
        Address1:
          description: Additional location address.
          type: string
        Address2:
          description: Main location address.
          type: string
        City:
          description: Location city.
          type: string
        State:
          description: State where the location is situated.
          type: string
        StateId:
          description: Numeric identifier of the location’s state.
          format: int32
          type: integer
        Region:
          description: Part of the country where the location is situated.
          type: string
        District:
          description: Abbreviation of the town or country area where the location
            is situated.
          type: string
        Zip:
          description: Location ZIP or postal code.
          type: string
        Country:
          description: Abbreviation of the country name where the location is situated.
          type: string
        CountryId:
          description: Numeric identifier of the country of the location.
          format: int32
          type: integer
        ClosedDate:
          description: Last day when the location is open for business.
          format: date-time
          type: string
        OpenDate:
          description: First day when the location is open for business.
          format: date-time
          type: string
        Status:
          description: "Status of the location. Possible values: *open*, *closed*."
          type: string
        Email:
          description: Email the location can be contacted at.
          type: string
        FaxNumber:
          description: Fax number the location can be contacted at.
          type: string
        Phone:
          description: Contact phone number of the location.
          type: string
        Contact:
          description: Name of the main person to contact at the location.
          type: string
        HasInventory:
          default: false
          description: "Indicates whether it’s an inventory location or not. Possible\
            \ values: *true*, *false*."
          type: boolean
        SquareValue:
          description: Square value of the facility.
          format: double
          type: number
        SquareMeasure:
          description: Unit or system of units for measuring location area.
          type: string
        TimeZoneInfoId:
          description: Numeric identifier of the location time zone.
          format: int32
          type: integer
        TimeZoneShortDescription:
          description: Location time zone abbreviation.
          type: string
        TimeZoneMsName:
          description: Location time zone Microsoft Name. e.g "Eastern Standard Time"
          type: string
        TimeZoneIanaName:
          description: Location time zone Iana Name. e.g. "America/New_York"
          type: string
        TypeLabel:
          description: "[Inventory location type](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/1209106525/Creating+Inventory+Locations?preview=%2F1209106525%2F1205830388%2FSupply-House-Type.png).\
            \ Possible values: *Location*, *Warehouse*, *Supply House*, *Truck*."
          type: string
        Supplier:
          description: Supplier’s location name.
          type: string
        CountyId:
          description: County numeric identifier.
          format: int32
          type: integer
        Notes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.LocationNote'
          type: array
        TimeShiftToEST:
          format: int32
          type: integer
        AddressTypeId:
          description: Address format pattern Id
          format: int32
          type: integer
        FormattedAddress:
          type: string
        LocationFormattedAddressTail:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Location.GetLocationAttachmentsResponse:
      example:
        Message: Message
        LocationAttachments:
        - FilePath: FilePath
          UploadDate: 2000-01-23T04:56:07.000+00:00
          Description: Description
          UserName: UserName
          AttachmentType: EvacuationPlan
          StoreId: StoreId
          GetFileLink: GetFileLink
          UserId: 1
          FileName: FileName
          LocationId: 6
          Id: 0
        - FilePath: FilePath
          UploadDate: 2000-01-23T04:56:07.000+00:00
          Description: Description
          UserName: UserName
          AttachmentType: EvacuationPlan
          StoreId: StoreId
          GetFileLink: GetFileLink
          UserId: 1
          FileName: FileName
          LocationId: 6
          Id: 0
        ErrorCode: 5
      properties:
        LocationAttachments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationAttachment'
          type: array
        ErrorCode:
          description: "Numeric identifier that determines the nature of an error.\
            \ Possible values: `0` - success, otherwise - error."
          format: int32
          type: integer
        Message:
          description: Defines that the file’s remote storage is unavailable or its
            URL cannot be found.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Location.LocationAttachment:
      description: Attachment object.
      example:
        FilePath: FilePath
        UploadDate: 2000-01-23T04:56:07.000+00:00
        Description: Description
        UserName: UserName
        AttachmentType: EvacuationPlan
        StoreId: StoreId
        GetFileLink: GetFileLink
        UserId: 1
        FileName: FileName
        LocationId: 6
        Id: 0
      properties:
        Id:
          description: Numeric identifier of the location attachment.
          format: int32
          type: integer
        LocationId:
          description: Unique ID of the location to which the attachment is added.
          format: int32
          type: integer
        StoreId:
          description: StoreId
          type: string
        FileName:
          description: Filename of the evacuation plan map attachment.
          type: string
        FilePath:
          description: File’s position in the subscriber’s location.
          type: string
        Description:
          description: Description of the evacuation plan map attachment added by
            the user.
          type: string
        UploadDate:
          description: Date and time when the attachment was added.
          format: date-time
          type: string
        UserId:
          description: ID of the user who added the attachment to the location.
          format: int32
          type: integer
        UserName:
          description: Username of the user who added the attachment.
          type: string
        AttachmentType:
          description: "Numeric identifier of the attachment added. Possible values:\
            \ `1` - EvacuationPlan."
          enum:
          - EvacuationPlan
          type: string
        GetFileLink:
          type: string
      type: object
    ServiceChannel.Services.Messaging.AfterHours.CheckIfLocationIsOpenResponse:
      description: Stores information whether the location is open or closed.
      example:
        IsOpen: false
      properties:
        IsOpen:
          default: false
          description: "Defines if the location is open or closed. Possible values:\
            \ *true*, *false*."
          type: boolean
      type: object
    ServiceChannel.Api.Model.Locations.LocationFilterColumns:
      properties:
        SubscriberId:
          format: int32
          type: integer
        LocationIds:
          items:
            format: int32
            type: integer
          type: array
        CountryIds:
          items:
            format: int32
            type: integer
          type: array
        Regions:
          items:
            type: string
          type: array
        Districts:
          items:
            type: string
          type: array
        States:
          items:
            type: string
          type: array
        Counties:
          items:
            type: string
          type: array
        Cities:
          items:
            type: string
          type: array
        Page:
          format: int32
          type: integer
        CountPerPage:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Location.GetFilteredLocationsRequest:
      description: Request object to get locations.
      properties:
        ProviderId:
          description: Unique provider identifier.
          format: int32
          type: integer
        LocationIds:
          description: Unique location identifier.
          items:
            format: int32
            type: integer
          type: array
        Name:
          description: Location name.
          type: string
        Address:
          description: Main location address.
          type: string
        CountryId:
          description: Numeric identifier of the location country.
          format: int32
          type: integer
        StateIds:
          description: Numeric identifier of the location’s state.
          items:
            format: int32
            type: integer
          type: array
        City:
          description: Location city.
          type: string
        Region:
          description: Part of the country where the location is situated.
          type: string
        District:
          description: Abbreviation of the town or country area where the location
            is situated.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Location.LocationShortModel:
      description: Shortened location details object.
      example:
        Zip: Zip
        StoreId: StoreId
        Address: Address
        State: State
        Phone: Phone
        StateId: 6
        Region: Region
        Id: 0
        City: City
        District: District
        Name: Name
      properties:
        Id:
          description: Unique location identifier.
          format: int32
          type: integer
        StoreId:
          description: Alphanumeric identifier of the store in the client's system.
            Assigned by and unique per subscriber.
          type: string
        Name:
          description: Location name.
          type: string
        Address:
          description: Main location address.
          type: string
        City:
          description: Location city.
          type: string
        State:
          description: State where the location is situated.
          type: string
        Zip:
          description: Location ZIP or postal code.
          type: string
        Phone:
          description: Contact phone number of the location.
          type: string
        Region:
          description: Part of the country where the location is situated.
          type: string
        District:
          description: Abbreviation of the town or country area where the location
            is situated.
          type: string
        StateId:
          description: Numeric identifier of the location’s state.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Location.AddUpdateLocationResponse:
      description: Location note object.
      example:
        Id: 0
      properties:
        Id:
          description: Location note numeric identifier.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Location.GetLocationsMobileResponse:
      description: Response details object.
      example:
        Locations:
        - Zip: Zip
          OpenDate: 2000-01-23T04:56:07.000+00:00
          Address2: Address2
          Latitude: 1.4658129805029452
          Address1: Address1
          City: City
          Longitude: 5.962133916683182
          CloseDate: 2000-01-23T04:56:07.000+00:00
          Name: Name
          Contact: Contact
          StoreId: StoreId
          SubscriberId: 6
          State: State
          Phone: Phone
          Region: Region
          Country: Country
          Id: 0
          District: District
          Notes:
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          Distance: 5.637376656633329
        - Zip: Zip
          OpenDate: 2000-01-23T04:56:07.000+00:00
          Address2: Address2
          Latitude: 1.4658129805029452
          Address1: Address1
          City: City
          Longitude: 5.962133916683182
          CloseDate: 2000-01-23T04:56:07.000+00:00
          Name: Name
          Contact: Contact
          StoreId: StoreId
          SubscriberId: 6
          State: State
          Phone: Phone
          Region: Region
          Country: Country
          Id: 0
          District: District
          Notes:
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          Distance: 5.637376656633329
        TotalElements: 2
        Page: 7
        TotalPages: 9
      properties:
        Locations:
          description: Location details.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationForMobile'
          type: array
        TotalElements:
          description: Total number of items on all pages;
          format: int64
          type: integer
        Page:
          description: Current page
          format: int32
          type: integer
        TotalPages:
          description: Total number of pages available
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Location.LocationForMobile:
      description: Location details object for mobile.
      example:
        Zip: Zip
        OpenDate: 2000-01-23T04:56:07.000+00:00
        Address2: Address2
        Latitude: 1.4658129805029452
        Address1: Address1
        City: City
        Longitude: 5.962133916683182
        CloseDate: 2000-01-23T04:56:07.000+00:00
        Name: Name
        Contact: Contact
        StoreId: StoreId
        SubscriberId: 6
        State: State
        Phone: Phone
        Region: Region
        Country: Country
        Id: 0
        District: District
        Notes:
        - Header: Header
          HeaderId: 3
          Value: Value
          Id: 6
        - Header: Header
          HeaderId: 3
          Value: Value
          Id: 6
        Distance: 5.637376656633329
      properties:
        Id:
          description: Unique location identifier.
          format: int32
          type: integer
        SubscriberId:
          description: Unique subscriber identifier.
          format: int32
          type: integer
        StoreId:
          description: Alphanumeric identifier of the store in the client's system.
            Assigned by and unique per subscriber.
          type: string
        Name:
          description: Location name.
          type: string
        Latitude:
          description: Global position. Latitude.
          format: double
          type: number
        Longitude:
          description: Global position. Longitude.
          format: double
          type: number
        Address1:
          description: Additional location address.
          type: string
        Address2:
          description: Main location address.
          type: string
        City:
          description: Location city.
          type: string
        State:
          description: State where the location is situated.
          type: string
        Region:
          description: Part of the country where the location is situated.
          type: string
        District:
          description: Abbreviation of the town or country area where the location
            is situated.
          type: string
        Zip:
          description: Location ZIP or postal code.
          type: string
        Country:
          description: Abbreviation of the country name where the location is situated.
          type: string
        Phone:
          description: Contact phone number of the location.
          type: string
        Contact:
          description: Name of the main person to contact at the location.
          type: string
        OpenDate:
          description: First day when the location is open for business
          format: date-time
          type: string
        CloseDate:
          description: Last day when the location is open for business.
          format: date-time
          type: string
        Notes:
          description: Notes
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.LocationNote.LocationNote'
          type: array
        Distance:
          description: Distance between user and location
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.Location.GetLocationDistrictsResponse:
      description: Response details object.
      example:
        TotalElements: 0
        Districts:
        - Districts
        - Districts
        Page: 6
        TotalPages: 1
      properties:
        Districts:
          description: Districts
          items:
            type: string
          type: array
        TotalElements:
          description: Total number of items on all pages;
          format: int64
          type: integer
        Page:
          description: Current page
          format: int32
          type: integer
        TotalPages:
          description: Total number of pages available
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Location.AddressType:
      description: AddressType
      example:
        Pattern: Pattern
        Id: 0
      properties:
        Id:
          description: db Id value
          format: int32
          type: integer
        Pattern:
          description: Address format pattern
          type: string
      type: object
    ServiceChannel.Api.Model.Locations.LocationProviderAssignmentsFilter:
      properties:
        LocationIds:
          items:
            format: int32
            type: integer
          type: array
        TradeNames:
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.Location.LocationProviderAssignmentsResponse:
      example:
        ProviderId: 6
        TradeName: TradeName
        TradeId: 1
        LocationId: 0
        Rank: 5
      properties:
        LocationId:
          format: int32
          type: integer
        ProviderId:
          format: int32
          type: integer
        TradeId:
          format: int32
          type: integer
        TradeName:
          type: string
        Rank:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Location.GetLocationsByFilterRequest:
      properties:
        Locations:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationFilterRequest'
      type: object
    ServiceChannel.Services.Messaging.Location.LocationFilterRequest:
      properties:
        LocationIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Location.GetApiLocationResponse:
      example:
        Locations:
        - Zip: Zip
          StoreId: StoreId
          State: State
          Address2: Address2
          IsOpened: false
          Id: 0
          City: City
          Address1: Address1
          CountryCode: CountryCode
          Name: Name
        - Zip: Zip
          StoreId: StoreId
          State: State
          Address2: Address2
          IsOpened: false
          Id: 0
          City: City
          Address1: Address1
          CountryCode: CountryCode
          Name: Name
      properties:
        Locations:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.ApiLocationModel'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Location.ApiLocationModel:
      example:
        Zip: Zip
        StoreId: StoreId
        State: State
        Address2: Address2
        IsOpened: false
        Id: 0
        City: City
        Address1: Address1
        CountryCode: CountryCode
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        StoreId:
          type: string
        Name:
          type: string
        City:
          type: string
        State:
          type: string
        Zip:
          type: string
        Address1:
          type: string
        Address2:
          type: string
        CountryCode:
          type: string
        IsOpened:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Location.GetLandlordResponsibilityResponse:
      example:
        LordResponsibilities:
        - TradeName: TradeName
          OverrideCategoryName: OverrideCategoryName
          UpdatedBy: UpdatedBy
          StoreId: StoreId
          OverrideNTE: OverrideNTE
          UpdatedDate: UpdatedDate
          LocationId: 6
          CategoryName: CategoryName
          LeaseNote: LeaseNote
          Id: 0
          OverridePriorityName: OverridePriorityName
          OverrideProviderRank: OverrideProviderRank
        - TradeName: TradeName
          OverrideCategoryName: OverrideCategoryName
          UpdatedBy: UpdatedBy
          StoreId: StoreId
          OverrideNTE: OverrideNTE
          UpdatedDate: UpdatedDate
          LocationId: 6
          CategoryName: CategoryName
          LeaseNote: LeaseNote
          Id: 0
          OverridePriorityName: OverridePriorityName
          OverrideProviderRank: OverrideProviderRank
      properties:
        LordResponsibilities:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LandlordResponsibilityModel'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Location.LandlordResponsibilityModel:
      example:
        TradeName: TradeName
        OverrideCategoryName: OverrideCategoryName
        UpdatedBy: UpdatedBy
        StoreId: StoreId
        OverrideNTE: OverrideNTE
        UpdatedDate: UpdatedDate
        LocationId: 6
        CategoryName: CategoryName
        LeaseNote: LeaseNote
        Id: 0
        OverridePriorityName: OverridePriorityName
        OverrideProviderRank: OverrideProviderRank
      properties:
        Id:
          format: int32
          type: integer
        LocationId:
          format: int32
          type: integer
        StoreId:
          type: string
        TradeName:
          type: string
        CategoryName:
          type: string
        OverridePriorityName:
          type: string
        OverrideCategoryName:
          type: string
        OverrideProviderRank:
          type: string
        OverrideNTE:
          type: string
        LeaseNote:
          type: string
        UpdatedBy:
          type: string
        UpdatedDate:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Location.CreateLandlordResponsibilityApiRequest:
      properties:
        StoreId:
          type: string
        TradeName:
          type: string
        CategoryName:
          type: string
        OverridePriorityName:
          type: string
        OverrideCategoryName:
          type: string
        OverrideProviderRank:
          type: string
        OverrideNTE:
          type: string
        LeaseNote:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Location.UpdateLandlordResponsibilityApiRequest:
      properties:
        Id:
          format: int32
          type: integer
        TradeName:
          type: string
        CategoryName:
          type: string
        OverridePriorityName:
          type: string
        OverrideCategoryName:
          type: string
        OverrideProviderRank:
          type: string
        OverrideNTE:
          type: string
        LeaseNote:
          type: string
      type: object
    ServiceChannel.Api.Model.LocationSupply.LocationSupply:
      properties:
        Location:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.LocationSupply.Location'
        SupplyLocations:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.LocationSupply.Location'
          type: array
      type: object
    ServiceChannel.Api.Model.LocationSupply.Location:
      properties:
        LocationId:
          format: int32
          type: integer
        TruckId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.MliConfiguration.Api.MLILevel:
      description: MLI level object.
      example:
        Id: 0
        Name: Name
      properties:
        Id:
          description: Unique numeric identifier of an MLI level.
          format: int32
          type: integer
        Name:
          description: MLI level name.
          type: string
      type: object
    ServiceChannel.Services.Messaging.User.Api.AssignedUser:
      description: Assigned user object details.
      example:
        UserId: UserId
        Id: 0
      properties:
        Id:
          description: Unique user identifier.
          format: int32
          type: integer
        UserId:
          description: Username to log into the system.
          type: string
      type: object
    ServiceChannel.Services.Messaging.NegotiatedPriceList.NegotiatedPriceList:
      description: NegotiatedPriceLists
      example:
        ProviderId: 6
        CreatedBy: 7
        UserName: UserName
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        PriceListOtherCharges:
        - Type: Type
          IsDeleted: false
          Description: Description
          UnitOfMeasure: UnitOfMeasure
          Price: 6.84685269835264
          PriceListId: 1
          Id: 1
          PriceListName: PriceListName
        - Type: Type
          IsDeleted: false
          Description: Description
          UnitOfMeasure: UnitOfMeasure
          Price: 6.84685269835264
          PriceListId: 1
          Id: 1
          PriceListName: PriceListName
        PriceListFile:
          FilePath: FilePath
          UpdatedBy: 4
          CreatedBy: 2
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          SubscriberId: 3
          FileName: FileName
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 9
        Regions:
        - Regions
        - Regions
        ProviderName: ProviderName
        UpdatedBy: 1
        ExpirationDate: 2000-01-23T04:56:07.000+00:00
        SubscriberId: 1
        PriceListParts:
        - IsDeleted: false
          Description: Description
          PartName: PartName
          UnitOfMeasure: UnitOfMeasure
          PartNumber: PartNumber
          Price: 2.3021358869347655
          PriceListId: 5
          Markup: 7.061401241503109
          Id: 5
          PriceListName: PriceListName
        - IsDeleted: false
          Description: Description
          PartName: PartName
          UnitOfMeasure: UnitOfMeasure
          PartNumber: PartNumber
          Price: 2.3021358869347655
          PriceListId: 5
          Markup: 7.061401241503109
          Id: 5
          PriceListName: PriceListName
        LocationIds:
        - LocationIds
        - LocationIds
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        Districts:
        - Districts
        - Districts
        Id: 0
        PriceListName: PriceListName
        LNHName: LNHName
        EffectiveDate: 2000-01-23T04:56:07.000+00:00
        LNHValues:
        - LNHValues
        - LNHValues
      properties:
        Id:
          description: Id
          format: int32
          type: integer
        PriceListName:
          description: PriceListName
          type: string
        EffectiveDate:
          description: EffectiveDate
          format: date-time
          type: string
        ExpirationDate:
          description: ExpirationDate
          format: date-time
          type: string
        ProviderId:
          description: ProviderId
          format: int32
          type: integer
        ProviderName:
          description: ProviderName
          type: string
        SubscriberId:
          description: SubscriberId
          format: int32
          type: integer
        PriceListParts:
          description: PriceListParts
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.NegotiatedPriceList.PriceListPart'
          type: array
        PriceListFile:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.NegotiatedPriceList.PriceListFile'
        Regions:
          description: Regions
          items:
            type: string
          type: array
        Districts:
          description: Districts
          items:
            type: string
          type: array
        LocationIds:
          description: LocationIds
          items:
            type: string
          type: array
        CreatedDate:
          description: Created Date
          format: date-time
          type: string
        UpdatedDate:
          description: Updated Date
          format: date-time
          type: string
        CreatedBy:
          description: Created By
          format: int32
          type: integer
        UserName:
          description: UserName
          type: string
        UpdatedBy:
          description: Updated By
          format: int32
          type: integer
        LNHName:
          description: LNHName
          type: string
        LNHValues:
          description: LNHValues
          items:
            type: string
          type: array
        PriceListOtherCharges:
          description: PriceListOtherCharges
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.NegotiatedPriceList.PriceListOtherCharges'
          type: array
      type: object
    ServiceChannel.Services.Messaging.NegotiatedPriceList.PriceListPart:
      description: PriceListPart
      example:
        IsDeleted: false
        Description: Description
        PartName: PartName
        UnitOfMeasure: UnitOfMeasure
        PartNumber: PartNumber
        Price: 2.3021358869347655
        PriceListId: 5
        Markup: 7.061401241503109
        Id: 5
        PriceListName: PriceListName
      properties:
        Id:
          description: Id
          format: int32
          type: integer
        PriceListId:
          description: PriceListId
          format: int32
          type: integer
        PartName:
          description: PartName
          type: string
        Description:
          description: Description
          type: string
        UnitOfMeasure:
          description: UnitOfMeasure
          type: string
        Price:
          description: Price
          format: double
          type: number
        Markup:
          description: Markup
          format: double
          type: number
        PartNumber:
          description: PartNumber
          type: string
        PriceListName:
          description: PriceListName
          type: string
        IsDeleted:
          default: false
          description: Is Deleted
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.NegotiatedPriceList.PriceListFile:
      description: PriceListFile
      example:
        FilePath: FilePath
        UpdatedBy: 4
        CreatedBy: 2
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        SubscriberId: 3
        FileName: FileName
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        Id: 9
      properties:
        Id:
          description: Id
          format: int32
          type: integer
        FileName:
          description: FileName
          type: string
        FilePath:
          description: FilePath
          type: string
        SubscriberId:
          description: SubscriberId
          format: int32
          type: integer
        CreatedDate:
          description: Created Date
          format: date-time
          type: string
        UpdatedDate:
          description: Updated Date
          format: date-time
          type: string
        CreatedBy:
          description: Created By
          format: int32
          type: integer
        UpdatedBy:
          description: Updated By
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.NegotiatedPriceList.PriceListOtherCharges:
      description: PriceListOtherCharges
      example:
        Type: Type
        IsDeleted: false
        Description: Description
        UnitOfMeasure: UnitOfMeasure
        Price: 6.84685269835264
        PriceListId: 1
        Id: 1
        PriceListName: PriceListName
      properties:
        Id:
          description: Id
          format: int32
          type: integer
        PriceListId:
          description: PriceListId
          format: int32
          type: integer
        Type:
          description: Type
          type: string
        Description:
          description: Description
          type: string
        UnitOfMeasure:
          description: UnitOfMeasure
          type: string
        Price:
          description: Price
          format: double
          type: number
        PriceListName:
          description: PriceListName
          type: string
        IsDeleted:
          default: false
          description: Is Deleted
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Workorders.CreateWoNoteRequest:
      properties:
        Note:
          description: "Required, Note text"
          type: string
        MailedTo:
          description: E-mail address(es)
          type: string
        ActionRequired:
          default: false
          description: Action requred flag
          type: boolean
        ScheduledDate:
          description: Scheduled Date and Time
          format: date-time
          type: string
        FollowUpDate:
          format: date-time
          type: string
        IsFollowUpDateChanged:
          default: false
          type: boolean
        AttachmentsIds:
          items:
            format: int32
            type: integer
          type: array
        Visibility:
          description: "Defines which parties can view the note. Visibility also works\
            \ in Universal Connector where there are three primary parties: Subscriber,\
            \ External Subscriber, and Provider. \r\n            Possible values:\r\
            \n            `0` — Visible to everyone (Subscriber, External Subscriber,\
            \ Provider),\r\n            `1` — Not visible to External Subscriber.\
            \ Visible to Subscriber and Provider,\r\n            `2` — Not visible\
            \ to Provider. Visible to Subscriber and External Subscriber.\r\n    \
            \        `3` — Visible to Subscriber only."
          format: int32
          type: integer
        Actor:
          description: Actor
          type: string
        NotifyFollowers:
          default: false
          description: If true email alert will be sent to WO Followers
          type: boolean
        DoNotSendEmail:
          default: false
          type: boolean
      required:
      - Note
      type: object
    ServiceChannel.Services.Messaging.Notes.GetNotesResponse:
      example:
        UserNotesCount: 5
        AllNotesCount: 1
        Notes:
        - CreatedBy: CreatedBy
          ActionRequired: false
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ScheduledDate: 2000-01-23T04:56:07.000+00:00
          NoteData: NoteData
          Attachments:
          - NoteId: 6
            Description: Description
            Visibility: 1
            Id: 0
            Uri: Uri
            TimeStamp: 2000-01-23T04:56:07.000+00:00
            Name: Name
          - NoteId: 6
            Description: Description
            Visibility: 1
            Id: 0
            Uri: Uri
            TimeStamp: 2000-01-23T04:56:07.000+00:00
            Name: Name
          FollowUpDate: 2000-01-23T04:56:07.000+00:00
          CompanyName: CompanyName
          Number: 6
          MailedTo: MailedTo
          NoteType: SystemNote
          Visibility: Visibility
          Id: 0
          IsAttachmentNote: false
        - CreatedBy: CreatedBy
          ActionRequired: false
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ScheduledDate: 2000-01-23T04:56:07.000+00:00
          NoteData: NoteData
          Attachments:
          - NoteId: 6
            Description: Description
            Visibility: 1
            Id: 0
            Uri: Uri
            TimeStamp: 2000-01-23T04:56:07.000+00:00
            Name: Name
          - NoteId: 6
            Description: Description
            Visibility: 1
            Id: 0
            Uri: Uri
            TimeStamp: 2000-01-23T04:56:07.000+00:00
            Name: Name
          FollowUpDate: 2000-01-23T04:56:07.000+00:00
          CompanyName: CompanyName
          Number: 6
          MailedTo: MailedTo
          NoteType: SystemNote
          Visibility: Visibility
          Id: 0
          IsAttachmentNote: false
        SystemNotesCount: 5
      properties:
        Notes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notes.Note'
          type: array
        AllNotesCount:
          format: int32
          type: integer
        UserNotesCount:
          format: int32
          type: integer
        SystemNotesCount:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Notes.Note:
      example:
        CreatedBy: CreatedBy
        ActionRequired: false
        DateCreated: 2000-01-23T04:56:07.000+00:00
        ScheduledDate: 2000-01-23T04:56:07.000+00:00
        NoteData: NoteData
        Attachments:
        - NoteId: 6
          Description: Description
          Visibility: 1
          Id: 0
          Uri: Uri
          TimeStamp: 2000-01-23T04:56:07.000+00:00
          Name: Name
        - NoteId: 6
          Description: Description
          Visibility: 1
          Id: 0
          Uri: Uri
          TimeStamp: 2000-01-23T04:56:07.000+00:00
          Name: Name
        FollowUpDate: 2000-01-23T04:56:07.000+00:00
        CompanyName: CompanyName
        Number: 6
        MailedTo: MailedTo
        NoteType: SystemNote
        Visibility: Visibility
        Id: 0
        IsAttachmentNote: false
      properties:
        Id:
          description: "UID of work order note, can be null"
          format: int32
          type: integer
        Number:
          description: Note number
          format: int32
          type: integer
        NoteData:
          description: Note data
          type: string
        DateCreated:
          description: Date when Note was created
          format: date-time
          type: string
        ScheduledDate:
          description: ""
          format: date-time
          type: string
        FollowUpDate:
          description: ""
          format: date-time
          type: string
        ActionRequired:
          default: false
          description: Action Required
          type: boolean
        MailedTo:
          description: Email
          type: string
        CreatedBy:
          description: Describes who created the Note
          type: string
        CompanyName:
          description: Subscriber or Provider short name
          type: string
        Attachments:
          description: Collection of note attachments
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
          type: array
        Visibility:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        NoteType:
          enum:
          - SystemNote
          - UsersNote
          type: string
        IsAttachmentNote:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Notes.EmailRecipientResponse:
      description: The email notification recipient object.
      example:
        UserName: UserName
        Email: Email
        Id: 0
        RecipientType: Undefined
      properties:
        Id:
          description: The unique numeric identifier of the user who can be added
            to the list of email notification recipients.
          format: int32
          type: integer
        UserName:
          description: The username of the email notification recipient.
          type: string
        Email:
          description: The email address of the notification recipient.
          type: string
        RecipientType:
          description: Defines the type of the email notification recipient.
          enum:
          - Undefined
          - RegularRecipient
          - Provider
          - Follower
          - LocationNoteRecipient
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.AddFollowersRequest:
      properties:
        FollowersList:
          description: "Required, Followers List"
          type: string
        UserIds:
          description: "Required, User Ids"
          type: string
      required:
      - FollowersList
      - UserIds
      type: object
    ServiceChannel.Services.Messaging.Notifications.HttpNotificationSubscription:
      example:
        Enabled: false
        EventTypes:
        - WorkOrderCreated
        - WorkOrderCreated
        Id: 0
        Rules:
          Trades:
          - Trades
          - Trades
          Statuses:
          - Statuses
          - Statuses
          Categories:
          - Categories
          - Categories
        Url: Url
        Name: Name
      properties:
        Id:
          description: The unique subscription ID. Generated automatically and cannot
            be modified.
          format: int32
          type: integer
        Url:
          description: The URL to which the events should be delivered.
          type: string
        Enabled:
          default: false
          description: Defines if the subscription is active or inactive.
          type: boolean
        Name:
          description: The user-friendly name for the subscription.
          type: string
        EventTypes:
          description: The list of events to subscribe to. Events within one subscription
            should belong to one object.
          items:
            enum:
            - WorkOrderCreated
            - WorkOrderNoteAdded
            - WorkOrderNotePinned
            - WorkOrderNoteUnpinned
            - WorkOrderStatusChanged
            - WorkOrderAttachmentAdded
            - WorkOrderNumberChanged
            - WorkOrderPriorityChanged
            - WorkOrderScheduledDateChanged
            - WorkOrderTradeChanged
            - WorkOrderNteChanged
            - WorkOrderCategoryChanged
            - WorkOrderProviderChanged
            - WorkOrderDescriptionChanged
            - WorkOrderResolutionCreated
            - RefrigerantWasUsedChanged
            - WorkOrderResolutionUpdated
            - WorkOrderResolutionCodeUpdated
            - WorkOrderRootCauseCodeUpdated
            - WorkOrderAssetAttached
            - WorkOrderAssetDetached
            - WorkOrderAssetValidated
            - WorkOrderLabelAdded
            - WorkOrderLabelDeleted
            - WorkOrderWeatherTypeChanged
            - WorkOrderIssueChoiceChanged
            - WorkOrderTechnicianAssigned
            - WorkOrderTechnicianUnassigned
            - WorkOrderTechnicianAccepted
            - WorkOrderTechnicianDeclined
            - WorkOrderCertifiedTechnicianAssigned
            - WorkOrderLinksAdded
            - WorkOrderLinksDeleted
            - WorkOrderStarAdded
            - WorkOrderStarRemoved
            - WorkOrderCheckIn
            - WorkOrderCheckOut
            - BadgeScanRequired
            - InvoiceCreated
            - InvoiceOpen
            - InvoiceApproved
            - InvoiceOnHold
            - InvoiceReviewed
            - InvoiceRejected
            - InvoiceApprovalCodeChanged
            - InvoiceStarAdded
            - InvoiceStarRemoved
            - InvoiceDisputed
            - InvoiceVoided
            - InvoicePaid
            - ProposalCreated
            - ProposalOpen
            - ProposalApproved
            - ProposalOnHold
            - ProposalRejected
            - ProposalReviewed
            - ProposalUserAssigned
            - ProposalWorkOrderAssigned
            - ProposalAttachmentAdded
            - ProposalScheduled
            - ProposalVoided
            - ProposalPendingExternalApproval
            - FbInvitationAccepted
            - CalendarIntegrationAdded
            - CalendarIntegrationUpdated
            - LocationCreated
            - LocationUpdated
            - LocationDeleted
            - LocationNoteHeaderCreated
            - LocationNoteHeaderUpdated
            - LocationNoteHeaderDeleted
            - LocationNotesChanged
            - SubscriberTradeCreated
            - SubscriberTradeUpdated
            - SubscriberTradeDeleted
            - SubscriberPriorityCreated
            - SubscriberPriorityUpdated
            - SubscriberPriorityDeleted
            - SubscriberStatusCreated
            - SubscriberStatusUpdated
            - SubscriberStatusDeleted
            - SubscriberCategoryCreated
            - SubscriberCategoryUpdated
            - SubscriberCategoryDeleted
            - ProviderTradeAssigned
            - ProviderTradeUnassigned
            - LeakRecordCreated
            - LeakRecordUpdated
            - LeakRecordDeleted
            - CheckListResponseAdded
            - CheckListResponseUpdated
            - CheckListCreated
            - CheckListUpdated
            - CheckListDeleted
            - IssueListAssigned
            - AssetCreated
            - AssetUpdated
            type: string
          type: array
        Rules:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionsRules'
      required:
      - EventTypes
      - Name
      - Url
      type: object
    ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionsRules:
      description: The event rules used to receive events matching only certain criteria.
      example:
        Trades:
        - Trades
        - Trades
        Statuses:
        - Statuses
        - Statuses
        Categories:
        - Categories
        - Categories
      properties:
        Trades:
          description: The trades that the events should belong to.
          items:
            type: string
          type: array
        Categories:
          description: The categories that the events should belong to.
          items:
            type: string
          type: array
        Statuses:
          description: The statuses that the events should belong to.
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.Notifications.AddHttpNotificationSubscriptionRequest:
      properties:
        Url:
          description: The URL to which the events should be delivered.
          type: string
        Enabled:
          default: false
          description: Defines if the subscription is active or inactive.
          type: boolean
        Name:
          description: The user-friendly name for the subscription.
          type: string
        EventTypes:
          description: The list of events to subscribe to. Events within one subscription
            should belong to one object.
          items:
            enum:
            - WorkOrderCreated
            - WorkOrderNoteAdded
            - WorkOrderNotePinned
            - WorkOrderNoteUnpinned
            - WorkOrderStatusChanged
            - WorkOrderAttachmentAdded
            - WorkOrderNumberChanged
            - WorkOrderPriorityChanged
            - WorkOrderScheduledDateChanged
            - WorkOrderTradeChanged
            - WorkOrderNteChanged
            - WorkOrderCategoryChanged
            - WorkOrderProviderChanged
            - WorkOrderDescriptionChanged
            - WorkOrderResolutionCreated
            - RefrigerantWasUsedChanged
            - WorkOrderResolutionUpdated
            - WorkOrderResolutionCodeUpdated
            - WorkOrderRootCauseCodeUpdated
            - WorkOrderAssetAttached
            - WorkOrderAssetDetached
            - WorkOrderAssetValidated
            - WorkOrderLabelAdded
            - WorkOrderLabelDeleted
            - WorkOrderWeatherTypeChanged
            - WorkOrderIssueChoiceChanged
            - WorkOrderTechnicianAssigned
            - WorkOrderTechnicianUnassigned
            - WorkOrderTechnicianAccepted
            - WorkOrderTechnicianDeclined
            - WorkOrderCertifiedTechnicianAssigned
            - WorkOrderLinksAdded
            - WorkOrderLinksDeleted
            - WorkOrderStarAdded
            - WorkOrderStarRemoved
            - WorkOrderCheckIn
            - WorkOrderCheckOut
            - BadgeScanRequired
            - InvoiceCreated
            - InvoiceOpen
            - InvoiceApproved
            - InvoiceOnHold
            - InvoiceReviewed
            - InvoiceRejected
            - InvoiceApprovalCodeChanged
            - InvoiceStarAdded
            - InvoiceStarRemoved
            - InvoiceDisputed
            - InvoiceVoided
            - InvoicePaid
            - ProposalCreated
            - ProposalOpen
            - ProposalApproved
            - ProposalOnHold
            - ProposalRejected
            - ProposalReviewed
            - ProposalUserAssigned
            - ProposalWorkOrderAssigned
            - ProposalAttachmentAdded
            - ProposalScheduled
            - ProposalVoided
            - ProposalPendingExternalApproval
            - FbInvitationAccepted
            - CalendarIntegrationAdded
            - CalendarIntegrationUpdated
            - LocationCreated
            - LocationUpdated
            - LocationDeleted
            - LocationNoteHeaderCreated
            - LocationNoteHeaderUpdated
            - LocationNoteHeaderDeleted
            - LocationNotesChanged
            - SubscriberTradeCreated
            - SubscriberTradeUpdated
            - SubscriberTradeDeleted
            - SubscriberPriorityCreated
            - SubscriberPriorityUpdated
            - SubscriberPriorityDeleted
            - SubscriberStatusCreated
            - SubscriberStatusUpdated
            - SubscriberStatusDeleted
            - SubscriberCategoryCreated
            - SubscriberCategoryUpdated
            - SubscriberCategoryDeleted
            - ProviderTradeAssigned
            - ProviderTradeUnassigned
            - LeakRecordCreated
            - LeakRecordUpdated
            - LeakRecordDeleted
            - CheckListResponseAdded
            - CheckListResponseUpdated
            - CheckListCreated
            - CheckListUpdated
            - CheckListDeleted
            - IssueListAssigned
            - AssetCreated
            - AssetUpdated
            type: string
          type: array
        Rules:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionsRules'
      required:
      - EventTypes
      - Name
      - Url
      type: object
    ServiceChannel.Services.Messaging.Notifications.AddNotificationSubsciptionResponse:
      example:
        Id: 0
      properties:
        Id:
          description: The unique subscription ID. Generated automatically and cannot
            be modified.
          format: int32
          readOnly: true
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Notifications.MSBotNotificationSubscriptionResponse:
      description: MSBotNotificationSubscriptionResponse
      example:
        ProviderId: 5
        IsEnabled: false
        ConversationReference:
          ConversationId: ConversationId
          TenantId: TenantId
          UserName: UserName
          UserId: UserId
          ServiceUrl: ServiceUrl
        UserId: 6
        SubscriberId: 1
        Id: 0
        UserEmailAddress: UserEmailAddress
      properties:
        Id:
          description: Subscription identifier
          format: int32
          type: integer
        UserId:
          description: Service Channel User identifier
          format: int32
          type: integer
        UserEmailAddress:
          description: Service Channel User Email Address
          type: string
        SubscriberId:
          description: Subscriber identifier
          format: int32
          type: integer
        ProviderId:
          description: Provider identifier
          format: int32
          type: integer
        IsEnabled:
          default: false
          description: Is Enabled
          type: boolean
        ConversationReference:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.MSBotConversationReference'
      type: object
    ServiceChannel.Services.Messaging.Notifications.MSBotConversationReference:
      description: MSBotConversationReference
      example:
        ConversationId: ConversationId
        TenantId: TenantId
        UserName: UserName
        UserId: UserId
        ServiceUrl: ServiceUrl
      properties:
        ConversationId:
          description: Gets or sets channel id
          type: string
        TenantId:
          description: Gets or sets conversation's tenant ID
          type: string
        UserId:
          description: Gets or sets the user identifier
          type: string
        UserName:
          description: Gets or sets user name
          type: string
        ServiceUrl:
          description: Gets or sets (Optional) Service endpoint where operations referenced
          type: string
      type: object
    ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionRequest:
      description: NotificationSubscriptionRequest
      properties:
        Name:
          description: The user-friendly name for the subscription.
          type: string
        IsEnabled:
          default: false
          description: Defines if the subscription is active or inactive.
          type: boolean
        Type:
          description: Notification Subscription Type
          enum:
          - MSTeams
          type: string
        Content:
          type: object
      required:
      - Content
      - Type
      type: object
    ServiceChannel.Services.Messaging.Notifications.SigningKeyResponse:
      example:
        Key: Key
      properties:
        Key:
          description: The current subscriber's or provider's signing key.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Permission.ProvidersExclusionListResponse:
      description: ProvidersExclusionListResponse
      example:
        ProviderIds:
        - 0
        - 0
      properties:
        ProviderIds:
          description: Provider ids
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Notifications.WebHooks.WebHook:
      example:
        Description: Description
        Subscriptions:
        - EventTypes:
          - WorkOrderCreated
          - WorkOrderCreated
          Id: 0
          Rules:
            Trades:
            - Trades
            - Trades
            Statuses:
            - Statuses
            - Statuses
            Categories:
            - Categories
            - Categories
          Name: Name
        - EventTypes:
          - WorkOrderCreated
          - WorkOrderCreated
          Id: 0
          Rules:
            Trades:
            - Trades
            - Trades
            Statuses:
            - Statuses
            - Statuses
            Categories:
            - Categories
            - Categories
          Name: Name
        ResetOptions: false
        Enabled: false
        Id: 6
        Url: Url
        Name: Name
      properties:
        Subscriptions:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.WebHookSubscription'
          type: array
        Id:
          description: The unique webhook ID. Generated automatically and cannot be
            modified.
          format: int32
          type: integer
        ResetOptions:
          default: false
          type: boolean
        Enabled:
          default: false
          description: Defines if the webhook is active or inactive.
          type: boolean
        Name:
          description: The user-friendly name for the webhook.
          type: string
        Description:
          description: The description of the webhook.
          type: string
        Url:
          description: The URL to which the events should be delivered.
          type: string
      required:
      - Name
      - Url
      type: object
    ServiceChannel.Services.Messaging.Notifications.WebHookSubscription:
      example:
        EventTypes:
        - WorkOrderCreated
        - WorkOrderCreated
        Id: 0
        Rules:
          Trades:
          - Trades
          - Trades
          Statuses:
          - Statuses
          - Statuses
          Categories:
          - Categories
          - Categories
        Name: Name
      properties:
        Id:
          description: The unique subscription ID. Generated automatically and cannot
            be modified.
          format: int32
          type: integer
        Name:
          description: The user-friendly name for the subscription.
          type: string
        EventTypes:
          description: The list of events to subscribe to. Events within one subscription
            should belong to one object.
          items:
            enum:
            - WorkOrderCreated
            - WorkOrderNoteAdded
            - WorkOrderNotePinned
            - WorkOrderNoteUnpinned
            - WorkOrderStatusChanged
            - WorkOrderAttachmentAdded
            - WorkOrderNumberChanged
            - WorkOrderPriorityChanged
            - WorkOrderScheduledDateChanged
            - WorkOrderTradeChanged
            - WorkOrderNteChanged
            - WorkOrderCategoryChanged
            - WorkOrderProviderChanged
            - WorkOrderDescriptionChanged
            - WorkOrderResolutionCreated
            - RefrigerantWasUsedChanged
            - WorkOrderResolutionUpdated
            - WorkOrderResolutionCodeUpdated
            - WorkOrderRootCauseCodeUpdated
            - WorkOrderAssetAttached
            - WorkOrderAssetDetached
            - WorkOrderAssetValidated
            - WorkOrderLabelAdded
            - WorkOrderLabelDeleted
            - WorkOrderWeatherTypeChanged
            - WorkOrderIssueChoiceChanged
            - WorkOrderTechnicianAssigned
            - WorkOrderTechnicianUnassigned
            - WorkOrderTechnicianAccepted
            - WorkOrderTechnicianDeclined
            - WorkOrderCertifiedTechnicianAssigned
            - WorkOrderLinksAdded
            - WorkOrderLinksDeleted
            - WorkOrderStarAdded
            - WorkOrderStarRemoved
            - WorkOrderCheckIn
            - WorkOrderCheckOut
            - BadgeScanRequired
            - InvoiceCreated
            - InvoiceOpen
            - InvoiceApproved
            - InvoiceOnHold
            - InvoiceReviewed
            - InvoiceRejected
            - InvoiceApprovalCodeChanged
            - InvoiceStarAdded
            - InvoiceStarRemoved
            - InvoiceDisputed
            - InvoiceVoided
            - InvoicePaid
            - ProposalCreated
            - ProposalOpen
            - ProposalApproved
            - ProposalOnHold
            - ProposalRejected
            - ProposalReviewed
            - ProposalUserAssigned
            - ProposalWorkOrderAssigned
            - ProposalAttachmentAdded
            - ProposalScheduled
            - ProposalVoided
            - ProposalPendingExternalApproval
            - FbInvitationAccepted
            - CalendarIntegrationAdded
            - CalendarIntegrationUpdated
            - LocationCreated
            - LocationUpdated
            - LocationDeleted
            - LocationNoteHeaderCreated
            - LocationNoteHeaderUpdated
            - LocationNoteHeaderDeleted
            - LocationNotesChanged
            - SubscriberTradeCreated
            - SubscriberTradeUpdated
            - SubscriberTradeDeleted
            - SubscriberPriorityCreated
            - SubscriberPriorityUpdated
            - SubscriberPriorityDeleted
            - SubscriberStatusCreated
            - SubscriberStatusUpdated
            - SubscriberStatusDeleted
            - SubscriberCategoryCreated
            - SubscriberCategoryUpdated
            - SubscriberCategoryDeleted
            - ProviderTradeAssigned
            - ProviderTradeUnassigned
            - LeakRecordCreated
            - LeakRecordUpdated
            - LeakRecordDeleted
            - CheckListResponseAdded
            - CheckListResponseUpdated
            - CheckListCreated
            - CheckListUpdated
            - CheckListDeleted
            - IssueListAssigned
            - AssetCreated
            - AssetUpdated
            type: string
          type: array
        Rules:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionsRules'
      required:
      - EventTypes
      - Name
      type: object
    ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookRequest:
      properties:
        Subscriptions:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.NotificationRequestBase'
          type: array
        Enabled:
          default: false
          description: Defines if the webhook is active or inactive.
          type: boolean
        Name:
          description: The user-friendly name for the webhook.
          type: string
        Description:
          description: The description of the webhook.
          type: string
        Url:
          description: The URL to which the events should be delivered.
          type: string
      required:
      - Name
      - Url
      type: object
    ServiceChannel.Services.Messaging.Notifications.NotificationRequestBase:
      properties:
        Name:
          description: The user-friendly name for the subscription.
          type: string
        EventTypes:
          description: The list of events to subscribe to. Events within one subscription
            should belong to one object.
          items:
            enum:
            - WorkOrderCreated
            - WorkOrderNoteAdded
            - WorkOrderNotePinned
            - WorkOrderNoteUnpinned
            - WorkOrderStatusChanged
            - WorkOrderAttachmentAdded
            - WorkOrderNumberChanged
            - WorkOrderPriorityChanged
            - WorkOrderScheduledDateChanged
            - WorkOrderTradeChanged
            - WorkOrderNteChanged
            - WorkOrderCategoryChanged
            - WorkOrderProviderChanged
            - WorkOrderDescriptionChanged
            - WorkOrderResolutionCreated
            - RefrigerantWasUsedChanged
            - WorkOrderResolutionUpdated
            - WorkOrderResolutionCodeUpdated
            - WorkOrderRootCauseCodeUpdated
            - WorkOrderAssetAttached
            - WorkOrderAssetDetached
            - WorkOrderAssetValidated
            - WorkOrderLabelAdded
            - WorkOrderLabelDeleted
            - WorkOrderWeatherTypeChanged
            - WorkOrderIssueChoiceChanged
            - WorkOrderTechnicianAssigned
            - WorkOrderTechnicianUnassigned
            - WorkOrderTechnicianAccepted
            - WorkOrderTechnicianDeclined
            - WorkOrderCertifiedTechnicianAssigned
            - WorkOrderLinksAdded
            - WorkOrderLinksDeleted
            - WorkOrderStarAdded
            - WorkOrderStarRemoved
            - WorkOrderCheckIn
            - WorkOrderCheckOut
            - BadgeScanRequired
            - InvoiceCreated
            - InvoiceOpen
            - InvoiceApproved
            - InvoiceOnHold
            - InvoiceReviewed
            - InvoiceRejected
            - InvoiceApprovalCodeChanged
            - InvoiceStarAdded
            - InvoiceStarRemoved
            - InvoiceDisputed
            - InvoiceVoided
            - InvoicePaid
            - ProposalCreated
            - ProposalOpen
            - ProposalApproved
            - ProposalOnHold
            - ProposalRejected
            - ProposalReviewed
            - ProposalUserAssigned
            - ProposalWorkOrderAssigned
            - ProposalAttachmentAdded
            - ProposalScheduled
            - ProposalVoided
            - ProposalPendingExternalApproval
            - FbInvitationAccepted
            - CalendarIntegrationAdded
            - CalendarIntegrationUpdated
            - LocationCreated
            - LocationUpdated
            - LocationDeleted
            - LocationNoteHeaderCreated
            - LocationNoteHeaderUpdated
            - LocationNoteHeaderDeleted
            - LocationNotesChanged
            - SubscriberTradeCreated
            - SubscriberTradeUpdated
            - SubscriberTradeDeleted
            - SubscriberPriorityCreated
            - SubscriberPriorityUpdated
            - SubscriberPriorityDeleted
            - SubscriberStatusCreated
            - SubscriberStatusUpdated
            - SubscriberStatusDeleted
            - SubscriberCategoryCreated
            - SubscriberCategoryUpdated
            - SubscriberCategoryDeleted
            - ProviderTradeAssigned
            - ProviderTradeUnassigned
            - LeakRecordCreated
            - LeakRecordUpdated
            - LeakRecordDeleted
            - CheckListResponseAdded
            - CheckListResponseUpdated
            - CheckListCreated
            - CheckListUpdated
            - CheckListDeleted
            - IssueListAssigned
            - AssetCreated
            - AssetUpdated
            type: string
          type: array
        Rules:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.NotificationSubscriptionsRules'
      required:
      - EventTypes
      - Name
      type: object
    ServiceChannel.Services.Messaging.Notifications.WebHooks.AddWebHookResponse:
      description: Add WebHook Response
      example:
        Id: 0
        SubscriptionsResponses:
        - 6
        - 6
      properties:
        Id:
          description: The unique webhook ID. Generated automatically and cannot be
            modified.
          format: int32
          type: integer
        SubscriptionsResponses:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.WebApi.Controllers.OutgoingXmlController.ResendData:
      properties:
        ids:
          items:
            format: int32
            type: integer
          type: array
        delay:
          format: float
          type: number
      type: object
    ServiceChannel.Api.Model.OutgoingXml.OutgoingXmlUser:
      properties:
        Key:
          type: string
        IdentityId:
          format: int32
          type: integer
        Type:
          type: string
        Id:
          format: int32
          type: integer
        Pin:
          format: int32
          type: integer
        TypeMsg:
          type: string
        Url:
          type: string
        Login:
          type: string
        Password:
          type: string
        HttpMethod:
          type: string
        Format:
          type: string
        Topic:
          type: string
        UseEventSystem:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkOrderPartResponse:
      example:
        Description: Description
        InventoryLocationName: InventoryLocationName
        IsInventoryPart: false
        Quantity: 6.0274563
        Reason: Reason
        SupplierPartId: SupplierPartId
        IsSupplierPart: false
        Price: 5.962133916683182
        SupplierPartAuxiliaryId: SupplierPartAuxiliaryId
        RecId: 1
        Id: 0
        DefaultNte: 5.637376656633329
        NteMultiplier: 2.3021358869347655
      properties:
        Id:
          format: int32
          type: integer
        Quantity:
          format: float
          type: number
        RecId:
          format: int32
          type: integer
        Description:
          type: string
        Price:
          format: double
          type: number
        Reason:
          type: string
        SupplierPartId:
          type: string
        SupplierPartAuxiliaryId:
          type: string
        DefaultNte:
          format: double
          type: number
        NteMultiplier:
          format: double
          type: number
        IsSupplierPart:
          default: false
          type: boolean
        IsInventoryPart:
          default: false
          type: boolean
        InventoryLocationName:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.CreateWorkOrderPartsCollectionRequest:
      properties:
        Parts:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWorkOrderPartRequest'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Workorders.CreateWorkOrderPartRequest:
      properties:
        Quantity:
          format: double
          type: number
        Description:
          type: string
        Price:
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrderPartsCollectionRequest:
      properties:
        Parts:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrderPartRequest'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrderPartRequest:
      properties:
        Id:
          format: int32
          type: integer
        Quantity:
          format: double
          type: number
        Description:
          type: string
        Price:
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.Parts.RefrigerantUsageResponse:
      example:
        TriggerQuantity: 0.8008281904610115
        CalculationMethod: CalculationMethod
        Charge: 1.4658129805029452
        LeakRate: 6.027456183070403
      properties:
        TriggerQuantity:
          format: double
          type: number
        LeakRate:
          format: double
          type: number
        Charge:
          format: double
          type: number
        CalculationMethod:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantBulkChangeRequest:
      properties:
        AddItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AddWorkOrderPartRefrigerantItem'
          type: array
        UpdateItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateWorkOrderPartRefrigerantItem'
          type: array
        DeleteItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.DeleteWorkOrderPartRefrigerantItem'
          type: array
        IsLocalTime:
          default: false
          type: boolean
        SubmitQuantityExceeded:
          default: false
          type: boolean
        SubmitMoeQtyExceeded:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.AddWorkOrderPartRefrigerantItem:
      properties:
        AssetId:
          format: int32
          type: integer
        RecId:
          format: int32
          type: integer
        Quantity:
          format: double
          type: number
        UnitCost:
          format: double
          type: number
        IsRefrigerant:
          default: false
          type: boolean
        IsInventoryPart:
          default: false
          type: boolean
        UseDate:
          format: date-time
          type: string
        UseDateStr:
          type: string
        ReasonCode:
          format: int32
          type: integer
        ReasonCodeId:
          format: int32
          type: integer
        PartNumber:
          type: string
        PartName:
          type: string
        PartGroup:
          type: string
        PartGroupId:
          format: int32
          type: integer
        SupplierName:
          type: string
        Description:
          type: string
        RefrigerantChargeOptionsId:
          format: int32
          type: integer
        RefrigerantChargeVendor:
          type: string
        InventoryLocationId:
          format: int32
          type: integer
        InventoryLocationGuid:
          description: GUID of the inventory location
          type: string
        InventoryPartId:
          format: int32
          type: integer
        RefrigerantUseReason:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantUseReasonCode'
        RefrigerantRemovalStatus:
          enum:
          - Destroyed
          - Reused
          - Reclaimed
          - Banked
          - ChargeLost
          type: string
        RefrigerantTypeId:
          format: int32
          type: integer
        RefrigerantTypeName:
          type: string
        SubmitMoeQtyExceeded:
          default: false
          type: boolean
        MoeNumber:
          type: string
        IsRetrofit:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateWorkOrderPartRefrigerantItem:
      properties:
        PartId:
          format: int32
          type: integer
        Quantity:
          format: double
          type: number
        UnitCost:
          format: double
          type: number
        IsRefrigerant:
          default: false
          type: boolean
        IsInventoryPart:
          default: false
          type: boolean
        UseDate:
          format: date-time
          type: string
        UseDateStr:
          type: string
        ReasonCode:
          format: int32
          type: integer
        ReasonCodeId:
          format: int32
          type: integer
        PartNumber:
          type: string
        PartName:
          type: string
        PartGroup:
          type: string
        SupplierName:
          type: string
        Description:
          type: string
        RefrigerantChargeOptionsId:
          format: int32
          type: integer
        RefrigerantChargeVendor:
          type: string
        InventoryLocationId:
          format: int32
          type: integer
        InventoryLocationGuid:
          description: GUID of the inventory location
          type: string
        InventoryPartId:
          format: int32
          type: integer
        RefrigerantUseReason:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantUseReasonCode'
        SubmitMoeQtyExceeded:
          default: false
          type: boolean
        MoeNumber:
          type: string
        RecId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.DeleteWorkOrderPartRefrigerantItem:
      properties:
        PartId:
          format: int32
          type: integer
        InventoryLocationGuid:
          description: GUID of the inventory location
          type: string
        DeletionReason:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        DeletionReasonDescription:
          type: string
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantUseReasonCode:
      properties:
        Id:
          format: int32
          type: integer
        Order:
          format: int32
          type: integer
        Purpose:
          format: int32
          type: integer
        Name:
          type: string
        SubscriberId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.WorkOrderPartRefrigerantResponse:
      example:
        Description: Description
        PartNumber: PartNumber
        InventoryLocationName: InventoryLocationName
        SubscriberAssetId: 6
        InventoryLocationGuid: InventoryLocationGuid
        IsRetrofit: IsRetrofit
        ReasonCodeId: 3
        RefrigerantTypeName: RefrigerantTypeName
        RefrigerantPartNumber: RefrigerantPartNumber
        RefrigerantTypeId: 1
        RefrigerantChargeVendor: RefrigerantChargeVendor
        CreatedByUserId: CreatedByUserId
        PartName: PartName
        IsRefrigerant: false
        RecId: 1
        RefrigerantChargeOptionsId: 7
        ModifiedByUserId: ModifiedByUserId
        SubscriberTrackingNumber: 1
        IsInventoryPart: false
        CertifiedTechnicianId: 5
        PartGroup: PartGroup
        Quantity: 5.637376656633329
        UseDate: 2000-01-23T04:56:07.000+00:00
        ReasonCode: 9
        InventoryLocationId: 2
        WOStatus: WOStatus
        QuantityStr: QuantityStr
        UnitCost: 7.061401241503109
        SupplierPartId: SupplierPartId
        InventoryPartId: 4
        IsSupplierPart: false
        SupplierName: SupplierName
        ProblemType: ProblemType
        TagId: TagId
        InventoryLocations:
        - UnitPrice: 9.965781217890562
          LocationGuid: LocationGuid
          StoreId: StoreId
          Qty: 5.025004791520295
          LocationId: 1
          Id: 7
          PartId: 4
          LocationName: LocationName
        - UnitPrice: 9.965781217890562
          LocationGuid: LocationGuid
          StoreId: StoreId
          Qty: 5.025004791520295
          LocationId: 1
          Id: 7
          PartId: 4
          LocationName: LocationName
        Id: 0
        AssetId: 6
        ReasonCodeStr: ReasonCodeStr
        QuantityMetrics: 2.3021358869347655
        RefrigerantUsePurpose: 1
        IsConnectorWOPart: false
      properties:
        Id:
          format: int32
          type: integer
        AssetId:
          format: int32
          type: integer
        TagId:
          type: string
        RecId:
          format: int32
          type: integer
        CertifiedTechnicianId:
          format: int32
          type: integer
        Quantity:
          format: double
          type: number
        QuantityMetrics:
          format: double
          type: number
        QuantityStr:
          type: string
        UnitCost:
          format: double
          type: number
        IsRefrigerant:
          default: false
          type: boolean
        IsInventoryPart:
          default: false
          type: boolean
        UseDate:
          format: date-time
          type: string
        ReasonCode:
          format: int32
          type: integer
        ReasonCodeId:
          format: int32
          type: integer
        PartNumber:
          type: string
        Description:
          type: string
        WOStatus:
          type: string
        ProblemType:
          type: string
        InventoryLocationId:
          format: int32
          type: integer
        InventoryLocationGuid:
          description: GUID of inventory part location
          type: string
        InventoryLocationName:
          type: string
        InventoryPartId:
          format: int32
          type: integer
        PartName:
          type: string
        PartGroup:
          type: string
        SupplierName:
          type: string
        RefrigerantChargeOptionsId:
          format: int32
          type: integer
        RefrigerantChargeVendor:
          type: string
        ReasonCodeStr:
          type: string
        RefrigerantUsePurpose:
          format: int32
          type: integer
        RefrigerantTypeName:
          type: string
        RefrigerantTypeId:
          format: int32
          type: integer
        IsSupplierPart:
          default: false
          type: boolean
        IsConnectorWOPart:
          default: false
          type: boolean
        SubscriberTrackingNumber:
          format: int32
          type: integer
        SubscriberAssetId:
          format: int32
          type: integer
        CreatedByUserId:
          type: string
        ModifiedByUserId:
          type: string
        IsRetrofit:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        RefrigerantPartNumber:
          type: string
        InventoryLocations:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Inventory.InventoryLocation'
          type: array
        SupplierPartId:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Inventory.InventoryLocation:
      example:
        UnitPrice: 9.965781217890562
        LocationGuid: LocationGuid
        StoreId: StoreId
        Qty: 5.025004791520295
        LocationId: 1
        Id: 7
        PartId: 4
        LocationName: LocationName
      properties:
        Id:
          format: int32
          type: integer
        LocationId:
          format: int32
          type: integer
        PartId:
          format: int32
          type: integer
        Qty:
          format: double
          type: number
        UnitPrice:
          format: double
          type: number
        LocationName:
          type: string
        StoreId:
          type: string
        LocationGuid:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Assets.TechnicianAssociatedResponse:
      example:
        IsAssociated: false
      properties:
        IsAssociated:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Proposals.ProposalStatisticsResponse:
      description: Object of statistics on RFPs and proposals.
      example:
        RejectedProposals: 7
        ApprovedProposals: 5
        RFPsWaitingForApproval: 6
        WaitingReviewProposals: 2
        OpenProposals: 1
        DaysPeriod: 0
        ApprovedProposalsDaysPeriod: 5
      properties:
        DaysPeriod:
          description: Time period set as the number of days prior to the current
            date for which statistics on RFPs and proposals are returned.
          format: int32
          type: integer
        RFPsWaitingForApproval:
          description: The total number of RFPs awaiting response for the specified
            time period.
          format: int32
          type: integer
        OpenProposals:
          description: The total number of proposals in the _Open_ status for the
            specified time period.
          format: int32
          type: integer
        ApprovedProposalsDaysPeriod:
          description: Time period set as the number of days prior to the current
            date for which statistics on approved proposals are returned in `ApprovedProposals`.
          format: int32
          type: integer
        ApprovedProposals:
          description: The total number of proposals in the _Approved_ status for
            the specified time period.
          format: int32
          type: integer
        WaitingReviewProposals:
          description: The total number of proposals in the _On Hold_ and _Reviewed_
            statuses for the specified time period.
          format: int32
          type: integer
        RejectedProposals:
          description: The total number of proposals in the _Rejected_ status for
            the specified time period.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Proposals.UpdateProposalStatusRequest:
      description: The request object to update a proposal status.
      properties:
        Comment:
          description: Comment on the proposal status update. The comment is added
            to the work order note.
          type: string
        ProviderEmail:
          description: Provider’s email address to which a notification about the
            proposal status change is sent. The default is the email address of the
            provider the proposal is assigned to.
          type: string
        UserEmail:
          description: User’s email address to which a notification about the proposal
            status change is sent. The default is the email address of the current
            user.
          type: string
        RejectReasonCodeId:
          description: "Numeric identifier of the reason for rejecting the proposal.\r\
            \n            Pass value to this parameter when sending the *PUT /proposals/{proposalId}/reject*\
            \ request. To retrieve a list of rejection reason codes and their descriptions,\
            \ use the *GET /proposals/RejectionReasons* method."
          format: int32
          type: integer
        ActionSource:
          enum:
          - Standard
          - DecisionEngine
          type: string
        ReasonString:
          description: "Reason for approving the proposal.\r\n            Pass value\
            \ to this parameter when sending the *PUT /proposals/{proposalId}/approve*\
            \ request. The entered reason is added to the work order note."
          type: string
        Actor:
          description: The Actor is added to the work order note.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Proposals.UpdateProposalsStatusRequest:
      properties:
        ProposalId:
          format: int32
          type: integer
        Comments:
          type: string
        RejectReasonCode:
          format: int32
          type: integer
        Email:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Proposals.MlpWoRecommendationRequest:
      description: The request object to escalate a proposal.
      properties:
        Action:
          description: "Proposal escalation action. **Valid values**: *Approve*, *Reject*,\
            \ *OnHold*, *Return*."
          type: string
        WoType:
          description: "Work order type. **Valid values**: 0 — *Origin*, 1 — *New*,\
            \ 2 — *Existing*."
          format: int32
          type: integer
        TrackingNumber:
          description: The unique numeric identifier of the work order. Required if
            the `WoType` is 2 — *Existing*.
          format: int32
          type: integer
        PoNumber:
          description: Purchase order number.
          type: string
        ExistingPoNumber:
          description: "The existing purchase order number. If the `PoNumber` parameter\
            \ is passed, its value is used instead of `ExistingPoNumber`."
          type: string
        Category:
          description: "The overall classification of a WO, such as *Maintenance*,\
            \ *Repair*, or *CAPEX*. Required if the `WoType` is 1 — *New*.\r\n   \
            \         The value you enter must be a valid category."
          type: string
        CategoryId:
          description: Numeric identifier of the category.
          format: int32
          type: integer
        ApprovalCode:
          description: "Approval code, or GL code, used when approving an invoice."
          type: string
        Priority:
          description: "Period during which a service provider should check in to\
            \ perform the requested service. Required if the `WoType` is 1 — *New*.\r\
            \n            The value you enter must be a valid priority."
          type: string
        Comment:
          description: Your comment describing why you are escalating the proposal.
          type: string
        RejectReasonCodeId:
          description: Numeric identifier of the reason for rejecting the proposal.
            Don’t pass when escalating the proposal.
          format: int32
          type: integer
        ReasonString:
          description: Reason for approving the proposal.
          type: string
        EmailsToNotify:
          description: "The email address of the user to notify about the proposal\
            \ escalation. When entering multiple addresses, separate them with a comma\
            \ or semicolon."
          type: string
        EmailMyself:
          default: false
          description: Defines if the proposal escalation notification is sent to
            the current user.
          type: boolean
        MyEmail:
          description: The email address of the current user to which a proposal escalation
            notification is sent.
          type: string
        ProposalId:
          description: The unique numeric identifier of the proposal to escalate.
          format: int32
          type: integer
        WorkOrderLabel:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.Label'
        DeleteLabel:
          default: false
          description: Is WorkOrder Label to delete.
          type: boolean
        Actor:
          description: The Actor is added to the work order note.
          type: string
        AdditionalApprovalCodes:
          description: The Additional Approval Codes.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApprovalCodes.AdditionalApprovalCode'
          type: array
      required:
      - Action
      type: object
    ServiceChannel.Api.Model.Label:
      example:
        WoUrl: WoUrl
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        WoUrl:
          type: string
      type: object
    ServiceChannel.Services.Messaging.ApprovalCodes.AdditionalApprovalCode:
      properties:
        Header:
          type: string
        Value:
          type: string
        SetupId:
          format: int32
          type: integer
        LocationId:
          format: int32
          type: integer
        DefaultOptionId:
          format: int32
          type: integer
        ValueFormat:
          format: int32
          type: integer
        EditableAtLineItemLevel:
          format: int32
          type: integer
        Options:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApprovalCodes.AdditionalApprovalCodeOption'
          type: array
        DefaultValue:
          readOnly: true
          type: string
      type: object
    ServiceChannel.Services.Messaging.Proposals.AssignUserToProposalRequest:
      description: The request object to assign a proposal to a user.
      properties:
        UserId:
          description: The unique numeric identifier of the user to assign the proposal
            to.
          format: int32
          type: integer
        Comments:
          description: Your comment describing why you are assigning or reassigning
            the proposal to the specified user.
          type: string
        UserEmail:
          description: The email address to send a notification about the assigned
            proposal to. The default is the email address of the user who is assigned
            the proposal.
          type: string
        ReasonString:
          description: Reason for approving the proposal. Don’t pass when assigning
            the proposal to a user.
          type: string
        Note:
          description: Note added upon assigning or reassigning the proposal.
          type: string
      required:
      - UserId
      type: object
    ServiceChannel.Services.Messaging.Proposals.SearchProposalModel:
      properties:
        UserId:
          type: string
        CurrentLevelProposal:
          default: false
          type: boolean
        WorkOrderId:
          type: string
        ProposalId:
          type: string
        PurchaseOrderId:
          type: string
        ProjectId:
          type: string
        Projects:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Projects.Project'
          type: array
        DateType:
          enum:
          - PastMonth
          - PastThreeMonths
          - PastYear
          - Custom
          type: string
        ProposalFilterDateType:
          enum:
          - ProposalDate
          - ScheduledDate
          - ActionDate
          type: string
        ProposalDateFrom:
          format: date-time
          type: string
        ProposalDateTo:
          format: date-time
          type: string
        ProposalDateFromString:
          type: string
        ProposalDateToString:
          type: string
        SortBy:
          enum:
          - DateDesc
          - DateAsc
          - ProposalNumber
          - Trade
          - LocationId
          - Provider
          - Status
          type: string
        ReportWithAttachmentsOnly:
          default: false
          type: boolean
        ExcludePropAssociatedWithWo:
          default: false
          type: boolean
        Report:
          enum:
          - Viewable
          - Printable
          - Excel
          type: string
        Priorities:
          items:
            type: string
          type: array
        ProposalStatuses:
          items:
            enum:
            - All
            - Open
            - OnHold
            - Reviewed
            - ApprovedNotScheduled
            - ApprovedScheduled
            - Rejected
            - PendingExt
            type: string
          type: array
        CategoriesIdName:
          items:
            $ref: "#/components/schemas/ServiceChannel.Api.Model.KeyValue[System.String,System.String]"
          type: array
        TradesIdName:
          items:
            $ref: "#/components/schemas/ServiceChannel.Api.Model.KeyValue[System.String,System.String]"
          type: array
        Locations:
          items:
            type: string
          type: array
        LocationShortNames:
          items:
            type: string
          type: array
        LocationShortAddresses:
          items:
            type: string
          type: array
        LocationCities:
          items:
            type: string
          type: array
        StateIds:
          items:
            format: int32
            type: integer
          type: array
        CountryIds:
          items:
            format: int32
            type: integer
          type: array
        Regions:
          items:
            type: string
          type: array
        Districts:
          items:
            type: string
          type: array
        States:
          items:
            type: string
          type: array
        Countries:
          items:
            type: string
          type: array
        Attributes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.IdNameValue'
          type: array
        LocationNoteHeaders:
          items:
            type: string
          type: array
        LineItemReport:
          default: false
          type: boolean
        Provider:
          type: string
        ChangedProposals:
          items:
            format: int32
            type: integer
          type: array
        ProposalIids:
          type: string
        ProposalNumber:
          type: string
        ProposalWO:
          type: string
        ProviderId:
          format: int32
          type: integer
        LocationId:
          format: int32
          type: integer
        SaveReport:
          type: string
        ALP:
          format: int32
          type: integer
        Labels:
          items:
            $ref: "#/components/schemas/ServiceChannel.Api.Model.KeyValue[System.String,System.String]"
          type: array
        IncludeMlpCategory:
          default: false
          type: boolean
        SubscribersIdName:
          items:
            $ref: "#/components/schemas/ServiceChannel.Api.Model.KeyValue[System.Int32,System.String]"
          type: array
        IsAssignedToMe:
          default: false
          type: boolean
        HasAssignee:
          default: false
          type: boolean
        IncludeOverrideProposals:
          default: false
          type: boolean
        AmountFrom:
          format: double
          type: number
        AmountTo:
          format: double
          type: number
        StatusesActiveTab:
          type: string
        ProposalsIds:
          items:
            format: int32
            type: integer
          type: array
        SortField:
          enum:
          - LocDate
          - ProposalNumber
          - Trade
          - StoreId
          - ProviderName
          - Status
          - SubscriberName
          type: string
        SortOrder:
          enum:
          - ASC
          - DESC
          type: string
        Currency:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.Currency.Currency'
        Offset:
          format: int32
          type: integer
        Count:
          format: int32
          type: integer
        Language:
          type: string
        AllUsers:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Projects.Project:
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Description:
          type: string
      type: object
    ServiceChannel.Api.Model.KeyValue[System.String,System.String]:
      properties:
        Key:
          type: string
        Value:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Proposals.IdNameValue:
      properties:
        Id:
          type: string
        Name:
          type: string
        Value:
          type: string
      type: object
    ServiceChannel.Api.Model.KeyValue[System.Int32,System.String]:
      properties:
        Key:
          format: int32
          type: integer
        Value:
          type: string
      type: object
    ServiceChannel.Api.Model.Currency.Currency:
      properties:
        Id:
          format: int32
          type: integer
        Entity:
          type: string
        CurrencyName:
          type: string
        NumericCode:
          type: string
        AlphabeticCode:
          type: string
        Rate:
          format: double
          type: number
        DecimalCount:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Users.UserInfo:
      description: The user details object.
      example:
        UserName: UserName
        Email: Email
        FullName: FullName
        LevelInfo:
          Order: 5
          UserId: 6
          LocationIds:
          - 1
          - 1
          CodeChange: false
          UsersLocations:
            key:
            - 2
            - 2
          LevelName: LevelName
          CategoryChange: false
          DivisionId: 7
          LevelId: 5
          PriorityChange: false
        Id: 0
      properties:
        Id:
          description: The unique numeric identifier of the user.
          format: int32
          type: integer
        UserName:
          description: The username of the user.
          type: string
        FullName:
          description: The full name of the user.
          type: string
        Email:
          description: The email address of the user.
          type: string
        LevelInfo:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.Proposals.MlpLevelSimpleModel'
      type: object
    ServiceChannel.Api.Model.Proposals.MlpLevelSimpleModel:
      example:
        Order: 5
        UserId: 6
        LocationIds:
        - 1
        - 1
        CodeChange: false
        UsersLocations:
          key:
          - 2
          - 2
        LevelName: LevelName
        CategoryChange: false
        DivisionId: 7
        LevelId: 5
        PriorityChange: false
      properties:
        UserId:
          format: int32
          type: integer
        LocationIds:
          items:
            format: int32
            type: integer
          type: array
        LevelId:
          format: int32
          type: integer
        LevelName:
          type: string
        Order:
          format: int32
          type: integer
        UsersLocations:
          additionalProperties:
            items:
              format: int32
              type: integer
            type: array
          type: object
        CategoryChange:
          default: false
          type: boolean
        PriorityChange:
          default: false
          type: boolean
        CodeChange:
          default: false
          type: boolean
        DivisionId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersRequest:
      properties:
        ProviderId:
          description: Numeric id of provider
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Providers.GetTrainedProvidersResponse:
      example:
        DoNotDispatch: false
        IsTrained: false
        Id: 0
        Name: Name
      properties:
        IsTrained:
          default: false
          type: boolean
        Id:
          description: Id
          format: int32
          type: integer
        Name:
          description: Name
          type: string
        DoNotDispatch:
          default: false
          description: DoNotDispatch enabled?
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Providers.RemoveProviderSubscriberLinkRequest:
      properties:
        ProviderId:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Providers.CreateBlankProviderResponse:
      example:
        ProviderId: 0
        UserId: 6
      properties:
        ProviderId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Providers.CreateBlankProviderRequest:
      properties:
        UserId:
          pattern: ^$|(\A\S+).(\S).(\S)\z
          type: string
        Email:
          type: string
        ProviderName:
          type: string
        AuthUserId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Providers.ProviderAccountChangedRequest:
      properties:
        ProviderId:
          format: int64
          type: integer
        VerificaitonStatus:
          format: int32
          type: integer
        IsCreditCardAccepted:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Providers.ProviderInfo:
      example:
        DoNotDispatch: false
        Id: 0
        Name: Name
      properties:
        Id:
          description: Id
          format: int32
          type: integer
        Name:
          description: Name
          type: string
        DoNotDispatch:
          default: false
          description: DoNotDispatch enabled?
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Providers.ProviderFeedbackRequest:
      properties:
        StarScore:
          description: StarScore 1..5
          format: int32
          type: integer
        Comment:
          description: Comment
          type: string
      type: object
    ServiceChannel.Services.WebApi.Models.UpdateDispatchSettingModel:
      description: The model for update isDoNotDispatch value for providers.
      properties:
        SubscriberId:
          description: "The id of a calling subscriber.\r\n            This id is\
            \ the one who sets isDoNotDispatch value or is an aggregator of other\
            \ subscribers.\r\n            If it is the aggregator then subscriberId\
            \ and subscriberIds from SubscriberProviders pairs do not match."
          format: int32
          type: integer
        DoNotDispatch:
          default: false
          description: The flag to set isDoNotDispatch value for providers.
          type: boolean
        SubscriberIdProviderIds:
          description: The list of pairs subscriber and providers to set isDoNotDispatch
            value.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.WebApi.Models.SubscriberIdProviderIdsPair'
          type: array
      type: object
    ServiceChannel.Services.WebApi.Models.SubscriberIdProviderIdsPair:
      properties:
        SubscriberId:
          format: int32
          type: integer
        ProviderIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Providers.GetESignatureSettingsResponse:
      example:
        ElectronicSignaturePermission: ElectronicSignaturePermission
      properties:
        ElectronicSignaturePermission:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Notifications.PushNotificationSubscriptionRequest:
      description: Subscribe Push Notification Request model
      properties:
        DeviceToken:
          description: Required Device Token.
          type: string
        DeviceType:
          description: "Device type: Android, iOS, Amazon"
          enum:
          - Android
          - iOS
          - Amazon
          type: string
        NotificationType:
          description: "Notification type: Check In , ...."
          enum:
          - CheckIn
          - CheckOut
          - BadgeScanRequired
          type: string
        Application:
          description: "Application : ScMobile, FTM, ..."
          enum:
          - ScMobile
          type: string
        NotificationRules:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Notifications.NotificationRulesRequest'
      required:
      - Application
      - DeviceToken
      - DeviceType
      - NotificationType
      type: object
    ServiceChannel.Services.Messaging.Equipments.GetAvailableRacksRequest:
      properties:
        SubscriberId:
          format: int32
          type: integer
        LocationId:
          format: int32
          type: integer
        IncludeInactive:
          default: false
          type: boolean
        SelectInactiveRackId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.PreferencesRequest:
      properties:
        SubscriberId:
          format: int32
          type: integer
        ChargeThreshold:
          format: double
          type: number
        ComercialRefTriggerRate:
          format: double
          type: number
        IndustrialRefTriggerRate:
          format: double
          type: number
        HVACTriggerRate:
          format: double
          type: number
        OthersTriggerRate:
          format: double
          type: number
        CreateDate:
          format: date-time
          type: string
        CreateDateStr:
          readOnly: true
          type: string
        UserId:
          format: int32
          type: integer
        UserName:
          type: string
        MaxThreshold:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.MaxThreshold'
        CalculationMethod:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        CalculationMethods:
          additionalProperties:
            type: string
          type: object
        UnitsOfMeasure:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        UnitsOfMeasures:
          additionalProperties:
            type: string
          type: object
        InventoryLocation:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        InventoryLocationOptions:
          additionalProperties:
            type: string
          type: object
        RefrigerationPriorityName:
          type: string
        RefrigerationPriorityNameOptions:
          items:
            type: string
          type: array
        GenerateFollowUpWorkOrders:
          additionalProperties:
            type: string
          type: object
        ChargeThresholdStr:
          readOnly: true
          type: string
        RunCARBReport:
          default: false
          type: boolean
        LeakInspectionNTE:
          format: double
          type: number
        GenerateFollowUpWorkOrder:
          type: string
        MaxLocCount:
          format: int32
          type: integer
        RtLimitedApplianceId:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        RtLimitedApplianceName:
          type: string
        RefrigerantTrackingProviderId:
          format: int32
          type: integer
        RefrigerantTrackingProviderName:
          type: string
        ODSRefrigerantTypes:
          items:
            format: int32
            type: integer
          type: array
        GenerateLeakInspectionOption:
          type: string
        CalendarStartDate:
          format: date-time
          type: string
        CalendarStartDateStr:
          readOnly: true
          type: string
        EnableCARBInspections:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.MaxThreshold:
      properties:
        Id:
          format: int32
          type: integer
        ChargeThreshold:
          format: double
          type: number
        ComercialRefTriggerRate:
          format: double
          type: number
        IndustrialRefTriggerRate:
          format: double
          type: number
        HVACTriggerRate:
          format: double
          type: number
        OthersTriggerRate:
          format: double
          type: number
        ApplyDate:
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.CreateUpdateRackConnectionRequest:
      properties:
        RackId:
          format: int32
          type: integer
        AssetId:
          format: int32
          type: integer
        LocationId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Core.InternalRequests.RefrigerantTracking.CheckRefrigerantTrackingRequest:
      properties:
        LocationIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakRecordRequest:
      properties:
        Id:
          format: int32
          type: integer
        Note:
          type: string
        RepairDate:
          format: date-time
          type: string
        InitialDate:
          format: date-time
          type: string
        InitialMethod:
          format: int32
          type: integer
        FollowUpDate:
          format: date-time
          type: string
        FollowUpMethod:
          format: int32
          type: integer
        LeakLocationId:
          format: int32
          type: integer
        FaultCodeId:
          format: int32
          type: integer
        ActionCodeId:
          format: int32
          type: integer
        LeakAreaId:
          format: int32
          type: integer
        CurrentTrackingNumber:
          format: int32
          type: integer
        CompletedDate:
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.GetPagedLeakRecordsByFilterRequest:
      properties:
        EquipmentTypes:
          items:
            format: int32
            type: integer
          type: array
        EquipmentTags:
          items:
            type: string
          type: array
        Locations:
          items:
            format: int32
            type: integer
          type: array
        LeakLocations:
          items:
            format: int32
            type: integer
          type: array
        TrackingNumbers:
          items:
            format: int32
            type: integer
          type: array
        LeakStatusId:
          format: int32
          type: integer
        Index:
          format: int32
          type: integer
        Count:
          format: int32
          type: integer
        DateRangeId:
          format: int32
          type: integer
        StartDate:
          format: date-time
          type: string
        EndDate:
          format: date-time
          type: string
        LeakAreaIds:
          items:
            format: int32
            type: integer
          type: array
        ProviderIds:
          items:
            format: int32
            type: integer
          type: array
        Markets:
          items:
            type: string
          type: array
        Divisions:
          items:
            type: string
          type: array
        ActionCodeIds:
          items:
            format: int32
            type: integer
          type: array
        ReasonCodeIds:
          items:
            format: int32
            type: integer
          type: array
        PartGroups:
          items:
            format: int32
            type: integer
          type: array
        MOENumbers:
          items:
            type: string
          type: array
        UnitOfMeasure:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        IsExport:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakNoteRequest:
      properties:
        LeakRecordId:
          format: int32
          type: integer
        Note:
          type: string
        Autogenerated:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.LeakDetectorAuditAddUpdateRequest:
      properties:
        Id:
          format: int32
          type: integer
        LeakDetectorId:
          format: int32
          type: integer
        AlarmSetPoint:
          format: double
          type: number
        DetectionLimit:
          format: double
          type: number
        RecId:
          format: int32
          type: integer
        ServiceDate:
          format: date-time
          type: string
        ServiceType:
          enum:
          - Audit
          - Inspection
          type: string
        ServiceDescription:
          type: string
        LocationId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.ChargeHistoryRequest:
      properties:
        Id:
          format: int32
          type: integer
        AssetId:
          format: int32
          type: integer
        TagId:
          type: string
        TotalCharge:
          format: double
          type: number
        TotalChargeStr:
          type: string
        ProviderName:
          type: string
        EffectiveDate:
          format: date-time
          type: string
        InitialCharge:
          default: false
          type: boolean
        RefrigerantChargeOptionsId:
          format: int32
          type: integer
        TotalRows:
          format: int32
          type: integer
        RefrigerantPartNumber:
          type: string
        PartNumberId:
          format: int32
          type: integer
        TotalChargeMetrics:
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.RefrigerantType:
      properties:
        InventoryId:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        Name:
          type: string
        IsODS:
          default: false
          type: boolean
        GwpRefrigerantId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.EditAssetRefrigerantRequest:
      properties:
        Id:
          format: int32
          type: integer
        AssetId:
          format: int32
          type: integer
        RefrigerantUsageType:
          format: int32
          type: integer
        RackId:
          type: string
        RackEntityId:
          format: int32
          type: integer
        CarbID:
          type: string
        IsCarbReporting:
          default: false
          type: boolean
        SystemLocation:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        OperationalStatus:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        PartNumberId:
          format: int32
          type: integer
        RackTypeId:
          format: int32
          type: integer
        CurrentCharge:
          format: double
          type: number
        CurrentChargeOunces:
          format: double
          type: number
        ChargeDescriptionId:
          format: int32
          type: integer
        ChargeProviderName:
          type: string
        EffectiveChargeDate:
          format: date-time
          type: string
        HasLeakDetector:
          default: false
          type: boolean
        AssetLeakDetectorId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.LeakRecord.LeakVerifyMethod:
      description: Leak verification method
      example:
        Id: 0
        Name: Name
      properties:
        Id:
          description: Method's id
          format: int32
          type: integer
        Name:
          description: Method's name
          type: string
      type: object
    ServiceChannel.Services.Messaging.Equipments.AddUpdatePmLeakVerificationsRequest:
      description: Request to add or update PmLeakVerifications
      properties:
        RecId:
          description: Tracking number
          format: int32
          type: integer
        Actor:
          description: Actor
          type: string
        VerificationMethodsIds:
          description: Leak verification methods ids
          items:
            format: int32
            type: integer
          type: array
      type: object
    System.Web.Http.Results.NotFoundResult:
      properties:
        Request:
          type: object
      type: object
    ServiceChannel.Api.Model.RefrigerantTracking.WOLeakVerificationResponse:
      example:
        LeakVerifications:
        - UserName: UserName
          VerificationMethodName: VerificationMethodName
          UserId: 6
          Actor: Actor
          RecId: 0
          VerificationMethodId: VerificationMethodId
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
        - UserName: UserName
          VerificationMethodName: VerificationMethodName
          UserId: 6
          Actor: Actor
          RecId: 0
          VerificationMethodId: VerificationMethodId
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
      properties:
        LeakVerifications:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.RefrigerantTracking.LeakVerification'
          type: array
      type: object
    ServiceChannel.Api.Model.RefrigerantTracking.LeakVerification:
      example:
        UserName: UserName
        VerificationMethodName: VerificationMethodName
        UserId: 6
        Actor: Actor
        RecId: 0
        VerificationMethodId: VerificationMethodId
        ModifiedDate: 2000-01-23T04:56:07.000+00:00
      properties:
        RecId:
          format: int32
          type: integer
        VerificationMethodId:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        VerificationMethodName:
          type: string
        UserId:
          format: int32
          type: integer
        UserName:
          type: string
        Actor:
          type: string
        ModifiedDate:
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakImmeasurableRequest:
      properties:
        RepairDate:
          format: date-time
          type: string
        InitialVerificationDate:
          format: date-time
          type: string
        InitialVerificationMethod:
          format: int32
          type: integer
        FollowUpVerificationDate:
          format: date-time
          type: string
        FollowUpVerificationMethod:
          format: int32
          type: integer
        ActionCodeId:
          format: int32
          type: integer
        FaultCodeId:
          format: int32
          type: integer
        LeakLocationId:
          format: int32
          type: integer
        Notes:
          items:
            type: string
          type: array
        RecId:
          format: int32
          type: integer
        AssetId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakImmeasurable:
      properties:
        Id:
          format: int32
          type: integer
        RepairDate:
          format: date-time
          type: string
        InitialVerificationDate:
          format: date-time
          type: string
        InitialVerificationMethod:
          format: int32
          type: integer
        FollowUpVerificationDate:
          format: date-time
          type: string
        FollowUpVerificationMethod:
          format: int32
          type: integer
        ActionCodeId:
          format: int32
          type: integer
        FaultCodeId:
          format: int32
          type: integer
        LeakLocationId:
          format: int32
          type: integer
        Notes:
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.LeakImmeasurableBulkChangeRequest:
      properties:
        AddItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AddLeakImmeasurableRequest'
          type: array
        UpdateItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.UpdateLeakImmeasurable'
          type: array
        DeleteItems:
          items:
            format: int32
            type: integer
          type: array
        RecId:
          format: int32
          type: integer
        AssetId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.RefrigerantTracking.LeakInspectionComplianceAcknowledgement:
      properties:
        TrackingNumber:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.ResolutionCodes.ResolutionCode:
      description: Resolution code object.
      example:
        Order: 6
        AssetCategoryIds:
        - 1
        - 1
        Value: Value
        Key: 0
        HasFreeText: false
      properties:
        Key:
          description: Resolution code identifier.
          format: int32
          type: integer
        Value:
          description: Resolution code name.
          type: string
        HasFreeText:
          default: false
          description: Defines whether a user can enter a comment explaining their
            understanding of the resolution code and specifying what was done on site
            to solve the issue.
          type: boolean
        Order:
          description: Order of appearance of a resolution code.
          format: int32
          type: integer
        AssetCategoryIds:
          description: Asset category ID. A value populates only if two or more categories
            are specified in assetCategoryIds in the filter.
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.ResolutionCodes.UpdateResolutionCodesRequest:
      description: Request object to add resolution codes to a work order.
      properties:
        WorkOrderId:
          description: Unique numeric identifier of the work order to add resolution
            codes to.
          format: int32
          type: integer
        ResolutionCodeIds:
          description: IDs of resolution codes to add to the work order.
          items:
            format: int32
            type: integer
          type: array
        ResolutionCodes:
          description: Details of resolution codes to add to the work order.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.CreateWorkOrderResolutionCodeRequest'
          type: array
      type: object
    ServiceChannel.Services.Messaging.ResolutionCodes.CreateWorkOrderResolutionCodeRequest:
      description: Object for details of a resolution code to add to a work order.
      properties:
        Key:
          description: ID of the resolution code to associate with the work order.
          format: int32
          type: integer
        Text:
          description: "Comment explaining your understanding of the resolution code\
            \ of the work order. \r\n            Enabled for resolution codes with\
            \ the `HasFreeText` attribute. The maximum length is 100 characters."
          type: string
        AssetCategoryId:
          description: Asset category ID to be passed by users with access to asset
            categories.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderResolutionInfo:
      description: Object containing the details of resolution codes and root causes
        of a work order.
      example:
        rootCauses:
        - Value: Value
          Text: Text
          AssetCategoryId: 5
          Key: 1
          HasFreeText: false
        - Value: Value
          Text: Text
          AssetCategoryId: 5
          Key: 1
          HasFreeText: false
        resolutionCodes:
        - Value: Value
          Text: Text
          AssetCategoryId: 6
          Key: 0
          HasFreeText: false
        - Value: Value
          Text: Text
          AssetCategoryId: 6
          Key: 0
          HasFreeText: false
        rootCause:
          Value: Value
          Text: Text
          AssetCategoryId: 5
          Key: 1
          HasFreeText: false
      properties:
        resolutionCodes:
          description: Resolution codes of a work order.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderResolutionCode'
          type: array
        rootCause:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderRootCause'
        rootCauses:
          description: Root causes of a work order returned for users with access
            to asset categories.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderRootCause'
          type: array
      type: object
    ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderResolutionCode:
      description: Resolution code object.
      example:
        Value: Value
        Text: Text
        AssetCategoryId: 6
        Key: 0
        HasFreeText: false
      properties:
        Key:
          description: Resolution code identifier.
          format: int32
          type: integer
        Value:
          description: Resolution code name.
          type: string
        HasFreeText:
          default: false
          description: Defines whether a user can enter a comment explaining their
            understanding of the resolution code and specifying what was done on site
            to solve the issue.
          type: boolean
        Text:
          description: "Comment that a technician enters to provide their understanding\
            \ of the resolution code of a work order explaining what was done on site\
            \ to solve the issue.\r\n            Comments are enabled for resolution\
            \ codes with the `HasFreeText` attribute."
          type: string
        AssetCategoryId:
          description: Asset category ID specified by a user with access to asset
            categories.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.ResolutionCodes.WorkOrderRootCause:
      description: Root cause object.
      example:
        Value: Value
        Text: Text
        AssetCategoryId: 5
        Key: 1
        HasFreeText: false
      properties:
        Key:
          description: Root cause identifier.
          format: int32
          type: integer
        Value:
          description: Root cause name.
          type: string
        HasFreeText:
          default: false
          description: Defines whether a user can enter a comment explaining their
            understanding of the root cause and specifying the reason why the problem
            occurred.
          type: boolean
        Text:
          description: "Comment that a technician enters to provide their understanding\
            \ of the root cause of a work order explaining the reason why the problem\
            \ occurred.\r\n            Comments are enabled for root causes with the\
            \ `HasFreeText` attribute."
          type: string
        AssetCategoryId:
          description: Asset category ID specified by a user with access to asset
            categories.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.ResolutionCodes.RootCause:
      description: Root cause object.
      example:
        Order: 6
        AssetCategoryIds:
        - 1
        - 1
        Value: Value
        Key: 0
        HasFreeText: false
      properties:
        Key:
          description: Root cause identifier.
          format: int32
          type: integer
        Value:
          description: Root cause name.
          type: string
        HasFreeText:
          default: false
          description: Defines whether a user can enter a comment explaining their
            understanding of the root cause and specifying the reason why the problem
            occurred.
          type: boolean
        Order:
          description: Order of appearance of a root cause.
          format: int32
          type: integer
        AssetCategoryIds:
          description: Asset category ID. A value populates only if two or more categories
            are specified in assetCategoryIds in the filter.
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.ResolutionCodes.UpdateRootCausesRequest:
      description: Request object to add root causes to a work order.
      properties:
        WorkOrderId:
          description: Unique numeric identifier of the work order to add root causes
            to.
          format: int32
          type: integer
        RootCauses:
          description: Details of root causes to add to the work order.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ResolutionCodes.CreateWorkOrderRootCauseRequest'
          type: array
      type: object
    ServiceChannel.Services.Messaging.ResolutionCodes.CreateWorkOrderRootCauseRequest:
      description: Object for details of a root cause to add to a work order.
      properties:
        Key:
          description: ID of the root cause to associate with the work order.
          format: int32
          type: integer
        Text:
          description: Comment explaining your understanding of the root cause of
            the work order. Enabled for root causes with the `HasFreeText` attribute.
            The maximum length is 100 characters.
          type: string
        AssetCategoryId:
          description: Asset category ID.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.ResolutionCodes.UpdateAssetCategoriesRequest:
      description: Request object to add asset categories to a work order.
      properties:
        AssetCategoryIds:
          description: IDs of asset categories to add to a work order.
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Rfp.CreateRfpRequest:
      description: The request object to create an RFP.
      properties:
        Number:
          description: The non-unique RFP identifier. The value is generated automatically
            if not provided. It cannot be modified.
          type: string
        PONumber:
          description: Purchase order number.
          type: string
        WONumber:
          description: Work order number.
          type: string
        TradeId:
          description: The unique trade identifier.
          format: int32
          type: integer
        Description:
          description: RFP description.
          type: string
        Status:
          description: RFP status.
          type: string
        Date:
          description: The RFP creation date and time. The format is `YYYY-MM-DDThh:mm:ss.sssZ`.
            The default is the current date and time.
          format: date-time
          type: string
        DateString:
          type: string
        DueHrs:
          description: Due time in hours for the provider to respond to the RFP and
            submit a proposal. The default is 48 hours unless a different value is
            specified in the `UiCreationRfpDefaultTime` settings group.
          format: double
          type: number
        DueDate:
          description: "Due date and time for the provider to respond to the RFP and\
            \ submit a proposal. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. If `DueHrs`\
            \ is passed, the `DueDate` value is `Date` plus `DueHrs`.\r\n        \
            \    The default is the current date and time plus 48 hours unless a different\
            \ value is specified in the `UiCreationRfpDefaultTime` settings group."
          format: date-time
          type: string
        DueDateString:
          type: string
        Location:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.LocationIdentity'
        Language:
          type: string
        ProviderId:
          description: The unique provider identifier.
          format: int32
          type: integer
        ResponseDate:
          description: Obsolete.
          format: date-time
          type: string
        ProposalNotificationEmail:
          description: The email address to send the proposal notification to. The
            default is the email address of the current user specified in the `PropTeamEmail`
            settings group.
          type: string
        ProviderEmail:
          description: The email address of the provider. The default is the email
            address of the specified provider.
          type: string
        ProposalTemplateId:
          description: Obsolete.
          format: int32
          type: integer
        WorkOrderId:
          description: The unique numeric identifier of the work order.
          format: int32
          type: integer
        ProjectId:
          description: The unique numeric identifier of the project.
          format: int32
          type: integer
      required:
      - Description
      - Location
      - ProviderId
      - TradeId
      type: object
    ServiceChannel.Services.Messaging.Location.LocationIdentity:
      description: The location identifier object
      properties:
        Id:
          description: The unique numeric location identifier.
          format: int32
          type: integer
        StoreId:
          description: The location identifier in the client system.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Rfp.AssignRfpRequest:
      description: The request object to assign an RFP to a provider.
      properties:
        ProviderId:
          description: The unique numeric identifier of the provider to assign the
            RFP to.
          format: int32
          type: integer
        ProviderEmail:
          description: Provider’s email address to send a notification about the assigned
            RFP to. The default is the email address of the provider who is assigned
            the RFP.
          type: string
      required:
      - ProviderId
      type: object
    ServiceChannel.Services.Messaging.PrimaryRoles.PrimaryRolesInfo:
      example:
        TrackWoPoReadEdit: false
        PowerUser: false
        ProviderAdmin: false
        SupplyClick: false
        AssetInventory: false
        ServiceProviderFullControl: false
        SiteAuditReporter: false
        ReportsRead: false
        InvoiceFullControl: false
        DashboardTitle: DashboardTitle
        ProposalRead: false
        FinancialManagerAdmin: false
        SiteAuditAuditor: false
        EquipmentModule: false
        AddLabels: false
        TrackWoPoRead: false
        PasswordSelfManagement: false
        EulaSignoff: false
        SiteAccessMobile: false
        SpacesAdmin: false
        ProgramManager: false
        ApprovalCodeEditor: false
        LocationAdmin: false
        FinancialManager: false
        PreventiveMaintenancetModule: false
        InvoiceReadApprPaid: false
        SiteAccessAdmin: false
        ProposalFullControl: false
        ServiceProviderRead: false
        PlannedMaintenanceAdmin: false
        ProjectManager: false
        SpacesMaker: false
        PowerUserLite: false
        DashboardAdminUser: false
        ProviderAssignmentsEditor: false
        InvoiceAdmin: false
        DecisionEngineUser: false
        Id: 0
        RoleTitle: RoleTitle
        AdditionalSetupNames: AdditionalSetupNames
        ProposalCreate: false
        SpacesExternal: false
        ServiceClick: false
        ServiceProviderRequestFor: false
        PrivateNetworkAccess: false
        ProposalProcess: false
        SiteAuditSetup: false
        SiteAuditEditor: false
        DashboardExpert: false
        InventoryManager: false
        InvoiceCreate: false
        PlaceServiceRequest: false
        PowerInvoiceUser: false
        WikiEditor: false
        AdminUser: false
        SuperUser: false
        EquipmentRead: false
        ReportsReadEdit: false
        LocationsRead: false
        PreventLogin: false
        SpacesPlotter: false
        InvoiceProcess: false
        RefrigerantTrackingAdmin: false
        SubscriberID: 6
        ServiceProviderReadEdit: false
        FixxbookLink: false
        ServiceRequestDashboard: false
        ProviewAdmin: false
        InvoiceReadAll: false
      properties:
        Id:
          format: int32
          type: integer
        SubscriberID:
          format: int32
          type: integer
        RoleTitle:
          type: string
        DashboardTitle:
          type: string
        ServiceRequestDashboard:
          default: false
          type: boolean
        ServiceClick:
          default: false
          type: boolean
        SupplyClick:
          default: false
          type: boolean
        EquipmentModule:
          default: false
          type: boolean
        PreventiveMaintenancetModule:
          default: false
          type: boolean
        FixxbookLink:
          default: false
          type: boolean
        PlaceServiceRequest:
          default: false
          type: boolean
        InvoiceFullControl:
          default: false
          type: boolean
        InvoiceReadAll:
          default: false
          type: boolean
        InvoiceCreate:
          default: false
          type: boolean
        InvoiceProcess:
          default: false
          type: boolean
        InvoiceReadApprPaid:
          default: false
          type: boolean
        ProposalFullControl:
          default: false
          type: boolean
        ProposalRead:
          default: false
          type: boolean
        ProposalCreate:
          default: false
          type: boolean
        ProposalProcess:
          default: false
          type: boolean
        ReportsReadEdit:
          default: false
          type: boolean
        ReportsRead:
          default: false
          type: boolean
        LocationsRead:
          default: false
          type: boolean
        EquipmentRead:
          default: false
          type: boolean
        ServiceProviderFullControl:
          default: false
          type: boolean
        ServiceProviderRead:
          default: false
          type: boolean
        ServiceProviderReadEdit:
          default: false
          type: boolean
        ServiceProviderRequestFor:
          default: false
          type: boolean
        TrackWoPoReadEdit:
          default: false
          type: boolean
        TrackWoPoRead:
          default: false
          type: boolean
        PowerUser:
          default: false
          type: boolean
        AdminUser:
          default: false
          type: boolean
        SuperUser:
          default: false
          type: boolean
        SiteAuditSetup:
          default: false
          type: boolean
        SiteAuditReporter:
          default: false
          type: boolean
        ProviewAdmin:
          default: false
          type: boolean
        FinancialManager:
          default: false
          type: boolean
        FinancialManagerAdmin:
          default: false
          type: boolean
        DashboardExpert:
          default: false
          type: boolean
        PowerUserLite:
          default: false
          type: boolean
        InventoryManager:
          default: false
          type: boolean
        DecisionEngineUser:
          default: false
          type: boolean
        ProjectManager:
          default: false
          type: boolean
        RefrigerantTrackingAdmin:
          default: false
          type: boolean
        SiteAccessAdmin:
          default: false
          type: boolean
        DashboardAdminUser:
          default: false
          type: boolean
        PrivateNetworkAccess:
          default: false
          type: boolean
        AdditionalSetupNames:
          type: string
        SiteAuditAuditor:
          default: false
          type: boolean
        PasswordSelfManagement:
          default: false
          type: boolean
        PowerInvoiceUser:
          default: false
          type: boolean
        InvoiceAdmin:
          default: false
          type: boolean
        EulaSignoff:
          default: false
          type: boolean
        WikiEditor:
          default: false
          type: boolean
        SiteAccessMobile:
          default: false
          type: boolean
        ProgramManager:
          default: false
          type: boolean
        LocationAdmin:
          default: false
          type: boolean
        PlannedMaintenanceAdmin:
          default: false
          type: boolean
        ApprovalCodeEditor:
          default: false
          type: boolean
        ProviderAssignmentsEditor:
          default: false
          type: boolean
        ProviderAdmin:
          default: false
          type: boolean
        SpacesAdmin:
          default: false
          type: boolean
        SpacesExternal:
          default: false
          type: boolean
        SpacesPlotter:
          default: false
          type: boolean
        SpacesMaker:
          default: false
          type: boolean
        AssetInventory:
          default: false
          type: boolean
        PreventLogin:
          default: false
          type: boolean
        SiteAuditEditor:
          default: false
          type: boolean
        AddLabels:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.WebApi.Controllers.ScConnectorController.Data:
      description: Wrapper for body parameter
      properties:
        Msg:
          description: escaped Xml string
          type: string
      type: object
    ServiceChannel.Services.WebApi.Models.CheckInOutNotificationObject:
      properties:
        Object:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.CheckInOutActivity'
        Type:
          type: string
        Action:
          type: string
        EventType:
          type: string
      type: object
    ServiceChannel.Notifications.Objects.CheckInOutActivity:
      properties:
        CheckInNotes:
          additionalProperties:
            type: string
          type: object
        SubscriberId:
          format: int32
          type: integer
        ProviderId:
          format: int32
          type: integer
        LocationId:
          format: int32
          type: integer
        CheckinAction:
          enum:
          - CheckIn
          - CheckOut
          type: string
        WorkOrderId:
          format: int32
          type: integer
        Date:
          format: date-time
          type: string
        DateDTO:
          format: date-time
          type: string
        User:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.User'
        CallerId:
          type: string
        Action:
          type: string
        WorkType:
          type: string
        WorkorderStatus:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.WorkorderStatusDescriptor'
        ProviderName:
          type: string
        Trade:
          type: string
        Category:
          type: string
        Source:
          type: string
        TradeId:
          format: int32
          type: integer
        TechsCount:
          format: int32
          type: integer
        Location:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Location'
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkorderNotificationObject:
      properties:
        Object:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.WorkOrder'
        Type:
          type: string
        Action:
          type: string
        EventType:
          type: string
      type: object
    ServiceChannel.Notifications.Objects.WorkOrder:
      properties:
        Id:
          format: int32
          type: integer
        Number:
          type: string
        PurchaseNumber:
          type: string
        SubscriberId:
          format: int32
          type: integer
        ProviderId:
          format: int32
          type: integer
        ProviderName:
          type: string
        LocationId:
          format: int32
          type: integer
        LocationName:
          type: string
        LocationStoreId:
          type: string
        Status:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.WorkorderStatusDescriptor'
        Caller:
          type: string
        CreatedBy:
          type: string
        UpdatedBy:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.User'
        CallDate:
          format: date-time
          type: string
        CallDate_DTO:
          format: date-time
          type: string
        ReassignDate:
          format: date-time
          type: string
        Priority:
          type: string
        Trade:
          type: string
        ScheduledDate:
          format: date-time
          type: string
        AreaId:
          format: int32
          type: integer
        AssetType:
          type: string
        ProblemType:
          type: string
        CreatedDate_DTO:
          format: date-time
          type: string
        UpdatedDate:
          format: date-time
          type: string
        UpdatedDate_DTO:
          format: date-time
          type: string
        ScheduledDate_DTO:
          format: date-time
          type: string
        RescheduleReason:
          type: string
        CompletedDate:
          format: date-time
          type: string
        ExpirationDate:
          format: date-time
          type: string
        ExpirationDate_DTO:
          format: date-time
          type: string
        Description:
          type: string
        Category:
          type: string
        Nte:
          format: double
          type: number
        Subtotal:
          format: double
          type: number
        Tax:
          format: double
          type: number
        Tax2Type:
          type: string
        Tax2:
          format: double
          type: number
        CurrencyAlphabeticalCode:
          type: string
        ProblemCode:
          type: string
        Resolution:
          type: string
        AssetId:
          format: int32
          type: integer
        Source:
          type: string
        RecallWorkOrder:
          format: int32
          type: integer
        Notes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Note'
          type: array
        Attachments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Attachment'
          type: array
        ProjectId:
          format: int32
          type: integer
        Labels:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Label'
          type: array
        ResolutionCodes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.ResolutionCodesAndRootCause'
          type: array
        ResolutionCodesIds:
          items:
            format: int32
            type: integer
          type: array
        RootCauses:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.ResolutionCodesAndRootCause'
          type: array
        LinkedWorOrderIds:
          items:
            format: int32
            type: integer
          type: array
        Assets:
          items:
            $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Asset'
          type: array
        RefrigerantWasUsed:
          format: int32
          type: integer
        WeatherEventId:
          format: int32
          type: integer
        Technician:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.Technician'
        IssueChoice:
          $ref: '#/components/schemas/ServiceChannel.Notifications.Objects.IssueChoice'
      type: object
    ServiceChannel.Services.Messaging.Providers.GetServiceRequestProvidersResponse:
      example:
        Providers:
        - Zip: Zip
          MailFrequency: 1
          Category: Category
          Email: Email
          ImageFile: ImageFile
          DateCreated: 2000-01-23T04:56:07.000+00:00
          TaxId: TaxId
          Name: Name
          Trade: Trade
          Phone: Phone
          FaxNumber: FaxNumber
          LastTrainingDate: 2000-01-23T04:56:07.000+00:00
          FormId: 5
          SuperUser: SuperUser
          MailInfo: MailInfo
          IsDefault: false
          NightRequest: 5
          ReturnMail: ReturnMail
          Priority: Priority
          MainContact: MainContact
          Address2: Address2
          Rank: 0
          ServiceRequestEmails: ServiceRequestEmails
          Address1: Address1
          City: City
          GeneralEmail: GeneralEmail
          IsInternal: false
          ProcessingEmail: ProcessingEmail
          ShortFormatEmail: ShortFormatEmail
          DoNotDispatch: false
          IsOnOffShoreFeatureEnabled: false
          State: State
          FullName: FullName
          Pager: Pager
          WebSite: WebSite
          Country: Country
          LastUserDate: LastUserDate
          Id: 2
          Nte: 6.027456183070403
          SuiteFloor: SuiteFloor
          LastTrainingDateStr: LastTrainingDateStr
        - Zip: Zip
          MailFrequency: 1
          Category: Category
          Email: Email
          ImageFile: ImageFile
          DateCreated: 2000-01-23T04:56:07.000+00:00
          TaxId: TaxId
          Name: Name
          Trade: Trade
          Phone: Phone
          FaxNumber: FaxNumber
          LastTrainingDate: 2000-01-23T04:56:07.000+00:00
          FormId: 5
          SuperUser: SuperUser
          MailInfo: MailInfo
          IsDefault: false
          NightRequest: 5
          ReturnMail: ReturnMail
          Priority: Priority
          MainContact: MainContact
          Address2: Address2
          Rank: 0
          ServiceRequestEmails: ServiceRequestEmails
          Address1: Address1
          City: City
          GeneralEmail: GeneralEmail
          IsInternal: false
          ProcessingEmail: ProcessingEmail
          ShortFormatEmail: ShortFormatEmail
          DoNotDispatch: false
          IsOnOffShoreFeatureEnabled: false
          State: State
          FullName: FullName
          Pager: Pager
          WebSite: WebSite
          Country: Country
          LastUserDate: LastUserDate
          Id: 2
          Nte: 6.027456183070403
          SuiteFloor: SuiteFloor
          LastTrainingDateStr: LastTrainingDateStr
      properties:
        Providers:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ServiceRequestProvider'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Providers.ServiceRequestProvider:
      example:
        Zip: Zip
        MailFrequency: 1
        Category: Category
        Email: Email
        ImageFile: ImageFile
        DateCreated: 2000-01-23T04:56:07.000+00:00
        TaxId: TaxId
        Name: Name
        Trade: Trade
        Phone: Phone
        FaxNumber: FaxNumber
        LastTrainingDate: 2000-01-23T04:56:07.000+00:00
        FormId: 5
        SuperUser: SuperUser
        MailInfo: MailInfo
        IsDefault: false
        NightRequest: 5
        ReturnMail: ReturnMail
        Priority: Priority
        MainContact: MainContact
        Address2: Address2
        Rank: 0
        ServiceRequestEmails: ServiceRequestEmails
        Address1: Address1
        City: City
        GeneralEmail: GeneralEmail
        IsInternal: false
        ProcessingEmail: ProcessingEmail
        ShortFormatEmail: ShortFormatEmail
        DoNotDispatch: false
        IsOnOffShoreFeatureEnabled: false
        State: State
        FullName: FullName
        Pager: Pager
        WebSite: WebSite
        Country: Country
        LastUserDate: LastUserDate
        Id: 2
        Nte: 6.027456183070403
        SuiteFloor: SuiteFloor
        LastTrainingDateStr: LastTrainingDateStr
      properties:
        Rank:
          description: Rank
          format: int32
          type: integer
        Category:
          description: Category
          type: string
        Priority:
          description: Priority
          type: string
        Nte:
          description: Nte
          format: double
          type: number
        GeneralEmail:
          description: General Email
          type: string
        IsDefault:
          default: false
          description: Is Default
          type: boolean
        ServiceRequestEmails:
          description: ServiceRequestEmails
          type: string
        Phone:
          type: string
        FullName:
          description: Full Name
          type: string
        Address1:
          description: Address1
          type: string
        Address2:
          description: Adress2
          type: string
        City:
          description: City
          type: string
        State:
          description: State
          type: string
        Zip:
          description: Zip
          type: string
        Country:
          description: Country
          type: string
        MainContact:
          description: Main Contact
          type: string
        DateCreated:
          description: Date Created
          format: date-time
          type: string
        LastUserDate:
          description: Last User Date
          type: string
        SuperUser:
          description: SuperUser
          type: string
        WebSite:
          description: WebSite
          type: string
        Email:
          description: Email
          type: string
        TaxId:
          description: Tax Id
          type: string
        Trade:
          description: Trade
          type: string
        ProcessingEmail:
          description: Processing Email
          type: string
        FaxNumber:
          description: Fax Number
          type: string
        SuiteFloor:
          description: Suite Floor
          type: string
        MailInfo:
          description: Mail Info
          type: string
        ImageFile:
          description: Image File
          type: string
        ReturnMail:
          description: Return Mail
          type: string
        MailFrequency:
          description: Mail Frequency
          format: int32
          type: integer
        FormId:
          description: Form Id
          format: int32
          type: integer
        Pager:
          description: Pager
          type: string
        NightRequest:
          description: NightRequest
          format: int32
          type: integer
        ShortFormatEmail:
          description: Short Format Email
          type: string
        LastTrainingDate:
          description: Last Training Date
          format: date-time
          type: string
        LastTrainingDateStr:
          description: Last Training Date as a string
          type: string
        IsInternal:
          default: false
          description: Is Internal
          type: boolean
        IsOnOffShoreFeatureEnabled:
          default: false
          description: Is OnOffShoreFeature Enabled
          type: boolean
        Id:
          description: Id
          format: int32
          type: integer
        Name:
          description: Name
          type: string
        DoNotDispatch:
          default: false
          description: DoNotDispatch enabled?
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoRequest:
      example:
        AreaName: AreaName
        SetupId: 6
        CallDate: 2000-01-23T04:56:07.000+00:00
        ProblemType: ProblemType
        LocationId: 0
        ProblemCode: ProblemCode
        EquipmentType: EquipmentType
      properties:
        AreaName:
          description: Name of the area
          type: string
        ProblemType:
          description: Problem type
          type: string
        EquipmentType:
          description: Equipment type
          type: string
        ProblemCode:
          description: Problem name
          type: string
        LocationId:
          description: ID of a location
          format: int32
          type: integer
        SetupId:
          description: SetupId
          format: int32
          type: integer
        CallDate:
          description: Call Date
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.GetServiceRequestInfoResponse:
      example:
        Priorities:
        - Trade: Trade
          ScheduledDate_DTO: 2000-01-23T04:56:07.000+00:00
          Eta: Eta
          SubscriberId: 5
          LocationId: 5
          IsSelectable: false
          ScheduledDate: 2000-01-23T04:56:07.000+00:00
          Id: 1
          SkipNights: false
          SkipWeekends: false
          Name: Name
        - Trade: Trade
          ScheduledDate_DTO: 2000-01-23T04:56:07.000+00:00
          Eta: Eta
          SubscriberId: 5
          LocationId: 5
          IsSelectable: false
          ScheduledDate: 2000-01-23T04:56:07.000+00:00
          Id: 1
          SkipNights: false
          SkipWeekends: false
          Name: Name
        SetupId: 3
        ScheduledDateOffsetFromCallDate: 6
        Categories:
        - PrimaryCategoryID: 1
          HasDependency: false
          SubscriberId: 6
          PrimaryCategoryName: PrimaryCategoryName
          Id: 0
          Name: Name
        - PrimaryCategoryID: 1
          HasDependency: false
          SubscriberId: 6
          PrimaryCategoryName: PrimaryCategoryName
          Id: 0
          Name: Name
        UserSettings:
          MaximumNteAmount: 2.3021358869347655
        TradeId: 9
        AreaId: 7
        IssueChoice:
          RequireAttachment: false
          AllAdditionalFields:
          - Options:
            - Options
            - Options
            ErrorText: ErrorText
            Exclude: Exclude
            LinkToMedia: LinkToMedia
            Max: Max
            For: For
            Decisions:
            - NTEOverride: NTEOverride
              TradeOverride: TradeOverride
              ProviderRankOverride: ProviderRankOverride
              OptionValue: OptionValue
              CategoryOverride: CategoryOverride
              PriorityOverride: PriorityOverride
              NextQuestion: NextQuestion
              WoLabelOverride: WoLabelOverride
            - NTEOverride: NTEOverride
              TradeOverride: TradeOverride
              ProviderRankOverride: ProviderRankOverride
              OptionValue: OptionValue
              CategoryOverride: CategoryOverride
              PriorityOverride: PriorityOverride
              NextQuestion: NextQuestion
              WoLabelOverride: WoLabelOverride
            Step: Step
            Allow: numbers
            DisableFilter: false
            AreaName: AreaName
            Item: Item
            Type: textbox
            Min: Min
            Header: Header
            Required: false
            ProblemType: ProblemType
            ExpectedValue: ExpectedValue
            Problem: Problem
            Helptip: Helptip
            Id: Id
          - Options:
            - Options
            - Options
            ErrorText: ErrorText
            Exclude: Exclude
            LinkToMedia: LinkToMedia
            Max: Max
            For: For
            Decisions:
            - NTEOverride: NTEOverride
              TradeOverride: TradeOverride
              ProviderRankOverride: ProviderRankOverride
              OptionValue: OptionValue
              CategoryOverride: CategoryOverride
              PriorityOverride: PriorityOverride
              NextQuestion: NextQuestion
              WoLabelOverride: WoLabelOverride
            - NTEOverride: NTEOverride
              TradeOverride: TradeOverride
              ProviderRankOverride: ProviderRankOverride
              OptionValue: OptionValue
              CategoryOverride: CategoryOverride
              PriorityOverride: PriorityOverride
              NextQuestion: NextQuestion
              WoLabelOverride: WoLabelOverride
            Step: Step
            Allow: numbers
            DisableFilter: false
            AreaName: AreaName
            Item: Item
            Type: textbox
            Min: Min
            Header: Header
            Required: false
            ProblemType: ProblemType
            ExpectedValue: ExpectedValue
            Problem: Problem
            Helptip: Helptip
            Id: Id
          Category: Category
          LinkToMedia: LinkToMedia
          Priority: Priority
          Comments: Comments
          EquipmentId: EquipmentId
          AdditionalFields:
          - Options:
            - Options
            - Options
            ErrorText: ErrorText
            Exclude: Exclude
            LinkToMedia: LinkToMedia
            Max: Max
            For: For
            Decisions:
            - NTEOverride: NTEOverride
              TradeOverride: TradeOverride
              ProviderRankOverride: ProviderRankOverride
              OptionValue: OptionValue
              CategoryOverride: CategoryOverride
              PriorityOverride: PriorityOverride
              NextQuestion: NextQuestion
              WoLabelOverride: WoLabelOverride
            - NTEOverride: NTEOverride
              TradeOverride: TradeOverride
              ProviderRankOverride: ProviderRankOverride
              OptionValue: OptionValue
              CategoryOverride: CategoryOverride
              PriorityOverride: PriorityOverride
              NextQuestion: NextQuestion
              WoLabelOverride: WoLabelOverride
            Step: Step
            Allow: numbers
            DisableFilter: false
            AreaName: AreaName
            Item: Item
            Type: textbox
            Min: Min
            Header: Header
            Required: false
            ProblemType: ProblemType
            ExpectedValue: ExpectedValue
            Problem: Problem
            Helptip: Helptip
            Id: Id
          - Options:
            - Options
            - Options
            ErrorText: ErrorText
            Exclude: Exclude
            LinkToMedia: LinkToMedia
            Max: Max
            For: For
            Decisions:
            - NTEOverride: NTEOverride
              TradeOverride: TradeOverride
              ProviderRankOverride: ProviderRankOverride
              OptionValue: OptionValue
              CategoryOverride: CategoryOverride
              PriorityOverride: PriorityOverride
              NextQuestion: NextQuestion
              WoLabelOverride: WoLabelOverride
            - NTEOverride: NTEOverride
              TradeOverride: TradeOverride
              ProviderRankOverride: ProviderRankOverride
              OptionValue: OptionValue
              CategoryOverride: CategoryOverride
              PriorityOverride: PriorityOverride
              NextQuestion: NextQuestion
              WoLabelOverride: WoLabelOverride
            Step: Step
            Allow: numbers
            DisableFilter: false
            AreaName: AreaName
            Item: Item
            Type: textbox
            Min: Min
            Header: Header
            Required: false
            ProblemType: ProblemType
            ExpectedValue: ExpectedValue
            Problem: Problem
            Helptip: Helptip
            Id: Id
          ProblemCode: ProblemCode
          IsNewIssueList: false
          EquipmentType: EquipmentType
          ApprovalCode: ApprovalCode
          DashOverrideApplied: false
          TroubleshootingMessage: TroubleshootingMessage
          Trade: Trade
          EquipmentEntry: EquipmentEntry
          ProviderRank: 0
          ProblemType: ProblemType
          Currency: Currency
          WoLabel: WoLabel
          Nte: Nte
        Providers:
        - Zip: Zip
          MailFrequency: 1
          Category: Category
          Email: Email
          ImageFile: ImageFile
          DateCreated: 2000-01-23T04:56:07.000+00:00
          TaxId: TaxId
          Name: Name
          Trade: Trade
          Phone: Phone
          FaxNumber: FaxNumber
          LastTrainingDate: 2000-01-23T04:56:07.000+00:00
          FormId: 5
          SuperUser: SuperUser
          MailInfo: MailInfo
          IsDefault: false
          NightRequest: 5
          ReturnMail: ReturnMail
          Priority: Priority
          MainContact: MainContact
          Address2: Address2
          Rank: 0
          ServiceRequestEmails: ServiceRequestEmails
          Address1: Address1
          City: City
          GeneralEmail: GeneralEmail
          IsInternal: false
          ProcessingEmail: ProcessingEmail
          ShortFormatEmail: ShortFormatEmail
          DoNotDispatch: false
          IsOnOffShoreFeatureEnabled: false
          State: State
          FullName: FullName
          Pager: Pager
          WebSite: WebSite
          Country: Country
          LastUserDate: LastUserDate
          Id: 2
          Nte: 6.027456183070403
          SuiteFloor: SuiteFloor
          LastTrainingDateStr: LastTrainingDateStr
        - Zip: Zip
          MailFrequency: 1
          Category: Category
          Email: Email
          ImageFile: ImageFile
          DateCreated: 2000-01-23T04:56:07.000+00:00
          TaxId: TaxId
          Name: Name
          Trade: Trade
          Phone: Phone
          FaxNumber: FaxNumber
          LastTrainingDate: 2000-01-23T04:56:07.000+00:00
          FormId: 5
          SuperUser: SuperUser
          MailInfo: MailInfo
          IsDefault: false
          NightRequest: 5
          ReturnMail: ReturnMail
          Priority: Priority
          MainContact: MainContact
          Address2: Address2
          Rank: 0
          ServiceRequestEmails: ServiceRequestEmails
          Address1: Address1
          City: City
          GeneralEmail: GeneralEmail
          IsInternal: false
          ProcessingEmail: ProcessingEmail
          ShortFormatEmail: ShortFormatEmail
          DoNotDispatch: false
          IsOnOffShoreFeatureEnabled: false
          State: State
          FullName: FullName
          Pager: Pager
          WebSite: WebSite
          Country: Country
          LastUserDate: LastUserDate
          Id: 2
          Nte: 6.027456183070403
          SuiteFloor: SuiteFloor
          LastTrainingDateStr: LastTrainingDateStr
        SetupRequestConfirm:
          ShowRecipients: false
          DeleteCopyRecipients: false
          CreateLinkedRequest: false
          RequirePO: false
          EnableAdditionalCodes: false
          EnableWO: false
          AddCopyRecipient: false
          MaintainOrDecreasePriority: false
          ChangeablePriority: false
          LabelsAsSelectOnly: false
          ChangeableScheduledDate: false
          ChangeableGlCode: false
          EnableLabels: false
          ChangeableNte: false
          AllowChangeableCurrency: false
          ChangeableCategory: false
          AvoidDispatching: false
          ChangeablePrioritySetDefault: false
          ChangeableProvider: false
          EmptyProviderEmailNotification: false
          EnablePO: false
          EditWeatherType: false
        Currency:
          DecimalCount: 1
          Entity: Entity
          AlphabeticalCode: AlphabeticalCode
          NumericCode: NumericCode
          Rate: 4.965218492984954
          Id: 7
          CurrencyName: CurrencyName
        AssetsInfo:
          AssetEntry: AssetEntry
          Assets:
          - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
            ImportedFrom: 3
            ManufacturerDate: 2000-01-23T04:56:07.000+00:00
            AssetLeakDetectorConnectionId: 4
            LeasePeriod: 3
            AssetRefrigerant:
              RackId: RackId
              RefrigerantUsageType: 1
              AssetTypeId: 3
              RefrigerantPartNumber: RefrigerantPartNumber
              RefrigerantPurposeName: RefrigerantPurposeName
              AssetLeakDetectorId: 2
              CurrentChargeMetrics: 6.683562403749608
              ParentId: 1
              EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
              CarbID: CarbID
              RackEntityId: 4
              RackTypeName: RackTypeName
              OperationalStatus: OperationalStatus
              SystemLocation: SystemLocation
              CreateOperationalStatusHistory: false
              IsCarbReporting: false
              RackTypeId: 9
              RefrigerantPurposeId: 6
              HasLeakDetector: false
              ChargeProviderName: ChargeProviderName
              UserId: 6
              TagId: TagId
              OperationStatusDate: 2000-01-23T04:56:07.000+00:00
              CurrentChargeOunces: 8.762042012749001
              CurrentCharge: 9.369310271410669
              ChargeDescriptionId: 9
              Id: 6
              PartNumberId: 5
              AssetId: 7
            LastModifiedUserName: LastModifiedUserName
            BrandId: 5
            AssetValidationStatus: 6
            Trade: Trade
            EnergyEfficiency: EnergyEfficiency
            CustomAttributes:
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            Capacity: Capacity
            SubscriberId: 7
            Currency: 3
            Manufacturer: Manufacturer
            SubName: SubName
            SerialNo: SerialNo
            Warranty:
              ProviderId: 7
              Category: Category
              ExpirationDate: 2000-01-23T04:56:07.000+00:00
              Priority: Priority
              Expiration:
                Type: FromPurchaseDate
                Period: 1
              NTE: 1.2315135367772556
              Provider:
                ProviderName: ProviderName
                Type: Fixed
                Value: 1
            UsesRefrigerant: 2
            AssetUpdatesStatus: AssetUpdatesStatus
            LifeExpectancy: 7
            OriginalValue: 9.301444243932576
            AssetAttributesMap:
              EditableForProvidersAttributesMap: 5
              ViewableForProvidersAttributesMap: 6
              RequiredStandardAttributesMap: 6
              StandardAttributesMap: 6
            AssetTag: AssetTag
            IsCircuit: false
            Area: Area
            Active: false
            IsCarbReporting: false
            HasLeakDetector: false
            PurchaseDate: PurchaseDate
            HasCircuits: false
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            IsLeased: false
            LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
            HasComponents: false
            AdditionalTradesNames: AdditionalTradesNames
            Description: Description
            AssetStatus: AssetStatus
            ModifiedDate: 2000-01-23T04:56:07.000+00:00
            HasChilds: false
            RetiredDate: 2000-01-23T04:56:07.000+00:00
            AssetTypeId: 5
            StoreId: StoreId
            ConditionString: ConditionString
            LeaseDate: LeaseDate
            AssetValidated: false
            HasTagged: false
            AssetTypeGroupId: 0
            WorkOrderArea: WorkOrderArea
            Condition: 2
            ParentId: 3
            TradeId: 1
            IsLeakDetector: false
            LocationId: 6
            InstallDate: InstallDate
            ModelNo: ModelNo
            IsReplaceEquipment: false
            Type: Type
            Spend: 7.058770351582356
            Tag: Tag
            ManufacturerDateStr: ManufacturerDateStr
            Location: Location
            ValidationRequired: false
          - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
            ImportedFrom: 3
            ManufacturerDate: 2000-01-23T04:56:07.000+00:00
            AssetLeakDetectorConnectionId: 4
            LeasePeriod: 3
            AssetRefrigerant:
              RackId: RackId
              RefrigerantUsageType: 1
              AssetTypeId: 3
              RefrigerantPartNumber: RefrigerantPartNumber
              RefrigerantPurposeName: RefrigerantPurposeName
              AssetLeakDetectorId: 2
              CurrentChargeMetrics: 6.683562403749608
              ParentId: 1
              EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
              CarbID: CarbID
              RackEntityId: 4
              RackTypeName: RackTypeName
              OperationalStatus: OperationalStatus
              SystemLocation: SystemLocation
              CreateOperationalStatusHistory: false
              IsCarbReporting: false
              RackTypeId: 9
              RefrigerantPurposeId: 6
              HasLeakDetector: false
              ChargeProviderName: ChargeProviderName
              UserId: 6
              TagId: TagId
              OperationStatusDate: 2000-01-23T04:56:07.000+00:00
              CurrentChargeOunces: 8.762042012749001
              CurrentCharge: 9.369310271410669
              ChargeDescriptionId: 9
              Id: 6
              PartNumberId: 5
              AssetId: 7
            LastModifiedUserName: LastModifiedUserName
            BrandId: 5
            AssetValidationStatus: 6
            Trade: Trade
            EnergyEfficiency: EnergyEfficiency
            CustomAttributes:
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            Capacity: Capacity
            SubscriberId: 7
            Currency: 3
            Manufacturer: Manufacturer
            SubName: SubName
            SerialNo: SerialNo
            Warranty:
              ProviderId: 7
              Category: Category
              ExpirationDate: 2000-01-23T04:56:07.000+00:00
              Priority: Priority
              Expiration:
                Type: FromPurchaseDate
                Period: 1
              NTE: 1.2315135367772556
              Provider:
                ProviderName: ProviderName
                Type: Fixed
                Value: 1
            UsesRefrigerant: 2
            AssetUpdatesStatus: AssetUpdatesStatus
            LifeExpectancy: 7
            OriginalValue: 9.301444243932576
            AssetAttributesMap:
              EditableForProvidersAttributesMap: 5
              ViewableForProvidersAttributesMap: 6
              RequiredStandardAttributesMap: 6
              StandardAttributesMap: 6
            AssetTag: AssetTag
            IsCircuit: false
            Area: Area
            Active: false
            IsCarbReporting: false
            HasLeakDetector: false
            PurchaseDate: PurchaseDate
            HasCircuits: false
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            IsLeased: false
            LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
            HasComponents: false
            AdditionalTradesNames: AdditionalTradesNames
            Description: Description
            AssetStatus: AssetStatus
            ModifiedDate: 2000-01-23T04:56:07.000+00:00
            HasChilds: false
            RetiredDate: 2000-01-23T04:56:07.000+00:00
            AssetTypeId: 5
            StoreId: StoreId
            ConditionString: ConditionString
            LeaseDate: LeaseDate
            AssetValidated: false
            HasTagged: false
            AssetTypeGroupId: 0
            WorkOrderArea: WorkOrderArea
            Condition: 2
            ParentId: 3
            TradeId: 1
            IsLeakDetector: false
            LocationId: 6
            InstallDate: InstallDate
            ModelNo: ModelNo
            IsReplaceEquipment: false
            Type: Type
            Spend: 7.058770351582356
            Tag: Tag
            ManufacturerDateStr: ManufacturerDateStr
            Location: Location
            ValidationRequired: false
          AssetRequired: false
        ProvidersNotFoundMessage: ProvidersNotFoundMessage
        CallerName: CallerName
        SetupGeneral:
          AllowAddingAttachments: false
        SetupRequest:
          SetupId: 0
          ShowProviderPhoneNumber: false
          NteToZeroForRecalls: false
          TurnOffDescription: false
          ProviderNotFoundMessage: ProviderNotFoundMessage
          AlwaysShowLocationNotes: false
          AssetFirstWorkOrderCreation: false
          DuplicateFilters:
          - DuplicateFilters
          - DuplicateFilters
          SkipTroubleshootingStep: false
          EnableEquipment: false
          ShowLastServiceCall: false
          ExcludedStatuses:
          - ExcludedStatuses
          - ExcludedStatuses
          ExcludedCategoriesOpenDup:
          - ExcludedCategoriesOpenDup
          - ExcludedCategoriesOpenDup
          EnableLocationNotes: false
          StoreWarrantyMessage: StoreWarrantyMessage
          ConfirmationMessage: ConfirmationMessage
          EnableRequestWizard: false
          ShowPrivateStoreNotes: false
          EnableRequestWizardMobile: false
          EnableEquipmentReplacement: false
          ExcludedTradesOpenDup:
          - ExcludedTradesOpenDup
          - ExcludedTradesOpenDup
          ShowStoreWarrantyStr: ShowStoreWarrantyStr
          EnableIssueListKeywordSearch: false
          SetOriginalVendorForRecalls: false
          DaysOfHistoryToDisplay: 6
          ExcludedCategoriesClosedDup:
          - ExcludedCategoriesClosedDup
          - ExcludedCategoriesClosedDup
          HideGPSRadius: false
          HidePriority: false
          EnableEquipmentReplacementFlag: false
          SendAlertToFM: false
      properties:
        IssueChoice:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceResponse'
        Providers:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.ServiceRequestProvider'
          type: array
        ProvidersNotFoundMessage:
          type: string
        CallerName:
          type: string
        ScheduledDateOffsetFromCallDate:
          format: int64
          type: integer
        AssetsInfo:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Assets.AssetsInfoResponse'
        SetupRequestConfirm:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestConfirmResponse'
        SetupRequest:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupRequestResponse'
        Categories:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Category.CategoryResponse'
          type: array
        Priorities:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Priorities.PriorityResponse'
          type: array
        SetupGeneral:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.SetupGeneralResponse'
        UserSettings:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.DashboardSettings.UserSettingsResponse'
        Currency:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Currencies.Currency'
        AreaId:
          format: int32
          type: integer
        TradeId:
          format: int32
          type: integer
        SetupId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.IssueLists.GetIssueChoiceResponse:
      example:
        RequireAttachment: false
        AllAdditionalFields:
        - Options:
          - Options
          - Options
          ErrorText: ErrorText
          Exclude: Exclude
          LinkToMedia: LinkToMedia
          Max: Max
          For: For
          Decisions:
          - NTEOverride: NTEOverride
            TradeOverride: TradeOverride
            ProviderRankOverride: ProviderRankOverride
            OptionValue: OptionValue
            CategoryOverride: CategoryOverride
            PriorityOverride: PriorityOverride
            NextQuestion: NextQuestion
            WoLabelOverride: WoLabelOverride
          - NTEOverride: NTEOverride
            TradeOverride: TradeOverride
            ProviderRankOverride: ProviderRankOverride
            OptionValue: OptionValue
            CategoryOverride: CategoryOverride
            PriorityOverride: PriorityOverride
            NextQuestion: NextQuestion
            WoLabelOverride: WoLabelOverride
          Step: Step
          Allow: numbers
          DisableFilter: false
          AreaName: AreaName
          Item: Item
          Type: textbox
          Min: Min
          Header: Header
          Required: false
          ProblemType: ProblemType
          ExpectedValue: ExpectedValue
          Problem: Problem
          Helptip: Helptip
          Id: Id
        - Options:
          - Options
          - Options
          ErrorText: ErrorText
          Exclude: Exclude
          LinkToMedia: LinkToMedia
          Max: Max
          For: For
          Decisions:
          - NTEOverride: NTEOverride
            TradeOverride: TradeOverride
            ProviderRankOverride: ProviderRankOverride
            OptionValue: OptionValue
            CategoryOverride: CategoryOverride
            PriorityOverride: PriorityOverride
            NextQuestion: NextQuestion
            WoLabelOverride: WoLabelOverride
          - NTEOverride: NTEOverride
            TradeOverride: TradeOverride
            ProviderRankOverride: ProviderRankOverride
            OptionValue: OptionValue
            CategoryOverride: CategoryOverride
            PriorityOverride: PriorityOverride
            NextQuestion: NextQuestion
            WoLabelOverride: WoLabelOverride
          Step: Step
          Allow: numbers
          DisableFilter: false
          AreaName: AreaName
          Item: Item
          Type: textbox
          Min: Min
          Header: Header
          Required: false
          ProblemType: ProblemType
          ExpectedValue: ExpectedValue
          Problem: Problem
          Helptip: Helptip
          Id: Id
        Category: Category
        LinkToMedia: LinkToMedia
        Priority: Priority
        Comments: Comments
        EquipmentId: EquipmentId
        AdditionalFields:
        - Options:
          - Options
          - Options
          ErrorText: ErrorText
          Exclude: Exclude
          LinkToMedia: LinkToMedia
          Max: Max
          For: For
          Decisions:
          - NTEOverride: NTEOverride
            TradeOverride: TradeOverride
            ProviderRankOverride: ProviderRankOverride
            OptionValue: OptionValue
            CategoryOverride: CategoryOverride
            PriorityOverride: PriorityOverride
            NextQuestion: NextQuestion
            WoLabelOverride: WoLabelOverride
          - NTEOverride: NTEOverride
            TradeOverride: TradeOverride
            ProviderRankOverride: ProviderRankOverride
            OptionValue: OptionValue
            CategoryOverride: CategoryOverride
            PriorityOverride: PriorityOverride
            NextQuestion: NextQuestion
            WoLabelOverride: WoLabelOverride
          Step: Step
          Allow: numbers
          DisableFilter: false
          AreaName: AreaName
          Item: Item
          Type: textbox
          Min: Min
          Header: Header
          Required: false
          ProblemType: ProblemType
          ExpectedValue: ExpectedValue
          Problem: Problem
          Helptip: Helptip
          Id: Id
        - Options:
          - Options
          - Options
          ErrorText: ErrorText
          Exclude: Exclude
          LinkToMedia: LinkToMedia
          Max: Max
          For: For
          Decisions:
          - NTEOverride: NTEOverride
            TradeOverride: TradeOverride
            ProviderRankOverride: ProviderRankOverride
            OptionValue: OptionValue
            CategoryOverride: CategoryOverride
            PriorityOverride: PriorityOverride
            NextQuestion: NextQuestion
            WoLabelOverride: WoLabelOverride
          - NTEOverride: NTEOverride
            TradeOverride: TradeOverride
            ProviderRankOverride: ProviderRankOverride
            OptionValue: OptionValue
            CategoryOverride: CategoryOverride
            PriorityOverride: PriorityOverride
            NextQuestion: NextQuestion
            WoLabelOverride: WoLabelOverride
          Step: Step
          Allow: numbers
          DisableFilter: false
          AreaName: AreaName
          Item: Item
          Type: textbox
          Min: Min
          Header: Header
          Required: false
          ProblemType: ProblemType
          ExpectedValue: ExpectedValue
          Problem: Problem
          Helptip: Helptip
          Id: Id
        ProblemCode: ProblemCode
        IsNewIssueList: false
        EquipmentType: EquipmentType
        ApprovalCode: ApprovalCode
        DashOverrideApplied: false
        TroubleshootingMessage: TroubleshootingMessage
        Trade: Trade
        EquipmentEntry: EquipmentEntry
        ProviderRank: 0
        ProblemType: ProblemType
        Currency: Currency
        WoLabel: WoLabel
        Nte: Nte
      properties:
        ProblemType:
          type: string
        EquipmentType:
          type: string
        ProblemCode:
          type: string
        Trade:
          type: string
        Priority:
          type: string
        RequireAttachment:
          default: false
          type: boolean
        EquipmentId:
          type: string
        EquipmentEntry:
          type: string
        Category:
          type: string
        Comments:
          type: string
        TroubleshootingMessage:
          type: string
        ProviderRank:
          format: int32
          type: integer
        Currency:
          type: string
        ApprovalCode:
          type: string
        LinkToMedia:
          type: string
        AdditionalFields:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.IssueFieldResponse'
          type: array
        AllAdditionalFields:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.IssueLists.IssueFieldResponse'
          type: array
        IsNewIssueList:
          default: false
          type: boolean
        DashOverrideApplied:
          default: false
          type: boolean
        Nte:
          type: string
        WoLabel:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Priorities.PriorityResponse:
      example:
        Trade: Trade
        ScheduledDate_DTO: 2000-01-23T04:56:07.000+00:00
        Eta: Eta
        SubscriberId: 5
        LocationId: 5
        IsSelectable: false
        ScheduledDate: 2000-01-23T04:56:07.000+00:00
        Id: 1
        SkipNights: false
        SkipWeekends: false
        Name: Name
      properties:
        Id:
          description: UID of priority. Can be null
          format: int32
          type: integer
        Name:
          description: Priority name
          type: string
        SubscriberId:
          description: UID of subscriber. Can be null
          format: int32
          type: integer
        Eta:
          description: ETA
          type: string
        SkipNights:
          default: false
          description: Skip nights while calculating scheduled date
          type: boolean
        SkipWeekends:
          default: false
          description: Skip weekends while calculating scheduled date
          type: boolean
        LocationId:
          description: If priority is associated with location - assiciated location
          format: int32
          type: integer
        Trade:
          description: If priority is associated with trade - assiciated trade
          type: string
        ScheduledDate:
          description: Calculated WO Scheduled Date
          format: date-time
          type: string
        ScheduledDate_DTO:
          description: Calculated WO Scheduled Date with time zone offset
          format: date-time
          type: string
        IsSelectable:
          default: false
          description: IsSelectable
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.DashboardSettings.SetupGeneralResponse:
      example:
        AllowAddingAttachments: false
      properties:
        AllowAddingAttachments:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.DashboardSettings.UserSettingsResponse:
      example:
        MaximumNteAmount: 2.3021358869347655
      properties:
        MaximumNteAmount:
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.IssueLists.IssueFieldResponse:
      example:
        Options:
        - Options
        - Options
        ErrorText: ErrorText
        Exclude: Exclude
        LinkToMedia: LinkToMedia
        Max: Max
        For: For
        Decisions:
        - NTEOverride: NTEOverride
          TradeOverride: TradeOverride
          ProviderRankOverride: ProviderRankOverride
          OptionValue: OptionValue
          CategoryOverride: CategoryOverride
          PriorityOverride: PriorityOverride
          NextQuestion: NextQuestion
          WoLabelOverride: WoLabelOverride
        - NTEOverride: NTEOverride
          TradeOverride: TradeOverride
          ProviderRankOverride: ProviderRankOverride
          OptionValue: OptionValue
          CategoryOverride: CategoryOverride
          PriorityOverride: PriorityOverride
          NextQuestion: NextQuestion
          WoLabelOverride: WoLabelOverride
        Step: Step
        Allow: numbers
        DisableFilter: false
        AreaName: AreaName
        Item: Item
        Type: textbox
        Min: Min
        Header: Header
        Required: false
        ProblemType: ProblemType
        ExpectedValue: ExpectedValue
        Problem: Problem
        Helptip: Helptip
        Id: Id
      properties:
        ProblemType:
          description: Gets or sets the problem type.
          type: string
        Item:
          description: Gets or sets the item.
          type: string
        Problem:
          description: Gets or sets the problem.
          type: string
        For:
          description: Gets or sets the for.
          type: string
        Id:
          description: Gets or sets the id.
          type: string
        Header:
          description: Gets or sets the header.
          type: string
        ErrorText:
          description: Gets or sets the error text.
          type: string
        AreaName:
          description: Gets or sets the area name.
          type: string
        Exclude:
          description: Gets or sets the exclude.
          type: string
        Min:
          description: Gets or sets the min.
          type: string
        Max:
          description: Gets or sets the max.
          type: string
        Step:
          description: Gets or sets the step.
          type: string
        Helptip:
          description: Gets or sets the helptip.
          type: string
        Type:
          description: Gets or sets the type.
          enum:
          - textbox
          - select
          - size
          - label
          type: string
        Allow:
          description: Gets or sets the allow.
          enum:
          - numbers
          - decimals
          - all
          type: string
        ExpectedValue:
          description: Gets or sets the expected value.
          type: string
        Options:
          description: Gets or sets the options.
          items:
            type: string
          type: array
        Required:
          default: false
          description: Determines whether this field is required to fill or not
          type: boolean
        Decisions:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.Dashboard.IssueLists.DecisionModel'
          type: array
        LinkToMedia:
          type: string
        DisableFilter:
          default: false
          description: Gets a value indicating whether disable filter.
          readOnly: true
          type: boolean
      type: object
    ServiceChannel.Api.Model.Dashboard.IssueLists.DecisionModel:
      example:
        NTEOverride: NTEOverride
        TradeOverride: TradeOverride
        ProviderRankOverride: ProviderRankOverride
        OptionValue: OptionValue
        CategoryOverride: CategoryOverride
        PriorityOverride: PriorityOverride
        NextQuestion: NextQuestion
        WoLabelOverride: WoLabelOverride
      properties:
        OptionValue:
          type: string
        NextQuestion:
          type: string
        TradeOverride:
          type: string
        CategoryOverride:
          type: string
        PriorityOverride:
          type: string
        NTEOverride:
          type: string
        ProviderRankOverride:
          type: string
        WoLabelOverride:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.Dashboard.Requests.PrimaryAndNotesRecipientsRequest:
      properties:
        SubscriberId:
          format: int32
          type: integer
        SetupId:
          format: int32
          type: integer
        LocationId:
          format: int32
          type: integer
        ProviderId:
          format: int32
          type: integer
        Trade:
          type: string
      required:
      - LocationId
      - ProviderId
      - SetupId
      - SubscriberId
      - Trade
      type: object
    ServiceChannel.Services.Messaging.SingleSignOn.RegisterSsoClientRequest:
      properties:
        InvitationKey:
          description: SSO invitation key to identify user
          type: string
        ClientIdentifier:
          description: "Unique client id, for. ex. IMEI of the mobile device"
          type: string
        ClientDescription:
          description: "Description, for ex. mobile device description(Brand, Model,\
            \ Number)"
          type: string
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternalOld:
      properties:
        StartDate:
          format: date-time
          type: string
        FinishDate:
          format: date-time
          type: string
        Areas:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditAreaExternalOld'
          type: array
        WorkOrderIds:
          items:
            format: int32
            type: integer
          type: array
        Emails:
          type: string
        SendEmails:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.AuditAreaExternalOld:
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        SortOrder:
          format: int32
          type: integer
        CheckLists:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListExternalOld'
          type: array
        WorkOrderIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.CheckListExternalOld:
      properties:
        Name:
          type: string
        TemplateName:
          type: string
        Unlisted:
          default: false
          type: boolean
        SortOrder:
          format: int32
          type: integer
        WorkOrderIds:
          items:
            format: int32
            type: integer
          type: array
        CheckListItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemExternalOld'
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.CheckListItemExternalOld:
      properties:
        Name:
          type: string
        Description:
          type: string
        Status:
          format: int32
          type: integer
        StatusNumeric:
          format: int32
          type: integer
        UseNumericRatingSystem:
          default: false
          type: boolean
        Date:
          format: date-time
          type: string
        Unlisted:
          default: false
          type: boolean
        WorkOrderIds:
          items:
            format: int32
            type: integer
          type: array
        Issues:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditIssueExternal'
          type: array
        Quantity:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.QuantityExternal'
        CheckListItemImpact:
          type: string
        StatisticItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemStatisticExternal'
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.AuditIssueExternal:
      example:
        Description: Description
        UserName: UserName
        Persistent: false
        Id: 2
        Attachments:
        - ContentUrl: ContentUrl
          RemoteName: RemoteName
          RemoteNameResized: RemoteNameResized
          ContentUrlResized: ContentUrlResized
          FileName: FileName
          Id: 7
        - ContentUrl: ContentUrl
          RemoteName: RemoteName
          RemoteNameResized: RemoteNameResized
          ContentUrlResized: ContentUrlResized
          FileName: FileName
          Id: 7
        Date: 2000-01-23T04:56:07.000+00:00
      properties:
        Id:
          format: int32
          type: integer
        Description:
          type: string
        Date:
          format: date-time
          type: string
        Attachments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.IssueAttachmentExternal'
          type: array
        Persistent:
          default: false
          type: boolean
        UserName:
          type: string
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.QuantityExternal:
      example:
        Value: 9
        Unit: Unit
      properties:
        Value:
          format: int32
          type: integer
        Unit:
          type: string
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.CheckListItemStatisticExternal:
      properties:
        CheckListItemId:
          format: int32
          type: integer
        Date:
          format: date-time
          type: string
        Status:
          format: int32
          type: integer
        StatusNumeric:
          format: int32
          type: integer
        UseNumericRatingSystem:
          default: false
          type: boolean
        WorkOrdersCount:
          format: int32
          type: integer
        CommentsCount:
          format: int32
          type: integer
        AttachmentsCount:
          format: int32
          type: integer
        QuantityCount:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.IssueAttachmentExternal:
      example:
        ContentUrl: ContentUrl
        RemoteName: RemoteName
        RemoteNameResized: RemoteNameResized
        ContentUrlResized: ContentUrlResized
        FileName: FileName
        Id: 7
      properties:
        Id:
          format: int32
          type: integer
        RemoteName:
          type: string
        RemoteNameResized:
          type: string
        FileName:
          type: string
        ContentUrl:
          type: string
        ContentUrlResized:
          type: string
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.AuditDataWeightedExternal:
      properties:
        StartDate:
          format: date-time
          type: string
        FinishDate:
          format: date-time
          type: string
        Areas:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditAreaWeightedExternal'
          type: array
        WorkOrderIds:
          items:
            format: int32
            type: integer
          type: array
        Emails:
          type: string
        SendEmails:
          default: false
          type: boolean
        Language:
          type: string
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.AuditAreaWeightedExternal:
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        SortOrder:
          format: int32
          type: integer
        CheckLists:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListWeightedExternal'
          type: array
        WorkOrderIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.CheckListWeightedExternal:
      properties:
        Name:
          type: string
        TemplateName:
          type: string
        Unlisted:
          default: false
          type: boolean
        SortOrder:
          format: int32
          type: integer
        WorkOrderIds:
          items:
            format: int32
            type: integer
          type: array
        CheckListItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemWeightedExternal'
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.CheckListItemWeightedExternal:
      properties:
        Name:
          type: string
        Description:
          type: string
        Score:
          format: int32
          type: integer
        System:
          enum:
          - PassFail
          - Numeric
          - Weighted
          - Percentage
          type: string
        Date:
          format: date-time
          type: string
        Unlisted:
          default: false
          type: boolean
        WorkOrderIds:
          items:
            format: int32
            type: integer
          type: array
        Issues:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditIssueExternal'
          type: array
        Quantity:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.QuantityExternal'
        CheckListItemImpact:
          type: string
        PassThreshold:
          format: int32
          type: integer
        Range:
          items:
            format: int32
            type: integer
          type: array
        StatisticItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemStatisticWeightedExternal'
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.CheckListItemStatisticWeightedExternal:
      example:
        Score: 7
        CommentsCount: 6
        CheckListItemId: 4
        Range:
        - 1
        - 1
        Date: 2000-01-23T04:56:07.000+00:00
        System: 1
        WorkOrdersCount: 1
        AttachmentsCount: 7
        QuantityCount: 1
      properties:
        CheckListItemId:
          format: int32
          type: integer
        Date:
          format: date-time
          type: string
        Score:
          format: int32
          type: integer
        System:
          format: int32
          type: integer
        Range:
          items:
            format: int32
            type: integer
          type: array
        WorkOrdersCount:
          format: int32
          type: integer
        CommentsCount:
          format: int32
          type: integer
        AttachmentsCount:
          format: int32
          type: integer
        QuantityCount:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.AuditDataExternal:
      properties:
        Id:
          format: int32
          type: integer
        StoreId:
          format: int32
          type: integer
        TemplateTypeId:
          format: int32
          type: integer
        StartDate:
          format: date-time
          type: string
        FinishDate:
          format: date-time
          type: string
        SendEmails:
          default: false
          type: boolean
        Emails:
          type: string
        Areas:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditAreaRequest'
          type: array
        Language:
          type: string
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.AuditAreaRequest:
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        SortOrder:
          format: int32
          type: integer
        CheckLists:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListRequest'
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.CheckListRequest:
      properties:
        Name:
          type: string
        Unlisted:
          default: false
          type: boolean
        SortOrder:
          format: int32
          type: integer
        CheckListItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemRequest'
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.CheckListItemRequest:
      properties:
        Name:
          type: string
        Description:
          type: string
        Score:
          format: int32
          type: integer
        System:
          enum:
          - PassFail
          - Numeric
          - Weighted
          - Percentage
          type: string
        Range:
          items:
            format: int32
            type: integer
          type: array
        PassThreshold:
          format: int32
          type: integer
        Date:
          format: date-time
          type: string
        Unlisted:
          default: false
          type: boolean
        Issues:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditIssueExternal'
          type: array
        Quantity:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.QuantityExternal'
        CheckListItemImpact:
          type: string
        WorkOrderIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.SaveAuditDataResponse:
      example:
        Saved: false
        Sent: Sent
      properties:
        Saved:
          default: false
          type: boolean
        Sent:
          type: string
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.GetAuditInfo:
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        Id: 0
        Emails: Emails
        Areas:
        - CheckLists:
          - SortOrder: 5
            Unlisted: false
            CheckListItems:
            - Score: 5
              Description: Description
              PassThreshold: 3
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              CheckListItemImpact: CheckListItemImpact
              StatisticItems:
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              Quantity:
                Value: 9
                Unit: Unit
              Unlisted: false
              Range:
              - 2
              - 2
              System: PassFail
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
            - Score: 5
              Description: Description
              PassThreshold: 3
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              CheckListItemImpact: CheckListItemImpact
              StatisticItems:
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              Quantity:
                Value: 9
                Unit: Unit
              Unlisted: false
              Range:
              - 2
              - 2
              System: PassFail
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
            Name: Name
          - SortOrder: 5
            Unlisted: false
            CheckListItems:
            - Score: 5
              Description: Description
              PassThreshold: 3
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              CheckListItemImpact: CheckListItemImpact
              StatisticItems:
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              Quantity:
                Value: 9
                Unit: Unit
              Unlisted: false
              Range:
              - 2
              - 2
              System: PassFail
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
            - Score: 5
              Description: Description
              PassThreshold: 3
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              CheckListItemImpact: CheckListItemImpact
              StatisticItems:
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              Quantity:
                Value: 9
                Unit: Unit
              Unlisted: false
              Range:
              - 2
              - 2
              System: PassFail
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
            Name: Name
          SortOrder: 1
          Id: 6
          Name: Name
        - CheckLists:
          - SortOrder: 5
            Unlisted: false
            CheckListItems:
            - Score: 5
              Description: Description
              PassThreshold: 3
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              CheckListItemImpact: CheckListItemImpact
              StatisticItems:
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              Quantity:
                Value: 9
                Unit: Unit
              Unlisted: false
              Range:
              - 2
              - 2
              System: PassFail
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
            - Score: 5
              Description: Description
              PassThreshold: 3
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              CheckListItemImpact: CheckListItemImpact
              StatisticItems:
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              Quantity:
                Value: 9
                Unit: Unit
              Unlisted: false
              Range:
              - 2
              - 2
              System: PassFail
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
            Name: Name
          - SortOrder: 5
            Unlisted: false
            CheckListItems:
            - Score: 5
              Description: Description
              PassThreshold: 3
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              CheckListItemImpact: CheckListItemImpact
              StatisticItems:
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              Quantity:
                Value: 9
                Unit: Unit
              Unlisted: false
              Range:
              - 2
              - 2
              System: PassFail
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
            - Score: 5
              Description: Description
              PassThreshold: 3
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 2
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 7
                Date: 2000-01-23T04:56:07.000+00:00
              CheckListItemImpact: CheckListItemImpact
              StatisticItems:
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              - Score: 7
                CommentsCount: 6
                CheckListItemId: 4
                Range:
                - 1
                - 1
                Date: 2000-01-23T04:56:07.000+00:00
                System: 1
                WorkOrdersCount: 1
                AttachmentsCount: 7
                QuantityCount: 1
              Quantity:
                Value: 9
                Unit: Unit
              Unlisted: false
              Range:
              - 2
              - 2
              System: PassFail
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
            Name: Name
          SortOrder: 1
          Id: 6
          Name: Name
      properties:
        Id:
          format: int32
          type: integer
        StartDate:
          format: date-time
          type: string
        Emails:
          type: string
        Areas:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditAreaExternal'
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.AuditAreaExternal:
      example:
        CheckLists:
        - SortOrder: 5
          Unlisted: false
          CheckListItems:
          - Score: 5
            Description: Description
            PassThreshold: 3
            Issues:
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 2
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              Date: 2000-01-23T04:56:07.000+00:00
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 2
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              Date: 2000-01-23T04:56:07.000+00:00
            CheckListItemImpact: CheckListItemImpact
            StatisticItems:
            - Score: 7
              CommentsCount: 6
              CheckListItemId: 4
              Range:
              - 1
              - 1
              Date: 2000-01-23T04:56:07.000+00:00
              System: 1
              WorkOrdersCount: 1
              AttachmentsCount: 7
              QuantityCount: 1
            - Score: 7
              CommentsCount: 6
              CheckListItemId: 4
              Range:
              - 1
              - 1
              Date: 2000-01-23T04:56:07.000+00:00
              System: 1
              WorkOrdersCount: 1
              AttachmentsCount: 7
              QuantityCount: 1
            Quantity:
              Value: 9
              Unit: Unit
            Unlisted: false
            Range:
            - 2
            - 2
            System: PassFail
            Date: 2000-01-23T04:56:07.000+00:00
            Name: Name
          - Score: 5
            Description: Description
            PassThreshold: 3
            Issues:
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 2
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              Date: 2000-01-23T04:56:07.000+00:00
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 2
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              Date: 2000-01-23T04:56:07.000+00:00
            CheckListItemImpact: CheckListItemImpact
            StatisticItems:
            - Score: 7
              CommentsCount: 6
              CheckListItemId: 4
              Range:
              - 1
              - 1
              Date: 2000-01-23T04:56:07.000+00:00
              System: 1
              WorkOrdersCount: 1
              AttachmentsCount: 7
              QuantityCount: 1
            - Score: 7
              CommentsCount: 6
              CheckListItemId: 4
              Range:
              - 1
              - 1
              Date: 2000-01-23T04:56:07.000+00:00
              System: 1
              WorkOrdersCount: 1
              AttachmentsCount: 7
              QuantityCount: 1
            Quantity:
              Value: 9
              Unit: Unit
            Unlisted: false
            Range:
            - 2
            - 2
            System: PassFail
            Date: 2000-01-23T04:56:07.000+00:00
            Name: Name
          Name: Name
        - SortOrder: 5
          Unlisted: false
          CheckListItems:
          - Score: 5
            Description: Description
            PassThreshold: 3
            Issues:
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 2
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              Date: 2000-01-23T04:56:07.000+00:00
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 2
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              Date: 2000-01-23T04:56:07.000+00:00
            CheckListItemImpact: CheckListItemImpact
            StatisticItems:
            - Score: 7
              CommentsCount: 6
              CheckListItemId: 4
              Range:
              - 1
              - 1
              Date: 2000-01-23T04:56:07.000+00:00
              System: 1
              WorkOrdersCount: 1
              AttachmentsCount: 7
              QuantityCount: 1
            - Score: 7
              CommentsCount: 6
              CheckListItemId: 4
              Range:
              - 1
              - 1
              Date: 2000-01-23T04:56:07.000+00:00
              System: 1
              WorkOrdersCount: 1
              AttachmentsCount: 7
              QuantityCount: 1
            Quantity:
              Value: 9
              Unit: Unit
            Unlisted: false
            Range:
            - 2
            - 2
            System: PassFail
            Date: 2000-01-23T04:56:07.000+00:00
            Name: Name
          - Score: 5
            Description: Description
            PassThreshold: 3
            Issues:
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 2
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              Date: 2000-01-23T04:56:07.000+00:00
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 2
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 7
              Date: 2000-01-23T04:56:07.000+00:00
            CheckListItemImpact: CheckListItemImpact
            StatisticItems:
            - Score: 7
              CommentsCount: 6
              CheckListItemId: 4
              Range:
              - 1
              - 1
              Date: 2000-01-23T04:56:07.000+00:00
              System: 1
              WorkOrdersCount: 1
              AttachmentsCount: 7
              QuantityCount: 1
            - Score: 7
              CommentsCount: 6
              CheckListItemId: 4
              Range:
              - 1
              - 1
              Date: 2000-01-23T04:56:07.000+00:00
              System: 1
              WorkOrdersCount: 1
              AttachmentsCount: 7
              QuantityCount: 1
            Quantity:
              Value: 9
              Unit: Unit
            Unlisted: false
            Range:
            - 2
            - 2
            System: PassFail
            Date: 2000-01-23T04:56:07.000+00:00
            Name: Name
          Name: Name
        SortOrder: 1
        Id: 6
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        SortOrder:
          format: int32
          type: integer
        CheckLists:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListExternal'
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.CheckListExternal:
      example:
        SortOrder: 5
        Unlisted: false
        CheckListItems:
        - Score: 5
          Description: Description
          PassThreshold: 3
          Issues:
          - Description: Description
            UserName: UserName
            Persistent: false
            Id: 2
            Attachments:
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 7
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 7
            Date: 2000-01-23T04:56:07.000+00:00
          - Description: Description
            UserName: UserName
            Persistent: false
            Id: 2
            Attachments:
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 7
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 7
            Date: 2000-01-23T04:56:07.000+00:00
          CheckListItemImpact: CheckListItemImpact
          StatisticItems:
          - Score: 7
            CommentsCount: 6
            CheckListItemId: 4
            Range:
            - 1
            - 1
            Date: 2000-01-23T04:56:07.000+00:00
            System: 1
            WorkOrdersCount: 1
            AttachmentsCount: 7
            QuantityCount: 1
          - Score: 7
            CommentsCount: 6
            CheckListItemId: 4
            Range:
            - 1
            - 1
            Date: 2000-01-23T04:56:07.000+00:00
            System: 1
            WorkOrdersCount: 1
            AttachmentsCount: 7
            QuantityCount: 1
          Quantity:
            Value: 9
            Unit: Unit
          Unlisted: false
          Range:
          - 2
          - 2
          System: PassFail
          Date: 2000-01-23T04:56:07.000+00:00
          Name: Name
        - Score: 5
          Description: Description
          PassThreshold: 3
          Issues:
          - Description: Description
            UserName: UserName
            Persistent: false
            Id: 2
            Attachments:
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 7
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 7
            Date: 2000-01-23T04:56:07.000+00:00
          - Description: Description
            UserName: UserName
            Persistent: false
            Id: 2
            Attachments:
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 7
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 7
            Date: 2000-01-23T04:56:07.000+00:00
          CheckListItemImpact: CheckListItemImpact
          StatisticItems:
          - Score: 7
            CommentsCount: 6
            CheckListItemId: 4
            Range:
            - 1
            - 1
            Date: 2000-01-23T04:56:07.000+00:00
            System: 1
            WorkOrdersCount: 1
            AttachmentsCount: 7
            QuantityCount: 1
          - Score: 7
            CommentsCount: 6
            CheckListItemId: 4
            Range:
            - 1
            - 1
            Date: 2000-01-23T04:56:07.000+00:00
            System: 1
            WorkOrdersCount: 1
            AttachmentsCount: 7
            QuantityCount: 1
          Quantity:
            Value: 9
            Unit: Unit
          Unlisted: false
          Range:
          - 2
          - 2
          System: PassFail
          Date: 2000-01-23T04:56:07.000+00:00
          Name: Name
        Name: Name
      properties:
        Name:
          type: string
        Unlisted:
          default: false
          type: boolean
        SortOrder:
          format: int32
          type: integer
        CheckListItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemExternal'
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.CheckListItemExternal:
      example:
        Score: 5
        Description: Description
        PassThreshold: 3
        Issues:
        - Description: Description
          UserName: UserName
          Persistent: false
          Id: 2
          Attachments:
          - ContentUrl: ContentUrl
            RemoteName: RemoteName
            RemoteNameResized: RemoteNameResized
            ContentUrlResized: ContentUrlResized
            FileName: FileName
            Id: 7
          - ContentUrl: ContentUrl
            RemoteName: RemoteName
            RemoteNameResized: RemoteNameResized
            ContentUrlResized: ContentUrlResized
            FileName: FileName
            Id: 7
          Date: 2000-01-23T04:56:07.000+00:00
        - Description: Description
          UserName: UserName
          Persistent: false
          Id: 2
          Attachments:
          - ContentUrl: ContentUrl
            RemoteName: RemoteName
            RemoteNameResized: RemoteNameResized
            ContentUrlResized: ContentUrlResized
            FileName: FileName
            Id: 7
          - ContentUrl: ContentUrl
            RemoteName: RemoteName
            RemoteNameResized: RemoteNameResized
            ContentUrlResized: ContentUrlResized
            FileName: FileName
            Id: 7
          Date: 2000-01-23T04:56:07.000+00:00
        CheckListItemImpact: CheckListItemImpact
        StatisticItems:
        - Score: 7
          CommentsCount: 6
          CheckListItemId: 4
          Range:
          - 1
          - 1
          Date: 2000-01-23T04:56:07.000+00:00
          System: 1
          WorkOrdersCount: 1
          AttachmentsCount: 7
          QuantityCount: 1
        - Score: 7
          CommentsCount: 6
          CheckListItemId: 4
          Range:
          - 1
          - 1
          Date: 2000-01-23T04:56:07.000+00:00
          System: 1
          WorkOrdersCount: 1
          AttachmentsCount: 7
          QuantityCount: 1
        Quantity:
          Value: 9
          Unit: Unit
        Unlisted: false
        Range:
        - 2
        - 2
        System: PassFail
        Date: 2000-01-23T04:56:07.000+00:00
        Name: Name
      properties:
        Name:
          type: string
        Description:
          type: string
        Score:
          format: int32
          type: integer
        System:
          enum:
          - PassFail
          - Numeric
          - Weighted
          - Percentage
          type: string
        Date:
          format: date-time
          type: string
        Unlisted:
          default: false
          type: boolean
        Issues:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditIssueExternal'
          type: array
        Quantity:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.QuantityExternal'
        CheckListItemImpact:
          type: string
        PassThreshold:
          format: int32
          type: integer
        Range:
          items:
            format: int32
            type: integer
          type: array
        StatisticItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.CheckListItemStatisticWeightedExternal'
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.CheckListTemplateExternal:
      example:
        SortOrder: 6
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        SortOrder:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.CheckListItemDetailsResponse:
      example:
        Comments:
        - Description: Description
          UserName: UserName
          Persistent: false
          Id: 2
          Attachments:
          - ContentUrl: ContentUrl
            RemoteName: RemoteName
            RemoteNameResized: RemoteNameResized
            ContentUrlResized: ContentUrlResized
            FileName: FileName
            Id: 7
          - ContentUrl: ContentUrl
            RemoteName: RemoteName
            RemoteNameResized: RemoteNameResized
            ContentUrlResized: ContentUrlResized
            FileName: FileName
            Id: 7
          Date: 2000-01-23T04:56:07.000+00:00
        - Description: Description
          UserName: UserName
          Persistent: false
          Id: 2
          Attachments:
          - ContentUrl: ContentUrl
            RemoteName: RemoteName
            RemoteNameResized: RemoteNameResized
            ContentUrlResized: ContentUrlResized
            FileName: FileName
            Id: 7
          - ContentUrl: ContentUrl
            RemoteName: RemoteName
            RemoteNameResized: RemoteNameResized
            ContentUrlResized: ContentUrlResized
            FileName: FileName
            Id: 7
          Date: 2000-01-23T04:56:07.000+00:00
        Workorders:
        - Description: Description
          Priority: Priority
          ProblemCode: ProblemCode
          ScheduledDate: 2000-01-23T04:56:07.000+00:00
          Id: 6
        - Description: Description
          Priority: Priority
          ProblemCode: ProblemCode
          ScheduledDate: 2000-01-23T04:56:07.000+00:00
          Id: 6
        Quantity:
          Value: 9
          Unit: Unit
        CheckListItemId: 0
      properties:
        CheckListItemId:
          format: int32
          type: integer
        Workorders:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.WorkOrder'
          type: array
        Comments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditIssueExternal'
          type: array
        Quantity:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.QuantityExternal'
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.WorkOrder:
      example:
        Description: Description
        Priority: Priority
        ProblemCode: ProblemCode
        ScheduledDate: 2000-01-23T04:56:07.000+00:00
        Id: 6
      properties:
        Id:
          format: int32
          type: integer
        ProblemCode:
          type: string
        Priority:
          type: string
        ScheduledDate:
          format: date-time
          type: string
        Description:
          type: string
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.CompletedAuditListResponse:
      example:
        CompletedAudits:
        - StartDate: 2000-01-23T04:56:07.000+00:00
          UserName: UserName
          LocationId: 2
          TemplateTypeId: 7
          Id: 5
          EndDate: 2000-01-23T04:56:07.000+00:00
        - StartDate: 2000-01-23T04:56:07.000+00:00
          UserName: UserName
          LocationId: 2
          TemplateTypeId: 7
          Id: 5
          EndDate: 2000-01-23T04:56:07.000+00:00
        UserName: UserName
        TemplateTypes:
        - SubscriberId: 5
          Id: 1
          Name: Name
        - SubscriberId: 5
          Id: 1
          Name: Name
        Locations:
        - Zip: Zip
          StoreId: StoreId
          Address: Address
          SubscriberId: 6
          State: State
          Country: Country
          ShortName: ShortName
          Id: 0
          City: City
          Name: Name
        - Zip: Zip
          StoreId: StoreId
          Address: Address
          SubscriberId: 6
          State: State
          Country: Country
          ShortName: ShortName
          Id: 0
          City: City
          Name: Name
      properties:
        UserName:
          type: string
        Locations:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.LocationExternal'
          type: array
        TemplateTypes:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditTypeExternal'
          type: array
        CompletedAudits:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditInfoExternal'
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.LocationExternal:
      example:
        Zip: Zip
        StoreId: StoreId
        Address: Address
        SubscriberId: 6
        State: State
        Country: Country
        ShortName: ShortName
        Id: 0
        City: City
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        StoreId:
          type: string
        Name:
          type: string
        ShortName:
          type: string
        Address:
          type: string
        City:
          type: string
        State:
          type: string
        Country:
          type: string
        Zip:
          type: string
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.AuditTypeExternal:
      example:
        SubscriberId: 5
        Id: 1
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        Name:
          type: string
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.AuditInfoExternal:
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        UserName: UserName
        LocationId: 2
        TemplateTypeId: 7
        Id: 5
        EndDate: 2000-01-23T04:56:07.000+00:00
      properties:
        Id:
          format: int32
          type: integer
        LocationId:
          format: int32
          type: integer
        StartDate:
          format: date-time
          type: string
        EndDate:
          format: date-time
          type: string
        TemplateTypeId:
          format: int32
          type: integer
        UserName:
          type: string
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.AuditReportExternal:
      description: "The site audit report object. Depending on the features enabled\
        \ for your company, the object structure may differ from the example below."
      example:
        Status: Status
        UserName: UserName
        CheckListItemName: CheckListItemName
        RatingSystem: RatingSystem
        TemplateTypeName: TemplateTypeName
        CheckListItemId: 5
        Unit: Unit
        CheckListDate: 2000-01-23T04:56:07.000+00:00
        LocationName: LocationName
        CheckListName: CheckListName
        AreaName: AreaName
        CheckListItemDescription: CheckListItemDescription
        AuditFinishDate: 2000-01-23T04:56:07.000+00:00
        Score: 6
        StoreId: StoreId
        PassThreshold: 1
        AuditId: 0
        Region: Region
        CheckListItemQuantity: CheckListItemQuantity
        TimeOffset: 5
        District: District
        AuditIssues:
        - IssueDescription: IssueDescription
          AttachmentPaths:
          - AttachmentPaths
          - AttachmentPaths
          IssueType: IssueType
          WorkOrderPriority: WorkOrderPriority
          IssueId: 2
          Date: 2000-01-23T04:56:07.000+00:00
        - IssueDescription: IssueDescription
          AttachmentPaths:
          - AttachmentPaths
          - AttachmentPaths
          IssueType: IssueType
          WorkOrderPriority: WorkOrderPriority
          IssueId: 2
          Date: 2000-01-23T04:56:07.000+00:00
        AuditStartDate: 2000-01-23T04:56:07.000+00:00
      properties:
        TemplateTypeName:
          description: The site audit type.
          type: string
        AuditId:
          description: The numeric identifier of the site audit report.
          format: int32
          type: integer
        StoreId:
          description: The internal identifier of the subscriber’s property.
          type: string
        LocationName:
          description: The name of the subscriber’s property.
          type: string
        Region:
          description: The region where the property is located.
          type: string
        District:
          description: The district where the property is located.
          type: string
        AreaName:
          description: The name of the audited area within the location.
          type: string
        CheckListName:
          description: The name of the checklist.
          type: string
        CheckListItemName:
          description: The name of the checklist item inspected by the auditor.
          type: string
        CheckListItemDescription:
          description: Detailed instructions for the auditor on how to check or rate
            the checklist item.
          type: string
        Status:
          description: This field is obsolete. Use field "Score" with "PassThreshold"
            and "RatingSystem" fields  please.
          type: string
        Score:
          description: The score that the auditor gave on the checklist item
          format: int32
          type: integer
        PassThreshold:
          description: Pass threshold
          format: int32
          type: integer
        RatingSystem:
          description: Rating system
          type: string
        CheckListItemQuantity:
          description: The quantity of the checklist item or its cost in dollars depending
            on the `Unit`.
          type: string
        Unit:
          description: "The unit of measure of the checklist item: `Quantity` or `Dollars`."
          type: string
        CheckListDate:
          description: The date and time when the auditor completed the audit of the
            checklist item.
          format: date-time
          type: string
        TimeOffset:
          description: "The UTC offset, or the difference in hours from the UTC time."
          format: int32
          type: integer
        UserName:
          description: The username of the auditor who uploaded the completed audit.
          type: string
        CheckListItemId:
          description: The numeric identifier of the checklist item.
          format: int32
          type: integer
        AuditStartDate:
          description: The date and time when the auditor started the site audit.
          format: date-time
          type: string
        AuditFinishDate:
          description: The date and time when the auditor completed the site audit.
          format: date-time
          type: string
        AuditIssues:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.SiteAudit.AuditReportIssueExternal'
          type: array
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.AuditReportIssueExternal:
      description: The details of issues created by the auditor for the inspected
        checklist item. Issues are also known as action items.
      example:
        IssueDescription: IssueDescription
        AttachmentPaths:
        - AttachmentPaths
        - AttachmentPaths
        IssueType: IssueType
        WorkOrderPriority: WorkOrderPriority
        IssueId: 2
        Date: 2000-01-23T04:56:07.000+00:00
      properties:
        IssueType:
          description: "The type of the action item, either `WO` or `Comment`."
          type: string
        IssueDescription:
          description: "`Comment type`: auditor's comment added to the action item\
            \ or its attachment. `WO type`: work order description that includes the\
            \ area, problem type, asset, problem, and auditor’s description of the\
            \ problem."
          type: string
        AttachmentPaths:
          description: The paths to the attachments added to the checklist item.
          items:
            type: string
          type: array
        IssueId:
          description: "`Comment type`: numeric identifier of the action item. `WO\
            \ type`: numeric identifier of the work order, also known as WO tracking\
            \ number."
          format: int32
          type: integer
        WorkOrderPriority:
          description: The name of the work order priority if the action item belongs
            to the WO type.
          type: string
        Date:
          description: The date and time when the auditor created the action item.
          format: date-time
          type: string
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfoExternal:
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        StoreId: 6
        UserId: 1
        TemplateTypeId: 5
        Id: 0
        FinishDate: 2000-01-23T04:56:07.000+00:00
        FinishDateStr: FinishDateStr
        Areas:
        - CheckLists:
          - SortOrder: 9
            Id: 7
            Unlisted: false
            CheckListItems:
            - Description: Description
              UseNumericRatingSystem: false
              CheckListItemImpact: CheckListItemImpact
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              Quantity:
                Value: 1
                Id: 7
                Unit: Unit
              Unlisted: false
              Range:
              - 1
              - 1
              System: 4
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
              Score: 2
              PassThreshold: 7
              WorkOrderIds:
              - 6
              - 6
              Id: 3
              DateStr: DateStr
            - Description: Description
              UseNumericRatingSystem: false
              CheckListItemImpact: CheckListItemImpact
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              Quantity:
                Value: 1
                Id: 7
                Unit: Unit
              Unlisted: false
              Range:
              - 1
              - 1
              System: 4
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
              Score: 2
              PassThreshold: 7
              WorkOrderIds:
              - 6
              - 6
              Id: 3
              DateStr: DateStr
            Name: Name
          - SortOrder: 9
            Id: 7
            Unlisted: false
            CheckListItems:
            - Description: Description
              UseNumericRatingSystem: false
              CheckListItemImpact: CheckListItemImpact
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              Quantity:
                Value: 1
                Id: 7
                Unit: Unit
              Unlisted: false
              Range:
              - 1
              - 1
              System: 4
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
              Score: 2
              PassThreshold: 7
              WorkOrderIds:
              - 6
              - 6
              Id: 3
              DateStr: DateStr
            - Description: Description
              UseNumericRatingSystem: false
              CheckListItemImpact: CheckListItemImpact
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              Quantity:
                Value: 1
                Id: 7
                Unit: Unit
              Unlisted: false
              Range:
              - 1
              - 1
              System: 4
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
              Score: 2
              PassThreshold: 7
              WorkOrderIds:
              - 6
              - 6
              Id: 3
              DateStr: DateStr
            Name: Name
          SortOrder: 2
          Id: 5
          Name: Name
        - CheckLists:
          - SortOrder: 9
            Id: 7
            Unlisted: false
            CheckListItems:
            - Description: Description
              UseNumericRatingSystem: false
              CheckListItemImpact: CheckListItemImpact
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              Quantity:
                Value: 1
                Id: 7
                Unit: Unit
              Unlisted: false
              Range:
              - 1
              - 1
              System: 4
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
              Score: 2
              PassThreshold: 7
              WorkOrderIds:
              - 6
              - 6
              Id: 3
              DateStr: DateStr
            - Description: Description
              UseNumericRatingSystem: false
              CheckListItemImpact: CheckListItemImpact
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              Quantity:
                Value: 1
                Id: 7
                Unit: Unit
              Unlisted: false
              Range:
              - 1
              - 1
              System: 4
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
              Score: 2
              PassThreshold: 7
              WorkOrderIds:
              - 6
              - 6
              Id: 3
              DateStr: DateStr
            Name: Name
          - SortOrder: 9
            Id: 7
            Unlisted: false
            CheckListItems:
            - Description: Description
              UseNumericRatingSystem: false
              CheckListItemImpact: CheckListItemImpact
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              Quantity:
                Value: 1
                Id: 7
                Unit: Unit
              Unlisted: false
              Range:
              - 1
              - 1
              System: 4
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
              Score: 2
              PassThreshold: 7
              WorkOrderIds:
              - 6
              - 6
              Id: 3
              DateStr: DateStr
            - Description: Description
              UseNumericRatingSystem: false
              CheckListItemImpact: CheckListItemImpact
              Issues:
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              - Description: Description
                UserName: UserName
                Persistent: false
                Id: 1
                DateStr: DateStr
                Attachments:
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                - ContentUrl: ContentUrl
                  RemoteName: RemoteName
                  RemoteNameResized: RemoteNameResized
                  ContentType: ContentType
                  ContentUrlResized: ContentUrlResized
                  FileName: FileName
                  Id: 1
                Date: 2000-01-23T04:56:07.000+00:00
              Quantity:
                Value: 1
                Id: 7
                Unit: Unit
              Unlisted: false
              Range:
              - 1
              - 1
              System: 4
              Date: 2000-01-23T04:56:07.000+00:00
              Name: Name
              Score: 2
              PassThreshold: 7
              WorkOrderIds:
              - 6
              - 6
              Id: 3
              DateStr: DateStr
            Name: Name
          SortOrder: 2
          Id: 5
          Name: Name
      properties:
        Id:
          format: int32
          type: integer
        StoreId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        TemplateTypeId:
          format: int32
          type: integer
        StartDate:
          format: date-time
          type: string
        FinishDate:
          format: date-time
          type: string
        FinishDateStr:
          type: string
        Areas:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditAreaExternal'
          type: array
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedAuditAreaExternal:
      example:
        CheckLists:
        - SortOrder: 9
          Id: 7
          Unlisted: false
          CheckListItems:
          - Description: Description
            UseNumericRatingSystem: false
            CheckListItemImpact: CheckListItemImpact
            Issues:
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 1
              DateStr: DateStr
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              Date: 2000-01-23T04:56:07.000+00:00
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 1
              DateStr: DateStr
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              Date: 2000-01-23T04:56:07.000+00:00
            Quantity:
              Value: 1
              Id: 7
              Unit: Unit
            Unlisted: false
            Range:
            - 1
            - 1
            System: 4
            Date: 2000-01-23T04:56:07.000+00:00
            Name: Name
            Score: 2
            PassThreshold: 7
            WorkOrderIds:
            - 6
            - 6
            Id: 3
            DateStr: DateStr
          - Description: Description
            UseNumericRatingSystem: false
            CheckListItemImpact: CheckListItemImpact
            Issues:
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 1
              DateStr: DateStr
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              Date: 2000-01-23T04:56:07.000+00:00
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 1
              DateStr: DateStr
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              Date: 2000-01-23T04:56:07.000+00:00
            Quantity:
              Value: 1
              Id: 7
              Unit: Unit
            Unlisted: false
            Range:
            - 1
            - 1
            System: 4
            Date: 2000-01-23T04:56:07.000+00:00
            Name: Name
            Score: 2
            PassThreshold: 7
            WorkOrderIds:
            - 6
            - 6
            Id: 3
            DateStr: DateStr
          Name: Name
        - SortOrder: 9
          Id: 7
          Unlisted: false
          CheckListItems:
          - Description: Description
            UseNumericRatingSystem: false
            CheckListItemImpact: CheckListItemImpact
            Issues:
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 1
              DateStr: DateStr
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              Date: 2000-01-23T04:56:07.000+00:00
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 1
              DateStr: DateStr
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              Date: 2000-01-23T04:56:07.000+00:00
            Quantity:
              Value: 1
              Id: 7
              Unit: Unit
            Unlisted: false
            Range:
            - 1
            - 1
            System: 4
            Date: 2000-01-23T04:56:07.000+00:00
            Name: Name
            Score: 2
            PassThreshold: 7
            WorkOrderIds:
            - 6
            - 6
            Id: 3
            DateStr: DateStr
          - Description: Description
            UseNumericRatingSystem: false
            CheckListItemImpact: CheckListItemImpact
            Issues:
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 1
              DateStr: DateStr
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              Date: 2000-01-23T04:56:07.000+00:00
            - Description: Description
              UserName: UserName
              Persistent: false
              Id: 1
              DateStr: DateStr
              Attachments:
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              - ContentUrl: ContentUrl
                RemoteName: RemoteName
                RemoteNameResized: RemoteNameResized
                ContentType: ContentType
                ContentUrlResized: ContentUrlResized
                FileName: FileName
                Id: 1
              Date: 2000-01-23T04:56:07.000+00:00
            Quantity:
              Value: 1
              Id: 7
              Unit: Unit
            Unlisted: false
            Range:
            - 1
            - 1
            System: 4
            Date: 2000-01-23T04:56:07.000+00:00
            Name: Name
            Score: 2
            PassThreshold: 7
            WorkOrderIds:
            - 6
            - 6
            Id: 3
            DateStr: DateStr
          Name: Name
        SortOrder: 2
        Id: 5
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        SortOrder:
          format: int32
          type: integer
        CheckLists:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedCheckListExternal'
          type: array
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedCheckListExternal:
      example:
        SortOrder: 9
        Id: 7
        Unlisted: false
        CheckListItems:
        - Description: Description
          UseNumericRatingSystem: false
          CheckListItemImpact: CheckListItemImpact
          Issues:
          - Description: Description
            UserName: UserName
            Persistent: false
            Id: 1
            DateStr: DateStr
            Attachments:
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentType: ContentType
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 1
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentType: ContentType
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 1
            Date: 2000-01-23T04:56:07.000+00:00
          - Description: Description
            UserName: UserName
            Persistent: false
            Id: 1
            DateStr: DateStr
            Attachments:
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentType: ContentType
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 1
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentType: ContentType
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 1
            Date: 2000-01-23T04:56:07.000+00:00
          Quantity:
            Value: 1
            Id: 7
            Unit: Unit
          Unlisted: false
          Range:
          - 1
          - 1
          System: 4
          Date: 2000-01-23T04:56:07.000+00:00
          Name: Name
          Score: 2
          PassThreshold: 7
          WorkOrderIds:
          - 6
          - 6
          Id: 3
          DateStr: DateStr
        - Description: Description
          UseNumericRatingSystem: false
          CheckListItemImpact: CheckListItemImpact
          Issues:
          - Description: Description
            UserName: UserName
            Persistent: false
            Id: 1
            DateStr: DateStr
            Attachments:
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentType: ContentType
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 1
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentType: ContentType
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 1
            Date: 2000-01-23T04:56:07.000+00:00
          - Description: Description
            UserName: UserName
            Persistent: false
            Id: 1
            DateStr: DateStr
            Attachments:
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentType: ContentType
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 1
            - ContentUrl: ContentUrl
              RemoteName: RemoteName
              RemoteNameResized: RemoteNameResized
              ContentType: ContentType
              ContentUrlResized: ContentUrlResized
              FileName: FileName
              Id: 1
            Date: 2000-01-23T04:56:07.000+00:00
          Quantity:
            Value: 1
            Id: 7
            Unit: Unit
          Unlisted: false
          Range:
          - 1
          - 1
          System: 4
          Date: 2000-01-23T04:56:07.000+00:00
          Name: Name
          Score: 2
          PassThreshold: 7
          WorkOrderIds:
          - 6
          - 6
          Id: 3
          DateStr: DateStr
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Unlisted:
          default: false
          type: boolean
        SortOrder:
          format: int32
          type: integer
        CheckListItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedCheckListItemExternal'
          type: array
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedCheckListItemExternal:
      example:
        Description: Description
        UseNumericRatingSystem: false
        CheckListItemImpact: CheckListItemImpact
        Issues:
        - Description: Description
          UserName: UserName
          Persistent: false
          Id: 1
          DateStr: DateStr
          Attachments:
          - ContentUrl: ContentUrl
            RemoteName: RemoteName
            RemoteNameResized: RemoteNameResized
            ContentType: ContentType
            ContentUrlResized: ContentUrlResized
            FileName: FileName
            Id: 1
          - ContentUrl: ContentUrl
            RemoteName: RemoteName
            RemoteNameResized: RemoteNameResized
            ContentType: ContentType
            ContentUrlResized: ContentUrlResized
            FileName: FileName
            Id: 1
          Date: 2000-01-23T04:56:07.000+00:00
        - Description: Description
          UserName: UserName
          Persistent: false
          Id: 1
          DateStr: DateStr
          Attachments:
          - ContentUrl: ContentUrl
            RemoteName: RemoteName
            RemoteNameResized: RemoteNameResized
            ContentType: ContentType
            ContentUrlResized: ContentUrlResized
            FileName: FileName
            Id: 1
          - ContentUrl: ContentUrl
            RemoteName: RemoteName
            RemoteNameResized: RemoteNameResized
            ContentType: ContentType
            ContentUrlResized: ContentUrlResized
            FileName: FileName
            Id: 1
          Date: 2000-01-23T04:56:07.000+00:00
        Quantity:
          Value: 1
          Id: 7
          Unit: Unit
        Unlisted: false
        Range:
        - 1
        - 1
        System: 4
        Date: 2000-01-23T04:56:07.000+00:00
        Name: Name
        Score: 2
        PassThreshold: 7
        WorkOrderIds:
        - 6
        - 6
        Id: 3
        DateStr: DateStr
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Description:
          type: string
        Score:
          format: int32
          type: integer
        System:
          format: int32
          type: integer
        Date:
          format: date-time
          type: string
        DateStr:
          type: string
        Unlisted:
          default: false
          type: boolean
        CheckListItemImpact:
          type: string
        UseNumericRatingSystem:
          default: false
          type: boolean
        PassThreshold:
          format: int32
          type: integer
        Range:
          items:
            format: int32
            type: integer
          type: array
        Issues:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssueExternal'
          type: array
        WorkOrderIds:
          items:
            format: int32
            type: integer
          type: array
        Quantity:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditQuantityExternal'
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssueExternal:
      example:
        Description: Description
        UserName: UserName
        Persistent: false
        Id: 1
        DateStr: DateStr
        Attachments:
        - ContentUrl: ContentUrl
          RemoteName: RemoteName
          RemoteNameResized: RemoteNameResized
          ContentType: ContentType
          ContentUrlResized: ContentUrlResized
          FileName: FileName
          Id: 1
        - ContentUrl: ContentUrl
          RemoteName: RemoteName
          RemoteNameResized: RemoteNameResized
          ContentType: ContentType
          ContentUrlResized: ContentUrlResized
          FileName: FileName
          Id: 1
        Date: 2000-01-23T04:56:07.000+00:00
      properties:
        Id:
          format: int32
          type: integer
        Date:
          format: date-time
          type: string
        DateStr:
          type: string
        Description:
          type: string
        Persistent:
          default: false
          type: boolean
        UserName:
          type: string
        Attachments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssueAttachmentExternal'
          type: array
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedAuditQuantityExternal:
      example:
        Value: 1
        Id: 7
        Unit: Unit
      properties:
        Id:
          format: int32
          type: integer
        Value:
          format: int32
          type: integer
        Unit:
          type: string
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssueAttachmentExternal:
      example:
        ContentUrl: ContentUrl
        RemoteName: RemoteName
        RemoteNameResized: RemoteNameResized
        ContentType: ContentType
        ContentUrlResized: ContentUrlResized
        FileName: FileName
        Id: 1
      properties:
        Id:
          format: int32
          type: integer
        FileName:
          type: string
        RemoteName:
          type: string
        RemoteNameResized:
          type: string
        ContentType:
          type: string
        ContentUrl:
          type: string
        ContentUrlResized:
          type: string
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfo:
      properties:
        Id:
          format: int32
          type: integer
        StoreId:
          format: int32
          type: integer
        TemplateTypeId:
          format: int32
          type: integer
        StartDate:
          format: date-time
          type: string
        Emails:
          type: string
        Language:
          type: string
        Areas:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditArea'
          type: array
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedAuditArea:
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        SortOrder:
          format: int32
          type: integer
        CheckLists:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedCheckList'
          type: array
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedCheckList:
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Unlisted:
          default: false
          type: boolean
        SortOrder:
          format: int32
          type: integer
        CheckListItems:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedCheckListItem'
          type: array
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedCheckListItem:
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Description:
          type: string
        Score:
          format: int32
          type: integer
        System:
          format: int32
          type: integer
        Date:
          format: date-time
          type: string
        Unlisted:
          default: false
          type: boolean
        CheckListItemImpact:
          type: string
        UseNumericRatingSystem:
          default: false
          type: boolean
        PassThreshold:
          format: int32
          type: integer
        Range:
          items:
            format: int32
            type: integer
          type: array
        Issues:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssue'
          type: array
        WorkOrderIds:
          items:
            format: int32
            type: integer
          type: array
        Quantity:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditQuantity'
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssue:
      properties:
        Id:
          format: int32
          type: integer
        Date:
          format: date-time
          type: string
        Description:
          type: string
        Persistent:
          default: false
          type: boolean
        Attachments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssueAttachment'
          type: array
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedAuditQuantity:
      properties:
        Id:
          format: int32
          type: integer
        Value:
          format: int32
          type: integer
        Unit:
          type: string
      type: object
    ServiceChannel.Api.Model.SiteAudit.CompletedAuditIssueAttachment:
      properties:
        Id:
          format: int32
          type: integer
        RemoteName:
          type: string
        RemoteNameResized:
          type: string
        FileName:
          type: string
      type: object
    ServiceChannel.Services.Messaging.SiteAudit.UpdatedCompletedAuditResponse:
      example:
        IsSuccess: false
        UpdatedCompletedAudit:
          StartDate: 2000-01-23T04:56:07.000+00:00
          StoreId: 6
          UserId: 1
          TemplateTypeId: 5
          Id: 0
          FinishDate: 2000-01-23T04:56:07.000+00:00
          FinishDateStr: FinishDateStr
          Areas:
          - CheckLists:
            - SortOrder: 9
              Id: 7
              Unlisted: false
              CheckListItems:
              - Description: Description
                UseNumericRatingSystem: false
                CheckListItemImpact: CheckListItemImpact
                Issues:
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                Quantity:
                  Value: 1
                  Id: 7
                  Unit: Unit
                Unlisted: false
                Range:
                - 1
                - 1
                System: 4
                Date: 2000-01-23T04:56:07.000+00:00
                Name: Name
                Score: 2
                PassThreshold: 7
                WorkOrderIds:
                - 6
                - 6
                Id: 3
                DateStr: DateStr
              - Description: Description
                UseNumericRatingSystem: false
                CheckListItemImpact: CheckListItemImpact
                Issues:
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                Quantity:
                  Value: 1
                  Id: 7
                  Unit: Unit
                Unlisted: false
                Range:
                - 1
                - 1
                System: 4
                Date: 2000-01-23T04:56:07.000+00:00
                Name: Name
                Score: 2
                PassThreshold: 7
                WorkOrderIds:
                - 6
                - 6
                Id: 3
                DateStr: DateStr
              Name: Name
            - SortOrder: 9
              Id: 7
              Unlisted: false
              CheckListItems:
              - Description: Description
                UseNumericRatingSystem: false
                CheckListItemImpact: CheckListItemImpact
                Issues:
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                Quantity:
                  Value: 1
                  Id: 7
                  Unit: Unit
                Unlisted: false
                Range:
                - 1
                - 1
                System: 4
                Date: 2000-01-23T04:56:07.000+00:00
                Name: Name
                Score: 2
                PassThreshold: 7
                WorkOrderIds:
                - 6
                - 6
                Id: 3
                DateStr: DateStr
              - Description: Description
                UseNumericRatingSystem: false
                CheckListItemImpact: CheckListItemImpact
                Issues:
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                Quantity:
                  Value: 1
                  Id: 7
                  Unit: Unit
                Unlisted: false
                Range:
                - 1
                - 1
                System: 4
                Date: 2000-01-23T04:56:07.000+00:00
                Name: Name
                Score: 2
                PassThreshold: 7
                WorkOrderIds:
                - 6
                - 6
                Id: 3
                DateStr: DateStr
              Name: Name
            SortOrder: 2
            Id: 5
            Name: Name
          - CheckLists:
            - SortOrder: 9
              Id: 7
              Unlisted: false
              CheckListItems:
              - Description: Description
                UseNumericRatingSystem: false
                CheckListItemImpact: CheckListItemImpact
                Issues:
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                Quantity:
                  Value: 1
                  Id: 7
                  Unit: Unit
                Unlisted: false
                Range:
                - 1
                - 1
                System: 4
                Date: 2000-01-23T04:56:07.000+00:00
                Name: Name
                Score: 2
                PassThreshold: 7
                WorkOrderIds:
                - 6
                - 6
                Id: 3
                DateStr: DateStr
              - Description: Description
                UseNumericRatingSystem: false
                CheckListItemImpact: CheckListItemImpact
                Issues:
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                Quantity:
                  Value: 1
                  Id: 7
                  Unit: Unit
                Unlisted: false
                Range:
                - 1
                - 1
                System: 4
                Date: 2000-01-23T04:56:07.000+00:00
                Name: Name
                Score: 2
                PassThreshold: 7
                WorkOrderIds:
                - 6
                - 6
                Id: 3
                DateStr: DateStr
              Name: Name
            - SortOrder: 9
              Id: 7
              Unlisted: false
              CheckListItems:
              - Description: Description
                UseNumericRatingSystem: false
                CheckListItemImpact: CheckListItemImpact
                Issues:
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                Quantity:
                  Value: 1
                  Id: 7
                  Unit: Unit
                Unlisted: false
                Range:
                - 1
                - 1
                System: 4
                Date: 2000-01-23T04:56:07.000+00:00
                Name: Name
                Score: 2
                PassThreshold: 7
                WorkOrderIds:
                - 6
                - 6
                Id: 3
                DateStr: DateStr
              - Description: Description
                UseNumericRatingSystem: false
                CheckListItemImpact: CheckListItemImpact
                Issues:
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                - Description: Description
                  UserName: UserName
                  Persistent: false
                  Id: 1
                  DateStr: DateStr
                  Attachments:
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  - ContentUrl: ContentUrl
                    RemoteName: RemoteName
                    RemoteNameResized: RemoteNameResized
                    ContentType: ContentType
                    ContentUrlResized: ContentUrlResized
                    FileName: FileName
                    Id: 1
                  Date: 2000-01-23T04:56:07.000+00:00
                Quantity:
                  Value: 1
                  Id: 7
                  Unit: Unit
                Unlisted: false
                Range:
                - 1
                - 1
                System: 4
                Date: 2000-01-23T04:56:07.000+00:00
                Name: Name
                Score: 2
                PassThreshold: 7
                WorkOrderIds:
                - 6
                - 6
                Id: 3
                DateStr: DateStr
              Name: Name
            SortOrder: 2
            Id: 5
            Name: Name
        Sent: Sent
      properties:
        IsSuccess:
          default: false
          type: boolean
        UpdatedCompletedAudit:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.SiteAudit.CompletedAuditInfoExternal'
        Sent:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Trade.GetSubscriberTradesResponse:
      example:
        Trades:
          key: Trades
      properties:
        Trades:
          additionalProperties:
            type: string
          type: object
      type: object
    ServiceChannel.Services.Messaging.Subscribers.RegisterSubscriberRequest:
      description: RegisterSubscriberRequest
      properties:
        Name:
          description: "Required Name\r\n            Name - name of the subscriber"
          type: string
        Address1:
          description: Subscriber Address1
          type: string
        Address2:
          description: Subscriber Address2
          type: string
        Country:
          description: Subscriber Country
          type: string
        State:
          description: Subscriber  State
          type: string
        City:
          description: Subscriber City
          type: string
        Zip:
          description: Subscriber Zip
          type: string
        Email:
          description: Subscriber Email
          type: string
        Phone:
          description: Subscriber Phone
          type: string
        Fax:
          description: Subscriber Fax
          type: string
        ContactName:
          description: Subscriber ContactName
          type: string
        TaxId:
          description: TaxId
          type: string
        IsPersonalTaxId:
          default: false
          description: IsPersonalTaxId
          type: boolean
        SysadminContactFixxbook:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.SysadminContactFixxbook'
        TimeFormat:
          type: string
        DateFormat:
          type: string
        DecimalSeparator:
          type: string
      required:
      - Address1
      - City
      - Country
      - Email
      - IsPersonalTaxId
      - Name
      - Phone
      - State
      - TaxId
      - Zip
      type: object
    ServiceChannel.Services.Messaging.Subscribers.SysadminContactFixxbook:
      description: SysadminContactFixxbook
      properties:
        Name:
          description: Name
          type: string
        JobTitle:
          description: JobTitle
          type: string
        Email:
          description: Email is used for Login in Fixxbook
          type: string
        WorkPhone:
          description: WorkPhone
          type: string
        MobilePhone:
          description: MobilePhone
          type: string
        Fax:
          description: Fax
          type: string
      type: object
    ServiceChannel.Services.Messaging.Subscribers.UpdateSubscriberInfoRequest:
      description: UpdateSubscriberInfoRequest
      properties:
        Name:
          description: "Required Name\r\n            Name - name of the subscriber"
          type: string
        Address1:
          description: Optional
          type: string
        Address2:
          description: Optional
          type: string
        Country:
          description: Optional
          type: string
        State:
          description: Optional
          type: string
        City:
          description: Optional
          type: string
        Zip:
          description: Optional
          type: string
        Email:
          description: Email Required
          type: string
        Phone:
          description: Optional
          type: string
        Fax:
          description: Optional
          type: string
        ContactName:
          description: Optional
          type: string
        TimeFormat:
          type: string
        DateFormat:
          type: string
        DecimalSeparator:
          type: string
      required:
      - Email
      - Name
      type: object
    ServiceChannel.Services.Messaging.Subscribers.GetSubscriberPropertyResponse:
      description: Defines subscriber's property response structure
      example:
        Value: "{}"
        Id: 0
        Name: Name
      properties:
        Id:
          description: Property identifier
          format: int32
          type: integer
        Name:
          description: Property name
          type: string
        Value:
          type: object
      type: object
    ServiceChannel.Services.Messaging.Subscribers.DashboardInfo:
      example:
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsRequest:
      properties:
        SubscriberIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    ServiceChannel.Services.Messaging.Subscribers.GetSubscribersRegionalSettingsResponse:
      example:
        Error: Error
        Data:
        - DecimalSeparator: DecimalSeparator
          CultureName: CultureName
          TimeFormat: TimeFormat
          Language: Language
          SubscriberId: 0
          DateFormat: DateFormat
          LanguageId: 6
        - DecimalSeparator: DecimalSeparator
          CultureName: CultureName
          TimeFormat: TimeFormat
          Language: Language
          SubscriberId: 0
          DateFormat: DateFormat
          LanguageId: 6
      properties:
        Data:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.SubscribersRegionalSettings'
          type: array
        Error:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Subscribers.SubscribersRegionalSettings:
      example:
        DecimalSeparator: DecimalSeparator
        CultureName: CultureName
        TimeFormat: TimeFormat
        Language: Language
        SubscriberId: 0
        DateFormat: DateFormat
        LanguageId: 6
      properties:
        SubscriberId:
          format: int32
          type: integer
        LanguageId:
          format: int32
          type: integer
        Language:
          type: string
        CultureName:
          type: string
        DateFormat:
          type: string
        TimeFormat:
          type: string
        DecimalSeparator:
          type: string
      type: object
    ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyQuestionWithAnswers:
      example:
        SurveyAnswers:
        - Answer: Answer
          SortOrder: 5
          Id: 5
        - Answer: Answer
          SortOrder: 5
          Id: 5
        SurveyQuestion:
          SubscriberId: 6
          UserId: 1
          Question: Question
          Id: 0
          Disabled: false
      properties:
        SurveyQuestion:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyQuestion'
        SurveyAnswers:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyAnswer'
          type: array
      type: object
    ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyQuestion:
      example:
        SubscriberId: 6
        UserId: 1
        Question: Question
        Id: 0
        Disabled: false
      properties:
        Question:
          type: string
        Disabled:
          default: false
          type: boolean
        Id:
          format: int32
          type: integer
        SubscriberId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyAnswer:
      example:
        Answer: Answer
        SortOrder: 5
        Id: 5
      properties:
        Id:
          format: int32
          type: integer
        Answer:
          type: string
        SortOrder:
          format: int32
          type: integer
      type: object
    ServiceChannel.Api.Model.Entities.SurveyQuestions.SurveyAnsweredQuestion:
      properties:
        WorkorderId:
          format: int32
          type: integer
        QuestionId:
          format: int32
          type: integer
        AnswerId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.SurveyQuestion.WorkorderAnsweredQuestionResponse:
      example:
        Answer: Answer
        Question: Question
      properties:
        Question:
          type: string
        Answer:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Template.GetTemplateFilesHistoriesRequest:
      description: holds request
      properties:
        FileTypeIds:
          description: Gets or sets FileTypeId.
          items:
            format: int32
            type: integer
          type: array
        Sort:
          description: Sort resources by the specified property in the response.
          type: string
        Page:
          description: Results page number.
          format: int32
          type: integer
        IsPageSizeDefault:
          default: false
          readOnly: true
          type: boolean
        PageSize:
          description: Number of objects on the results page. The default and maximum
            per page is 50.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Template.GetTemplateFilesHistoriesResponse:
      description: holds response
      example:
        TemplateFilesHistories:
        - FilePath: FilePath
          Description: Description
          FileStatus: 6
          CreatedRecords: 5
          FileName: FileName
          DeletedRecords: 7
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          ModifiedBy: ModifiedBy
          FileType: 1
          SubscriberId: 2
          UpdatedRecords: 5
          Id: 0
          ErrorMessage: ErrorMessage
        - FilePath: FilePath
          Description: Description
          FileStatus: 6
          CreatedRecords: 5
          FileName: FileName
          DeletedRecords: 7
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          ModifiedBy: ModifiedBy
          FileType: 1
          SubscriberId: 2
          UpdatedRecords: 5
          Id: 0
          ErrorMessage: ErrorMessage
        Message: Message
        ErrorCode: 3
        ItemsCount: 9
      properties:
        TemplateFilesHistories:
          description: Gets or sets Trades.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Template.TemplateFilesHistory'
          type: array
        ItemsCount:
          description: Gets or sets ItemsCount.
          format: int32
          type: integer
        ErrorCode:
          description: "Numeric identifier that determines the nature of an error.\
            \ Possible values: `0` - success, otherwise - error."
          format: int32
          type: integer
        Message:
          description: Defines that the file’s remote storage is unavailable or its
            URL cannot be found.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Template.TemplateFilesHistory:
      example:
        FilePath: FilePath
        Description: Description
        FileStatus: 6
        CreatedRecords: 5
        FileName: FileName
        DeletedRecords: 7
        ModifiedDate: 2000-01-23T04:56:07.000+00:00
        ModifiedBy: ModifiedBy
        FileType: 1
        SubscriberId: 2
        UpdatedRecords: 5
        Id: 0
        ErrorMessage: ErrorMessage
      properties:
        Id:
          description: Gets or sets Id.
          format: int32
          type: integer
        FilePath:
          description: Gets or sets FilePath.
          type: string
        FileName:
          description: Gets or sets FileName.
          type: string
        Description:
          description: Gets or sets Description.
          type: string
        ErrorMessage:
          description: Gets or sets ErrorMessage.
          type: string
        FileStatus:
          description: Gets or sets FileStatus. 0 - started 1 - processing; 2 - completed;
          format: int32
          type: integer
        FileType:
          description: Gets or sets FileType. 0  - pm_Template file
          format: int32
          type: integer
        ModifiedDate:
          description: Gets or sets ModifiedDate.
          format: date-time
          type: string
        ModifiedBy:
          description: Gets or sets ModifiedBy.
          type: string
        CreatedRecords:
          description: Gets or sets CreatedRecords.
          format: int32
          type: integer
        UpdatedRecords:
          description: Gets or sets UpdatedRecords.
          format: int32
          type: integer
        SubscriberId:
          description: Gets or sets SubscriberId.
          format: int32
          type: integer
        DeletedRecords:
          description: Gets or sets DeletedRecords.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Notifications.TestNotificationRequest:
      properties:
        Url:
          description: The URL to which the test event should be delivered.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Trade.AddTradeRequest:
      description: Add Trade Request
      example:
        PrimaryTrade: PrimaryTrade
        SkipPrimaryTradeCheck: false
        AutoReassign: false
        Nte: 0.8008282
        Name: Name
      properties:
        Name:
          type: string
        Nte:
          format: float
          type: number
        PrimaryTrade:
          type: string
        AutoReassign:
          default: false
          type: boolean
        SkipPrimaryTradeCheck:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Trade.AddTradeResponse:
      description: Add Trade Response
      example:
        Message: Message
        Id: 0
        ErrorCode: 6
      properties:
        Id:
          format: int32
          type: integer
        ErrorCode:
          description: "Numeric identifier that determines the nature of an error.\
            \ Possible values: `0` - success, otherwise - error."
          format: int32
          type: integer
        Message:
          description: Defines that the file’s remote storage is unavailable or its
            URL cannot be found.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesRequest:
      example:
        ProviderId: 6
        LocationId: 0
      properties:
        LocationId:
          format: int32
          type: integer
        ProviderId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Trade.GetLocationProviderTradesResponse:
      properties:
        Id:
          format: int32
          type: integer
        ErrorCode:
          description: "Numeric identifier that determines the nature of an error.\
            \ Possible values: `0` - success, otherwise - error."
          format: int32
          type: integer
        Message:
          description: Defines that the file’s remote storage is unavailable or its
            URL cannot be found.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Trade.TradeWithPrimaryTrade:
      example:
        SubscriberId: 6
        PrimaryTrade: PrimaryTrade
        Id: 0
        Name: Name
      properties:
        PrimaryTrade:
          type: string
        Id:
          description: Numeric identifier of the trade.
          format: int32
          type: integer
        Name:
          description: Trade name.
          type: string
        SubscriberId:
          description: Unique subscriber ID.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Tradesmen.CreateTradesmenProfileRequest:
      properties:
        FullName:
          description: Full name of the technician
          type: string
        CompanyName:
          description: Name of the provider company
          type: string
        FixxbookCompanyId:
          description: Optional.
          format: int32
          type: integer
        MobileNumber:
          description: Mobile number of the technician
          type: string
        Email:
          description: Email of the technician. Must be unique
          type: string
      type: object
    ServiceChannel.Services.Messaging.Trucks.TruckRequest:
      properties:
        TruckId:
          type: string
        Name:
          type: string
        Region:
          type: string
        District:
          type: string
        Make:
          type: string
        Model:
          type: string
        Year:
          type: string
        License:
          type: string
        Vin:
          type: string
        HomestoreLocationId:
          format: int32
          type: integer
        MainContact:
          type: string
        PhoneNumber:
          type: string
        FaxNumber:
          type: string
        Email:
          type: string
        ManagerAuthId:
          format: int64
          type: integer
        InventoryProviderId:
          format: int32
          type: integer
      required:
      - Name
      - TruckId
      type: object
    ServiceChannel.Services.Messaging.Trucks.TechTruckRequest:
      properties:
        AuthTechnicianId:
          format: int64
          type: integer
        TruckId:
          format: int32
          type: integer
        AlternativeTruckDescription:
          type: string
      required:
      - AuthTechnicianId
      type: object
    Twilio.AspNet.Common.SmsRequest:
      properties:
        SmsSid:
          type: string
        Body:
          type: string
        MessageStatus:
          type: string
        AccountSid:
          type: string
        From:
          type: string
        To:
          type: string
        FromCity:
          type: string
        FromState:
          type: string
        FromZip:
          type: string
        FromCountry:
          type: string
        ToCity:
          type: string
        ToState:
          type: string
        ToZip:
          type: string
        ToCountry:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Users.AddUserRequest:
      description: AddUserRequest class definition
      properties:
        UserName:
          description: Gets or sets User name.
          pattern: ^$|(\A\S+).(\S).(\S)\z
          type: string
        Id:
          description: Get or set User's identifier (id)
          format: int32
          type: integer
        InfoSubscriberId:
          description: Gets or sets InfoSubscriberId.
          format: int32
          type: integer
        Password:
          description: Gets or sets Password.
          type: string
        Email:
          description: Gets or sets Email.
          type: string
        LocationAccess:
          description: Gets or sets LocationAccess.
          type: string
        FeedRole:
          description: Gets or sets FeedRole.
          type: string
        User:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
      type: object
    ServiceChannel.Services.Messaging.Users.GetUserResponse:
      description: GetUserResponse class definition
      example:
        InfoSubscriberId: 6
        UserName: UserName
        Email: Email
        User:
          UserName: UserName
          Email: Email
          MlpUserInfo:
            Id: 1
            MlpLevel: MlpLevel
            MlpLocations:
            - 6
            - 6
          Access:
            Trades:
            - Trades
            - Trades
            Locations:
            - Locations
            - Locations
            Districts:
            - Districts
            - Districts
            Regions:
            - Regions
            - Regions
          Dashboard:
            Id: 2
            RedirectToDashboard: false
            Name: Name
          MliUserInfo:
            MliLocations:
            - 1
            - 1
            Id: 1
            MliLevel: MliLevel
          Roles:
          - Roles
          - Roles
          Limits:
            NteLimit:
              Amount: 4.145608029883936
              CurrencyId: 7
            ProposalLimit:
              Amount: 4.145608029883936
              CurrencyId: 7
            InvoiceLimit:
              Amount: 4.145608029883936
              CurrencyId: 7
          SubscriberId: 3
          FullName: FullName
          PsmEmail: PsmEmail
          Permissions:
          - Permissions
          - Permissions
          Id: 9
          Disabled: false
          UserType: Corporate
          FeedRole: FeedRole
        Id: 0
        FeedRole: FeedRole
        LocationAccess: LocationAccess
        Password: Password
      properties:
        Id:
          description: Get User's Id
          format: int32
          type: integer
        InfoSubscriberId:
          description: Get User's SubscriberId
          format: int32
          type: integer
        UserName:
          description: Get User's UserName
          type: string
        Email:
          description: Get User's Email
          type: string
        Password:
          description: Gets or sets Password.
          type: string
        FeedRole:
          description: Get User's FeedRole
          type: string
        LocationAccess:
          description: Get User's LocationAccess
          type: string
        User:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
      type: object
    ServiceChannel.Services.Messaging.Users.UpdateUserRequest:
      description: UpdateUserRequest class definition
      properties:
        Id:
          description: Get or set User's identifier (id)
          format: int32
          type: integer
        InfoSubscriberId:
          description: Gets or sets InfoSubscriberId.
          format: int32
          type: integer
        UserName:
          description: Gets or sets User name.
          type: string
        Password:
          description: Gets or sets Password.
          type: string
        Email:
          description: Gets or sets Email.
          type: string
        LocationAccess:
          description: Gets or sets LocationAccess.
          type: string
        FeedRole:
          description: Gets or sets FeedRole.
          type: string
        User:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.User'
      type: object
    ServiceChannel.Services.Messaging.MenuResponse:
      example:
        LogoUrl: LogoUrl
        LogoHref: LogoHref
        AccountMenu:
          Items:
          - null
          - null
          Id: None
          Url: Url
          Name: Name
        MainMenu:
        - Items:
          - null
          - null
          Id: None
          Url: Url
          Name: Name
        - Items:
          - null
          - null
          Id: None
          Url: Url
          Name: Name
      properties:
        MainMenu:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.MenuItem'
          type: array
        AccountMenu:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.MenuItem'
        LogoUrl:
          type: string
        LogoHref:
          type: string
      type: object
    ServiceChannel.Services.Messaging.MenuItem:
      example:
        Items:
        - null
        - null
        Id: None
        Url: Url
        Name: Name
      properties:
        Name:
          type: string
        Url:
          type: string
        Id:
          enum:
          - None
          - Track_WOPO
          - Console
          - WorkOrders_WorkOrderList
          - Proposals
          - RFPsProposals_CreateProposal
          - RFPsProposals_ViewProposals
          - RFPsProposals_ViewProcessRFP
          - RFPsProposals_ViewProcessBulkRFP
          - RFPsProposals_MySavedProposalReports
          - RFPsProposals_ViewProcessProposals
          - RFPsProposals_CreateRFP
          - Invoices
          - PaymentManager
          - ServiceHealth
          - Home
          - CreateServiceRequest_ServiceRequestDashboard
          - CreateServiceRequest_ClassicServiceRequest
          - WorkOrders_MySavedLiveReports
          - WorkOrders_OpenCallsOnly
          - WorkOrders_InProgressCallsOnly
          - WorkOrders_OpenAndInProgress
          - WorkOrders_OpenAndInProgressExcludingPartsOnOrder
          - WorkOrders_OpenAndInProgressExcludingReferredToFM
          - WorkOrders_OpenAndInProgressExcludingMaintenance
          - WorkOrders_CompletedCallsOnly
          - WorkOrders_InvoicedCallsOnly
          - WorkOrders_AllCalls
          - WorkOrders_AllCallsLongFormat
          - WorkOrders_AllCallsUserAssignment
          - WorkOrders_ArchiveReports_MySavedArchiveReports
          - WorkOrders_ArchiveReports_CallHistory
          - WorkOrders_ArchiveReports_AccrualReport
          - WorkOrders_ArchiveReports_OriginalETAMmissed
          - WorkOrders_ArchiveReports_ExcessiveCalls
          - WorkOrders_AuditReports_DataExtract
          - QuickView
          - LocationsAndProviderAssignments
          - PlannedMaintenance_PMServices
          - PlannedMaintenance_PMLocations
          - PlannedMaintenance_PMTemplates
          - SitePlanningReports
          - AssetsEquipment_Administration
          - AssetsEquipment_Summary
          - AssetsEquipment_ManageAssets
          - AssetsEquipment_ManageAssetTypes
          - AssetsEquipment_RefrigerantLeakEvents
          - AssetsEquipment_ImportedAssets
          - Inventory
          - CompliancePrivateNetwork
          - Admin_LocationSettings_LocationNoteHeaders
          - Admin_LocationSettings_BusinessHours
          - Admin_WOProperties_Categories
          - Admin_WOProperties_Priorities
          - Admin_WOProperties_Statuses
          - Admin_WOProperties_TradesNTEs
          - Admin_Accounting_AdditionalApprovalCodes
          - Admin_Accounting_GLCodes
          - Admin_Accounting_ImportGLCodeTemplate
          - Admin_Invoices_General
          - Admin_Invoices_MLIConfiguration
          - Admin_Invoices_AutoApproval
          - Admin_Proposals_MLPConfiguration
          - Admin_Proposals_AutoApproval
          - Admin_Proposals_General
          - Admin_Proposals_ProposalApproveReasons
          - Admin_Proposals_ProposalAssignReasons
          - Admin_Permissions_Users
          - Admin_Permissions_Mobile
          - Admin_Permissions_Security
          - Admin_Permissions_ImpersonateUser
          - Admin_Permissions_APIIntegration
          - Admin_Permissions_Webhooks
          - Admin_Permissions_Notifications
          - Admin_SiteAccessRules
          - Admin_SitePlanningSetup
          - Admin_Providers
          - Admin_Subscribers
          - Admin_Connector
          - Admin_UserAccount
          - Admin_Tools_Surveys
          - Admin_Tools_CheckLists
          - Admin_Tools_Announcements
          - Admin_Tools_RemapProviders
          - Admin_Tools_UploadTemplates
          - Admin_Tools_SuppressionListRemoval
          - Admin_Tools_QuickView
          - Admin_QualitySurvey_SurveyQuestions
          - Admin_QualitySurvey_SurveyReport
          - Admin_Mobile_CIWO
          - Admin_Mobile_GPS
          - Admin_UserManagement
          - Admin_Locations
          - ServiceProviders
          - AnalyticsProView
          - Logout
          - ReportAnIssue
          - MobileAccessCode
          - HelpLinkForSubscribers
          - HelpLinkForProviders
          - ProviderSearch
          - Projects
          - Admin_Projects_ApprovalConfiguration
          - Admin_Projects_TypesAndCategories
          - Admin_Projects_Config
          - Admin_Spaces_SpacesManager
          - Admin_Tools_UniversalConnectorSetup
          - Spaces_Analytics
          - Spaces_Dashboard
          - Spaces_Manager
          - Spaces_Plotter
          - Spaces_Viewer
          - Admin_UniversalConnectorConfig
          - Admin_IssueListSetup
          - Admin_DashboardSettings
          - Admin_Proposals_NewMLPConfiguration
          type: string
        Items:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.MenuItem'
          type: array
      type: object
    ServiceChannel.Services.Messaging.ApplicationAccess.FeatureResponse:
      description: Feature response entity.
      example:
        Features:
        - Features
        - Features
      properties:
        Features:
          description: Subscribers features set
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.User.UserLocationNoteRestrictionResponse:
      example:
        Header: Header
        Values:
        - Values
        - Values
      properties:
        Header:
          type: string
        Values:
          items:
            type: string
          type: array
      type: object
    ServiceChannel.Services.Messaging.User.UserLocalizationSettings:
      example:
        DecimalSeparator: DecimalSeparator
        TimeFormat: TimeFormat
        Language: Language
        DateFormat: DateFormat
      properties:
        DateFormat:
          type: string
        TimeFormat:
          type: string
        DecimalSeparator:
          type: string
        Language:
          type: string
      type: object
    ServiceChannel.Api.Model.Workorders.WeatherEventType:
      example:
        Description: Description
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Description:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkActivityRequest:
      description: Request object to update a work activity.
      properties:
        CheckInDate:
          description: The date and time when a technician started work on the service
            request. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. The default is the
            current date and time.
          format: date-time
          type: string
        CheckOutDate:
          description: The date and time when a technician finished work on the service
            request. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. The default is the
            current date and time.
          format: date-time
          type: string
        Name:
          description: (*Optional*) The name of technician who worked on the service
            request.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkActivityPostRequest:
      description: Request object to create a work activity.
      properties:
        WorkTypeId:
          description: "The type of activity performed: 1 — *Repair*, 2 — *Travel*.\
            \ You can pass other values if custom types are set up for the subscriber."
          format: int32
          type: integer
        CheckInDate:
          description: The date and time when a technician started work on the service
            request. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. The default is the
            current date and time.
          format: date-time
          type: string
        CheckOutDate:
          description: The date and time when a technician finished work on the service
            request. The format is `YYYY-MM-DDThh:mm:ss.sssZ`. The default is the
            current date and time.
          format: date-time
          type: string
        Name:
          description: (*Optional*) The name of technician who worked on the service
            request.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.CreateWoRequest:
      description: CreateWoRequest
      properties:
        Number:
          description: Work Order Number
          type: string
        PurchaseNumber:
          description: Purchase Order Number
          type: string
        HasTruncatedDescription:
          default: false
          description: Optional
          type: boolean
        ContractInfo:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.ContractInfo'
        Comment:
          description: "Optional, Gets or sets the comment. Describes comments in\
            \ work order"
          type: string
        SetupId:
          description: "Optional Dashboard Id, UID of dashboard from which this work\
            \ order was created\r\n            must be bigger then zero and belong\
            \ to existing dashboard"
          format: int32
          type: integer
        AssetId:
          description: "Optional Asset, UID of asset, that will be repaired/reinstalled\r\
            \n            must be present and correspond to valid asset if system\
            \ finds that asset exists for specified LocationId,\r\n            TradeName,\
            \ IssueRequest.EquipmentType params and asset is required for issue choice\
            \ specified by IssueRequest,\r\n            SubscriberId and SetupId params"
          format: int32
          type: integer
        ReplaceAsset:
          default: false
          description: Optional
          type: boolean
        CallerName:
          description: "Optional, can be empty Caller Name. Name of the person/organization\
            \ who created work order"
          type: string
        Category:
          description: "Required, not empty Category must be valid category for specified\
            \ subscriber. Describes what type of work will be performed.\r\n     \
            \       This definition is broader then TradeName.\r\n            For\
            \ example if TradeName is \"FLOOR MAINTENANCE\" then Category will be\
            \ \"Maintenance\""
          type: string
        CategoryId:
          format: int32
          type: integer
        Priority:
          description: "Required, not empty Priority must be valid priority for specified\
            \ subscriber. Describes work order priority.\r\n            For example\
            \ \"Normal\", \"Emergency\""
          type: string
        Nte:
          description: "Required Nte value; optional only for users that have no access\
            \ to change NTE. (decimal number (e.g. 1.00)) - describes maximum amount\
            \ of money to be spent on work order.\r\n            Must not exceed max\
            \ amount defined by Subscriber.\r\n            If you specify ExtendedInfo.Tax,\
            \ ExtendedInfo.Tax2 and ExtendedInfo.Price then Nte must be equal to sum\
            \ of those three params"
          format: double
          type: number
        CallDate:
          description: "Required, date when work order was created."
          type: string
        ScheduledDate:
          description: "Optional, calculated based on CallDate and Priority by default.\
            \ Date when provider will come to perform work order.\r\n            Must\
            \ be an actual date (i.e. not 1/1/1900 or 1/1/3001) + must be bigger then\
            \ CallDate and smaller then ExpirationDate"
          type: string
        CompletedDate:
          description: "Optional, WorkDate when its not completed status."
          type: string
        ProblemSource:
          description: "Optional, source from which the problem came from"
          type: string
        Description:
          description: "Required problem description, Must not be empty. Overall description\
            \ of a problem (e.g. \"Coffee machines are broken all over the place -\
            \ please help!\")"
          type: string
        ProblemCode:
          description: "Required, describes problem similar to Description attribute,\
            \ but its value is predefined in subscriber's [IssueList]."
          type: string
        RecallWorkOrder:
          description: "Optional,  UID of recalled work order. Work order is set as\
            \ 'recalled' when subscriber isn't satisfied with work that was done by\
            \ provider"
          format: int32
          type: integer
        ServiceNowId:
          description: "Optional, Service Now Id"
          type: string
        CurrencyId:
          description: "Optional, UID of currency used to pay for work order. Defaul\
            \ value is '1' which corresponds to USD.\r\n            Must be bigger\
            \ then 0 and correspond to valid currency in dashboard which is found\
            \ by SetupId param"
          format: int32
          type: integer
        FollowupWorkOrder:
          description: "Optional, UID of work order that is created if problem cannot\
            \ be fully solved in terms of original work order"
          format: int32
          type: integer
        ApprovalCode:
          description: Optional
          type: string
        IssueRequestInfo:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.IssueRequest'
        DispatchSettingsInfo:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.DispatchSettings'
        Status:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderStatus'
        ExtendedInfo:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.ExtendedRequestInfo'
        Attachments:
          description: "Optional, at least one attachement must be present in list\
            \ if system finds that attachments are required for issue choice specified\
            \ by IssueRequest,\r\n            SubscriberId and SetupId params"
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.AddAttachmentRequest'
          type: array
        IgnoreAttachmentsRequiredFlag:
          default: false
          type: boolean
        ApiRequest:
          default: false
          type: boolean
        Materials:
          description: Optional
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.Material'
          type: array
        MaterialsUsed:
          description: Optional
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.RefrigerantTracking.AddWorkOrderPartRefrigerantItem'
          type: array
        AdditionalFields:
          description: Interactive troubleshooting additional fileds
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.AdditionalField'
          type: array
        IssueListHeaderId:
          description: Optional. Id in dash_IssueListHeader table
          format: int32
          type: integer
        ProposedNte:
          description: Optional
          format: double
          type: number
        NotifyProvider:
          default: false
          description: Optional
          type: boolean
        IsDashboardRequest:
          default: false
          description: Optional
          type: boolean
        FloorPlansImagePath:
          description: Optional
          type: string
        ProjectId:
          description: Optional. Project Id from Project Tracker
          format: int32
          type: integer
        WeatherTypeId:
          description: Optional. Associate with a specific weather type
          format: int32
          type: integer
        LabelId:
          description: "Optional, Label Id"
          format: int32
          type: integer
        AdditionalApprovalCodes:
          additionalProperties:
            type: string
          description: Additional Approval Codes
          type: object
      required:
      - CallDate
      - Category
      - ContractInfo
      - Description
      - Priority
      - ProblemCode
      type: object
    ServiceChannel.Services.Messaging.Workorders.ContractInfo:
      description: "ContractInfo (composite object) - describes who, where and what\
        \ will perform as well as the one who requested work"
      properties:
        SubscriberId:
          description: "Required for provider request (for subscriber request filled\
            \ authomatically), must belong to existing subscriber"
          format: int32
          type: integer
        LocationId:
          description: "Required if 'StoreId' not passed, must belong to existing\
            \ location for specified subscriber.\r\n            Can be Optional, if\
            \ EquipmentId is supplied in the request, system picks LocationId of the\
            \ location that equipment belongs to"
          format: int32
          type: integer
        StoreId:
          description: "Optional, can be used instead of 'LocationId'.\r\n       \
            \     If 'LocationId' not passed system will attempt to find location\
            \ based on 'SubscriberId' and 'StoreId'\r\n            ('StoreId' is required\
            \ in this case), it is possible that system won't be able to find location\
            \ which results in error.\r\n            Many locations can have similar\
            \ StoreId but LocationId is always unique"
          type: string
        ProviderId:
          description: "Optional (for provider request filled authomatically), if\
            \ provided - must correspond to a valid provider that has contract\r\n\
            \            for specified Subscriber, Location and Trade.\r\n       \
            \     If not specified the system will attempt to find default provider\
            \ based on Location, \r\n            Trade and Equipment (if specified).\
            \ It is possible that system won't be able to find provider which results\
            \ in error"
          format: int32
          type: integer
        TradeName:
          description: "Required, must be a valid trade for specified subscriber.\r\
            \n            Can be Optional if EquipmentId is supplied in the request,\
            \ system picks TradeName of the trade that equipment belongs to.\r\n \
            \           This definition is narrower then Category. For example if\
            \ Category is \"Maintenance\" then TradeName will be \"FLOOR MAINTENANCE\""
          type: string
      required:
      - LocationId
      - SubscriberId
      - TradeName
      type: object
    ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.IssueRequest:
      properties:
        AreaId:
          description: "Required, UID of problem area.\r\n             Must be bigger\
            \ then zero and belong and belong to existing area"
          format: int32
          type: integer
        ExtendedAreaName:
          description: "Optional, area name. Must be not empty"
          type: string
        ProblemType:
          description: "Optional, Type of problem. Must be not empty"
          type: string
        AssetType:
          description: "Optional, type of asset, has predefined values in [IssueList]\r\
            \n            Must be not empty"
          type: string
      required:
      - AreaId
      type: object
    ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.DispatchSettings:
      description: describes email notification settings on work order creation
      properties:
        NotificationDisabled:
          default: false
          description: Turns on/off email notification when work order is created
          type: boolean
        EmailHeader:
          description: Email Header
          type: string
        SendAlertToFM:
          default: false
          description: Send Alert To FM
          type: boolean
        ShowLastServiceCall:
          default: false
          description: Show Last Service Call
          type: boolean
        IsTest:
          default: false
          description: Is Test
          type: boolean
        CcRecipients:
          description: CC Recipients
          type: string
        InvalidRecipients:
          description: Invalid Recipients
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkorderStatus:
      properties:
        Primary:
          description: "Required, primary work order status value"
          enum:
          - NotSet
          - Open
          - InProgress
          - Completed
          - Incomplete
          type: string
        Extended:
          description: "Required, but can be empty. Extended status value"
          type: string
        PrimaryStatusValue:
          readOnly: true
          type: string
      required:
      - Extended
      - Primary
      type: object
    ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.ExtendedRequestInfo:
      description: ExtendedRequestInfo
      properties:
        ExpirationDate:
          description: "Optional, Expiration Date"
          format: date-time
          type: string
        GracePeriod:
          description: "Optional, Grace Period"
          format: int32
          type: integer
        Tax:
          description: "Optional, Tax"
          format: double
          type: number
        Tax2:
          description: "Optional, Tax2"
          format: double
          type: number
        Tax2Type:
          description: "Optional, Tax2Type"
          type: string
        Price:
          description: "Optional, Price"
          format: double
          type: number
        AutoInvoice:
          default: false
          description: "Optional, Auto Invoice"
          type: boolean
        CallerIdMatch:
          default: false
          description: "Optional, Caller Id Match"
          type: boolean
        AutoComplete:
          default: false
          description: "Optional, Auto Complete"
          type: boolean
        AutoDispatch:
          default: false
          description: "Optional, Auto Dispatch"
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.Material:
      properties:
        Quantity:
          format: float
          type: number
        Description:
          type: string
        Price:
          format: double
          type: number
        Reason:
          type: string
        SupplierPartId:
          type: string
        SupplierPartAuxiliaryId:
          type: string
        SupplierName:
          type: string
        NteMultiplier:
          format: double
          type: number
        DefaultNte:
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.Workorders.CreateWoRequest.AdditionalField:
      description: "Service Request Additional Field (Name, Value) pairs"
      properties:
        Name:
          description: Additional Field Name
          type: string
        Value:
          description: Additional Field Value
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkOrderSearchRequest:
      properties:
        OtherLocationId:
          description: "UID of location, exact search by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.Int32]"
          type: array
        Id:
          description: "UID of work order, exact search by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.Int32]"
          type: array
        Category:
          description: "Category of work order, exact search by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        Status:
          description: "Status of work order, exact search by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        ExtendedStatus:
          description: "Extended status of work order, exact search by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        Number:
          description: "Work order number, 'starts with' search criteria by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        ServiceId:
          description: '''starts with'' search criteria by default'
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        Priority:
          description: "Priority of work order, exact search by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        PurchaseNumber:
          description: "Purchase number of work order, 'starts with' search criteria\
            \ by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        Trade:
          description: "Trade, 'starts with' search criteria by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        ScheduledDate:
          description: Scheduled date
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        ExpirationDate:
          description: Expiration date
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        CallDate:
          description: Call date
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        Sort:
          description: Sort resources by the specified property in the response.
          type: string
        Page:
          description: Results page number.
          format: int32
          type: integer
        IsPageSizeDefault:
          default: false
          readOnly: true
          type: boolean
        PageSize:
          description: Number of objects on the results page. The default and maximum
            per page is 50.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Workorders.ChangeWoStatusRequestExt:
      properties:
        Status:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderStatusExt'
        Note:
          description: "Optional, Note"
          type: string
        Actor:
          description: "Optional, Actor"
          type: string
        DeclineReasonId:
          description: "Optional, for OPEN/DECLINED status if DeclineHistoryWO FF\
            \ is on"
          format: int32
          type: integer
        CustomDeclineReason:
          description: "Optional, for OPEN/DECLINED status if the decline reason has\
            \ AskCustomReason=true"
          type: string
      required:
      - Status
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkorderStatusExt:
      properties:
        Primary:
          description: "Required, primary work order status value"
          type: string
        Extended:
          description: "Required, but can be empty. Extended status value"
          type: string
        PrimaryStatus:
          description: "Converted to WoPrimaryStatus, primary work order status value"
          enum:
          - NotSet
          - Open
          - InProgress
          - Completed
          - Incomplete
          readOnly: true
          type: string
      required:
      - Extended
      - Primary
      type: object
    ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderStatusResponse:
      example:
        result: result
        id: 0
      properties:
        result:
          description: Last note
          type: string
        id:
          description: Unique work order identifier.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Workorders.ChangeWoFieldsRequest:
      description: Request to update the value of a work order parameter.
      properties:
        Value:
          description: Value of the work order parameter to update.
          type: string
        Actor:
          description: Name of the person on whose behalf you are updating the parameter
            value.
          type: string
      required:
      - Value
      type: object
    ServiceChannel.Services.Messaging.Workorders.ChangeWorkOrderResponse:
      description: Object containing the details of the modified work order.
      example:
        id: 0
      properties:
        id:
          description: Unique work order identifier.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Workorders.ChangeWoCategoryRequest:
      properties:
        Value:
          type: string
        Actor:
          type: string
        Id:
          format: int32
          type: integer
      required:
      - Value
      type: object
    ServiceChannel.Services.Messaging.Workorders.ChangeWoNteRequest:
      properties:
        Details:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.NteDetails'
        CurrencyId:
          description: "Optional, by default current Work Order Currency"
          format: int32
          type: integer
        Value:
          description: "Optionally required(can be calculated automatically by Details),\
            \ String Value of the NTE amount"
          type: string
        ProviderEmail:
          description: Provider e-mail
          type: string
        Actor:
          description: "Optional, Actor"
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.NteDetails:
      properties:
        Tax:
          description: Optional Tax amount
          format: double
          type: number
        Tax2:
          description: Optional Tax2 amount
          format: double
          type: number
        Price:
          description: Optional Price amount
          format: double
          type: number
        Tax2Type:
          description: Optional Tax2 type
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.UpdateWorkOrdersProjectApprovalRequest:
      properties:
        IsApproved:
          default: false
          type: boolean
        ProjectId:
          format: int32
          type: integer
      required:
      - IsApproved
      - ProjectId
      type: object
    ServiceChannel.Services.Messaging.Workorders.CreateWorkOrdersProjectApprovalRequest:
      properties:
        Nte:
          format: double
          type: number
        ProjectId:
          format: int32
          type: integer
      required:
      - Nte
      - ProjectId
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkOrderResolutionRequest:
      properties:
        Resolution:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.ChangeWoProjectIdRequest:
      properties:
        Value:
          description: Project Id
          format: int32
          type: integer
        SendRequestToProjectApi:
          default: false
          description: "Optional, Send Request To Project Api"
          type: boolean
        Actor:
          description: "Optional, Actor"
          type: string
      required:
      - Value
      type: object
    ServiceChannel.Services.Messaging.Workorders.ChangeWoWeatherTypeIdRequest:
      properties:
        Value:
          description: Weather Type Id (leave blank to delete)
          format: int32
          type: integer
      required:
      - Value
      type: object
    ServiceChannel.Services.Messaging.Workorders.IssueChoiceRequest:
      properties:
        AreaId:
          format: int32
          type: integer
        ProblemType:
          type: string
        AssetType:
          type: string
        ProblemCode:
          type: string
        SetupId:
          format: int32
          type: integer
        AdditionalFields:
          items:
            $ref: '#/components/schemas/ServiceChannel.Data.FieldValue'
          type: array
        IsUpdateScrecProblemType:
          default: false
          type: boolean
      type: object
    ServiceChannel.Data.FieldValue:
      properties:
        Header:
          type: string
        Value:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.ReassignWORequest:
      description: Reassign WorkOrder To other Provider
      properties:
        WorkorderId:
          description: Work order id.
          format: int32
          type: integer
        Trade:
          description: Trade
          type: string
        Problem:
          description: Problem Description.
          type: string
        ProblemCode:
          description: Problem Code.
          type: string
        CurrencyId:
          description: "Optional, by default current Work Order Currency"
          format: int32
          type: integer
        Nte:
          description: "Optional Nte value, by default current Work Order NTE"
          format: double
          type: number
        GlCode:
          description: Optional GL code value
          type: string
        ReasonId:
          description: "Required, Reassignment reason Id."
          format: int32
          type: integer
        ProviderId:
          description: "Required, Provider id to assign."
          format: int32
          type: integer
        Category:
          description: Category.
          type: string
        Priority:
          description: Priority
          type: string
        Note:
          description: Note
          type: string
        ProcessName:
          description: ProcessName
          type: string
        RequestEmail:
          description: Request email
          type: string
        RequestEmailCopy:
          description: Request email copy to
          type: string
        NotifyProvider:
          default: false
          description: "Notify Provider: send email if true"
          type: boolean
        AdditionalApprovalCodes:
          description: Additional approval codes
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.ApprovalCodes.AdditionalApprovalCode'
          type: array
        ScheduledDate:
          description: Work order scheduled date
          format: date-time
          type: string
        OriginalETA:
          description: Original ETA
          format: date-time
          type: string
        RefreshApprovalCodes:
          default: false
          description: "If true: update Approval Codes"
          type: boolean
        RecallWorkOrderId:
          description: Original work order Id
          format: int32
          type: integer
        LocationId:
          description: WO location id
          format: int32
          type: integer
        PurchaseOrder:
          description: Purchase Order
          type: string
        ApiRequest:
          default: false
          description: API request
          type: boolean
        Actor:
          description: "Optional, Actor"
          type: string
        LabelId:
          format: int32
          type: integer
        Label:
          type: string
        DeleteLabel:
          default: false
          type: boolean
        CategoryId:
          format: int32
          type: integer
      required:
      - ProviderId
      - ReasonId
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkOrderReassignmentReason:
      description: Work Orders Reassignment reason response
      example:
        Value: Value
        Id: 0
        Name: Name
      properties:
        Id:
          description: Identifier of reason
          format: int32
          type: integer
        Name:
          description: Localized reason Name
          type: string
        Value:
          description: Reason value
          type: string
      type: object
    ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateRequest:
      description: CheckInRequest
      properties:
        WorkTypeId:
          description: "Optional, type work Id. 1 - 'Repair', 2 - 'Travel'\r\n   \
            \         Default value is 1 ('Repair'). Supports custom types."
          format: int32
          type: integer
        Latitude:
          description: Global position. Latitude
          format: double
          type: number
        Longitude:
          description: Global position. Longitude
          format: double
          type: number
      required:
      - Latitude
      - Longitude
      type: object
    ServiceChannel.Services.Messaging.CheckInOut.CheckInValidateResponse:
      description: Check-In Validate Response
      example:
        IsMaskRequired: false
        IsOutsideAcceptableTimeframe: false
        IsOutsideGeolocation: false
        IsCompliantNonCompliantCheckInEnabled: false
        IsBadgeScanRequired: false
        IsLoginTypeAllowed: false
        CheckOutOutsideGPSAllowed: false
        OutsideOperationalHoursMessage: OutsideOperationalHoursMessage
        CheckInOutsideGPSAllowed: false
      properties:
        IsBadgeScanRequired:
          default: false
          description: Is Badge Scan Required
          type: boolean
        IsLoginTypeAllowed:
          default: false
          description: Is Current Login type Allowed to perform check-in action
          type: boolean
        IsOutsideAcceptableTimeframe:
          default: false
          description: Is Outside Acceptable Timeframe
          type: boolean
        IsOutsideGeolocation:
          default: false
          description: Is Outside Geolocation
          type: boolean
        OutsideOperationalHoursMessage:
          description: Outside Operational Hours Message
          type: string
        IsMaskRequired:
          default: false
          description: Is Mask Required
          type: boolean
        CheckInOutsideGPSAllowed:
          default: false
          description: Is Check In Outside Geolocation Radius Allowed
          type: boolean
        CheckOutOutsideGPSAllowed:
          default: false
          description: Is Check Out Outside Geolocation Radius Allowed
          type: boolean
        IsCompliantNonCompliantCheckInEnabled:
          default: false
          description: Is Compliant Non-Compliant Check In/Out Enabled
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Workorders.CheckInRequest:
      description: Check-in request
      properties:
        WorkTypeId:
          description: "The unique ID of the work type.\r\n            **Possible\
            \ values:** `1` — Repair, `2` — Travel. Other values are possible when\
            \ custom types are set up for the subscriber.\r\n            **Default\
            \ value:** 1."
          format: int32
          type: integer
        UserId:
          description: "The user ID of the technician that is checking in. Use the\
            \ same `UserId` for one pair of check-in and check-out records.\r\n  \
            \          **Default value:** ID of the current user."
          format: int32
          type: integer
        TechsCount:
          description: "The number of technicians that are checking in.\r\n      \
            \      **Default value:** 1."
          format: int32
          type: integer
        Latitude:
          description: "The latitude of the technician’s current position.\r\n   \
            \         Required for the Repair type. Not required for the Travel and\
            \ custom types as well as for the Repair type when the [XML check-in/out\
            \ permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#xml-check-inout-permission)\
            \ is enabled."
          format: double
          type: number
        Longitude:
          description: "The longitude of the technician’s current position.\r\n  \
            \          Required for the Repair type. Not required for the Travel and\
            \ custom types as well as for the Repair type when the [XML check-in/out\
            \ permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#xml-check-inout-permission)\
            \ is enabled."
          format: double
          type: number
        CheckInTime:
          description: "The date and time of the check-in. Either indicate in UTC\
            \ or pass the current time and add the UTC offset.\r\n            You\
            \ can pass this value only when the [XML check-in/out permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#xml-check-inout-permission)\
            \ is enabled.\r\n            **Default value:** current date and time."
          format: date-time
          type: string
        Actor:
          description: "Optional, Actor"
          type: string
      required:
      - Latitude
      - Longitude
      type: object
    ServiceChannel.Services.Messaging.CheckInOut.CheckInOutResponse:
      description: Check In/Out Response
      example:
        MechanicId: 0
      properties:
        MechanicId:
          description: The unique ID of the reported check-in/out action.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Workorders.CheckOutRequest:
      description: Check-out request
      properties:
        WorkTypeId:
          description: "The unique ID of the work type.\r\n            **Possible\
            \ values:** `1` — Repair, `2` — Travel. Other values are possible when\
            \ custom types are set up for the subscriber.\r\n            **Default\
            \ value:** 1."
          format: int32
          type: integer
        PrimaryStatus:
          description: "The status that is set for the WO when checking out.\r\n \
            \           Required for the Repair type. Ignored for the Travel and custom\
            \ types as well when `ActionStatus` = `Cancel`.\r\n            **Default\
            \ value:** NoStatusChange."
          enum:
          - NoStatusChange
          - InProgress
          - Completed
          - WaitingForQuote
          - PartsOnOrder
          - Incomplete
          type: string
        ExtendedStatus:
          description: "The extended status that is set for the WO when checking out.\r\
            \n            Optional for the Repair type. Ignored for the Travel and\
            \ custom types, when `ActionStatus` = `Cancel`, and for 'Completed' PrimaryStatus\
            \ (generated automatically).\r\n            Refrigerant WO with 'Completed'\
            \ PrimaryStatus — special case by RefrigerationTracking feature."
          type: string
        ActionStatus:
          description: "The status of the activity.\r\n            **Possible values:**\
            \ `Complete`, `Cancel`. Both values result in recording a check-out.\r\
            \n            `Complete` means that the technician has finished the activity.\
            \ `Cancel` means the technician needs to pause the activity, for example,\
            \ to have a break outside of the location. GPS coordinates are not required.\r\
            \n            **Default value:** Complete."
          enum:
          - Complete
          - Cancel
          type: string
        Resolution:
          description: "The comment entered when checking out. Usually describes what\
            \ was done during the recorded time. Ignored for the Travel and custom\
            \ types as well as when `ActionStatus` = `Cancel`.\r\n            **Default\
            \ value:** empty."
          type: string
        UserId:
          description: "The user ID of the technician that is checking out. Use the\
            \ same `UserId` for one pair of check-in and check-out records.\r\n  \
            \          **Default value:** ID of the current user."
          format: int32
          type: integer
        TechsCount:
          description: "The number of technicians that are checking out.\r\n     \
            \       **Default value:** 1."
          format: int32
          type: integer
        Latitude:
          description: "The latitude of the technician’s current position.\r\n   \
            \         Required for the Repair and Travel type. Not required for custom\
            \ types, for the Repair and Travel types when the [XML check-in/out permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#xml-check-inout-permission)\
            \ is enabled, and when `ActionStatus` = `Cancel`."
          format: double
          type: number
        Longitude:
          description: "The longitude of the technician’s current position.\r\n  \
            \          Required for the Repair and Travel type. Not required for custom\
            \ types, for the Repair and Travel types when the [XML check-in/out permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#xml-check-inout-permission)\
            \ is enabled, and when `ActionStatus` = `Cancel`."
          format: double
          type: number
        CheckOutTime:
          description: "The date and time of the check-out. Either indicate in UTC\
            \ or pass the current time and add the UTC offset.\r\n            You\
            \ can pass this value only when the [XML check-in/out permission](https://developer.servicechannel.com/guides/checkin/before-you-start/#xml-check-inout-permission)\
            \ is enabled.\r\n            **Default value:** current date and time."
          format: date-time
          type: string
        CheckoutAll:
          default: false
          type: boolean
        Actor:
          description: "Optional, Actor"
          type: string
        SignatureAttachmentId:
          description: "Optional, SignatureAttachmentId\r\n            **Default value:**\
            \ null"
          format: int32
          type: integer
        UnableObtainSignatureNoteId:
          description: "Optional, UnableObtainSignatureNoteId\r\n            **Default\
            \ value:** null"
          format: int32
          type: integer
      required:
      - Latitude
      - Longitude
      type: object
    ServiceChannel.Services.Messaging.CheckListDetails.GetResponsesByWorkOrderResponse:
      description: Object for checklist responses submitted for a work order.
      example:
        Responses:
        - Pictures:
          - UpdatedBy: 4
            CheckListResponseId: 2
            ThumbnailPath: ThumbnailPath
            DocumentPath: DocumentPath
            Id: 3
            HasThumbnail: false
            DocumentName: DocumentName
          - UpdatedBy: 4
            CheckListResponseId: 2
            ThumbnailPath: ThumbnailPath
            DocumentPath: DocumentPath
            Id: 3
            HasThumbnail: false
            DocumentName: DocumentName
          ProviderId: 9
          FreeTextAnswer: FreeTextAnswer
          QuestionOption:
            Answer: Answer
            Id: 7
            Sequence: 9
            IsConditionalFollowUp: false
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          UpdatedDateDto: 2000-01-23T04:56:07.000+00:00
          IsCurrentChecklist: false
          EntityId: 5
          Answer: Answer
          TechnicianId: 3
          Attempt: 7
          EntityTypeId: 2
          UpdatedDateStr: UpdatedDateStr
          Question:
            PictureFlag: Optional
            QuestionType: CheckBox
            CheckListTimingType: CheckIn
            AnswerRequired: false
            Sequence: 1
            CheckListId: 6
            CheckListName: CheckListName
            ShortDescription: ShortDescription
            CheckListQuestionOptions:
            - Answer: Answer
              Id: 7
              Sequence: 9
              IsConditionalFollowUp: false
            - Answer: Answer
              Id: 7
              Sequence: 9
              IsConditionalFollowUp: false
            Question: Question
            AnswerCanPersist: false
            Id: 0
            CheckListCreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 5
          IsFrequencyChecklist: false
        - Pictures:
          - UpdatedBy: 4
            CheckListResponseId: 2
            ThumbnailPath: ThumbnailPath
            DocumentPath: DocumentPath
            Id: 3
            HasThumbnail: false
            DocumentName: DocumentName
          - UpdatedBy: 4
            CheckListResponseId: 2
            ThumbnailPath: ThumbnailPath
            DocumentPath: DocumentPath
            Id: 3
            HasThumbnail: false
            DocumentName: DocumentName
          ProviderId: 9
          FreeTextAnswer: FreeTextAnswer
          QuestionOption:
            Answer: Answer
            Id: 7
            Sequence: 9
            IsConditionalFollowUp: false
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          UpdatedDateDto: 2000-01-23T04:56:07.000+00:00
          IsCurrentChecklist: false
          EntityId: 5
          Answer: Answer
          TechnicianId: 3
          Attempt: 7
          EntityTypeId: 2
          UpdatedDateStr: UpdatedDateStr
          Question:
            PictureFlag: Optional
            QuestionType: CheckBox
            CheckListTimingType: CheckIn
            AnswerRequired: false
            Sequence: 1
            CheckListId: 6
            CheckListName: CheckListName
            ShortDescription: ShortDescription
            CheckListQuestionOptions:
            - Answer: Answer
              Id: 7
              Sequence: 9
              IsConditionalFollowUp: false
            - Answer: Answer
              Id: 7
              Sequence: 9
              IsConditionalFollowUp: false
            Question: Question
            AnswerCanPersist: false
            Id: 0
            CheckListCreatedDate: 2000-01-23T04:56:07.000+00:00
          Id: 5
          IsFrequencyChecklist: false
      properties:
        Responses:
          description: Responses to checklist questions submitted for a work order.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponseExtended'
          type: array
      type: object
    ServiceChannel.Services.Messaging.CheckListDetails.CheckListResponseExtended:
      description: Object for checklist response details.
      example:
        Pictures:
        - UpdatedBy: 4
          CheckListResponseId: 2
          ThumbnailPath: ThumbnailPath
          DocumentPath: DocumentPath
          Id: 3
          HasThumbnail: false
          DocumentName: DocumentName
        - UpdatedBy: 4
          CheckListResponseId: 2
          ThumbnailPath: ThumbnailPath
          DocumentPath: DocumentPath
          Id: 3
          HasThumbnail: false
          DocumentName: DocumentName
        ProviderId: 9
        FreeTextAnswer: FreeTextAnswer
        QuestionOption:
          Answer: Answer
          Id: 7
          Sequence: 9
          IsConditionalFollowUp: false
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        UpdatedDateDto: 2000-01-23T04:56:07.000+00:00
        IsCurrentChecklist: false
        EntityId: 5
        Answer: Answer
        TechnicianId: 3
        Attempt: 7
        EntityTypeId: 2
        UpdatedDateStr: UpdatedDateStr
        Question:
          PictureFlag: Optional
          QuestionType: CheckBox
          CheckListTimingType: CheckIn
          AnswerRequired: false
          Sequence: 1
          CheckListId: 6
          CheckListName: CheckListName
          ShortDescription: ShortDescription
          CheckListQuestionOptions:
          - Answer: Answer
            Id: 7
            Sequence: 9
            IsConditionalFollowUp: false
          - Answer: Answer
            Id: 7
            Sequence: 9
            IsConditionalFollowUp: false
          Question: Question
          AnswerCanPersist: false
          Id: 0
          CheckListCreatedDate: 2000-01-23T04:56:07.000+00:00
        Id: 5
        IsFrequencyChecklist: false
      properties:
        Pictures:
          description: Files attached to the checklist response.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListPictureResponse'
          type: array
        Question:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailQuestionsExtendedResponse'
        QuestionOption:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListQuestionOptionResponse'
        IsCurrentChecklist:
          default: false
          description: Is current checklist flag.
          type: boolean
        IsFrequencyChecklist:
          default: false
          description: Is PM frequency checklist flag.
          type: boolean
        Id:
          description: Checklist response ID.
          format: int32
          type: integer
        Answer:
          description: Answer to a checklist question.
          type: string
        FreeTextAnswer:
          description: Comment to an answer option with the `IsConditionalFollowUp`
            attribute. Answer options are configured for questions of the **Selector**
            type.
          type: string
        EntityId:
          description: ID of the work order the response was submitted for.
          format: int32
          type: integer
        EntityTypeId:
          description: ID of the entity the response was submitted for. 0 is returned
            for work orders.
          format: int32
          type: integer
        Attempt:
          description: Order of a technician’s on-site visit when the response was
            submitted.
          format: int32
          type: integer
        ProviderId:
          description: ID of the provider on whose behalf the response was submitted.
          format: int32
          type: integer
        TechnicianId:
          description: ID of the technician on whose behalf the response was submitted.
          format: int32
          type: integer
        UpdatedDate:
          description: Date and time when the response was last updated set in EST.
            The format is `YYYY-MM-DDThh:mm:ss.sss`.
          format: date-time
          type: string
        UpdatedDateStr:
          description: Date and time when the response was last updated set in the
            location’s time zone. The format is `Month Day Year hh:mm`.
          type: string
        UpdatedDateDto:
          description: Date and time when the response was last updated set in the
            location’s time zone with the UTC offset. The format is `YYYY-MM-DDThh:mm:ss.sss±hh:mm`.
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.CheckListDetails.CheckListDetailQuestionsExtendedResponse:
      description: Checklist question details.
      example:
        PictureFlag: Optional
        QuestionType: CheckBox
        CheckListTimingType: CheckIn
        AnswerRequired: false
        Sequence: 1
        CheckListId: 6
        CheckListName: CheckListName
        ShortDescription: ShortDescription
        CheckListQuestionOptions:
        - Answer: Answer
          Id: 7
          Sequence: 9
          IsConditionalFollowUp: false
        - Answer: Answer
          Id: 7
          Sequence: 9
          IsConditionalFollowUp: false
        Question: Question
        AnswerCanPersist: false
        Id: 0
        CheckListCreatedDate: 2000-01-23T04:56:07.000+00:00
      properties:
        CheckListCreatedDate:
          description: Date and time when the checklist was created.
          format: date-time
          type: string
        CheckListName:
          description: Name of the checklist the question belongs to.
          type: string
        Id:
          description: Checklist question ID.
          format: int32
          type: integer
        CheckListId:
          description: ID of the checklist the question belongs to.
          format: int32
          type: integer
        Question:
          description: Checklist question that a technician is prompted to answer
            when working on a service request.
          type: string
        ShortDescription:
          description: Not applicable to checklists.
          type: string
        AnswerRequired:
          default: false
          description: Defines whether answering this checklist question is mandatory.
          type: boolean
        PictureFlag:
          description: "Defines whether a technician is required to upload an attachment\
            \ when answering the question:\r\n             • 0 — Adding an attachment\
            \ is optional.\r\n             • 1 — An attachment is not required.\r\n\
            \             • 2 — Uploading an attachment is mandatory."
          enum:
          - Optional
          - "No"
          - Required
          type: string
        Sequence:
          description: Not applicable to checklists.
          format: int32
          type: integer
        QuestionType:
          description: "[Checklist question type](https://developer.servicechannel.com/guides/checklists/types-of-checklist-questions/):\r\
            \n             • 0 — **Acknowledgement**: Represents an on/off toggle\
            \ prompting a technician to give a positive or negative response to a\
            \ question.\r\n             • 1 — **Selector**: Provides multiple configured\
            \ answer options to choose from.\r\n             • 2 — **Text Entry**:\
            \ Allows entering a text answer.\r\n             • 4 — **Numeric Input**:\
            \ Prompts to submit a number as a response."
          enum:
          - CheckBox
          - RadioButton
          - TextEntry
          - TriState
          - NumericInput
          type: string
        CheckListQuestionOptions:
          description: Answer options for questions of the Selector type.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.CheckListDetails.CheckListQuestionOptionResponse'
          type: array
        AnswerCanPersist:
          default: false
          description: "Defines whether the answer to this question can persist. If\
            \ the answer is persistent, the last submitted response populates on the\
            \ question. A technician can either opt for the current response or update\
            \ it."
          type: boolean
        CheckListTimingType:
          description: "Defines the checklist segment the question belongs to: 1 —\
            \ check-in segment, 2 — check-out segment."
          enum:
          - CheckIn
          - CheckOut
          type: string
      type: object
    ServiceChannel.Services.Messaging.ODataRequest:
      properties:
        Expand:
          description: Expand a navigation property.
          type: string
        Select:
          description: Select a set of properties to return.
          type: string
        Filter:
          description: Filter a collection of resources addressed by a request URL.
          type: string
        Orderby:
          description: Order resources by the specified property in the response.
          type: string
        Count:
          description: Include the count of the matching resources in the response.
          type: string
        Top:
          description: Return the specified number of items in the response.
          format: int32
          type: integer
        Skip:
          description: Skip the specified number of items in the response.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkOrderSearchBaseRequest:
      properties:
        Id:
          description: "UID of work order, exact search by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.Int32]"
          type: array
        Category:
          description: "Category of work order, exact search by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        Status:
          description: "Status of work order, exact search by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        ExtendedStatus:
          description: "Extended status of work order, exact search by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        Number:
          description: "Work order number, 'starts with' search criteria by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        ServiceId:
          description: '''starts with'' search criteria by default'
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        Priority:
          description: "Priority of work order, exact search by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        PurchaseNumber:
          description: "Purchase number of work order, 'starts with' search criteria\
            \ by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        Trade:
          description: "Trade, 'starts with' search criteria by default"
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        ScheduledDate:
          description: Scheduled date
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        ExpirationDate:
          description: Expiration date
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        CallDate:
          description: Call date
          items:
            $ref: "#/components/schemas/ServiceChannel.Services.Messaging.FilterItem[System.String]"
          type: array
        Sort:
          description: Sort resources by the specified property in the response.
          type: string
        Page:
          description: Results page number.
          format: int32
          type: integer
        IsPageSizeDefault:
          default: false
          readOnly: true
          type: boolean
        PageSize:
          description: Number of objects on the results page. The default and maximum
            per page is 50.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Workorders.WarningWorkOrdersRequest:
      properties:
        LocationId:
          format: int32
          type: integer
        ProblemCode:
          type: string
        Equipment:
          type: string
        ProblemType:
          type: string
        Trade:
          type: string
        Completed:
          default: false
          type: boolean
        SubscriberId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkOrderStatisticsResponse:
      description: Work Orders Statistics responce
      example:
        NegativeFbWo: 5
        RecallWo: 1
        OpenWo: 6
        DaysPeriod: 0
      properties:
        DaysPeriod:
          description: "Period in days, last X days for which Work Orders statistics\
            \ was collected"
          format: int32
          type: integer
        OpenWo:
          description: Count of Open/In progress Work Orders
          format: int32
          type: integer
        RecallWo:
          description: Count of recall Work Orders
          format: int32
          type: integer
        NegativeFbWo:
          description: Count of Work Orders with negative feedback
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Category.GetCategoriesRequest:
      properties:
        SubscriberId:
          description: This parameter is required only for provider.
          format: int32
          type: integer
        SortExpr:
          description: Gets or sets sort expression.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.GetStatusResponse:
      example:
        Constraints:
        - AskForReviews: false
          IsResolutionTextRequired: 6
          Extended: Extended
          IsResolutionCodesRequired: 5
          IsScheduledDateRequired: 5
          IsShippingInfoRequired: 1
        - AskForReviews: false
          IsResolutionTextRequired: 6
          Extended: Extended
          IsResolutionCodesRequired: 5
          IsScheduledDateRequired: 5
          IsShippingInfoRequired: 1
        ExtendedStatuses:
        - Id: 0
          Name: Name
        - Id: 0
          Name: Name
        Extended:
        - Extended
        - Extended
        Id: NotSet
        Name: Name
      properties:
        Id:
          enum:
          - NotSet
          - Open
          - InProgress
          - Completed
          - Incomplete
          type: string
        Name:
          type: string
        Extended:
          description: Extended status value
          items:
            type: string
          type: array
        ExtendedStatuses:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderExtendedStatus'
          type: array
        Constraints:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderStatusConstraints'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkorderExtendedStatus:
      example:
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkorderStatusConstraints:
      example:
        AskForReviews: false
        IsResolutionTextRequired: 6
        Extended: Extended
        IsResolutionCodesRequired: 5
        IsScheduledDateRequired: 5
        IsShippingInfoRequired: 1
      properties:
        Extended:
          type: string
        IsResolutionTextRequired:
          format: int32
          type: integer
        IsShippingInfoRequired:
          format: int32
          type: integer
        IsResolutionCodesRequired:
          format: int32
          type: integer
        IsScheduledDateRequired:
          format: int32
          type: integer
        AskForReviews:
          default: false
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Priorities.AddPriorityRequest:
      description: Holds request.
      properties:
        Name:
          type: string
        Eta:
          description: "Optional, ETA"
          format: int32
          type: integer
        SkipNights:
          default: false
          description: "Optional, Skip Nights"
          type: boolean
        SkipWeekends:
          default: false
          description: "Optional, Skip Weekends"
          type: boolean
        SkipWhenClosed:
          default: false
          description: "Optional, Skip When Closed"
          type: boolean
        EtaTimeUnits:
          description: "Optional, Eta Time Units"
          enum:
          - Days
          - Hours
          - Minutes
          type: string
      required:
      - Name
      type: object
    ServiceChannel.Services.Messaging.Priorities.AddPriorityResponse:
      description: Holds response.
      example:
        Message: Message
        Id: 0
        ErrorCode: 6
      properties:
        Id:
          format: int32
          type: integer
        ErrorCode:
          description: "Numeric identifier that determines the nature of an error.\
            \ Possible values: `0` - success, otherwise - error."
          format: int32
          type: integer
        Message:
          description: Defines that the file’s remote storage is unavailable or its
            URL cannot be found.
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.GetWorkOrderLabelResponse:
      description: Work order label response
      example:
        Total: 6
        Items:
        - Value: Value
          Id: 0
        - Value: Value
          Id: 0
      properties:
        Items:
          description: List of work order labels
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelResponse'
          type: array
        Total:
          description: Total count of work order labels
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelResponse:
      description: Work order label for response
      example:
        Value: Value
        Id: 0
      properties:
        Id:
          description: Label id
          format: int32
          type: integer
        Value:
          description: Label value
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkOrderLabelRequest:
      properties:
        LabelId:
          format: int32
          type: integer
        Label:
          type: string
        Actor:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkOrderServiceNowIdRequest:
      properties:
        ServiceNowId:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.AddStripeChargeRequest:
      description: AddStripeCharge request
      properties:
        TokenId:
          description: "Id of the token returned by stripe api {!:https://stripe.com/docs/}"
          type: string
        Amount:
          description: Amount to charge
          format: double
          type: number
        Currency:
          description: Currency
          type: string
      required:
      - Amount
      - Currency
      - TokenId
      type: object
    ServiceChannel.Services.Messaging.Workorders.LinkWorkordersRequest:
      description: Link Workorders Request
      properties:
        WorkorderIds:
          description: Array of Workorder Ids to link
          items:
            format: int32
            type: integer
          type: array
        UnlinkLinkedWorkorders:
          default: false
          description: Unlink linked Workorders if true
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Workorders.UnlinkWorkordersRequest:
      description: Unlink Workorders Request
      properties:
        WorkorderIds:
          description: "Array of Workorder Ids to Unlink, \r\n            Required\
            \ if 'UnlinkAllLinkedWorkorders' is false\r\n            Ignored if 'UnlinkAllLinkedWorkorders'\
            \ is true"
          items:
            format: int32
            type: integer
          type: array
        UnlinkAllLinkedWorkorders:
          default: false
          description: "Unlink all linked Workorders if true, Optional"
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Workorders.LeaveFeedbackRequest:
      properties:
        StarScore:
          format: int32
          type: integer
        Comment:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.Dashboard.Requests.SubmitSolvedIssueModel:
      description: Problem solve model
      properties:
        Type:
          enum:
          - Unknown
          - DuplicateWorkOrder
          - DecisionTree
          - DecisionTreeStop
          - IssueListMessage
          type: string
        LocationId:
          format: int32
          type: integer
        Source:
          type: string
        Category:
          type: string
        Trade:
          type: string
        Priority:
          type: string
        ProblemCode:
          type: string
        ProblemDescription:
          type: string
        WorkOrderId:
          format: int32
          type: integer
        NTE:
          format: double
          type: number
        CurrencyId:
          format: int32
          type: integer
      required:
      - LocationId
      - Source
      type: object
    ServiceChannel.Services.Messaging.V4.Workorders.WorkTypeResponse:
      description: WorkTypeResponse
      example:
        Id: 0
        Name: Name
      properties:
        Id:
          description: Id
          format: int32
          type: integer
        Name:
          description: Name
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkOrderAnalyticsResponse:
      example:
        IVR: false
        FirstTimeCompletionFlag: 0
        SLA: false
      properties:
        IVR:
          default: false
          description: "Indicates whether the work order has both Check-In and Check-Out\
            \ records and completes with a Check-Out. **Possible values**: *true*,\
            \ *false*."
          type: boolean
        SLA:
          default: false
          description: "Indicates whether the work order met the original ETA. **Possible\
            \ values**: *true*, *false*, or *null* (if the `Original ETA` or `CheckInTime`\
            \ is not populated in source data)."
          type: boolean
        FirstTimeCompletionFlag:
          description: "Indicates whether the work order was completed on the first\
            \ visit. **Possible values**: `1` - *Yes*, `0` - *No*."
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Workorders.ChangeWoTechnicianCertificateRequest:
      description: Change Technician Certificate Request
      properties:
        CertificateId:
          description: Numeric Id of the technician certificatite
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Workorders.AcceptWorkOrderRequest:
      description: Request model to add a note to the work order while accepting it.
      properties:
        Note:
          description: '*Optional*. Note text.'
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.DeclineWorkOrderRequest:
      description: Request model to add information about the work order decline
      properties:
        DeclineReasonId:
          description: "Unique numeric identifier of the work order decline reason.\
            \ \r\n            <br />**Possible values**: `1` - Can't make ETA, `2`\
            \ - \tTrade not serviced, `3` - Location not serviced, `4` - Not under\
            \ warranty, `5` - Other, `6` - NTE too low. \r\n            <br />***Note***:\
            \ The parameter is required when the *DeclineHistoryWO* feature flag is\
            \ on."
          format: int32
          type: integer
        CustomDeclineReason:
          description: "Text explaining the reason for the work order decline. \r\n\
            \            <br />***Note***: The parameter is required when the decline\
            \ reason has AskCustomReason=true."
          type: string
        Note:
          description: '*Optional*. Note text.'
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.GetGPSRadiusResponse:
      example:
        LocLongitude: 5.962133916683182
        LocLatitude: 1.4658129805029452
        LocationID: 6
        WorkorderId: 0
        GPSRadius: 5.637376656633329
      properties:
        WorkorderId:
          format: int32
          type: integer
        LocationID:
          format: int32
          type: integer
        LocLatitude:
          format: double
          type: number
        LocLongitude:
          format: double
          type: number
        GPSRadius:
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestNoteRequest:
      description: Request to create note for a work request
      properties:
        Note:
          description: "Required, Note text"
          type: string
        MailedTo:
          description: E-mail address(es)
          type: string
        Visibility:
          format: int32
          type: integer
        NotifyFollowers:
          default: false
          description: If true email alert will be sent to WO Followers
          type: boolean
        DoNotSendEmail:
          default: false
          description: Do Not Send Email flag
          type: boolean
      required:
      - Note
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.AddWorkRequestNoteFollowersRequest:
      properties:
        FollowersList:
          description: "Required, Followers List"
          type: string
        UserIds:
          description: "Required, User Ids"
          type: string
      required:
      - FollowersList
      - UserIds
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestRequest:
      description: Request to create a work request
      properties:
        SubscriberId:
          description: Subscriber Id
          format: int32
          type: integer
        ProviderId:
          description: Provider Id
          format: int32
          type: integer
        EventId:
          description: "Optional. Guid of IoT event. For example, B216E711-420F-4D32-9080-762CBFD4E732"
          type: string
        LocationId:
          description: Location Id
          format: int32
          type: integer
        StatusId:
          description: WorkRequest status Id
          format: int32
          type: integer
        ExtendedStatusId:
          description: WorkRequest extended status Id
          format: int32
          type: integer
        Description:
          description: Description. Free text.
          type: string
        TradeId:
          description: Trade Id
          format: int32
          type: integer
        CategoryId:
          description: Catgory Id
          format: int32
          type: integer
        PriorityId:
          description: Priority Id
          format: int32
          type: integer
        Caller:
          description: Optional. Caller
          type: string
        CallDate:
          description: Call date. In UTC
          type: string
        ScheduledDate:
          description: Optional. Scheduled date. In UTC
          type: string
        AssetId:
          description: Optional. Asset Id
          format: int32
          type: integer
        Nte:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestNteRequest'
        Issue:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestIssueRequest'
        Attachments:
          description: Optional. Attachments
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestAttachmentRequest'
          type: array
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestNteRequest:
      description: Request to set NTE for a work request
      properties:
        Value:
          description: Value
          format: double
          type: number
        CurrencyId:
          description: Currency Id
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestIssueRequest:
      description: Request to set issue parameters for a work request
      properties:
        AreaId:
          description: Area Id
          format: int32
          type: integer
        ProblemType:
          description: Problem type
          type: string
        Equipment:
          description: Equipment
          type: string
        ProblemCode:
          description: Problem code
          type: string
        SetupId:
          description: Setup(dashboard) Id
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestAttachmentRequest:
      description: Request to add attachments to a work request
      properties:
        Description:
          description: Description
          type: string
        FileName:
          description: "File name of a uploaded attachment. For example, #workorders/0DD13443-EAF4-4A1D-930B-992EFC8ED3E0"
          type: string
        OriginalName:
          description: "Original file name. For example, my-file.pdf"
          type: string
        Visibility:
          description: Visibility
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.CreateWorkRequestResponse:
      description: Response for work request creation
      example:
        Id: 0
      properties:
        Id:
          description: Id of the created work request
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.WorkRequest:
      description: Work Request
      example:
        ProviderId: 1
        CategoryId: 3
        Description: Description
        Issue:
          AreaName: AreaName
          SetupId: 6
          Equipment: Equipment
          ProblemType: ProblemType
          AreaId: 1
          ProblemCode: ProblemCode
        CallDate: 2000-01-23T04:56:07.000+00:00
        ExtendedStatusId: 2
        ClosedReasonName: ClosedReasonName
        ScheduledDate: 2000-01-23T04:56:07.000+00:00
        ExtendedStatusName: ExtendedStatusName
        ProviderShortName: ProviderShortName
        SubscriberId: 6
        LocationStoreId: LocationStoreId
        EventId: EventId
        PriorityId: 2
        TradeName: TradeName
        ClosedReasonId: 7
        TradeId: 9
        LocationId: 5
        StatusName: StatusName
        SubscriberShortName: SubscriberShortName
        PriorityName: PriorityName
        Caller: Caller
        WorkOrderId: 4
        StatusId: 5
        CategoryName: CategoryName
        Id: 0
        ClosedDate: 2000-01-23T04:56:07.000+00:00
        AssetId: 7
        Nte:
          CurrencyAlphabeticCode: CurrencyAlphabeticCode
          Value: 1.2315135367772556
          CurrencyId: 1
      properties:
        Id:
          description: Id
          format: int32
          type: integer
        SubscriberId:
          description: Subscriber Id
          format: int32
          type: integer
        SubscriberShortName:
          description: Subscriber Short Name
          type: string
        ProviderId:
          description: Provider Id
          format: int32
          type: integer
        ProviderShortName:
          description: Provider Short Name
          type: string
        LocationId:
          description: Location Id
          format: int32
          type: integer
        LocationStoreId:
          description: Location Store Id
          type: string
        EventId:
          description: Event Id
          type: string
        StatusId:
          description: Status Id
          format: int32
          type: integer
        StatusName:
          description: Status Name
          type: string
        ExtendedStatusId:
          description: Extended Status Id
          format: int32
          type: integer
        ExtendedStatusName:
          description: Extended Status Name
          type: string
        ClosedReasonId:
          description: Closed Reason Id
          format: int32
          type: integer
        ClosedReasonName:
          description: Closed Reason Name
          type: string
        Description:
          description: Description
          type: string
        TradeId:
          description: Trade Id
          format: int32
          type: integer
        TradeName:
          description: Trade Name
          type: string
        CategoryId:
          description: Category Id
          format: int32
          type: integer
        CategoryName:
          description: Category Name
          type: string
        PriorityId:
          description: Priority Id
          format: int32
          type: integer
        PriorityName:
          description: Priority Name
          type: string
        Caller:
          description: Caller
          type: string
        CallDate:
          description: Call Date
          format: date-time
          type: string
        ClosedDate:
          description: Closed Date
          format: date-time
          type: string
        ScheduledDate:
          description: Scheduled Date
          format: date-time
          type: string
        WorkOrderId:
          description: Work Order Id
          format: int32
          type: integer
        AssetId:
          description: Asset Id
          format: int32
          type: integer
        Nte:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.WorkRequestNte'
        Issue:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.WorkRequests.WorkRequestIssue'
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.WorkRequestNte:
      description: Work Request Nte
      example:
        CurrencyAlphabeticCode: CurrencyAlphabeticCode
        Value: 1.2315135367772556
        CurrencyId: 1
      properties:
        Value:
          description: Value
          format: double
          type: number
        CurrencyId:
          description: Currency Id
          format: int32
          type: integer
        CurrencyAlphabeticCode:
          description: Currency Alphabetic Code
          type: string
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.WorkRequestIssue:
      description: Work Request Issue
      example:
        AreaName: AreaName
        SetupId: 6
        Equipment: Equipment
        ProblemType: ProblemType
        AreaId: 1
        ProblemCode: ProblemCode
      properties:
        AreaId:
          description: Area Id
          format: int32
          type: integer
        AreaName:
          description: Area Name
          type: string
        ProblemType:
          description: Problem Type
          type: string
        Equipment:
          description: Equipment
          type: string
        ProblemCode:
          description: Problem Code
          type: string
        SetupId:
          description: Setup Id
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.UpdateWorkRequestRequest:
      description: Request to update a work request properties
      properties:
        StatusId:
          description: Status Id
          format: int32
          type: integer
        ExtendedStatusId:
          description: Extended Status Id
          format: int32
          type: integer
        ClosedReasonId:
          description: Closed Reason Id
          format: int32
          type: integer
        WorkOrderId:
          description: Work Order Id
          format: int32
          type: integer
        PriorityId:
          description: Priority Id
          format: int32
          type: integer
        CategoryId:
          description: Category Id
          format: int32
          type: integer
        ScheduledDate:
          description: Scheduled date
          type: string
        Description:
          description: Description
          type: string
        TradeId:
          description: Trade Id
          format: int32
          type: integer
        NTE:
          description: NTE value
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStatusRequest:
      description: Request to change a work request status
      properties:
        StatusId:
          description: WorkRequest status Id
          format: int32
          type: integer
        ExtendedStatusId:
          description: WorkRequest extended status Id
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestNteRequest:
      description: Request to change NTE for a work request
      properties:
        Value:
          description: Value
          format: double
          type: number
        CurrencyId:
          description: Currency Id
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.ChangeWorkRequestStringFieldsRequest:
      description: Request to update the value of a work request parameter.
      properties:
        Value:
          description: Value of the work request parameter to update.
          type: string
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.ReassignWorkRequestRequest:
      description: Reassign Work Request to other Provider
      properties:
        ProviderId:
          description: Provider id to assign.
          format: int32
          type: integer
        TradeId:
          description: "Optional, by default current Work Request Trade"
          format: int32
          type: integer
        CurrencyId:
          description: "Optional, by default current Work Request Currency"
          format: int32
          type: integer
        Nte:
          description: "Optional Nte value, by default current Work Request NTE"
          format: double
          type: number
        PriorityId:
          description: "Optional, by default current Work Request Priority"
          format: int32
          type: integer
        ScheduledDate:
          description: "Optional, by default current Work Request ScheduledDate"
          type: string
        CategoryId:
          description: "Optional, by default current Work Request Category"
          format: int32
          type: integer
        Description:
          description: Optional
          type: string
      type: object
    ServiceChannel.Services.Messaging.WorkRequests.SearchWorkRequestRequest:
      description: Object to perform search for work requests
      properties:
        Ids:
          description: Ids
          items:
            format: int32
            type: integer
          type: array
        SubscriberIds:
          description: Subscriber Ids
          items:
            format: int32
            type: integer
          type: array
        ProviderIds:
          description: Provider Ids
          items:
            format: int32
            type: integer
          type: array
        LocationIds:
          description: Location Ids
          items:
            format: int32
            type: integer
          type: array
        CategoryIds:
          description: Category Ids
          items:
            format: int32
            type: integer
          type: array
        StatusIds:
          description: Status Ids
          items:
            format: int32
            type: integer
          type: array
        ExtendedStatusIds:
          description: Extended Status Ids
          items:
            format: int32
            type: integer
          type: array
        PriorityIds:
          description: Priority Ids
          items:
            format: int32
            type: integer
          type: array
        TradeIds:
          description: Trade Ids
          items:
            format: int32
            type: integer
          type: array
        ClosedReasonIds:
          description: Closed Reason Ids
          items:
            format: int32
            type: integer
          type: array
        EventIds:
          description: Event Ids
          items:
            type: string
          type: array
        WorkOrderIds:
          description: Work Order Ids
          items:
            format: int32
            type: integer
          type: array
        AssetIds:
          description: Asset Ids
          items:
            format: int32
            type: integer
          type: array
        CallDateFrom:
          description: Minimum Call Date
          type: string
        CallDateTo:
          description: Maximum Call Date
          type: string
        ScheduledDateFrom:
          description: Minimum Scheduled Date
          type: string
        ScheduledDateTo:
          description: Maximum Scheduled Date
          type: string
        ClosedDateFrom:
          description: Minimum Closed Date
          type: string
        ClosedDateTo:
          description: Maximum Closed Date
          type: string
        SortField:
          description: Sort Field
          enum:
          - Id
          - CallDate
          - ScheduledDate
          - ClosedDate
          type: string
        SortDirection:
          description: Sort direction
          enum:
          - Asc
          - Desc
          type: string
        Page:
          description: Page. Zero based
          format: int32
          type: integer
        PageSize:
          description: Page Size
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Rfp.Rfp:
      example:
        Description: Description
        DueDateDTO: 2000-01-23T04:56:07.000+00:00
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        WaitingForPrpEmail: WaitingForPrpEmail
        UpdatedDateDTO: 2000-01-23T04:56:07.000+00:00
        Proposals:
        - CurrentProposalMlpRuleSetName: CurrentProposalMlpRuleSetName
          Description: Description
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          UpdatedDateDto: 2000-01-23T04:56:07.000+00:00
          ScheduledDate: 2000-01-23T04:56:07.000+00:00
          SubmittedTo: SubmittedTo
          Attachments:
          - NoteId: 6
            Description: Description
            Visibility: 1
            Id: 0
            Uri: Uri
            TimeStamp: 2000-01-23T04:56:07.000+00:00
            Name: Name
          - NoteId: 6
            Description: Description
            Visibility: 1
            Id: 0
            Uri: Uri
            TimeStamp: 2000-01-23T04:56:07.000+00:00
            Name: Name
          CurrentProposalMlpRuleSetId: 7
          ScheduledDateDto: 2000-01-23T04:56:07.000+00:00
          MlpRecommendations:
          - Status: Status
            CategoryId: 3
            Comment: Comment
            Category: Category
            EmailMyself: false
            WorkOrderLabel:
              WoUrl: WoUrl
              Id: 0
              Name: Name
            SelectedTrackingNumber: 6
            Priority: Priority
            PoNumber: PoNumber
            MyEmail: MyEmail
            WoType: Origin
            OriginalTrackingNumber: 5
            Applied: false
            ApprovalCode: ApprovalCode
            EmailsToNotify: EmailsToNotify
            GeneratedTrackingNumber: 3
            ApprovalReason: ApprovalReason
            UserId: 6
            RejectCodeId: 7
            ProposalId: 6
            Id: 2
            NotSavedRecommendation: false
          - Status: Status
            CategoryId: 3
            Comment: Comment
            Category: Category
            EmailMyself: false
            WorkOrderLabel:
              WoUrl: WoUrl
              Id: 0
              Name: Name
            SelectedTrackingNumber: 6
            Priority: Priority
            PoNumber: PoNumber
            MyEmail: MyEmail
            WoType: Origin
            OriginalTrackingNumber: 5
            Applied: false
            ApprovalCode: ApprovalCode
            EmailsToNotify: EmailsToNotify
            GeneratedTrackingNumber: 3
            ApprovalReason: ApprovalReason
            UserId: 6
            RejectCodeId: 7
            ProposalId: 6
            Id: 2
            NotSavedRecommendation: false
          Description2: Description2
          LevelsEscalateTo:
          - Action: Action
            SkippedOverLimit: false
            EscalateToLevelRule:
              Action: Action
              Actions:
              - EntryLevel: false
                LocationId: 8
                RuleOrder: 9
                ActionNotification: false
                Name: Name
                ForwardToLevelName: ForwardToLevelName
                RuleSetId: 6
                AutoEscalateInDays: 1
                CodeChange: false
                UserId: 9
                EndStatus: EndStatus
                LevelName: LevelName
                CategoryChange: false
                SkipOverLimit: false
                RuleNumber: 5
                Limit: 6.84685269835264
                Id: 9
                ForwardTo: 7
                Override: false
                LevelId: 4
              - EntryLevel: false
                LocationId: 8
                RuleOrder: 9
                ActionNotification: false
                Name: Name
                ForwardToLevelName: ForwardToLevelName
                RuleSetId: 6
                AutoEscalateInDays: 1
                CodeChange: false
                UserId: 9
                EndStatus: EndStatus
                LevelName: LevelName
                CategoryChange: false
                SkipOverLimit: false
                RuleNumber: 5
                Limit: 6.84685269835264
                Id: 9
                ForwardTo: 7
                Override: false
                LevelId: 4
              AutoEscalate: 3
              RuleOrder: 1
              ActionNotification: false
              LevelName: LevelName
              SkipOverLimit: false
              StatusTo: StatusTo
              ForwardToName: ForwardToName
              Limit: 6.965117697638846
              ForwardTo: 6
              Override: false
              LevelId: 1
            EscalateToLevel: EscalateToLevel
            HasActiveUsers: false
            DisabledUserIds:
            - 1
            - 1
            EscalateToLevelId: 1
          - Action: Action
            SkippedOverLimit: false
            EscalateToLevelRule:
              Action: Action
              Actions:
              - EntryLevel: false
                LocationId: 8
                RuleOrder: 9
                ActionNotification: false
                Name: Name
                ForwardToLevelName: ForwardToLevelName
                RuleSetId: 6
                AutoEscalateInDays: 1
                CodeChange: false
                UserId: 9
                EndStatus: EndStatus
                LevelName: LevelName
                CategoryChange: false
                SkipOverLimit: false
                RuleNumber: 5
                Limit: 6.84685269835264
                Id: 9
                ForwardTo: 7
                Override: false
                LevelId: 4
              - EntryLevel: false
                LocationId: 8
                RuleOrder: 9
                ActionNotification: false
                Name: Name
                ForwardToLevelName: ForwardToLevelName
                RuleSetId: 6
                AutoEscalateInDays: 1
                CodeChange: false
                UserId: 9
                EndStatus: EndStatus
                LevelName: LevelName
                CategoryChange: false
                SkipOverLimit: false
                RuleNumber: 5
                Limit: 6.84685269835264
                Id: 9
                ForwardTo: 7
                Override: false
                LevelId: 4
              AutoEscalate: 3
              RuleOrder: 1
              ActionNotification: false
              LevelName: LevelName
              SkipOverLimit: false
              StatusTo: StatusTo
              ForwardToName: ForwardToName
              Limit: 6.965117697638846
              ForwardTo: 6
              Override: false
              LevelId: 1
            EscalateToLevel: EscalateToLevel
            HasActiveUsers: false
            DisabledUserIds:
            - 1
            - 1
            EscalateToLevelId: 1
          Trade:
            SubscriberId: 9
            Id: 5
            Name: Name
          WorkOrder:
            Invoice:
              StatusChangeUser: StatusChangeUser
              WoTrackingNumber: 6
              NonTaxableOther: 9
              WoAssignedTo: WoAssignedTo
              UpdatedDate: 2000-01-23T04:56:07.000+00:00
              Materials:
              - MarkUpPercent: 6.073898085781152
                Description: Description
                PartNum: PartNum
                Amount: 0.43431398824148815
                IsRateDiscrepancy: false
                Quantity: 3.901545264248647
                IsPartPriceDiscrepancy: false
                AgreedPartPrice: 4.459605034958679
                PriceDiscrepancyReason: PriceDiscrepancyReason
                InvoiceId: 5
                UnitPrice: 4.86315908102884
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                PartName: PartName
                UnitType: UnitType
                MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
                isNontaxableVATEU: false
                Id: 7
                AgreedMarkUpPercent: 8.251625748923757
                IsMarkUpDiscrepancy: false
              - MarkUpPercent: 6.073898085781152
                Description: Description
                PartNum: PartNum
                Amount: 0.43431398824148815
                IsRateDiscrepancy: false
                Quantity: 3.901545264248647
                IsPartPriceDiscrepancy: false
                AgreedPartPrice: 4.459605034958679
                PriceDiscrepancyReason: PriceDiscrepancyReason
                InvoiceId: 5
                UnitPrice: 4.86315908102884
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                PartName: PartName
                UnitType: UnitType
                MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
                isNontaxableVATEU: false
                Id: 7
                AgreedMarkUpPercent: 8.251625748923757
                IsMarkUpDiscrepancy: false
              PostedTaxRate: 1.4894159
              Payments:
              - PaymentDate: 2000-01-23T04:56:07.000+00:00
                PaidBy: PaidBy
                Id: 1
                PaymentAmount: 6.84685269835264
                PaymentNumber: PaymentNumber
              - PaymentDate: 2000-01-23T04:56:07.000+00:00
                PaidBy: PaidBy
                Id: 1
                PaymentAmount: 6.84685269835264
                PaymentNumber: PaymentNumber
              InvoiceBalance: 4.965218492984954
              TravelTaxIncluded: false
              StarredDate: 2000-01-23T04:56:07.000+00:00
              Trade: Trade
              InvoiceAmountsDetails:
                MaterialAmount: 6.878052220127876
                TravelAmount: 5.944895607614016
                FreightAmount: 6.704019297950036
                OtherDescription: OtherDescription
                LaborAmount: 6.778324963048013
                OtherAmount: 3.353193347011243
              Subscriber:
                Zip: Zip
                DecimalSeparator: DecimalSeparator
                TimeFormat: TimeFormat
                Email: Email
                PrimaryCurrency:
                  DecimalCount: 1
                  Entity: Entity
                  AlphabeticalCode: AlphabeticalCode
                  NumericCode: NumericCode
                  Rate: 4.965218492984954
                  Id: 7
                  CurrencyName: CurrencyName
                IsOutsourcedWorkOn: false
                Address2: Address2
                ShortName: ShortName
                Users:
                - UserName: UserName
                  Email: Email
                  MlpUserInfo:
                    Id: 1
                    MlpLevel: MlpLevel
                    MlpLocations:
                    - 6
                    - 6
                  Access:
                    Trades:
                    - Trades
                    - Trades
                    Locations:
                    - Locations
                    - Locations
                    Districts:
                    - Districts
                    - Districts
                    Regions:
                    - Regions
                    - Regions
                  Dashboard:
                    Id: 2
                    RedirectToDashboard: false
                    Name: Name
                  MliUserInfo:
                    MliLocations:
                    - 1
                    - 1
                    Id: 1
                    MliLevel: MliLevel
                  Roles:
                  - Roles
                  - Roles
                  Limits:
                    NteLimit:
                      Amount: 4.145608029883936
                      CurrencyId: 7
                    ProposalLimit:
                      Amount: 4.145608029883936
                      CurrencyId: 7
                    InvoiceLimit:
                      Amount: 4.145608029883936
                      CurrencyId: 7
                  SubscriberId: 3
                  FullName: FullName
                  PsmEmail: PsmEmail
                  Permissions:
                  - Permissions
                  - Permissions
                  Id: 9
                  Disabled: false
                  UserType: Corporate
                  FeedRole: FeedRole
                - UserName: UserName
                  Email: Email
                  MlpUserInfo:
                    Id: 1
                    MlpLevel: MlpLevel
                    MlpLocations:
                    - 6
                    - 6
                  Access:
                    Trades:
                    - Trades
                    - Trades
                    Locations:
                    - Locations
                    - Locations
                    Districts:
                    - Districts
                    - Districts
                    Regions:
                    - Regions
                    - Regions
                  Dashboard:
                    Id: 2
                    RedirectToDashboard: false
                    Name: Name
                  MliUserInfo:
                    MliLocations:
                    - 1
                    - 1
                    Id: 1
                    MliLevel: MliLevel
                  Roles:
                  - Roles
                  - Roles
                  Limits:
                    NteLimit:
                      Amount: 4.145608029883936
                      CurrencyId: 7
                    ProposalLimit:
                      Amount: 4.145608029883936
                      CurrencyId: 7
                    InvoiceLimit:
                      Amount: 4.145608029883936
                      CurrencyId: 7
                  SubscriberId: 3
                  FullName: FullName
                  PsmEmail: PsmEmail
                  Permissions:
                  - Permissions
                  - Permissions
                  Id: 9
                  Disabled: false
                  UserType: Corporate
                  FeedRole: FeedRole
                Address1: Address1
                City: City
                Name: Name
                State: State
                Phone: Phone
                DateFormat: DateFormat
                Country: Country
                Id: 7
                Fax: Fax
                ContactName: ContactName
              Currency:
                DecimalCount: 1
                Entity: Entity
                AlphabeticalCode: AlphabeticalCode
                NumericCode: NumericCode
                Rate: 4.965218492984954
                Id: 7
                CurrencyName: CurrencyName
              PostedBy: PostedBy
              InvoiceTax: 1.0246457001441578
              FreightApprovalCodeGroups:
              - ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              WithMismatchedRates: false
              IsStarred: false
              NonTaxableMaterial: 6
              Status: Status
              ApprovalCodes:
              - ParentId: 2
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 3
                Id: 7
                InternalParentId: 8
                InvoiceId: 0
                InvoiceChargeId: 3
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 2
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 3
                Id: 7
                InternalParentId: 8
                InvoiceId: 0
                InvoiceChargeId: 3
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              StatusHistoryShort:
              - Status: Status
                CreatedBy: CreatedBy
                CreatedById: 9
                InvId: 5
                ActionDate: ActionDate
              - Status: Status
                CreatedBy: CreatedBy
                CreatedById: 9
                InvId: 5
                ActionDate: ActionDate
              Tax2ApprovalCodeGroups:
              - ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              BatchNumber: BatchNumber
              ApprovedDate: 2000-01-23T04:56:07.000+00:00
              LaborTaxIncluded: false
              IsDuplicate: false
              Subtotal: 5.025004791520295
              Terms: Terms
              VendorPayeeId: 7
              InvoiceTotal: 1.1730742509559433
              PostedDate: 2000-01-23T04:56:07.000+00:00
              NonTaxableFreight: 8
              Id: 1
              TaxApprovalCodeGroups:
              - ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              MaterialsTaxIncluded: false
              StoredFeatures:
              - StoredFeatures
              - StoredFeatures
              Description: Description
              IsTransferred: false
              Tax2Details:
                Tax2Amount: 3.0576100241049344
                Tax2Name: Tax2Name
              InvoiceTaxesDetails:
                LaborTaxPercent: 3.0937452626664474
                TravelTaxPercent: 0.8851374739011653
                FreightTaxPercent: 7.058770351582356
                TravelTax: 8.969578798196912
                MaterialTax: 4.652396432933246
                OtherTax: 3.0205796992916243
                MaterialTaxPercent: 7.143538047012306
                OtherTaxPercent: 6.519180951018382
                LaborTax: 0.10263654006109402
                FreightTax: 7.740351818741173
              LastActionDate: 2000-01-23T04:56:07.000+00:00
              NonTaxableLabor: 9
              PaidDate: 2000-01-23T04:56:07.000+00:00
              FreightTaxIncluded: false
              Number: Number
              Labors:
              - SkillLevel: SkillLevel
                Hours: 4.078845849666752
                Amount: 0.2025324113236393
                IsRateDiscrepancy: false
                RateDiscrepancyReason: RateDiscrepancyReason
                CityPerformed: CityPerformed
                InvoiceId: 5
                NumOfTech: NumOfTech
                HourlyRate: 3.2588565619047607
                IsOffShore: false
                AgreedRate: 6.628464275087742
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                LaborType: LaborType
                ServiceType: ServiceType
                isNontaxableVATEU: false
                Id: 7
              - SkillLevel: SkillLevel
                Hours: 4.078845849666752
                Amount: 0.2025324113236393
                IsRateDiscrepancy: false
                RateDiscrepancyReason: RateDiscrepancyReason
                CityPerformed: CityPerformed
                InvoiceId: 5
                NumOfTech: NumOfTech
                HourlyRate: 3.2588565619047607
                IsOffShore: false
                AgreedRate: 6.628464275087742
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                LaborType: LaborType
                ServiceType: ServiceType
                isNontaxableVATEU: false
                Id: 7
              Travels:
              - IsOffShore: false
                UnitPrice: 8.28965939814297
                Description: Description
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                UnitType: UnitType
                Amount: 4.573936264232251
                Quantity: 6.623518433804886
                isNontaxableVATEU: false
                Id: 2
                InvoiceId: 1
              - IsOffShore: false
                UnitPrice: 8.28965939814297
                Description: Description
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                UnitType: UnitType
                Amount: 4.573936264232251
                Quantity: 6.623518433804886
                isNontaxableVATEU: false
                Id: 2
                InvoiceId: 1
              NonTaxableTravel: 9
              InvoiceDate: 2000-01-23T04:56:07.000+00:00
              IsOutsourced: false
              IsChargesApprovalCodesDefault: false
              Others:
              - Description: Description
                Amount: 1.8268702177058116
                Quantity: 9.183123594773994
                InvoiceId: 9
                AgreedUnitPrice: 8.761432466225475
                PriceListOtherChargeId: 0
                Type: Type
                UnitPrice: 3.502657762086401
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                UnitType: UnitType
                IsUnitPriceDiscrepancy: false
                UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
                isNontaxableVATEU: false
                Id: 8
              - Description: Description
                Amount: 1.8268702177058116
                Quantity: 9.183123594773994
                InvoiceId: 9
                AgreedUnitPrice: 8.761432466225475
                PriceListOtherChargeId: 0
                Type: Type
                UnitPrice: 3.502657762086401
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                UnitType: UnitType
                IsUnitPriceDiscrepancy: false
                UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
                isNontaxableVATEU: false
                Id: 8
              StarredBy: StarredBy
              Comments: Comments
              PostedTax2Rate: 6.846853
              EditableAdditionalApprovalCode:
                SetupId: 8
                Options:
                - Value: Value
                  Id: 1
                - Value: Value
                  Id: 1
                DefaultValue: DefaultValue
                ValueFormat: 3
                Header: Header
                DefaultOptionId: 6
                EditableAtLineItemLevel: 6
                Value: Value
                LocationId: 9
              IsExists: false
              ApprovalCode: ApprovalCode
              Provider:
                Zip: Zip
                MailFrequency: 1
                Email: Email
                ImageFile: ImageFile
                DateCreated: 2000-01-23T04:56:07.000+00:00
                TaxId: TaxId
                Name: Name
                Trade: Trade
                Phone: Phone
                FaxNumber: FaxNumber
                LastTrainingDate: 2000-01-23T04:56:07.000+00:00
                FormId: 5
                SuperUser: SuperUser
                MailInfo: MailInfo
                NightRequest: 5
                ReturnMail: ReturnMail
                MainContact: MainContact
                Address2: Address2
                Address1: Address1
                City: City
                IsInternal: false
                ProcessingEmail: ProcessingEmail
                ShortFormatEmail: ShortFormatEmail
                DoNotDispatch: false
                IsOnOffShoreFeatureEnabled: false
                State: State
                FullName: FullName
                Pager: Pager
                WebSite: WebSite
                Country: Country
                LastUserDate: LastUserDate
                Id: 2
                SuiteFloor: SuiteFloor
                LastTrainingDateStr: LastTrainingDateStr
              OtherTaxIncluded: false
              StatusChangeDate: 2000-01-23T04:56:07.000+00:00
              TransferredDate: 2000-01-23T04:56:07.000+00:00
              StatusChangeUserid: StatusChangeUserid
              Location:
                Zip: Zip
                Radius: 3.5571952270680973
                Email: Email
                TimeZoneInfoId: 6
                TimeZoneIanaName: TimeZoneIanaName
                OpenDate: 2000-01-23T04:56:07.000+00:00
                SquareValue: 6.778324963048013
                StateId: 1
                ShortName: ShortName
                Latitude: 8.762042012749001
                CountyId: 5
                Name: Name
                AddressTypeId: 7
                StoreId: StoreId
                SquareMeasure: SquareMeasure
                TimeZoneShortDescription: TimeZoneShortDescription
                SubscriberId: 6
                Phone: Phone
                FaxNumber: FaxNumber
                SubscriberName: SubscriberName
                Supplier: Supplier
                HasInventory: false
                Distance: 6.438423552598547
                Notes:
                - Header: Header
                  HeaderId: 3
                  Value: Value
                  Id: 6
                - Header: Header
                  HeaderId: 3
                  Value: Value
                  Id: 6
                CountryId: 2
                Status: Status
                Address2: Address2
                TypeLabel: TypeLabel
                FormattedAddress: FormattedAddress
                Address1: Address1
                City: City
                TimeShiftToEST: 3
                Longitude: 9.018348186070783
                Contact: Contact
                LocationFormattedAddressTail: LocationFormattedAddressTail
                LocationTypeId: 6
                State: State
                Region: Region
                Country: Country
                Id: 9
                ClosedDate: 2000-01-23T04:56:07.000+00:00
                District: District
                TimeZoneMsName: TimeZoneMsName
            UpdatedDate: 2000-01-23T04:56:07.000+00:00
            FrequencyId: 6
            CheckInDeniedReason: CheckInDeniedReason
            ScheduledDate: 2000-01-23T04:56:07.000+00:00
            Tax: 2.027123023002322
            AutoInvoice: false
            Trade: Trade
            ProviderRank: 7
            Subscriber:
              Zip: Zip
              DecimalSeparator: DecimalSeparator
              TimeFormat: TimeFormat
              Email: Email
              PrimaryCurrency:
                DecimalCount: 1
                Entity: Entity
                AlphabeticalCode: AlphabeticalCode
                NumericCode: NumericCode
                Rate: 4.965218492984954
                Id: 7
                CurrencyName: CurrencyName
              IsOutsourcedWorkOn: false
              Address2: Address2
              ShortName: ShortName
              Users:
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              Address1: Address1
              City: City
              Name: Name
              State: State
              Phone: Phone
              DateFormat: DateFormat
              Country: Country
              Id: 7
              Fax: Fax
              ContactName: ContactName
            Currency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            UpdatedDate_DTO: 2000-01-23T04:56:07.000+00:00
            Asset:
              ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
              ImportedFrom: 3
              ManufacturerDate: 2000-01-23T04:56:07.000+00:00
              AssetLeakDetectorConnectionId: 4
              LeasePeriod: 3
              AssetRefrigerant:
                RackId: RackId
                RefrigerantUsageType: 1
                AssetTypeId: 3
                RefrigerantPartNumber: RefrigerantPartNumber
                RefrigerantPurposeName: RefrigerantPurposeName
                AssetLeakDetectorId: 2
                CurrentChargeMetrics: 6.683562403749608
                ParentId: 1
                EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
                CarbID: CarbID
                RackEntityId: 4
                RackTypeName: RackTypeName
                OperationalStatus: OperationalStatus
                SystemLocation: SystemLocation
                CreateOperationalStatusHistory: false
                IsCarbReporting: false
                RackTypeId: 9
                RefrigerantPurposeId: 6
                HasLeakDetector: false
                ChargeProviderName: ChargeProviderName
                UserId: 6
                TagId: TagId
                OperationStatusDate: 2000-01-23T04:56:07.000+00:00
                CurrentChargeOunces: 8.762042012749001
                CurrentCharge: 9.369310271410669
                ChargeDescriptionId: 9
                Id: 6
                PartNumberId: 5
                AssetId: 7
              LastModifiedUserName: LastModifiedUserName
              BrandId: 5
              AssetValidationStatus: 6
              Trade: Trade
              EnergyEfficiency: EnergyEfficiency
              CustomAttributes:
              - ValueText: ValueText
                Required: false
                ValueType: 8
                EquipmentId: 7
                Value: "{}"
                Visible: false
                EquipmentTypeAttributeId: 4
                SelectedOptionsText: SelectedOptionsText
                Editable: false
                Custom: false
                EquipmentAttributeId: 0
                Name: Name
              - ValueText: ValueText
                Required: false
                ValueType: 8
                EquipmentId: 7
                Value: "{}"
                Visible: false
                EquipmentTypeAttributeId: 4
                SelectedOptionsText: SelectedOptionsText
                Editable: false
                Custom: false
                EquipmentAttributeId: 0
                Name: Name
              Capacity: Capacity
              SubscriberId: 7
              Currency: 3
              Manufacturer: Manufacturer
              SubName: SubName
              SerialNo: SerialNo
              Warranty:
                ProviderId: 7
                Category: Category
                ExpirationDate: 2000-01-23T04:56:07.000+00:00
                Priority: Priority
                Expiration:
                  Type: FromPurchaseDate
                  Period: 1
                NTE: 1.2315135367772556
                Provider:
                  ProviderName: ProviderName
                  Type: Fixed
                  Value: 1
              UsesRefrigerant: 2
              AssetUpdatesStatus: AssetUpdatesStatus
              LifeExpectancy: 7
              OriginalValue: 9.301444243932576
              AssetAttributesMap:
                EditableForProvidersAttributesMap: 5
                ViewableForProvidersAttributesMap: 6
                RequiredStandardAttributesMap: 6
                StandardAttributesMap: 6
              AssetTag: AssetTag
              IsCircuit: false
              Area: Area
              Active: false
              IsCarbReporting: false
              HasLeakDetector: false
              PurchaseDate: PurchaseDate
              HasCircuits: false
              CreatedDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              IsLeased: false
              LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
              HasComponents: false
              AdditionalTradesNames: AdditionalTradesNames
              Description: Description
              AssetStatus: AssetStatus
              ModifiedDate: 2000-01-23T04:56:07.000+00:00
              HasChilds: false
              RetiredDate: 2000-01-23T04:56:07.000+00:00
              AssetTypeId: 5
              StoreId: StoreId
              ConditionString: ConditionString
              LeaseDate: LeaseDate
              AssetValidated: false
              HasTagged: false
              AssetTypeGroupId: 0
              WorkOrderArea: WorkOrderArea
              Condition: 2
              ParentId: 3
              TradeId: 1
              IsLeakDetector: false
              LocationId: 6
              InstallDate: InstallDate
              ModelNo: ModelNo
              IsReplaceEquipment: false
              Type: Type
              Spend: 7.058770351582356
              Tag: Tag
              ManufacturerDateStr: ManufacturerDateStr
              Location: Location
              ValidationRequired: false
            AutoComplete: false
            OriginalEta_DTO: 2000-01-23T04:56:07.000+00:00
            Status:
              Primary: Primary
              Extended: Extended
              CanCreateInvoice: false
            EstimatedCompletionDate: 2000-01-23T04:56:07.000+00:00
            Tax2: 4.145608029883936
            IssueTicketInfo:
              AreaName: AreaName
              SetupId: 5
              Equipment: Equipment
              AreaId: 5
              ProblemGroup: ProblemGroup
              ProblemCode: ProblemCode
              Id: 1
              TicketType: TicketType
            IsExpired: false
            Assignee:
              UserName: UserName
              UserId: 0
            CreatedBy: CreatedBy
            Priority: Priority
            ReassignDate_DTO: 2000-01-23T04:56:07.000+00:00
            AssetCount: 3
            ProblemCode: ProblemCode
            Labels:
            - Label: Label
              Id: 7
            - Label: Label
              Id: 7
            LocationOpenDate: LocationOpenDate
            Tax2Type: Tax2Type
            CompletedDate: 2000-01-23T04:56:07.000+00:00
            ScheduledDate_DTO: 2000-01-23T04:56:07.000+00:00
            Price: 7.386281948385884
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            IsInvoiced: false
            Id: 0
            Nte: 3.616076749251911
            CallerId: 3
            LocationRemodelDate: LocationRemodelDate
            Resolution: Resolution
            CategoryId: 9
            LinkedWorkOrders:
            - Id: 5
            - Id: 5
            Description: Description
            Category: Category
            HasWorkActivity: false
            CallDate: 2000-01-23T04:56:07.000+00:00
            RecallWorkOrder: 6
            IsCheckInDenied: false
            Attachments:
              Count:
                Total: 6
                Own: 1
            Source: Source
            ServiceId: 0
            Number: Number
            LinkedInWorkOrders:
            - Id: 5
            - Id: 5
            Assets:
            - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
              ImportedFrom: 3
              ManufacturerDate: 2000-01-23T04:56:07.000+00:00
              AssetLeakDetectorConnectionId: 4
              LeasePeriod: 3
              AssetRefrigerant:
                RackId: RackId
                RefrigerantUsageType: 1
                AssetTypeId: 3
                RefrigerantPartNumber: RefrigerantPartNumber
                RefrigerantPurposeName: RefrigerantPurposeName
                AssetLeakDetectorId: 2
                CurrentChargeMetrics: 6.683562403749608
                ParentId: 1
                EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
                CarbID: CarbID
                RackEntityId: 4
                RackTypeName: RackTypeName
                OperationalStatus: OperationalStatus
                SystemLocation: SystemLocation
                CreateOperationalStatusHistory: false
                IsCarbReporting: false
                RackTypeId: 9
                RefrigerantPurposeId: 6
                HasLeakDetector: false
                ChargeProviderName: ChargeProviderName
                UserId: 6
                TagId: TagId
                OperationStatusDate: 2000-01-23T04:56:07.000+00:00
                CurrentChargeOunces: 8.762042012749001
                CurrentCharge: 9.369310271410669
                ChargeDescriptionId: 9
                Id: 6
                PartNumberId: 5
                AssetId: 7
              LastModifiedUserName: LastModifiedUserName
              BrandId: 5
              AssetValidationStatus: 6
              Trade: Trade
              EnergyEfficiency: EnergyEfficiency
              CustomAttributes:
              - ValueText: ValueText
                Required: false
                ValueType: 8
                EquipmentId: 7
                Value: "{}"
                Visible: false
                EquipmentTypeAttributeId: 4
                SelectedOptionsText: SelectedOptionsText
                Editable: false
                Custom: false
                EquipmentAttributeId: 0
                Name: Name
              - ValueText: ValueText
                Required: false
                ValueType: 8
                EquipmentId: 7
                Value: "{}"
                Visible: false
                EquipmentTypeAttributeId: 4
                SelectedOptionsText: SelectedOptionsText
                Editable: false
                Custom: false
                EquipmentAttributeId: 0
                Name: Name
              Capacity: Capacity
              SubscriberId: 7
              Currency: 3
              Manufacturer: Manufacturer
              SubName: SubName
              SerialNo: SerialNo
              Warranty:
                ProviderId: 7
                Category: Category
                ExpirationDate: 2000-01-23T04:56:07.000+00:00
                Priority: Priority
                Expiration:
                  Type: FromPurchaseDate
                  Period: 1
                NTE: 1.2315135367772556
                Provider:
                  ProviderName: ProviderName
                  Type: Fixed
                  Value: 1
              UsesRefrigerant: 2
              AssetUpdatesStatus: AssetUpdatesStatus
              LifeExpectancy: 7
              OriginalValue: 9.301444243932576
              AssetAttributesMap:
                EditableForProvidersAttributesMap: 5
                ViewableForProvidersAttributesMap: 6
                RequiredStandardAttributesMap: 6
                StandardAttributesMap: 6
              AssetTag: AssetTag
              IsCircuit: false
              Area: Area
              Active: false
              IsCarbReporting: false
              HasLeakDetector: false
              PurchaseDate: PurchaseDate
              HasCircuits: false
              CreatedDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              IsLeased: false
              LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
              HasComponents: false
              AdditionalTradesNames: AdditionalTradesNames
              Description: Description
              AssetStatus: AssetStatus
              ModifiedDate: 2000-01-23T04:56:07.000+00:00
              HasChilds: false
              RetiredDate: 2000-01-23T04:56:07.000+00:00
              AssetTypeId: 5
              StoreId: StoreId
              ConditionString: ConditionString
              LeaseDate: LeaseDate
              AssetValidated: false
              HasTagged: false
              AssetTypeGroupId: 0
              WorkOrderArea: WorkOrderArea
              Condition: 2
              ParentId: 3
              TradeId: 1
              IsLeakDetector: false
              LocationId: 6
              InstallDate: InstallDate
              ModelNo: ModelNo
              IsReplaceEquipment: false
              Type: Type
              Spend: 7.058770351582356
              Tag: Tag
              ManufacturerDateStr: ManufacturerDateStr
              Location: Location
              ValidationRequired: false
            - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
              ImportedFrom: 3
              ManufacturerDate: 2000-01-23T04:56:07.000+00:00
              AssetLeakDetectorConnectionId: 4
              LeasePeriod: 3
              AssetRefrigerant:
                RackId: RackId
                RefrigerantUsageType: 1
                AssetTypeId: 3
                RefrigerantPartNumber: RefrigerantPartNumber
                RefrigerantPurposeName: RefrigerantPurposeName
                AssetLeakDetectorId: 2
                CurrentChargeMetrics: 6.683562403749608
                ParentId: 1
                EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
                CarbID: CarbID
                RackEntityId: 4
                RackTypeName: RackTypeName
                OperationalStatus: OperationalStatus
                SystemLocation: SystemLocation
                CreateOperationalStatusHistory: false
                IsCarbReporting: false
                RackTypeId: 9
                RefrigerantPurposeId: 6
                HasLeakDetector: false
                ChargeProviderName: ChargeProviderName
                UserId: 6
                TagId: TagId
                OperationStatusDate: 2000-01-23T04:56:07.000+00:00
                CurrentChargeOunces: 8.762042012749001
                CurrentCharge: 9.369310271410669
                ChargeDescriptionId: 9
                Id: 6
                PartNumberId: 5
                AssetId: 7
              LastModifiedUserName: LastModifiedUserName
              BrandId: 5
              AssetValidationStatus: 6
              Trade: Trade
              EnergyEfficiency: EnergyEfficiency
              CustomAttributes:
              - ValueText: ValueText
                Required: false
                ValueType: 8
                EquipmentId: 7
                Value: "{}"
                Visible: false
                EquipmentTypeAttributeId: 4
                SelectedOptionsText: SelectedOptionsText
                Editable: false
                Custom: false
                EquipmentAttributeId: 0
                Name: Name
              - ValueText: ValueText
                Required: false
                ValueType: 8
                EquipmentId: 7
                Value: "{}"
                Visible: false
                EquipmentTypeAttributeId: 4
                SelectedOptionsText: SelectedOptionsText
                Editable: false
                Custom: false
                EquipmentAttributeId: 0
                Name: Name
              Capacity: Capacity
              SubscriberId: 7
              Currency: 3
              Manufacturer: Manufacturer
              SubName: SubName
              SerialNo: SerialNo
              Warranty:
                ProviderId: 7
                Category: Category
                ExpirationDate: 2000-01-23T04:56:07.000+00:00
                Priority: Priority
                Expiration:
                  Type: FromPurchaseDate
                  Period: 1
                NTE: 1.2315135367772556
                Provider:
                  ProviderName: ProviderName
                  Type: Fixed
                  Value: 1
              UsesRefrigerant: 2
              AssetUpdatesStatus: AssetUpdatesStatus
              LifeExpectancy: 7
              OriginalValue: 9.301444243932576
              AssetAttributesMap:
                EditableForProvidersAttributesMap: 5
                ViewableForProvidersAttributesMap: 6
                RequiredStandardAttributesMap: 6
                StandardAttributesMap: 6
              AssetTag: AssetTag
              IsCircuit: false
              Area: Area
              Active: false
              IsCarbReporting: false
              HasLeakDetector: false
              PurchaseDate: PurchaseDate
              HasCircuits: false
              CreatedDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              IsLeased: false
              LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
              HasComponents: false
              AdditionalTradesNames: AdditionalTradesNames
              Description: Description
              AssetStatus: AssetStatus
              ModifiedDate: 2000-01-23T04:56:07.000+00:00
              HasChilds: false
              RetiredDate: 2000-01-23T04:56:07.000+00:00
              AssetTypeId: 5
              StoreId: StoreId
              ConditionString: ConditionString
              LeaseDate: LeaseDate
              AssetValidated: false
              HasTagged: false
              AssetTypeGroupId: 0
              WorkOrderArea: WorkOrderArea
              Condition: 2
              ParentId: 3
              TradeId: 1
              IsLeakDetector: false
              LocationId: 6
              InstallDate: InstallDate
              ModelNo: ModelNo
              IsReplaceEquipment: false
              Type: Type
              Spend: 7.058770351582356
              Tag: Tag
              ManufacturerDateStr: ManufacturerDateStr
              Location: Location
              ValidationRequired: false
            CreatedDate_DTO: 2000-01-23T04:56:07.000+00:00
            PostedId: 6
            Notes:
              Last:
                CreatedBy: CreatedBy
                Number: 6
                MailedTo: MailedTo
                ActionRequired: false
                DateCreated: 2000-01-23T04:56:07.000+00:00
                Id: 2
                NoteData: NoteData
              Count:
                Total: 6
                Own: 1
            TradeId: 2
            ClosingAuthorizationNumber: 3
            LocationId: 6
            ProjectId: 7
            IsEnabledForMobile: false
            ReassignDate: 2000-01-23T04:56:07.000+00:00
            CompletedDate_DTO: 2000-01-23T04:56:07.000+00:00
            ExpirationDate_DTO: 2000-01-23T04:56:07.000+00:00
            WeatherEvent:
              Id: 4
              Name: Name
            ApprovalCode: ApprovalCode
            Provider:
              Zip: Zip
              MailFrequency: 1
              Email: Email
              ImageFile: ImageFile
              DateCreated: 2000-01-23T04:56:07.000+00:00
              TaxId: TaxId
              Name: Name
              Trade: Trade
              Phone: Phone
              FaxNumber: FaxNumber
              LastTrainingDate: 2000-01-23T04:56:07.000+00:00
              FormId: 5
              SuperUser: SuperUser
              MailInfo: MailInfo
              NightRequest: 5
              ReturnMail: ReturnMail
              MainContact: MainContact
              Address2: Address2
              Address1: Address1
              City: City
              IsInternal: false
              ProcessingEmail: ProcessingEmail
              ShortFormatEmail: ShortFormatEmail
              DoNotDispatch: false
              IsOnOffShoreFeatureEnabled: false
              State: State
              FullName: FullName
              Pager: Pager
              WebSite: WebSite
              Country: Country
              LastUserDate: LastUserDate
              Id: 2
              SuiteFloor: SuiteFloor
              LastTrainingDateStr: LastTrainingDateStr
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            Caller: Caller
            PurchaseNumber: PurchaseNumber
            CallDate_DTO: 2000-01-23T04:56:07.000+00:00
            Location:
              Zip: Zip
              Radius: 3.5571952270680973
              Email: Email
              TimeZoneInfoId: 6
              TimeZoneIanaName: TimeZoneIanaName
              OpenDate: 2000-01-23T04:56:07.000+00:00
              SquareValue: 6.778324963048013
              StateId: 1
              ShortName: ShortName
              Latitude: 8.762042012749001
              CountyId: 5
              Name: Name
              AddressTypeId: 7
              StoreId: StoreId
              SquareMeasure: SquareMeasure
              TimeZoneShortDescription: TimeZoneShortDescription
              SubscriberId: 6
              Phone: Phone
              FaxNumber: FaxNumber
              SubscriberName: SubscriberName
              Supplier: Supplier
              HasInventory: false
              Distance: 6.438423552598547
              Notes:
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              CountryId: 2
              Status: Status
              Address2: Address2
              TypeLabel: TypeLabel
              FormattedAddress: FormattedAddress
              Address1: Address1
              City: City
              TimeShiftToEST: 3
              Longitude: 9.018348186070783
              Contact: Contact
              LocationFormattedAddressTail: LocationFormattedAddressTail
              LocationTypeId: 6
              State: State
              Region: Region
              Country: Country
              Id: 9
              ClosedDate: 2000-01-23T04:56:07.000+00:00
              District: District
              TimeZoneMsName: TimeZoneMsName
            OriginalEta: 2000-01-23T04:56:07.000+00:00
          IsMlpLimitOverrun: false
          Number: Number
          Subscriber:
            Zip: Zip
            DecimalSeparator: DecimalSeparator
            TimeFormat: TimeFormat
            Email: Email
            PrimaryCurrency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            IsOutsourcedWorkOn: false
            Address2: Address2
            ShortName: ShortName
            Users:
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            Address1: Address1
            City: City
            Name: Name
            State: State
            Phone: Phone
            DateFormat: DateFormat
            Country: Country
            Id: 7
            Fax: Fax
            ContactName: ContactName
          Currency:
            DecimalCount: 1
            Entity: Entity
            AlphabeticalCode: AlphabeticalCode
            NumericCode: NumericCode
            Rate: 4.965218492984954
            Id: 7
            CurrencyName: CurrencyName
          AssignedToLevel: AssignedToLevel
          RFP: null
          Status:
            ModifiedDate_dto: 2000-01-23T04:56:07.000+00:00
            Primary: Primary
            Extended: Extended
            ModifiedDate: 2000-01-23T04:56:07.000+00:00
            ModifiedBy: ModifiedBy
          CreatedBy:
            UserName: UserName
            Email: Email
            FullName: FullName
            LevelInfo:
              Order: 5
              UserId: 6
              LocationIds:
              - 1
              - 1
              CodeChange: false
              UsersLocations:
                key:
                - 2
                - 2
              LevelName: LevelName
              CategoryChange: false
              DivisionId: 7
              LevelId: 5
              PriorityChange: false
            Id: 0
          CurrentProposalMlpLevelId: 6
          AmountCategories:
          - TotalCost: 7.061401241503109
            Id: 2
            Name: Name
          - TotalCost: 7.061401241503109
            Id: 2
            Name: Name
          Actions:
          - Actions
          - Actions
          Comments: Comments
          Amount: 7.386281948385884
          PoNumber: PoNumber
          Recommendation:
            RecommendationType: None
            Score: None
            Currency: Currency
            NegativeFeedbacksRecallsPercent: 3.616076749251911
            ProposalId: 4
            ProviderCompliancePercent: 2.027123023002322
            RecommendationAmounts:
            - 9
            - 9
          Provider:
            Zip: Zip
            MailFrequency: 1
            Email: Email
            ImageFile: ImageFile
            DateCreated: 2000-01-23T04:56:07.000+00:00
            TaxId: TaxId
            Name: Name
            Trade: Trade
            Phone: Phone
            FaxNumber: FaxNumber
            LastTrainingDate: 2000-01-23T04:56:07.000+00:00
            FormId: 5
            SuperUser: SuperUser
            MailInfo: MailInfo
            NightRequest: 5
            ReturnMail: ReturnMail
            MainContact: MainContact
            Address2: Address2
            Address1: Address1
            City: City
            IsInternal: false
            ProcessingEmail: ProcessingEmail
            ShortFormatEmail: ShortFormatEmail
            DoNotDispatch: false
            IsOnOffShoreFeatureEnabled: false
            State: State
            FullName: FullName
            Pager: Pager
            WebSite: WebSite
            Country: Country
            LastUserDate: LastUserDate
            Id: 2
            SuiteFloor: SuiteFloor
            LastTrainingDateStr: LastTrainingDateStr
          AssignedTo:
            UserName: UserName
            Email: Email
            FullName: FullName
            LevelInfo:
              Order: 5
              UserId: 6
              LocationIds:
              - 1
              - 1
              CodeChange: false
              UsersLocations:
                key:
                - 2
                - 2
              LevelName: LevelName
              CategoryChange: false
              DivisionId: 7
              LevelId: 5
              PriorityChange: false
            Id: 0
          Project:
            Id: 0
            Name: Name
          CreatedDate_dto: 2000-01-23T04:56:07.000+00:00
          CurrentProposalMlpLevelName: CurrentProposalMlpLevelName
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          AssignedFromLevel: AssignedFromLevel
          Id: 5
          MlpRecommendation:
            Status: Status
            CategoryId: 3
            Comment: Comment
            Category: Category
            EmailMyself: false
            WorkOrderLabel:
              WoUrl: WoUrl
              Id: 0
              Name: Name
            SelectedTrackingNumber: 6
            Priority: Priority
            PoNumber: PoNumber
            MyEmail: MyEmail
            WoType: Origin
            OriginalTrackingNumber: 5
            Applied: false
            ApprovalCode: ApprovalCode
            EmailsToNotify: EmailsToNotify
            GeneratedTrackingNumber: 3
            ApprovalReason: ApprovalReason
            UserId: 6
            RejectCodeId: 7
            ProposalId: 6
            Id: 2
            NotSavedRecommendation: false
          Location:
            Zip: Zip
            Radius: 3.5571952270680973
            Email: Email
            TimeZoneInfoId: 6
            TimeZoneIanaName: TimeZoneIanaName
            OpenDate: 2000-01-23T04:56:07.000+00:00
            SquareValue: 6.778324963048013
            StateId: 1
            ShortName: ShortName
            Latitude: 8.762042012749001
            CountyId: 5
            Name: Name
            AddressTypeId: 7
            StoreId: StoreId
            SquareMeasure: SquareMeasure
            TimeZoneShortDescription: TimeZoneShortDescription
            SubscriberId: 6
            Phone: Phone
            FaxNumber: FaxNumber
            SubscriberName: SubscriberName
            Supplier: Supplier
            HasInventory: false
            Distance: 6.438423552598547
            Notes:
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            CountryId: 2
            Status: Status
            Address2: Address2
            TypeLabel: TypeLabel
            FormattedAddress: FormattedAddress
            Address1: Address1
            City: City
            TimeShiftToEST: 3
            Longitude: 9.018348186070783
            Contact: Contact
            LocationFormattedAddressTail: LocationFormattedAddressTail
            LocationTypeId: 6
            State: State
            Region: Region
            Country: Country
            Id: 9
            ClosedDate: 2000-01-23T04:56:07.000+00:00
            District: District
            TimeZoneMsName: TimeZoneMsName
          NextLevelEmpty: false
        - CurrentProposalMlpRuleSetName: CurrentProposalMlpRuleSetName
          Description: Description
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          UpdatedDateDto: 2000-01-23T04:56:07.000+00:00
          ScheduledDate: 2000-01-23T04:56:07.000+00:00
          SubmittedTo: SubmittedTo
          Attachments:
          - NoteId: 6
            Description: Description
            Visibility: 1
            Id: 0
            Uri: Uri
            TimeStamp: 2000-01-23T04:56:07.000+00:00
            Name: Name
          - NoteId: 6
            Description: Description
            Visibility: 1
            Id: 0
            Uri: Uri
            TimeStamp: 2000-01-23T04:56:07.000+00:00
            Name: Name
          CurrentProposalMlpRuleSetId: 7
          ScheduledDateDto: 2000-01-23T04:56:07.000+00:00
          MlpRecommendations:
          - Status: Status
            CategoryId: 3
            Comment: Comment
            Category: Category
            EmailMyself: false
            WorkOrderLabel:
              WoUrl: WoUrl
              Id: 0
              Name: Name
            SelectedTrackingNumber: 6
            Priority: Priority
            PoNumber: PoNumber
            MyEmail: MyEmail
            WoType: Origin
            OriginalTrackingNumber: 5
            Applied: false
            ApprovalCode: ApprovalCode
            EmailsToNotify: EmailsToNotify
            GeneratedTrackingNumber: 3
            ApprovalReason: ApprovalReason
            UserId: 6
            RejectCodeId: 7
            ProposalId: 6
            Id: 2
            NotSavedRecommendation: false
          - Status: Status
            CategoryId: 3
            Comment: Comment
            Category: Category
            EmailMyself: false
            WorkOrderLabel:
              WoUrl: WoUrl
              Id: 0
              Name: Name
            SelectedTrackingNumber: 6
            Priority: Priority
            PoNumber: PoNumber
            MyEmail: MyEmail
            WoType: Origin
            OriginalTrackingNumber: 5
            Applied: false
            ApprovalCode: ApprovalCode
            EmailsToNotify: EmailsToNotify
            GeneratedTrackingNumber: 3
            ApprovalReason: ApprovalReason
            UserId: 6
            RejectCodeId: 7
            ProposalId: 6
            Id: 2
            NotSavedRecommendation: false
          Description2: Description2
          LevelsEscalateTo:
          - Action: Action
            SkippedOverLimit: false
            EscalateToLevelRule:
              Action: Action
              Actions:
              - EntryLevel: false
                LocationId: 8
                RuleOrder: 9
                ActionNotification: false
                Name: Name
                ForwardToLevelName: ForwardToLevelName
                RuleSetId: 6
                AutoEscalateInDays: 1
                CodeChange: false
                UserId: 9
                EndStatus: EndStatus
                LevelName: LevelName
                CategoryChange: false
                SkipOverLimit: false
                RuleNumber: 5
                Limit: 6.84685269835264
                Id: 9
                ForwardTo: 7
                Override: false
                LevelId: 4
              - EntryLevel: false
                LocationId: 8
                RuleOrder: 9
                ActionNotification: false
                Name: Name
                ForwardToLevelName: ForwardToLevelName
                RuleSetId: 6
                AutoEscalateInDays: 1
                CodeChange: false
                UserId: 9
                EndStatus: EndStatus
                LevelName: LevelName
                CategoryChange: false
                SkipOverLimit: false
                RuleNumber: 5
                Limit: 6.84685269835264
                Id: 9
                ForwardTo: 7
                Override: false
                LevelId: 4
              AutoEscalate: 3
              RuleOrder: 1
              ActionNotification: false
              LevelName: LevelName
              SkipOverLimit: false
              StatusTo: StatusTo
              ForwardToName: ForwardToName
              Limit: 6.965117697638846
              ForwardTo: 6
              Override: false
              LevelId: 1
            EscalateToLevel: EscalateToLevel
            HasActiveUsers: false
            DisabledUserIds:
            - 1
            - 1
            EscalateToLevelId: 1
          - Action: Action
            SkippedOverLimit: false
            EscalateToLevelRule:
              Action: Action
              Actions:
              - EntryLevel: false
                LocationId: 8
                RuleOrder: 9
                ActionNotification: false
                Name: Name
                ForwardToLevelName: ForwardToLevelName
                RuleSetId: 6
                AutoEscalateInDays: 1
                CodeChange: false
                UserId: 9
                EndStatus: EndStatus
                LevelName: LevelName
                CategoryChange: false
                SkipOverLimit: false
                RuleNumber: 5
                Limit: 6.84685269835264
                Id: 9
                ForwardTo: 7
                Override: false
                LevelId: 4
              - EntryLevel: false
                LocationId: 8
                RuleOrder: 9
                ActionNotification: false
                Name: Name
                ForwardToLevelName: ForwardToLevelName
                RuleSetId: 6
                AutoEscalateInDays: 1
                CodeChange: false
                UserId: 9
                EndStatus: EndStatus
                LevelName: LevelName
                CategoryChange: false
                SkipOverLimit: false
                RuleNumber: 5
                Limit: 6.84685269835264
                Id: 9
                ForwardTo: 7
                Override: false
                LevelId: 4
              AutoEscalate: 3
              RuleOrder: 1
              ActionNotification: false
              LevelName: LevelName
              SkipOverLimit: false
              StatusTo: StatusTo
              ForwardToName: ForwardToName
              Limit: 6.965117697638846
              ForwardTo: 6
              Override: false
              LevelId: 1
            EscalateToLevel: EscalateToLevel
            HasActiveUsers: false
            DisabledUserIds:
            - 1
            - 1
            EscalateToLevelId: 1
          Trade:
            SubscriberId: 9
            Id: 5
            Name: Name
          WorkOrder:
            Invoice:
              StatusChangeUser: StatusChangeUser
              WoTrackingNumber: 6
              NonTaxableOther: 9
              WoAssignedTo: WoAssignedTo
              UpdatedDate: 2000-01-23T04:56:07.000+00:00
              Materials:
              - MarkUpPercent: 6.073898085781152
                Description: Description
                PartNum: PartNum
                Amount: 0.43431398824148815
                IsRateDiscrepancy: false
                Quantity: 3.901545264248647
                IsPartPriceDiscrepancy: false
                AgreedPartPrice: 4.459605034958679
                PriceDiscrepancyReason: PriceDiscrepancyReason
                InvoiceId: 5
                UnitPrice: 4.86315908102884
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                PartName: PartName
                UnitType: UnitType
                MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
                isNontaxableVATEU: false
                Id: 7
                AgreedMarkUpPercent: 8.251625748923757
                IsMarkUpDiscrepancy: false
              - MarkUpPercent: 6.073898085781152
                Description: Description
                PartNum: PartNum
                Amount: 0.43431398824148815
                IsRateDiscrepancy: false
                Quantity: 3.901545264248647
                IsPartPriceDiscrepancy: false
                AgreedPartPrice: 4.459605034958679
                PriceDiscrepancyReason: PriceDiscrepancyReason
                InvoiceId: 5
                UnitPrice: 4.86315908102884
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                PartName: PartName
                UnitType: UnitType
                MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
                isNontaxableVATEU: false
                Id: 7
                AgreedMarkUpPercent: 8.251625748923757
                IsMarkUpDiscrepancy: false
              PostedTaxRate: 1.4894159
              Payments:
              - PaymentDate: 2000-01-23T04:56:07.000+00:00
                PaidBy: PaidBy
                Id: 1
                PaymentAmount: 6.84685269835264
                PaymentNumber: PaymentNumber
              - PaymentDate: 2000-01-23T04:56:07.000+00:00
                PaidBy: PaidBy
                Id: 1
                PaymentAmount: 6.84685269835264
                PaymentNumber: PaymentNumber
              InvoiceBalance: 4.965218492984954
              TravelTaxIncluded: false
              StarredDate: 2000-01-23T04:56:07.000+00:00
              Trade: Trade
              InvoiceAmountsDetails:
                MaterialAmount: 6.878052220127876
                TravelAmount: 5.944895607614016
                FreightAmount: 6.704019297950036
                OtherDescription: OtherDescription
                LaborAmount: 6.778324963048013
                OtherAmount: 3.353193347011243
              Subscriber:
                Zip: Zip
                DecimalSeparator: DecimalSeparator
                TimeFormat: TimeFormat
                Email: Email
                PrimaryCurrency:
                  DecimalCount: 1
                  Entity: Entity
                  AlphabeticalCode: AlphabeticalCode
                  NumericCode: NumericCode
                  Rate: 4.965218492984954
                  Id: 7
                  CurrencyName: CurrencyName
                IsOutsourcedWorkOn: false
                Address2: Address2
                ShortName: ShortName
                Users:
                - UserName: UserName
                  Email: Email
                  MlpUserInfo:
                    Id: 1
                    MlpLevel: MlpLevel
                    MlpLocations:
                    - 6
                    - 6
                  Access:
                    Trades:
                    - Trades
                    - Trades
                    Locations:
                    - Locations
                    - Locations
                    Districts:
                    - Districts
                    - Districts
                    Regions:
                    - Regions
                    - Regions
                  Dashboard:
                    Id: 2
                    RedirectToDashboard: false
                    Name: Name
                  MliUserInfo:
                    MliLocations:
                    - 1
                    - 1
                    Id: 1
                    MliLevel: MliLevel
                  Roles:
                  - Roles
                  - Roles
                  Limits:
                    NteLimit:
                      Amount: 4.145608029883936
                      CurrencyId: 7
                    ProposalLimit:
                      Amount: 4.145608029883936
                      CurrencyId: 7
                    InvoiceLimit:
                      Amount: 4.145608029883936
                      CurrencyId: 7
                  SubscriberId: 3
                  FullName: FullName
                  PsmEmail: PsmEmail
                  Permissions:
                  - Permissions
                  - Permissions
                  Id: 9
                  Disabled: false
                  UserType: Corporate
                  FeedRole: FeedRole
                - UserName: UserName
                  Email: Email
                  MlpUserInfo:
                    Id: 1
                    MlpLevel: MlpLevel
                    MlpLocations:
                    - 6
                    - 6
                  Access:
                    Trades:
                    - Trades
                    - Trades
                    Locations:
                    - Locations
                    - Locations
                    Districts:
                    - Districts
                    - Districts
                    Regions:
                    - Regions
                    - Regions
                  Dashboard:
                    Id: 2
                    RedirectToDashboard: false
                    Name: Name
                  MliUserInfo:
                    MliLocations:
                    - 1
                    - 1
                    Id: 1
                    MliLevel: MliLevel
                  Roles:
                  - Roles
                  - Roles
                  Limits:
                    NteLimit:
                      Amount: 4.145608029883936
                      CurrencyId: 7
                    ProposalLimit:
                      Amount: 4.145608029883936
                      CurrencyId: 7
                    InvoiceLimit:
                      Amount: 4.145608029883936
                      CurrencyId: 7
                  SubscriberId: 3
                  FullName: FullName
                  PsmEmail: PsmEmail
                  Permissions:
                  - Permissions
                  - Permissions
                  Id: 9
                  Disabled: false
                  UserType: Corporate
                  FeedRole: FeedRole
                Address1: Address1
                City: City
                Name: Name
                State: State
                Phone: Phone
                DateFormat: DateFormat
                Country: Country
                Id: 7
                Fax: Fax
                ContactName: ContactName
              Currency:
                DecimalCount: 1
                Entity: Entity
                AlphabeticalCode: AlphabeticalCode
                NumericCode: NumericCode
                Rate: 4.965218492984954
                Id: 7
                CurrencyName: CurrencyName
              PostedBy: PostedBy
              InvoiceTax: 1.0246457001441578
              FreightApprovalCodeGroups:
              - ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              WithMismatchedRates: false
              IsStarred: false
              NonTaxableMaterial: 6
              Status: Status
              ApprovalCodes:
              - ParentId: 2
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 3
                Id: 7
                InternalParentId: 8
                InvoiceId: 0
                InvoiceChargeId: 3
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 2
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 3
                Id: 7
                InternalParentId: 8
                InvoiceId: 0
                InvoiceChargeId: 3
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              StatusHistoryShort:
              - Status: Status
                CreatedBy: CreatedBy
                CreatedById: 9
                InvId: 5
                ActionDate: ActionDate
              - Status: Status
                CreatedBy: CreatedBy
                CreatedById: 9
                InvId: 5
                ActionDate: ActionDate
              Tax2ApprovalCodeGroups:
              - ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              BatchNumber: BatchNumber
              ApprovedDate: 2000-01-23T04:56:07.000+00:00
              LaborTaxIncluded: false
              IsDuplicate: false
              Subtotal: 5.025004791520295
              Terms: Terms
              VendorPayeeId: 7
              InvoiceTotal: 1.1730742509559433
              PostedDate: 2000-01-23T04:56:07.000+00:00
              NonTaxableFreight: 8
              Id: 1
              TaxApprovalCodeGroups:
              - ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              MaterialsTaxIncluded: false
              StoredFeatures:
              - StoredFeatures
              - StoredFeatures
              Description: Description
              IsTransferred: false
              Tax2Details:
                Tax2Amount: 3.0576100241049344
                Tax2Name: Tax2Name
              InvoiceTaxesDetails:
                LaborTaxPercent: 3.0937452626664474
                TravelTaxPercent: 0.8851374739011653
                FreightTaxPercent: 7.058770351582356
                TravelTax: 8.969578798196912
                MaterialTax: 4.652396432933246
                OtherTax: 3.0205796992916243
                MaterialTaxPercent: 7.143538047012306
                OtherTaxPercent: 6.519180951018382
                LaborTax: 0.10263654006109402
                FreightTax: 7.740351818741173
              LastActionDate: 2000-01-23T04:56:07.000+00:00
              NonTaxableLabor: 9
              PaidDate: 2000-01-23T04:56:07.000+00:00
              FreightTaxIncluded: false
              Number: Number
              Labors:
              - SkillLevel: SkillLevel
                Hours: 4.078845849666752
                Amount: 0.2025324113236393
                IsRateDiscrepancy: false
                RateDiscrepancyReason: RateDiscrepancyReason
                CityPerformed: CityPerformed
                InvoiceId: 5
                NumOfTech: NumOfTech
                HourlyRate: 3.2588565619047607
                IsOffShore: false
                AgreedRate: 6.628464275087742
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                LaborType: LaborType
                ServiceType: ServiceType
                isNontaxableVATEU: false
                Id: 7
              - SkillLevel: SkillLevel
                Hours: 4.078845849666752
                Amount: 0.2025324113236393
                IsRateDiscrepancy: false
                RateDiscrepancyReason: RateDiscrepancyReason
                CityPerformed: CityPerformed
                InvoiceId: 5
                NumOfTech: NumOfTech
                HourlyRate: 3.2588565619047607
                IsOffShore: false
                AgreedRate: 6.628464275087742
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                LaborType: LaborType
                ServiceType: ServiceType
                isNontaxableVATEU: false
                Id: 7
              Travels:
              - IsOffShore: false
                UnitPrice: 8.28965939814297
                Description: Description
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                UnitType: UnitType
                Amount: 4.573936264232251
                Quantity: 6.623518433804886
                isNontaxableVATEU: false
                Id: 2
                InvoiceId: 1
              - IsOffShore: false
                UnitPrice: 8.28965939814297
                Description: Description
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                UnitType: UnitType
                Amount: 4.573936264232251
                Quantity: 6.623518433804886
                isNontaxableVATEU: false
                Id: 2
                InvoiceId: 1
              NonTaxableTravel: 9
              InvoiceDate: 2000-01-23T04:56:07.000+00:00
              IsOutsourced: false
              IsChargesApprovalCodesDefault: false
              Others:
              - Description: Description
                Amount: 1.8268702177058116
                Quantity: 9.183123594773994
                InvoiceId: 9
                AgreedUnitPrice: 8.761432466225475
                PriceListOtherChargeId: 0
                Type: Type
                UnitPrice: 3.502657762086401
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                UnitType: UnitType
                IsUnitPriceDiscrepancy: false
                UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
                isNontaxableVATEU: false
                Id: 8
              - Description: Description
                Amount: 1.8268702177058116
                Quantity: 9.183123594773994
                InvoiceId: 9
                AgreedUnitPrice: 8.761432466225475
                PriceListOtherChargeId: 0
                Type: Type
                UnitPrice: 3.502657762086401
                ApprovalCodeGroup:
                  ApprovalCodeType: Labor
                  ApprovalCodes:
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  - ParentId: 0
                    IsDefault: false
                    ApprovalCodeType: Labor
                    InternalId: 9
                    Amount: 1.041444916118296
                    Id: 4
                    InternalParentId: 0
                    InvoiceId: 7
                    InvoiceChargeId: 9
                    ApprovalCode: ApprovalCode
                    AdditionalApprovalCode: AdditionalApprovalCode
                  Amount: 4.258773108174356
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                UnitType: UnitType
                IsUnitPriceDiscrepancy: false
                UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
                isNontaxableVATEU: false
                Id: 8
              StarredBy: StarredBy
              Comments: Comments
              PostedTax2Rate: 6.846853
              EditableAdditionalApprovalCode:
                SetupId: 8
                Options:
                - Value: Value
                  Id: 1
                - Value: Value
                  Id: 1
                DefaultValue: DefaultValue
                ValueFormat: 3
                Header: Header
                DefaultOptionId: 6
                EditableAtLineItemLevel: 6
                Value: Value
                LocationId: 9
              IsExists: false
              ApprovalCode: ApprovalCode
              Provider:
                Zip: Zip
                MailFrequency: 1
                Email: Email
                ImageFile: ImageFile
                DateCreated: 2000-01-23T04:56:07.000+00:00
                TaxId: TaxId
                Name: Name
                Trade: Trade
                Phone: Phone
                FaxNumber: FaxNumber
                LastTrainingDate: 2000-01-23T04:56:07.000+00:00
                FormId: 5
                SuperUser: SuperUser
                MailInfo: MailInfo
                NightRequest: 5
                ReturnMail: ReturnMail
                MainContact: MainContact
                Address2: Address2
                Address1: Address1
                City: City
                IsInternal: false
                ProcessingEmail: ProcessingEmail
                ShortFormatEmail: ShortFormatEmail
                DoNotDispatch: false
                IsOnOffShoreFeatureEnabled: false
                State: State
                FullName: FullName
                Pager: Pager
                WebSite: WebSite
                Country: Country
                LastUserDate: LastUserDate
                Id: 2
                SuiteFloor: SuiteFloor
                LastTrainingDateStr: LastTrainingDateStr
              OtherTaxIncluded: false
              StatusChangeDate: 2000-01-23T04:56:07.000+00:00
              TransferredDate: 2000-01-23T04:56:07.000+00:00
              StatusChangeUserid: StatusChangeUserid
              Location:
                Zip: Zip
                Radius: 3.5571952270680973
                Email: Email
                TimeZoneInfoId: 6
                TimeZoneIanaName: TimeZoneIanaName
                OpenDate: 2000-01-23T04:56:07.000+00:00
                SquareValue: 6.778324963048013
                StateId: 1
                ShortName: ShortName
                Latitude: 8.762042012749001
                CountyId: 5
                Name: Name
                AddressTypeId: 7
                StoreId: StoreId
                SquareMeasure: SquareMeasure
                TimeZoneShortDescription: TimeZoneShortDescription
                SubscriberId: 6
                Phone: Phone
                FaxNumber: FaxNumber
                SubscriberName: SubscriberName
                Supplier: Supplier
                HasInventory: false
                Distance: 6.438423552598547
                Notes:
                - Header: Header
                  HeaderId: 3
                  Value: Value
                  Id: 6
                - Header: Header
                  HeaderId: 3
                  Value: Value
                  Id: 6
                CountryId: 2
                Status: Status
                Address2: Address2
                TypeLabel: TypeLabel
                FormattedAddress: FormattedAddress
                Address1: Address1
                City: City
                TimeShiftToEST: 3
                Longitude: 9.018348186070783
                Contact: Contact
                LocationFormattedAddressTail: LocationFormattedAddressTail
                LocationTypeId: 6
                State: State
                Region: Region
                Country: Country
                Id: 9
                ClosedDate: 2000-01-23T04:56:07.000+00:00
                District: District
                TimeZoneMsName: TimeZoneMsName
            UpdatedDate: 2000-01-23T04:56:07.000+00:00
            FrequencyId: 6
            CheckInDeniedReason: CheckInDeniedReason
            ScheduledDate: 2000-01-23T04:56:07.000+00:00
            Tax: 2.027123023002322
            AutoInvoice: false
            Trade: Trade
            ProviderRank: 7
            Subscriber:
              Zip: Zip
              DecimalSeparator: DecimalSeparator
              TimeFormat: TimeFormat
              Email: Email
              PrimaryCurrency:
                DecimalCount: 1
                Entity: Entity
                AlphabeticalCode: AlphabeticalCode
                NumericCode: NumericCode
                Rate: 4.965218492984954
                Id: 7
                CurrencyName: CurrencyName
              IsOutsourcedWorkOn: false
              Address2: Address2
              ShortName: ShortName
              Users:
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              Address1: Address1
              City: City
              Name: Name
              State: State
              Phone: Phone
              DateFormat: DateFormat
              Country: Country
              Id: 7
              Fax: Fax
              ContactName: ContactName
            Currency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            UpdatedDate_DTO: 2000-01-23T04:56:07.000+00:00
            Asset:
              ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
              ImportedFrom: 3
              ManufacturerDate: 2000-01-23T04:56:07.000+00:00
              AssetLeakDetectorConnectionId: 4
              LeasePeriod: 3
              AssetRefrigerant:
                RackId: RackId
                RefrigerantUsageType: 1
                AssetTypeId: 3
                RefrigerantPartNumber: RefrigerantPartNumber
                RefrigerantPurposeName: RefrigerantPurposeName
                AssetLeakDetectorId: 2
                CurrentChargeMetrics: 6.683562403749608
                ParentId: 1
                EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
                CarbID: CarbID
                RackEntityId: 4
                RackTypeName: RackTypeName
                OperationalStatus: OperationalStatus
                SystemLocation: SystemLocation
                CreateOperationalStatusHistory: false
                IsCarbReporting: false
                RackTypeId: 9
                RefrigerantPurposeId: 6
                HasLeakDetector: false
                ChargeProviderName: ChargeProviderName
                UserId: 6
                TagId: TagId
                OperationStatusDate: 2000-01-23T04:56:07.000+00:00
                CurrentChargeOunces: 8.762042012749001
                CurrentCharge: 9.369310271410669
                ChargeDescriptionId: 9
                Id: 6
                PartNumberId: 5
                AssetId: 7
              LastModifiedUserName: LastModifiedUserName
              BrandId: 5
              AssetValidationStatus: 6
              Trade: Trade
              EnergyEfficiency: EnergyEfficiency
              CustomAttributes:
              - ValueText: ValueText
                Required: false
                ValueType: 8
                EquipmentId: 7
                Value: "{}"
                Visible: false
                EquipmentTypeAttributeId: 4
                SelectedOptionsText: SelectedOptionsText
                Editable: false
                Custom: false
                EquipmentAttributeId: 0
                Name: Name
              - ValueText: ValueText
                Required: false
                ValueType: 8
                EquipmentId: 7
                Value: "{}"
                Visible: false
                EquipmentTypeAttributeId: 4
                SelectedOptionsText: SelectedOptionsText
                Editable: false
                Custom: false
                EquipmentAttributeId: 0
                Name: Name
              Capacity: Capacity
              SubscriberId: 7
              Currency: 3
              Manufacturer: Manufacturer
              SubName: SubName
              SerialNo: SerialNo
              Warranty:
                ProviderId: 7
                Category: Category
                ExpirationDate: 2000-01-23T04:56:07.000+00:00
                Priority: Priority
                Expiration:
                  Type: FromPurchaseDate
                  Period: 1
                NTE: 1.2315135367772556
                Provider:
                  ProviderName: ProviderName
                  Type: Fixed
                  Value: 1
              UsesRefrigerant: 2
              AssetUpdatesStatus: AssetUpdatesStatus
              LifeExpectancy: 7
              OriginalValue: 9.301444243932576
              AssetAttributesMap:
                EditableForProvidersAttributesMap: 5
                ViewableForProvidersAttributesMap: 6
                RequiredStandardAttributesMap: 6
                StandardAttributesMap: 6
              AssetTag: AssetTag
              IsCircuit: false
              Area: Area
              Active: false
              IsCarbReporting: false
              HasLeakDetector: false
              PurchaseDate: PurchaseDate
              HasCircuits: false
              CreatedDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              IsLeased: false
              LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
              HasComponents: false
              AdditionalTradesNames: AdditionalTradesNames
              Description: Description
              AssetStatus: AssetStatus
              ModifiedDate: 2000-01-23T04:56:07.000+00:00
              HasChilds: false
              RetiredDate: 2000-01-23T04:56:07.000+00:00
              AssetTypeId: 5
              StoreId: StoreId
              ConditionString: ConditionString
              LeaseDate: LeaseDate
              AssetValidated: false
              HasTagged: false
              AssetTypeGroupId: 0
              WorkOrderArea: WorkOrderArea
              Condition: 2
              ParentId: 3
              TradeId: 1
              IsLeakDetector: false
              LocationId: 6
              InstallDate: InstallDate
              ModelNo: ModelNo
              IsReplaceEquipment: false
              Type: Type
              Spend: 7.058770351582356
              Tag: Tag
              ManufacturerDateStr: ManufacturerDateStr
              Location: Location
              ValidationRequired: false
            AutoComplete: false
            OriginalEta_DTO: 2000-01-23T04:56:07.000+00:00
            Status:
              Primary: Primary
              Extended: Extended
              CanCreateInvoice: false
            EstimatedCompletionDate: 2000-01-23T04:56:07.000+00:00
            Tax2: 4.145608029883936
            IssueTicketInfo:
              AreaName: AreaName
              SetupId: 5
              Equipment: Equipment
              AreaId: 5
              ProblemGroup: ProblemGroup
              ProblemCode: ProblemCode
              Id: 1
              TicketType: TicketType
            IsExpired: false
            Assignee:
              UserName: UserName
              UserId: 0
            CreatedBy: CreatedBy
            Priority: Priority
            ReassignDate_DTO: 2000-01-23T04:56:07.000+00:00
            AssetCount: 3
            ProblemCode: ProblemCode
            Labels:
            - Label: Label
              Id: 7
            - Label: Label
              Id: 7
            LocationOpenDate: LocationOpenDate
            Tax2Type: Tax2Type
            CompletedDate: 2000-01-23T04:56:07.000+00:00
            ScheduledDate_DTO: 2000-01-23T04:56:07.000+00:00
            Price: 7.386281948385884
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            IsInvoiced: false
            Id: 0
            Nte: 3.616076749251911
            CallerId: 3
            LocationRemodelDate: LocationRemodelDate
            Resolution: Resolution
            CategoryId: 9
            LinkedWorkOrders:
            - Id: 5
            - Id: 5
            Description: Description
            Category: Category
            HasWorkActivity: false
            CallDate: 2000-01-23T04:56:07.000+00:00
            RecallWorkOrder: 6
            IsCheckInDenied: false
            Attachments:
              Count:
                Total: 6
                Own: 1
            Source: Source
            ServiceId: 0
            Number: Number
            LinkedInWorkOrders:
            - Id: 5
            - Id: 5
            Assets:
            - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
              ImportedFrom: 3
              ManufacturerDate: 2000-01-23T04:56:07.000+00:00
              AssetLeakDetectorConnectionId: 4
              LeasePeriod: 3
              AssetRefrigerant:
                RackId: RackId
                RefrigerantUsageType: 1
                AssetTypeId: 3
                RefrigerantPartNumber: RefrigerantPartNumber
                RefrigerantPurposeName: RefrigerantPurposeName
                AssetLeakDetectorId: 2
                CurrentChargeMetrics: 6.683562403749608
                ParentId: 1
                EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
                CarbID: CarbID
                RackEntityId: 4
                RackTypeName: RackTypeName
                OperationalStatus: OperationalStatus
                SystemLocation: SystemLocation
                CreateOperationalStatusHistory: false
                IsCarbReporting: false
                RackTypeId: 9
                RefrigerantPurposeId: 6
                HasLeakDetector: false
                ChargeProviderName: ChargeProviderName
                UserId: 6
                TagId: TagId
                OperationStatusDate: 2000-01-23T04:56:07.000+00:00
                CurrentChargeOunces: 8.762042012749001
                CurrentCharge: 9.369310271410669
                ChargeDescriptionId: 9
                Id: 6
                PartNumberId: 5
                AssetId: 7
              LastModifiedUserName: LastModifiedUserName
              BrandId: 5
              AssetValidationStatus: 6
              Trade: Trade
              EnergyEfficiency: EnergyEfficiency
              CustomAttributes:
              - ValueText: ValueText
                Required: false
                ValueType: 8
                EquipmentId: 7
                Value: "{}"
                Visible: false
                EquipmentTypeAttributeId: 4
                SelectedOptionsText: SelectedOptionsText
                Editable: false
                Custom: false
                EquipmentAttributeId: 0
                Name: Name
              - ValueText: ValueText
                Required: false
                ValueType: 8
                EquipmentId: 7
                Value: "{}"
                Visible: false
                EquipmentTypeAttributeId: 4
                SelectedOptionsText: SelectedOptionsText
                Editable: false
                Custom: false
                EquipmentAttributeId: 0
                Name: Name
              Capacity: Capacity
              SubscriberId: 7
              Currency: 3
              Manufacturer: Manufacturer
              SubName: SubName
              SerialNo: SerialNo
              Warranty:
                ProviderId: 7
                Category: Category
                ExpirationDate: 2000-01-23T04:56:07.000+00:00
                Priority: Priority
                Expiration:
                  Type: FromPurchaseDate
                  Period: 1
                NTE: 1.2315135367772556
                Provider:
                  ProviderName: ProviderName
                  Type: Fixed
                  Value: 1
              UsesRefrigerant: 2
              AssetUpdatesStatus: AssetUpdatesStatus
              LifeExpectancy: 7
              OriginalValue: 9.301444243932576
              AssetAttributesMap:
                EditableForProvidersAttributesMap: 5
                ViewableForProvidersAttributesMap: 6
                RequiredStandardAttributesMap: 6
                StandardAttributesMap: 6
              AssetTag: AssetTag
              IsCircuit: false
              Area: Area
              Active: false
              IsCarbReporting: false
              HasLeakDetector: false
              PurchaseDate: PurchaseDate
              HasCircuits: false
              CreatedDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              IsLeased: false
              LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
              HasComponents: false
              AdditionalTradesNames: AdditionalTradesNames
              Description: Description
              AssetStatus: AssetStatus
              ModifiedDate: 2000-01-23T04:56:07.000+00:00
              HasChilds: false
              RetiredDate: 2000-01-23T04:56:07.000+00:00
              AssetTypeId: 5
              StoreId: StoreId
              ConditionString: ConditionString
              LeaseDate: LeaseDate
              AssetValidated: false
              HasTagged: false
              AssetTypeGroupId: 0
              WorkOrderArea: WorkOrderArea
              Condition: 2
              ParentId: 3
              TradeId: 1
              IsLeakDetector: false
              LocationId: 6
              InstallDate: InstallDate
              ModelNo: ModelNo
              IsReplaceEquipment: false
              Type: Type
              Spend: 7.058770351582356
              Tag: Tag
              ManufacturerDateStr: ManufacturerDateStr
              Location: Location
              ValidationRequired: false
            - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
              ImportedFrom: 3
              ManufacturerDate: 2000-01-23T04:56:07.000+00:00
              AssetLeakDetectorConnectionId: 4
              LeasePeriod: 3
              AssetRefrigerant:
                RackId: RackId
                RefrigerantUsageType: 1
                AssetTypeId: 3
                RefrigerantPartNumber: RefrigerantPartNumber
                RefrigerantPurposeName: RefrigerantPurposeName
                AssetLeakDetectorId: 2
                CurrentChargeMetrics: 6.683562403749608
                ParentId: 1
                EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
                CarbID: CarbID
                RackEntityId: 4
                RackTypeName: RackTypeName
                OperationalStatus: OperationalStatus
                SystemLocation: SystemLocation
                CreateOperationalStatusHistory: false
                IsCarbReporting: false
                RackTypeId: 9
                RefrigerantPurposeId: 6
                HasLeakDetector: false
                ChargeProviderName: ChargeProviderName
                UserId: 6
                TagId: TagId
                OperationStatusDate: 2000-01-23T04:56:07.000+00:00
                CurrentChargeOunces: 8.762042012749001
                CurrentCharge: 9.369310271410669
                ChargeDescriptionId: 9
                Id: 6
                PartNumberId: 5
                AssetId: 7
              LastModifiedUserName: LastModifiedUserName
              BrandId: 5
              AssetValidationStatus: 6
              Trade: Trade
              EnergyEfficiency: EnergyEfficiency
              CustomAttributes:
              - ValueText: ValueText
                Required: false
                ValueType: 8
                EquipmentId: 7
                Value: "{}"
                Visible: false
                EquipmentTypeAttributeId: 4
                SelectedOptionsText: SelectedOptionsText
                Editable: false
                Custom: false
                EquipmentAttributeId: 0
                Name: Name
              - ValueText: ValueText
                Required: false
                ValueType: 8
                EquipmentId: 7
                Value: "{}"
                Visible: false
                EquipmentTypeAttributeId: 4
                SelectedOptionsText: SelectedOptionsText
                Editable: false
                Custom: false
                EquipmentAttributeId: 0
                Name: Name
              Capacity: Capacity
              SubscriberId: 7
              Currency: 3
              Manufacturer: Manufacturer
              SubName: SubName
              SerialNo: SerialNo
              Warranty:
                ProviderId: 7
                Category: Category
                ExpirationDate: 2000-01-23T04:56:07.000+00:00
                Priority: Priority
                Expiration:
                  Type: FromPurchaseDate
                  Period: 1
                NTE: 1.2315135367772556
                Provider:
                  ProviderName: ProviderName
                  Type: Fixed
                  Value: 1
              UsesRefrigerant: 2
              AssetUpdatesStatus: AssetUpdatesStatus
              LifeExpectancy: 7
              OriginalValue: 9.301444243932576
              AssetAttributesMap:
                EditableForProvidersAttributesMap: 5
                ViewableForProvidersAttributesMap: 6
                RequiredStandardAttributesMap: 6
                StandardAttributesMap: 6
              AssetTag: AssetTag
              IsCircuit: false
              Area: Area
              Active: false
              IsCarbReporting: false
              HasLeakDetector: false
              PurchaseDate: PurchaseDate
              HasCircuits: false
              CreatedDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              IsLeased: false
              LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
              HasComponents: false
              AdditionalTradesNames: AdditionalTradesNames
              Description: Description
              AssetStatus: AssetStatus
              ModifiedDate: 2000-01-23T04:56:07.000+00:00
              HasChilds: false
              RetiredDate: 2000-01-23T04:56:07.000+00:00
              AssetTypeId: 5
              StoreId: StoreId
              ConditionString: ConditionString
              LeaseDate: LeaseDate
              AssetValidated: false
              HasTagged: false
              AssetTypeGroupId: 0
              WorkOrderArea: WorkOrderArea
              Condition: 2
              ParentId: 3
              TradeId: 1
              IsLeakDetector: false
              LocationId: 6
              InstallDate: InstallDate
              ModelNo: ModelNo
              IsReplaceEquipment: false
              Type: Type
              Spend: 7.058770351582356
              Tag: Tag
              ManufacturerDateStr: ManufacturerDateStr
              Location: Location
              ValidationRequired: false
            CreatedDate_DTO: 2000-01-23T04:56:07.000+00:00
            PostedId: 6
            Notes:
              Last:
                CreatedBy: CreatedBy
                Number: 6
                MailedTo: MailedTo
                ActionRequired: false
                DateCreated: 2000-01-23T04:56:07.000+00:00
                Id: 2
                NoteData: NoteData
              Count:
                Total: 6
                Own: 1
            TradeId: 2
            ClosingAuthorizationNumber: 3
            LocationId: 6
            ProjectId: 7
            IsEnabledForMobile: false
            ReassignDate: 2000-01-23T04:56:07.000+00:00
            CompletedDate_DTO: 2000-01-23T04:56:07.000+00:00
            ExpirationDate_DTO: 2000-01-23T04:56:07.000+00:00
            WeatherEvent:
              Id: 4
              Name: Name
            ApprovalCode: ApprovalCode
            Provider:
              Zip: Zip
              MailFrequency: 1
              Email: Email
              ImageFile: ImageFile
              DateCreated: 2000-01-23T04:56:07.000+00:00
              TaxId: TaxId
              Name: Name
              Trade: Trade
              Phone: Phone
              FaxNumber: FaxNumber
              LastTrainingDate: 2000-01-23T04:56:07.000+00:00
              FormId: 5
              SuperUser: SuperUser
              MailInfo: MailInfo
              NightRequest: 5
              ReturnMail: ReturnMail
              MainContact: MainContact
              Address2: Address2
              Address1: Address1
              City: City
              IsInternal: false
              ProcessingEmail: ProcessingEmail
              ShortFormatEmail: ShortFormatEmail
              DoNotDispatch: false
              IsOnOffShoreFeatureEnabled: false
              State: State
              FullName: FullName
              Pager: Pager
              WebSite: WebSite
              Country: Country
              LastUserDate: LastUserDate
              Id: 2
              SuiteFloor: SuiteFloor
              LastTrainingDateStr: LastTrainingDateStr
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            Caller: Caller
            PurchaseNumber: PurchaseNumber
            CallDate_DTO: 2000-01-23T04:56:07.000+00:00
            Location:
              Zip: Zip
              Radius: 3.5571952270680973
              Email: Email
              TimeZoneInfoId: 6
              TimeZoneIanaName: TimeZoneIanaName
              OpenDate: 2000-01-23T04:56:07.000+00:00
              SquareValue: 6.778324963048013
              StateId: 1
              ShortName: ShortName
              Latitude: 8.762042012749001
              CountyId: 5
              Name: Name
              AddressTypeId: 7
              StoreId: StoreId
              SquareMeasure: SquareMeasure
              TimeZoneShortDescription: TimeZoneShortDescription
              SubscriberId: 6
              Phone: Phone
              FaxNumber: FaxNumber
              SubscriberName: SubscriberName
              Supplier: Supplier
              HasInventory: false
              Distance: 6.438423552598547
              Notes:
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              CountryId: 2
              Status: Status
              Address2: Address2
              TypeLabel: TypeLabel
              FormattedAddress: FormattedAddress
              Address1: Address1
              City: City
              TimeShiftToEST: 3
              Longitude: 9.018348186070783
              Contact: Contact
              LocationFormattedAddressTail: LocationFormattedAddressTail
              LocationTypeId: 6
              State: State
              Region: Region
              Country: Country
              Id: 9
              ClosedDate: 2000-01-23T04:56:07.000+00:00
              District: District
              TimeZoneMsName: TimeZoneMsName
            OriginalEta: 2000-01-23T04:56:07.000+00:00
          IsMlpLimitOverrun: false
          Number: Number
          Subscriber:
            Zip: Zip
            DecimalSeparator: DecimalSeparator
            TimeFormat: TimeFormat
            Email: Email
            PrimaryCurrency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            IsOutsourcedWorkOn: false
            Address2: Address2
            ShortName: ShortName
            Users:
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            Address1: Address1
            City: City
            Name: Name
            State: State
            Phone: Phone
            DateFormat: DateFormat
            Country: Country
            Id: 7
            Fax: Fax
            ContactName: ContactName
          Currency:
            DecimalCount: 1
            Entity: Entity
            AlphabeticalCode: AlphabeticalCode
            NumericCode: NumericCode
            Rate: 4.965218492984954
            Id: 7
            CurrencyName: CurrencyName
          AssignedToLevel: AssignedToLevel
          RFP: null
          Status:
            ModifiedDate_dto: 2000-01-23T04:56:07.000+00:00
            Primary: Primary
            Extended: Extended
            ModifiedDate: 2000-01-23T04:56:07.000+00:00
            ModifiedBy: ModifiedBy
          CreatedBy:
            UserName: UserName
            Email: Email
            FullName: FullName
            LevelInfo:
              Order: 5
              UserId: 6
              LocationIds:
              - 1
              - 1
              CodeChange: false
              UsersLocations:
                key:
                - 2
                - 2
              LevelName: LevelName
              CategoryChange: false
              DivisionId: 7
              LevelId: 5
              PriorityChange: false
            Id: 0
          CurrentProposalMlpLevelId: 6
          AmountCategories:
          - TotalCost: 7.061401241503109
            Id: 2
            Name: Name
          - TotalCost: 7.061401241503109
            Id: 2
            Name: Name
          Actions:
          - Actions
          - Actions
          Comments: Comments
          Amount: 7.386281948385884
          PoNumber: PoNumber
          Recommendation:
            RecommendationType: None
            Score: None
            Currency: Currency
            NegativeFeedbacksRecallsPercent: 3.616076749251911
            ProposalId: 4
            ProviderCompliancePercent: 2.027123023002322
            RecommendationAmounts:
            - 9
            - 9
          Provider:
            Zip: Zip
            MailFrequency: 1
            Email: Email
            ImageFile: ImageFile
            DateCreated: 2000-01-23T04:56:07.000+00:00
            TaxId: TaxId
            Name: Name
            Trade: Trade
            Phone: Phone
            FaxNumber: FaxNumber
            LastTrainingDate: 2000-01-23T04:56:07.000+00:00
            FormId: 5
            SuperUser: SuperUser
            MailInfo: MailInfo
            NightRequest: 5
            ReturnMail: ReturnMail
            MainContact: MainContact
            Address2: Address2
            Address1: Address1
            City: City
            IsInternal: false
            ProcessingEmail: ProcessingEmail
            ShortFormatEmail: ShortFormatEmail
            DoNotDispatch: false
            IsOnOffShoreFeatureEnabled: false
            State: State
            FullName: FullName
            Pager: Pager
            WebSite: WebSite
            Country: Country
            LastUserDate: LastUserDate
            Id: 2
            SuiteFloor: SuiteFloor
            LastTrainingDateStr: LastTrainingDateStr
          AssignedTo:
            UserName: UserName
            Email: Email
            FullName: FullName
            LevelInfo:
              Order: 5
              UserId: 6
              LocationIds:
              - 1
              - 1
              CodeChange: false
              UsersLocations:
                key:
                - 2
                - 2
              LevelName: LevelName
              CategoryChange: false
              DivisionId: 7
              LevelId: 5
              PriorityChange: false
            Id: 0
          Project:
            Id: 0
            Name: Name
          CreatedDate_dto: 2000-01-23T04:56:07.000+00:00
          CurrentProposalMlpLevelName: CurrentProposalMlpLevelName
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          AssignedFromLevel: AssignedFromLevel
          Id: 5
          MlpRecommendation:
            Status: Status
            CategoryId: 3
            Comment: Comment
            Category: Category
            EmailMyself: false
            WorkOrderLabel:
              WoUrl: WoUrl
              Id: 0
              Name: Name
            SelectedTrackingNumber: 6
            Priority: Priority
            PoNumber: PoNumber
            MyEmail: MyEmail
            WoType: Origin
            OriginalTrackingNumber: 5
            Applied: false
            ApprovalCode: ApprovalCode
            EmailsToNotify: EmailsToNotify
            GeneratedTrackingNumber: 3
            ApprovalReason: ApprovalReason
            UserId: 6
            RejectCodeId: 7
            ProposalId: 6
            Id: 2
            NotSavedRecommendation: false
          Location:
            Zip: Zip
            Radius: 3.5571952270680973
            Email: Email
            TimeZoneInfoId: 6
            TimeZoneIanaName: TimeZoneIanaName
            OpenDate: 2000-01-23T04:56:07.000+00:00
            SquareValue: 6.778324963048013
            StateId: 1
            ShortName: ShortName
            Latitude: 8.762042012749001
            CountyId: 5
            Name: Name
            AddressTypeId: 7
            StoreId: StoreId
            SquareMeasure: SquareMeasure
            TimeZoneShortDescription: TimeZoneShortDescription
            SubscriberId: 6
            Phone: Phone
            FaxNumber: FaxNumber
            SubscriberName: SubscriberName
            Supplier: Supplier
            HasInventory: false
            Distance: 6.438423552598547
            Notes:
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            CountryId: 2
            Status: Status
            Address2: Address2
            TypeLabel: TypeLabel
            FormattedAddress: FormattedAddress
            Address1: Address1
            City: City
            TimeShiftToEST: 3
            Longitude: 9.018348186070783
            Contact: Contact
            LocationFormattedAddressTail: LocationFormattedAddressTail
            LocationTypeId: 6
            State: State
            Region: Region
            Country: Country
            Id: 9
            ClosedDate: 2000-01-23T04:56:07.000+00:00
            District: District
            TimeZoneMsName: TimeZoneMsName
          NextLevelEmpty: false
        Attachments:
        - NoteId: 6
          Description: Description
          Visibility: 1
          Id: 0
          Uri: Uri
          TimeStamp: 2000-01-23T04:56:07.000+00:00
          Name: Name
        - NoteId: 6
          Description: Description
          Visibility: 1
          Id: 0
          Uri: Uri
          TimeStamp: 2000-01-23T04:56:07.000+00:00
          Name: Name
        DateDTO: 2000-01-23T04:56:07.000+00:00
        Trade: Trade
        WorkOrder:
          Invoice:
            StatusChangeUser: StatusChangeUser
            WoTrackingNumber: 6
            NonTaxableOther: 9
            WoAssignedTo: WoAssignedTo
            UpdatedDate: 2000-01-23T04:56:07.000+00:00
            Materials:
            - MarkUpPercent: 6.073898085781152
              Description: Description
              PartNum: PartNum
              Amount: 0.43431398824148815
              IsRateDiscrepancy: false
              Quantity: 3.901545264248647
              IsPartPriceDiscrepancy: false
              AgreedPartPrice: 4.459605034958679
              PriceDiscrepancyReason: PriceDiscrepancyReason
              InvoiceId: 5
              UnitPrice: 4.86315908102884
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              PartName: PartName
              UnitType: UnitType
              MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
              isNontaxableVATEU: false
              Id: 7
              AgreedMarkUpPercent: 8.251625748923757
              IsMarkUpDiscrepancy: false
            - MarkUpPercent: 6.073898085781152
              Description: Description
              PartNum: PartNum
              Amount: 0.43431398824148815
              IsRateDiscrepancy: false
              Quantity: 3.901545264248647
              IsPartPriceDiscrepancy: false
              AgreedPartPrice: 4.459605034958679
              PriceDiscrepancyReason: PriceDiscrepancyReason
              InvoiceId: 5
              UnitPrice: 4.86315908102884
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              PartName: PartName
              UnitType: UnitType
              MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
              isNontaxableVATEU: false
              Id: 7
              AgreedMarkUpPercent: 8.251625748923757
              IsMarkUpDiscrepancy: false
            PostedTaxRate: 1.4894159
            Payments:
            - PaymentDate: 2000-01-23T04:56:07.000+00:00
              PaidBy: PaidBy
              Id: 1
              PaymentAmount: 6.84685269835264
              PaymentNumber: PaymentNumber
            - PaymentDate: 2000-01-23T04:56:07.000+00:00
              PaidBy: PaidBy
              Id: 1
              PaymentAmount: 6.84685269835264
              PaymentNumber: PaymentNumber
            InvoiceBalance: 4.965218492984954
            TravelTaxIncluded: false
            StarredDate: 2000-01-23T04:56:07.000+00:00
            Trade: Trade
            InvoiceAmountsDetails:
              MaterialAmount: 6.878052220127876
              TravelAmount: 5.944895607614016
              FreightAmount: 6.704019297950036
              OtherDescription: OtherDescription
              LaborAmount: 6.778324963048013
              OtherAmount: 3.353193347011243
            Subscriber:
              Zip: Zip
              DecimalSeparator: DecimalSeparator
              TimeFormat: TimeFormat
              Email: Email
              PrimaryCurrency:
                DecimalCount: 1
                Entity: Entity
                AlphabeticalCode: AlphabeticalCode
                NumericCode: NumericCode
                Rate: 4.965218492984954
                Id: 7
                CurrencyName: CurrencyName
              IsOutsourcedWorkOn: false
              Address2: Address2
              ShortName: ShortName
              Users:
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              Address1: Address1
              City: City
              Name: Name
              State: State
              Phone: Phone
              DateFormat: DateFormat
              Country: Country
              Id: 7
              Fax: Fax
              ContactName: ContactName
            Currency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            PostedBy: PostedBy
            InvoiceTax: 1.0246457001441578
            FreightApprovalCodeGroups:
            - ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            WithMismatchedRates: false
            IsStarred: false
            NonTaxableMaterial: 6
            Status: Status
            ApprovalCodes:
            - ParentId: 2
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 3
              Id: 7
              InternalParentId: 8
              InvoiceId: 0
              InvoiceChargeId: 3
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 2
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 3
              Id: 7
              InternalParentId: 8
              InvoiceId: 0
              InvoiceChargeId: 3
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            StatusHistoryShort:
            - Status: Status
              CreatedBy: CreatedBy
              CreatedById: 9
              InvId: 5
              ActionDate: ActionDate
            - Status: Status
              CreatedBy: CreatedBy
              CreatedById: 9
              InvId: 5
              ActionDate: ActionDate
            Tax2ApprovalCodeGroups:
            - ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            BatchNumber: BatchNumber
            ApprovedDate: 2000-01-23T04:56:07.000+00:00
            LaborTaxIncluded: false
            IsDuplicate: false
            Subtotal: 5.025004791520295
            Terms: Terms
            VendorPayeeId: 7
            InvoiceTotal: 1.1730742509559433
            PostedDate: 2000-01-23T04:56:07.000+00:00
            NonTaxableFreight: 8
            Id: 1
            TaxApprovalCodeGroups:
            - ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            MaterialsTaxIncluded: false
            StoredFeatures:
            - StoredFeatures
            - StoredFeatures
            Description: Description
            IsTransferred: false
            Tax2Details:
              Tax2Amount: 3.0576100241049344
              Tax2Name: Tax2Name
            InvoiceTaxesDetails:
              LaborTaxPercent: 3.0937452626664474
              TravelTaxPercent: 0.8851374739011653
              FreightTaxPercent: 7.058770351582356
              TravelTax: 8.969578798196912
              MaterialTax: 4.652396432933246
              OtherTax: 3.0205796992916243
              MaterialTaxPercent: 7.143538047012306
              OtherTaxPercent: 6.519180951018382
              LaborTax: 0.10263654006109402
              FreightTax: 7.740351818741173
            LastActionDate: 2000-01-23T04:56:07.000+00:00
            NonTaxableLabor: 9
            PaidDate: 2000-01-23T04:56:07.000+00:00
            FreightTaxIncluded: false
            Number: Number
            Labors:
            - SkillLevel: SkillLevel
              Hours: 4.078845849666752
              Amount: 0.2025324113236393
              IsRateDiscrepancy: false
              RateDiscrepancyReason: RateDiscrepancyReason
              CityPerformed: CityPerformed
              InvoiceId: 5
              NumOfTech: NumOfTech
              HourlyRate: 3.2588565619047607
              IsOffShore: false
              AgreedRate: 6.628464275087742
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              LaborType: LaborType
              ServiceType: ServiceType
              isNontaxableVATEU: false
              Id: 7
            - SkillLevel: SkillLevel
              Hours: 4.078845849666752
              Amount: 0.2025324113236393
              IsRateDiscrepancy: false
              RateDiscrepancyReason: RateDiscrepancyReason
              CityPerformed: CityPerformed
              InvoiceId: 5
              NumOfTech: NumOfTech
              HourlyRate: 3.2588565619047607
              IsOffShore: false
              AgreedRate: 6.628464275087742
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              LaborType: LaborType
              ServiceType: ServiceType
              isNontaxableVATEU: false
              Id: 7
            Travels:
            - IsOffShore: false
              UnitPrice: 8.28965939814297
              Description: Description
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              UnitType: UnitType
              Amount: 4.573936264232251
              Quantity: 6.623518433804886
              isNontaxableVATEU: false
              Id: 2
              InvoiceId: 1
            - IsOffShore: false
              UnitPrice: 8.28965939814297
              Description: Description
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              UnitType: UnitType
              Amount: 4.573936264232251
              Quantity: 6.623518433804886
              isNontaxableVATEU: false
              Id: 2
              InvoiceId: 1
            NonTaxableTravel: 9
            InvoiceDate: 2000-01-23T04:56:07.000+00:00
            IsOutsourced: false
            IsChargesApprovalCodesDefault: false
            Others:
            - Description: Description
              Amount: 1.8268702177058116
              Quantity: 9.183123594773994
              InvoiceId: 9
              AgreedUnitPrice: 8.761432466225475
              PriceListOtherChargeId: 0
              Type: Type
              UnitPrice: 3.502657762086401
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              UnitType: UnitType
              IsUnitPriceDiscrepancy: false
              UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
              isNontaxableVATEU: false
              Id: 8
            - Description: Description
              Amount: 1.8268702177058116
              Quantity: 9.183123594773994
              InvoiceId: 9
              AgreedUnitPrice: 8.761432466225475
              PriceListOtherChargeId: 0
              Type: Type
              UnitPrice: 3.502657762086401
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              UnitType: UnitType
              IsUnitPriceDiscrepancy: false
              UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
              isNontaxableVATEU: false
              Id: 8
            StarredBy: StarredBy
            Comments: Comments
            PostedTax2Rate: 6.846853
            EditableAdditionalApprovalCode:
              SetupId: 8
              Options:
              - Value: Value
                Id: 1
              - Value: Value
                Id: 1
              DefaultValue: DefaultValue
              ValueFormat: 3
              Header: Header
              DefaultOptionId: 6
              EditableAtLineItemLevel: 6
              Value: Value
              LocationId: 9
            IsExists: false
            ApprovalCode: ApprovalCode
            Provider:
              Zip: Zip
              MailFrequency: 1
              Email: Email
              ImageFile: ImageFile
              DateCreated: 2000-01-23T04:56:07.000+00:00
              TaxId: TaxId
              Name: Name
              Trade: Trade
              Phone: Phone
              FaxNumber: FaxNumber
              LastTrainingDate: 2000-01-23T04:56:07.000+00:00
              FormId: 5
              SuperUser: SuperUser
              MailInfo: MailInfo
              NightRequest: 5
              ReturnMail: ReturnMail
              MainContact: MainContact
              Address2: Address2
              Address1: Address1
              City: City
              IsInternal: false
              ProcessingEmail: ProcessingEmail
              ShortFormatEmail: ShortFormatEmail
              DoNotDispatch: false
              IsOnOffShoreFeatureEnabled: false
              State: State
              FullName: FullName
              Pager: Pager
              WebSite: WebSite
              Country: Country
              LastUserDate: LastUserDate
              Id: 2
              SuiteFloor: SuiteFloor
              LastTrainingDateStr: LastTrainingDateStr
            OtherTaxIncluded: false
            StatusChangeDate: 2000-01-23T04:56:07.000+00:00
            TransferredDate: 2000-01-23T04:56:07.000+00:00
            StatusChangeUserid: StatusChangeUserid
            Location:
              Zip: Zip
              Radius: 3.5571952270680973
              Email: Email
              TimeZoneInfoId: 6
              TimeZoneIanaName: TimeZoneIanaName
              OpenDate: 2000-01-23T04:56:07.000+00:00
              SquareValue: 6.778324963048013
              StateId: 1
              ShortName: ShortName
              Latitude: 8.762042012749001
              CountyId: 5
              Name: Name
              AddressTypeId: 7
              StoreId: StoreId
              SquareMeasure: SquareMeasure
              TimeZoneShortDescription: TimeZoneShortDescription
              SubscriberId: 6
              Phone: Phone
              FaxNumber: FaxNumber
              SubscriberName: SubscriberName
              Supplier: Supplier
              HasInventory: false
              Distance: 6.438423552598547
              Notes:
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              CountryId: 2
              Status: Status
              Address2: Address2
              TypeLabel: TypeLabel
              FormattedAddress: FormattedAddress
              Address1: Address1
              City: City
              TimeShiftToEST: 3
              Longitude: 9.018348186070783
              Contact: Contact
              LocationFormattedAddressTail: LocationFormattedAddressTail
              LocationTypeId: 6
              State: State
              Region: Region
              Country: Country
              Id: 9
              ClosedDate: 2000-01-23T04:56:07.000+00:00
              District: District
              TimeZoneMsName: TimeZoneMsName
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          FrequencyId: 6
          CheckInDeniedReason: CheckInDeniedReason
          ScheduledDate: 2000-01-23T04:56:07.000+00:00
          Tax: 2.027123023002322
          AutoInvoice: false
          Trade: Trade
          ProviderRank: 7
          Subscriber:
            Zip: Zip
            DecimalSeparator: DecimalSeparator
            TimeFormat: TimeFormat
            Email: Email
            PrimaryCurrency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            IsOutsourcedWorkOn: false
            Address2: Address2
            ShortName: ShortName
            Users:
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            Address1: Address1
            City: City
            Name: Name
            State: State
            Phone: Phone
            DateFormat: DateFormat
            Country: Country
            Id: 7
            Fax: Fax
            ContactName: ContactName
          Currency:
            DecimalCount: 1
            Entity: Entity
            AlphabeticalCode: AlphabeticalCode
            NumericCode: NumericCode
            Rate: 4.965218492984954
            Id: 7
            CurrencyName: CurrencyName
          UpdatedDate_DTO: 2000-01-23T04:56:07.000+00:00
          Asset:
            ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
            ImportedFrom: 3
            ManufacturerDate: 2000-01-23T04:56:07.000+00:00
            AssetLeakDetectorConnectionId: 4
            LeasePeriod: 3
            AssetRefrigerant:
              RackId: RackId
              RefrigerantUsageType: 1
              AssetTypeId: 3
              RefrigerantPartNumber: RefrigerantPartNumber
              RefrigerantPurposeName: RefrigerantPurposeName
              AssetLeakDetectorId: 2
              CurrentChargeMetrics: 6.683562403749608
              ParentId: 1
              EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
              CarbID: CarbID
              RackEntityId: 4
              RackTypeName: RackTypeName
              OperationalStatus: OperationalStatus
              SystemLocation: SystemLocation
              CreateOperationalStatusHistory: false
              IsCarbReporting: false
              RackTypeId: 9
              RefrigerantPurposeId: 6
              HasLeakDetector: false
              ChargeProviderName: ChargeProviderName
              UserId: 6
              TagId: TagId
              OperationStatusDate: 2000-01-23T04:56:07.000+00:00
              CurrentChargeOunces: 8.762042012749001
              CurrentCharge: 9.369310271410669
              ChargeDescriptionId: 9
              Id: 6
              PartNumberId: 5
              AssetId: 7
            LastModifiedUserName: LastModifiedUserName
            BrandId: 5
            AssetValidationStatus: 6
            Trade: Trade
            EnergyEfficiency: EnergyEfficiency
            CustomAttributes:
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            Capacity: Capacity
            SubscriberId: 7
            Currency: 3
            Manufacturer: Manufacturer
            SubName: SubName
            SerialNo: SerialNo
            Warranty:
              ProviderId: 7
              Category: Category
              ExpirationDate: 2000-01-23T04:56:07.000+00:00
              Priority: Priority
              Expiration:
                Type: FromPurchaseDate
                Period: 1
              NTE: 1.2315135367772556
              Provider:
                ProviderName: ProviderName
                Type: Fixed
                Value: 1
            UsesRefrigerant: 2
            AssetUpdatesStatus: AssetUpdatesStatus
            LifeExpectancy: 7
            OriginalValue: 9.301444243932576
            AssetAttributesMap:
              EditableForProvidersAttributesMap: 5
              ViewableForProvidersAttributesMap: 6
              RequiredStandardAttributesMap: 6
              StandardAttributesMap: 6
            AssetTag: AssetTag
            IsCircuit: false
            Area: Area
            Active: false
            IsCarbReporting: false
            HasLeakDetector: false
            PurchaseDate: PurchaseDate
            HasCircuits: false
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            IsLeased: false
            LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
            HasComponents: false
            AdditionalTradesNames: AdditionalTradesNames
            Description: Description
            AssetStatus: AssetStatus
            ModifiedDate: 2000-01-23T04:56:07.000+00:00
            HasChilds: false
            RetiredDate: 2000-01-23T04:56:07.000+00:00
            AssetTypeId: 5
            StoreId: StoreId
            ConditionString: ConditionString
            LeaseDate: LeaseDate
            AssetValidated: false
            HasTagged: false
            AssetTypeGroupId: 0
            WorkOrderArea: WorkOrderArea
            Condition: 2
            ParentId: 3
            TradeId: 1
            IsLeakDetector: false
            LocationId: 6
            InstallDate: InstallDate
            ModelNo: ModelNo
            IsReplaceEquipment: false
            Type: Type
            Spend: 7.058770351582356
            Tag: Tag
            ManufacturerDateStr: ManufacturerDateStr
            Location: Location
            ValidationRequired: false
          AutoComplete: false
          OriginalEta_DTO: 2000-01-23T04:56:07.000+00:00
          Status:
            Primary: Primary
            Extended: Extended
            CanCreateInvoice: false
          EstimatedCompletionDate: 2000-01-23T04:56:07.000+00:00
          Tax2: 4.145608029883936
          IssueTicketInfo:
            AreaName: AreaName
            SetupId: 5
            Equipment: Equipment
            AreaId: 5
            ProblemGroup: ProblemGroup
            ProblemCode: ProblemCode
            Id: 1
            TicketType: TicketType
          IsExpired: false
          Assignee:
            UserName: UserName
            UserId: 0
          CreatedBy: CreatedBy
          Priority: Priority
          ReassignDate_DTO: 2000-01-23T04:56:07.000+00:00
          AssetCount: 3
          ProblemCode: ProblemCode
          Labels:
          - Label: Label
            Id: 7
          - Label: Label
            Id: 7
          LocationOpenDate: LocationOpenDate
          Tax2Type: Tax2Type
          CompletedDate: 2000-01-23T04:56:07.000+00:00
          ScheduledDate_DTO: 2000-01-23T04:56:07.000+00:00
          Price: 7.386281948385884
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          IsInvoiced: false
          Id: 0
          Nte: 3.616076749251911
          CallerId: 3
          LocationRemodelDate: LocationRemodelDate
          Resolution: Resolution
          CategoryId: 9
          LinkedWorkOrders:
          - Id: 5
          - Id: 5
          Description: Description
          Category: Category
          HasWorkActivity: false
          CallDate: 2000-01-23T04:56:07.000+00:00
          RecallWorkOrder: 6
          IsCheckInDenied: false
          Attachments:
            Count:
              Total: 6
              Own: 1
          Source: Source
          ServiceId: 0
          Number: Number
          LinkedInWorkOrders:
          - Id: 5
          - Id: 5
          Assets:
          - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
            ImportedFrom: 3
            ManufacturerDate: 2000-01-23T04:56:07.000+00:00
            AssetLeakDetectorConnectionId: 4
            LeasePeriod: 3
            AssetRefrigerant:
              RackId: RackId
              RefrigerantUsageType: 1
              AssetTypeId: 3
              RefrigerantPartNumber: RefrigerantPartNumber
              RefrigerantPurposeName: RefrigerantPurposeName
              AssetLeakDetectorId: 2
              CurrentChargeMetrics: 6.683562403749608
              ParentId: 1
              EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
              CarbID: CarbID
              RackEntityId: 4
              RackTypeName: RackTypeName
              OperationalStatus: OperationalStatus
              SystemLocation: SystemLocation
              CreateOperationalStatusHistory: false
              IsCarbReporting: false
              RackTypeId: 9
              RefrigerantPurposeId: 6
              HasLeakDetector: false
              ChargeProviderName: ChargeProviderName
              UserId: 6
              TagId: TagId
              OperationStatusDate: 2000-01-23T04:56:07.000+00:00
              CurrentChargeOunces: 8.762042012749001
              CurrentCharge: 9.369310271410669
              ChargeDescriptionId: 9
              Id: 6
              PartNumberId: 5
              AssetId: 7
            LastModifiedUserName: LastModifiedUserName
            BrandId: 5
            AssetValidationStatus: 6
            Trade: Trade
            EnergyEfficiency: EnergyEfficiency
            CustomAttributes:
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            Capacity: Capacity
            SubscriberId: 7
            Currency: 3
            Manufacturer: Manufacturer
            SubName: SubName
            SerialNo: SerialNo
            Warranty:
              ProviderId: 7
              Category: Category
              ExpirationDate: 2000-01-23T04:56:07.000+00:00
              Priority: Priority
              Expiration:
                Type: FromPurchaseDate
                Period: 1
              NTE: 1.2315135367772556
              Provider:
                ProviderName: ProviderName
                Type: Fixed
                Value: 1
            UsesRefrigerant: 2
            AssetUpdatesStatus: AssetUpdatesStatus
            LifeExpectancy: 7
            OriginalValue: 9.301444243932576
            AssetAttributesMap:
              EditableForProvidersAttributesMap: 5
              ViewableForProvidersAttributesMap: 6
              RequiredStandardAttributesMap: 6
              StandardAttributesMap: 6
            AssetTag: AssetTag
            IsCircuit: false
            Area: Area
            Active: false
            IsCarbReporting: false
            HasLeakDetector: false
            PurchaseDate: PurchaseDate
            HasCircuits: false
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            IsLeased: false
            LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
            HasComponents: false
            AdditionalTradesNames: AdditionalTradesNames
            Description: Description
            AssetStatus: AssetStatus
            ModifiedDate: 2000-01-23T04:56:07.000+00:00
            HasChilds: false
            RetiredDate: 2000-01-23T04:56:07.000+00:00
            AssetTypeId: 5
            StoreId: StoreId
            ConditionString: ConditionString
            LeaseDate: LeaseDate
            AssetValidated: false
            HasTagged: false
            AssetTypeGroupId: 0
            WorkOrderArea: WorkOrderArea
            Condition: 2
            ParentId: 3
            TradeId: 1
            IsLeakDetector: false
            LocationId: 6
            InstallDate: InstallDate
            ModelNo: ModelNo
            IsReplaceEquipment: false
            Type: Type
            Spend: 7.058770351582356
            Tag: Tag
            ManufacturerDateStr: ManufacturerDateStr
            Location: Location
            ValidationRequired: false
          - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
            ImportedFrom: 3
            ManufacturerDate: 2000-01-23T04:56:07.000+00:00
            AssetLeakDetectorConnectionId: 4
            LeasePeriod: 3
            AssetRefrigerant:
              RackId: RackId
              RefrigerantUsageType: 1
              AssetTypeId: 3
              RefrigerantPartNumber: RefrigerantPartNumber
              RefrigerantPurposeName: RefrigerantPurposeName
              AssetLeakDetectorId: 2
              CurrentChargeMetrics: 6.683562403749608
              ParentId: 1
              EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
              CarbID: CarbID
              RackEntityId: 4
              RackTypeName: RackTypeName
              OperationalStatus: OperationalStatus
              SystemLocation: SystemLocation
              CreateOperationalStatusHistory: false
              IsCarbReporting: false
              RackTypeId: 9
              RefrigerantPurposeId: 6
              HasLeakDetector: false
              ChargeProviderName: ChargeProviderName
              UserId: 6
              TagId: TagId
              OperationStatusDate: 2000-01-23T04:56:07.000+00:00
              CurrentChargeOunces: 8.762042012749001
              CurrentCharge: 9.369310271410669
              ChargeDescriptionId: 9
              Id: 6
              PartNumberId: 5
              AssetId: 7
            LastModifiedUserName: LastModifiedUserName
            BrandId: 5
            AssetValidationStatus: 6
            Trade: Trade
            EnergyEfficiency: EnergyEfficiency
            CustomAttributes:
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            Capacity: Capacity
            SubscriberId: 7
            Currency: 3
            Manufacturer: Manufacturer
            SubName: SubName
            SerialNo: SerialNo
            Warranty:
              ProviderId: 7
              Category: Category
              ExpirationDate: 2000-01-23T04:56:07.000+00:00
              Priority: Priority
              Expiration:
                Type: FromPurchaseDate
                Period: 1
              NTE: 1.2315135367772556
              Provider:
                ProviderName: ProviderName
                Type: Fixed
                Value: 1
            UsesRefrigerant: 2
            AssetUpdatesStatus: AssetUpdatesStatus
            LifeExpectancy: 7
            OriginalValue: 9.301444243932576
            AssetAttributesMap:
              EditableForProvidersAttributesMap: 5
              ViewableForProvidersAttributesMap: 6
              RequiredStandardAttributesMap: 6
              StandardAttributesMap: 6
            AssetTag: AssetTag
            IsCircuit: false
            Area: Area
            Active: false
            IsCarbReporting: false
            HasLeakDetector: false
            PurchaseDate: PurchaseDate
            HasCircuits: false
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            IsLeased: false
            LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
            HasComponents: false
            AdditionalTradesNames: AdditionalTradesNames
            Description: Description
            AssetStatus: AssetStatus
            ModifiedDate: 2000-01-23T04:56:07.000+00:00
            HasChilds: false
            RetiredDate: 2000-01-23T04:56:07.000+00:00
            AssetTypeId: 5
            StoreId: StoreId
            ConditionString: ConditionString
            LeaseDate: LeaseDate
            AssetValidated: false
            HasTagged: false
            AssetTypeGroupId: 0
            WorkOrderArea: WorkOrderArea
            Condition: 2
            ParentId: 3
            TradeId: 1
            IsLeakDetector: false
            LocationId: 6
            InstallDate: InstallDate
            ModelNo: ModelNo
            IsReplaceEquipment: false
            Type: Type
            Spend: 7.058770351582356
            Tag: Tag
            ManufacturerDateStr: ManufacturerDateStr
            Location: Location
            ValidationRequired: false
          CreatedDate_DTO: 2000-01-23T04:56:07.000+00:00
          PostedId: 6
          Notes:
            Last:
              CreatedBy: CreatedBy
              Number: 6
              MailedTo: MailedTo
              ActionRequired: false
              DateCreated: 2000-01-23T04:56:07.000+00:00
              Id: 2
              NoteData: NoteData
            Count:
              Total: 6
              Own: 1
          TradeId: 2
          ClosingAuthorizationNumber: 3
          LocationId: 6
          ProjectId: 7
          IsEnabledForMobile: false
          ReassignDate: 2000-01-23T04:56:07.000+00:00
          CompletedDate_DTO: 2000-01-23T04:56:07.000+00:00
          ExpirationDate_DTO: 2000-01-23T04:56:07.000+00:00
          WeatherEvent:
            Id: 4
            Name: Name
          ApprovalCode: ApprovalCode
          Provider:
            Zip: Zip
            MailFrequency: 1
            Email: Email
            ImageFile: ImageFile
            DateCreated: 2000-01-23T04:56:07.000+00:00
            TaxId: TaxId
            Name: Name
            Trade: Trade
            Phone: Phone
            FaxNumber: FaxNumber
            LastTrainingDate: 2000-01-23T04:56:07.000+00:00
            FormId: 5
            SuperUser: SuperUser
            MailInfo: MailInfo
            NightRequest: 5
            ReturnMail: ReturnMail
            MainContact: MainContact
            Address2: Address2
            Address1: Address1
            City: City
            IsInternal: false
            ProcessingEmail: ProcessingEmail
            ShortFormatEmail: ShortFormatEmail
            DoNotDispatch: false
            IsOnOffShoreFeatureEnabled: false
            State: State
            FullName: FullName
            Pager: Pager
            WebSite: WebSite
            Country: Country
            LastUserDate: LastUserDate
            Id: 2
            SuiteFloor: SuiteFloor
            LastTrainingDateStr: LastTrainingDateStr
          ExpirationDate: 2000-01-23T04:56:07.000+00:00
          Caller: Caller
          PurchaseNumber: PurchaseNumber
          CallDate_DTO: 2000-01-23T04:56:07.000+00:00
          Location:
            Zip: Zip
            Radius: 3.5571952270680973
            Email: Email
            TimeZoneInfoId: 6
            TimeZoneIanaName: TimeZoneIanaName
            OpenDate: 2000-01-23T04:56:07.000+00:00
            SquareValue: 6.778324963048013
            StateId: 1
            ShortName: ShortName
            Latitude: 8.762042012749001
            CountyId: 5
            Name: Name
            AddressTypeId: 7
            StoreId: StoreId
            SquareMeasure: SquareMeasure
            TimeZoneShortDescription: TimeZoneShortDescription
            SubscriberId: 6
            Phone: Phone
            FaxNumber: FaxNumber
            SubscriberName: SubscriberName
            Supplier: Supplier
            HasInventory: false
            Distance: 6.438423552598547
            Notes:
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            CountryId: 2
            Status: Status
            Address2: Address2
            TypeLabel: TypeLabel
            FormattedAddress: FormattedAddress
            Address1: Address1
            City: City
            TimeShiftToEST: 3
            Longitude: 9.018348186070783
            Contact: Contact
            LocationFormattedAddressTail: LocationFormattedAddressTail
            LocationTypeId: 6
            State: State
            Region: Region
            Country: Country
            Id: 9
            ClosedDate: 2000-01-23T04:56:07.000+00:00
            District: District
            TimeZoneMsName: TimeZoneMsName
          OriginalEta: 2000-01-23T04:56:07.000+00:00
        Number: Number
        Subscriber:
          Zip: Zip
          DecimalSeparator: DecimalSeparator
          TimeFormat: TimeFormat
          Email: Email
          PrimaryCurrency:
            DecimalCount: 1
            Entity: Entity
            AlphabeticalCode: AlphabeticalCode
            NumericCode: NumericCode
            Rate: 4.965218492984954
            Id: 7
            CurrencyName: CurrencyName
          IsOutsourcedWorkOn: false
          Address2: Address2
          ShortName: ShortName
          Users:
          - UserName: UserName
            Email: Email
            MlpUserInfo:
              Id: 1
              MlpLevel: MlpLevel
              MlpLocations:
              - 6
              - 6
            Access:
              Trades:
              - Trades
              - Trades
              Locations:
              - Locations
              - Locations
              Districts:
              - Districts
              - Districts
              Regions:
              - Regions
              - Regions
            Dashboard:
              Id: 2
              RedirectToDashboard: false
              Name: Name
            MliUserInfo:
              MliLocations:
              - 1
              - 1
              Id: 1
              MliLevel: MliLevel
            Roles:
            - Roles
            - Roles
            Limits:
              NteLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              ProposalLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              InvoiceLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
            SubscriberId: 3
            FullName: FullName
            PsmEmail: PsmEmail
            Permissions:
            - Permissions
            - Permissions
            Id: 9
            Disabled: false
            UserType: Corporate
            FeedRole: FeedRole
          - UserName: UserName
            Email: Email
            MlpUserInfo:
              Id: 1
              MlpLevel: MlpLevel
              MlpLocations:
              - 6
              - 6
            Access:
              Trades:
              - Trades
              - Trades
              Locations:
              - Locations
              - Locations
              Districts:
              - Districts
              - Districts
              Regions:
              - Regions
              - Regions
            Dashboard:
              Id: 2
              RedirectToDashboard: false
              Name: Name
            MliUserInfo:
              MliLocations:
              - 1
              - 1
              Id: 1
              MliLevel: MliLevel
            Roles:
            - Roles
            - Roles
            Limits:
              NteLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              ProposalLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              InvoiceLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
            SubscriberId: 3
            FullName: FullName
            PsmEmail: PsmEmail
            Permissions:
            - Permissions
            - Permissions
            Id: 9
            Disabled: false
            UserType: Corporate
            FeedRole: FeedRole
          Address1: Address1
          City: City
          Name: Name
          State: State
          Phone: Phone
          DateFormat: DateFormat
          Country: Country
          Id: 7
          Fax: Fax
          ContactName: ContactName
        DueHrs: 1.4658129805029452
        DueDate: 2000-01-23T04:56:07.000+00:00
        BatchRfpNumber: BatchRfpNumber
        Status: Status
        TradeId: 5
        Date: 2000-01-23T04:56:07.000+00:00
        Provider:
          Zip: Zip
          MailFrequency: 1
          Email: Email
          ImageFile: ImageFile
          DateCreated: 2000-01-23T04:56:07.000+00:00
          TaxId: TaxId
          Name: Name
          Trade: Trade
          Phone: Phone
          FaxNumber: FaxNumber
          LastTrainingDate: 2000-01-23T04:56:07.000+00:00
          FormId: 5
          SuperUser: SuperUser
          MailInfo: MailInfo
          NightRequest: 5
          ReturnMail: ReturnMail
          MainContact: MainContact
          Address2: Address2
          Address1: Address1
          City: City
          IsInternal: false
          ProcessingEmail: ProcessingEmail
          ShortFormatEmail: ShortFormatEmail
          DoNotDispatch: false
          IsOnOffShoreFeatureEnabled: false
          State: State
          FullName: FullName
          Pager: Pager
          WebSite: WebSite
          Country: Country
          LastUserDate: LastUserDate
          Id: 2
          SuiteFloor: SuiteFloor
          LastTrainingDateStr: LastTrainingDateStr
        UserId: 6
        CreatedDateDTO: 2000-01-23T04:56:07.000+00:00
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        Id: 0
        ProviderEmail: ProviderEmail
        Location:
          Zip: Zip
          Radius: 3.5571952270680973
          Email: Email
          TimeZoneInfoId: 6
          TimeZoneIanaName: TimeZoneIanaName
          OpenDate: 2000-01-23T04:56:07.000+00:00
          SquareValue: 6.778324963048013
          StateId: 1
          ShortName: ShortName
          Latitude: 8.762042012749001
          CountyId: 5
          Name: Name
          AddressTypeId: 7
          StoreId: StoreId
          SquareMeasure: SquareMeasure
          TimeZoneShortDescription: TimeZoneShortDescription
          SubscriberId: 6
          Phone: Phone
          FaxNumber: FaxNumber
          SubscriberName: SubscriberName
          Supplier: Supplier
          HasInventory: false
          Distance: 6.438423552598547
          Notes:
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          CountryId: 2
          Status: Status
          Address2: Address2
          TypeLabel: TypeLabel
          FormattedAddress: FormattedAddress
          Address1: Address1
          City: City
          TimeShiftToEST: 3
          Longitude: 9.018348186070783
          Contact: Contact
          LocationFormattedAddressTail: LocationFormattedAddressTail
          LocationTypeId: 6
          State: State
          Region: Region
          Country: Country
          Id: 9
          ClosedDate: 2000-01-23T04:56:07.000+00:00
          District: District
          TimeZoneMsName: TimeZoneMsName
      properties:
        Id:
          description: Gets or sets Id.
          format: int32
          type: integer
        Number:
          description: Gets or sets Rfp Number.
          type: string
        CreatedDate:
          description: Gets or sets Rfp Created Date.
          format: date-time
          type: string
        CreatedDateDTO:
          format: date-time
          type: string
        Date:
          description: Gets or sets Rfp Date.
          format: date-time
          type: string
        DateDTO:
          format: date-time
          type: string
        UpdatedDate:
          description: Last Update Date
          format: date-time
          type: string
        UpdatedDateDTO:
          format: date-time
          type: string
        UserId:
          description: Gets or sets UserId.
          format: int32
          type: integer
        WaitingForPrpEmail:
          description: Gets or sets WaitingForPrpEmail.
          type: string
        ProviderEmail:
          description: Gets or sets ProviderEmail.
          type: string
        Description:
          description: Gets or sets Description.
          type: string
        DueHrs:
          description: Gets or sets DueHrs.
          format: double
          type: number
        DueDate:
          description: Gets or sets DueDate.
          format: date-time
          type: string
        DueDateDTO:
          format: date-time
          type: string
        Status:
          description: Gets or sets Status.
          type: string
        Location:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.Location'
        Provider:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.Provider'
        Subscriber:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.Subscriber'
        Trade:
          type: string
        TradeId:
          format: int32
          type: integer
        WorkOrder:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
        Proposals:
          description: Gets or sets proposal collection.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalInfo'
          type: array
        Attachments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
          type: array
        BatchRfpNumber:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Proposals.ProposalInfo:
      example:
        CurrentProposalMlpRuleSetName: CurrentProposalMlpRuleSetName
        Description: Description
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        UpdatedDateDto: 2000-01-23T04:56:07.000+00:00
        ScheduledDate: 2000-01-23T04:56:07.000+00:00
        SubmittedTo: SubmittedTo
        Attachments:
        - NoteId: 6
          Description: Description
          Visibility: 1
          Id: 0
          Uri: Uri
          TimeStamp: 2000-01-23T04:56:07.000+00:00
          Name: Name
        - NoteId: 6
          Description: Description
          Visibility: 1
          Id: 0
          Uri: Uri
          TimeStamp: 2000-01-23T04:56:07.000+00:00
          Name: Name
        CurrentProposalMlpRuleSetId: 7
        ScheduledDateDto: 2000-01-23T04:56:07.000+00:00
        MlpRecommendations:
        - Status: Status
          CategoryId: 3
          Comment: Comment
          Category: Category
          EmailMyself: false
          WorkOrderLabel:
            WoUrl: WoUrl
            Id: 0
            Name: Name
          SelectedTrackingNumber: 6
          Priority: Priority
          PoNumber: PoNumber
          MyEmail: MyEmail
          WoType: Origin
          OriginalTrackingNumber: 5
          Applied: false
          ApprovalCode: ApprovalCode
          EmailsToNotify: EmailsToNotify
          GeneratedTrackingNumber: 3
          ApprovalReason: ApprovalReason
          UserId: 6
          RejectCodeId: 7
          ProposalId: 6
          Id: 2
          NotSavedRecommendation: false
        - Status: Status
          CategoryId: 3
          Comment: Comment
          Category: Category
          EmailMyself: false
          WorkOrderLabel:
            WoUrl: WoUrl
            Id: 0
            Name: Name
          SelectedTrackingNumber: 6
          Priority: Priority
          PoNumber: PoNumber
          MyEmail: MyEmail
          WoType: Origin
          OriginalTrackingNumber: 5
          Applied: false
          ApprovalCode: ApprovalCode
          EmailsToNotify: EmailsToNotify
          GeneratedTrackingNumber: 3
          ApprovalReason: ApprovalReason
          UserId: 6
          RejectCodeId: 7
          ProposalId: 6
          Id: 2
          NotSavedRecommendation: false
        Description2: Description2
        LevelsEscalateTo:
        - Action: Action
          SkippedOverLimit: false
          EscalateToLevelRule:
            Action: Action
            Actions:
            - EntryLevel: false
              LocationId: 8
              RuleOrder: 9
              ActionNotification: false
              Name: Name
              ForwardToLevelName: ForwardToLevelName
              RuleSetId: 6
              AutoEscalateInDays: 1
              CodeChange: false
              UserId: 9
              EndStatus: EndStatus
              LevelName: LevelName
              CategoryChange: false
              SkipOverLimit: false
              RuleNumber: 5
              Limit: 6.84685269835264
              Id: 9
              ForwardTo: 7
              Override: false
              LevelId: 4
            - EntryLevel: false
              LocationId: 8
              RuleOrder: 9
              ActionNotification: false
              Name: Name
              ForwardToLevelName: ForwardToLevelName
              RuleSetId: 6
              AutoEscalateInDays: 1
              CodeChange: false
              UserId: 9
              EndStatus: EndStatus
              LevelName: LevelName
              CategoryChange: false
              SkipOverLimit: false
              RuleNumber: 5
              Limit: 6.84685269835264
              Id: 9
              ForwardTo: 7
              Override: false
              LevelId: 4
            AutoEscalate: 3
            RuleOrder: 1
            ActionNotification: false
            LevelName: LevelName
            SkipOverLimit: false
            StatusTo: StatusTo
            ForwardToName: ForwardToName
            Limit: 6.965117697638846
            ForwardTo: 6
            Override: false
            LevelId: 1
          EscalateToLevel: EscalateToLevel
          HasActiveUsers: false
          DisabledUserIds:
          - 1
          - 1
          EscalateToLevelId: 1
        - Action: Action
          SkippedOverLimit: false
          EscalateToLevelRule:
            Action: Action
            Actions:
            - EntryLevel: false
              LocationId: 8
              RuleOrder: 9
              ActionNotification: false
              Name: Name
              ForwardToLevelName: ForwardToLevelName
              RuleSetId: 6
              AutoEscalateInDays: 1
              CodeChange: false
              UserId: 9
              EndStatus: EndStatus
              LevelName: LevelName
              CategoryChange: false
              SkipOverLimit: false
              RuleNumber: 5
              Limit: 6.84685269835264
              Id: 9
              ForwardTo: 7
              Override: false
              LevelId: 4
            - EntryLevel: false
              LocationId: 8
              RuleOrder: 9
              ActionNotification: false
              Name: Name
              ForwardToLevelName: ForwardToLevelName
              RuleSetId: 6
              AutoEscalateInDays: 1
              CodeChange: false
              UserId: 9
              EndStatus: EndStatus
              LevelName: LevelName
              CategoryChange: false
              SkipOverLimit: false
              RuleNumber: 5
              Limit: 6.84685269835264
              Id: 9
              ForwardTo: 7
              Override: false
              LevelId: 4
            AutoEscalate: 3
            RuleOrder: 1
            ActionNotification: false
            LevelName: LevelName
            SkipOverLimit: false
            StatusTo: StatusTo
            ForwardToName: ForwardToName
            Limit: 6.965117697638846
            ForwardTo: 6
            Override: false
            LevelId: 1
          EscalateToLevel: EscalateToLevel
          HasActiveUsers: false
          DisabledUserIds:
          - 1
          - 1
          EscalateToLevelId: 1
        Trade:
          SubscriberId: 9
          Id: 5
          Name: Name
        WorkOrder:
          Invoice:
            StatusChangeUser: StatusChangeUser
            WoTrackingNumber: 6
            NonTaxableOther: 9
            WoAssignedTo: WoAssignedTo
            UpdatedDate: 2000-01-23T04:56:07.000+00:00
            Materials:
            - MarkUpPercent: 6.073898085781152
              Description: Description
              PartNum: PartNum
              Amount: 0.43431398824148815
              IsRateDiscrepancy: false
              Quantity: 3.901545264248647
              IsPartPriceDiscrepancy: false
              AgreedPartPrice: 4.459605034958679
              PriceDiscrepancyReason: PriceDiscrepancyReason
              InvoiceId: 5
              UnitPrice: 4.86315908102884
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              PartName: PartName
              UnitType: UnitType
              MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
              isNontaxableVATEU: false
              Id: 7
              AgreedMarkUpPercent: 8.251625748923757
              IsMarkUpDiscrepancy: false
            - MarkUpPercent: 6.073898085781152
              Description: Description
              PartNum: PartNum
              Amount: 0.43431398824148815
              IsRateDiscrepancy: false
              Quantity: 3.901545264248647
              IsPartPriceDiscrepancy: false
              AgreedPartPrice: 4.459605034958679
              PriceDiscrepancyReason: PriceDiscrepancyReason
              InvoiceId: 5
              UnitPrice: 4.86315908102884
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              PartName: PartName
              UnitType: UnitType
              MarkUpDiscrepancyReason: MarkUpDiscrepancyReason
              isNontaxableVATEU: false
              Id: 7
              AgreedMarkUpPercent: 8.251625748923757
              IsMarkUpDiscrepancy: false
            PostedTaxRate: 1.4894159
            Payments:
            - PaymentDate: 2000-01-23T04:56:07.000+00:00
              PaidBy: PaidBy
              Id: 1
              PaymentAmount: 6.84685269835264
              PaymentNumber: PaymentNumber
            - PaymentDate: 2000-01-23T04:56:07.000+00:00
              PaidBy: PaidBy
              Id: 1
              PaymentAmount: 6.84685269835264
              PaymentNumber: PaymentNumber
            InvoiceBalance: 4.965218492984954
            TravelTaxIncluded: false
            StarredDate: 2000-01-23T04:56:07.000+00:00
            Trade: Trade
            InvoiceAmountsDetails:
              MaterialAmount: 6.878052220127876
              TravelAmount: 5.944895607614016
              FreightAmount: 6.704019297950036
              OtherDescription: OtherDescription
              LaborAmount: 6.778324963048013
              OtherAmount: 3.353193347011243
            Subscriber:
              Zip: Zip
              DecimalSeparator: DecimalSeparator
              TimeFormat: TimeFormat
              Email: Email
              PrimaryCurrency:
                DecimalCount: 1
                Entity: Entity
                AlphabeticalCode: AlphabeticalCode
                NumericCode: NumericCode
                Rate: 4.965218492984954
                Id: 7
                CurrencyName: CurrencyName
              IsOutsourcedWorkOn: false
              Address2: Address2
              ShortName: ShortName
              Users:
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              - UserName: UserName
                Email: Email
                MlpUserInfo:
                  Id: 1
                  MlpLevel: MlpLevel
                  MlpLocations:
                  - 6
                  - 6
                Access:
                  Trades:
                  - Trades
                  - Trades
                  Locations:
                  - Locations
                  - Locations
                  Districts:
                  - Districts
                  - Districts
                  Regions:
                  - Regions
                  - Regions
                Dashboard:
                  Id: 2
                  RedirectToDashboard: false
                  Name: Name
                MliUserInfo:
                  MliLocations:
                  - 1
                  - 1
                  Id: 1
                  MliLevel: MliLevel
                Roles:
                - Roles
                - Roles
                Limits:
                  NteLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  ProposalLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                  InvoiceLimit:
                    Amount: 4.145608029883936
                    CurrencyId: 7
                SubscriberId: 3
                FullName: FullName
                PsmEmail: PsmEmail
                Permissions:
                - Permissions
                - Permissions
                Id: 9
                Disabled: false
                UserType: Corporate
                FeedRole: FeedRole
              Address1: Address1
              City: City
              Name: Name
              State: State
              Phone: Phone
              DateFormat: DateFormat
              Country: Country
              Id: 7
              Fax: Fax
              ContactName: ContactName
            Currency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            PostedBy: PostedBy
            InvoiceTax: 1.0246457001441578
            FreightApprovalCodeGroups:
            - ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            WithMismatchedRates: false
            IsStarred: false
            NonTaxableMaterial: 6
            Status: Status
            ApprovalCodes:
            - ParentId: 2
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 3
              Id: 7
              InternalParentId: 8
              InvoiceId: 0
              InvoiceChargeId: 3
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ParentId: 2
              IsDefault: false
              ApprovalCodeType: Labor
              InternalId: 3
              Id: 7
              InternalParentId: 8
              InvoiceId: 0
              InvoiceChargeId: 3
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            StatusHistoryShort:
            - Status: Status
              CreatedBy: CreatedBy
              CreatedById: 9
              InvId: 5
              ActionDate: ActionDate
            - Status: Status
              CreatedBy: CreatedBy
              CreatedById: 9
              InvId: 5
              ActionDate: ActionDate
            Tax2ApprovalCodeGroups:
            - ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            BatchNumber: BatchNumber
            ApprovedDate: 2000-01-23T04:56:07.000+00:00
            LaborTaxIncluded: false
            IsDuplicate: false
            Subtotal: 5.025004791520295
            Terms: Terms
            VendorPayeeId: 7
            InvoiceTotal: 1.1730742509559433
            PostedDate: 2000-01-23T04:56:07.000+00:00
            NonTaxableFreight: 8
            Id: 1
            TaxApprovalCodeGroups:
            - ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            - ApprovalCodeType: Labor
              ApprovalCodes:
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              - ParentId: 0
                IsDefault: false
                ApprovalCodeType: Labor
                InternalId: 9
                Amount: 1.041444916118296
                Id: 4
                InternalParentId: 0
                InvoiceId: 7
                InvoiceChargeId: 9
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              Amount: 4.258773108174356
              ApprovalCode: ApprovalCode
              AdditionalApprovalCode: AdditionalApprovalCode
            MaterialsTaxIncluded: false
            StoredFeatures:
            - StoredFeatures
            - StoredFeatures
            Description: Description
            IsTransferred: false
            Tax2Details:
              Tax2Amount: 3.0576100241049344
              Tax2Name: Tax2Name
            InvoiceTaxesDetails:
              LaborTaxPercent: 3.0937452626664474
              TravelTaxPercent: 0.8851374739011653
              FreightTaxPercent: 7.058770351582356
              TravelTax: 8.969578798196912
              MaterialTax: 4.652396432933246
              OtherTax: 3.0205796992916243
              MaterialTaxPercent: 7.143538047012306
              OtherTaxPercent: 6.519180951018382
              LaborTax: 0.10263654006109402
              FreightTax: 7.740351818741173
            LastActionDate: 2000-01-23T04:56:07.000+00:00
            NonTaxableLabor: 9
            PaidDate: 2000-01-23T04:56:07.000+00:00
            FreightTaxIncluded: false
            Number: Number
            Labors:
            - SkillLevel: SkillLevel
              Hours: 4.078845849666752
              Amount: 0.2025324113236393
              IsRateDiscrepancy: false
              RateDiscrepancyReason: RateDiscrepancyReason
              CityPerformed: CityPerformed
              InvoiceId: 5
              NumOfTech: NumOfTech
              HourlyRate: 3.2588565619047607
              IsOffShore: false
              AgreedRate: 6.628464275087742
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              LaborType: LaborType
              ServiceType: ServiceType
              isNontaxableVATEU: false
              Id: 7
            - SkillLevel: SkillLevel
              Hours: 4.078845849666752
              Amount: 0.2025324113236393
              IsRateDiscrepancy: false
              RateDiscrepancyReason: RateDiscrepancyReason
              CityPerformed: CityPerformed
              InvoiceId: 5
              NumOfTech: NumOfTech
              HourlyRate: 3.2588565619047607
              IsOffShore: false
              AgreedRate: 6.628464275087742
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              LaborType: LaborType
              ServiceType: ServiceType
              isNontaxableVATEU: false
              Id: 7
            Travels:
            - IsOffShore: false
              UnitPrice: 8.28965939814297
              Description: Description
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              UnitType: UnitType
              Amount: 4.573936264232251
              Quantity: 6.623518433804886
              isNontaxableVATEU: false
              Id: 2
              InvoiceId: 1
            - IsOffShore: false
              UnitPrice: 8.28965939814297
              Description: Description
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              UnitType: UnitType
              Amount: 4.573936264232251
              Quantity: 6.623518433804886
              isNontaxableVATEU: false
              Id: 2
              InvoiceId: 1
            NonTaxableTravel: 9
            InvoiceDate: 2000-01-23T04:56:07.000+00:00
            IsOutsourced: false
            IsChargesApprovalCodesDefault: false
            Others:
            - Description: Description
              Amount: 1.8268702177058116
              Quantity: 9.183123594773994
              InvoiceId: 9
              AgreedUnitPrice: 8.761432466225475
              PriceListOtherChargeId: 0
              Type: Type
              UnitPrice: 3.502657762086401
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              UnitType: UnitType
              IsUnitPriceDiscrepancy: false
              UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
              isNontaxableVATEU: false
              Id: 8
            - Description: Description
              Amount: 1.8268702177058116
              Quantity: 9.183123594773994
              InvoiceId: 9
              AgreedUnitPrice: 8.761432466225475
              PriceListOtherChargeId: 0
              Type: Type
              UnitPrice: 3.502657762086401
              ApprovalCodeGroup:
                ApprovalCodeType: Labor
                ApprovalCodes:
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                - ParentId: 0
                  IsDefault: false
                  ApprovalCodeType: Labor
                  InternalId: 9
                  Amount: 1.041444916118296
                  Id: 4
                  InternalParentId: 0
                  InvoiceId: 7
                  InvoiceChargeId: 9
                  ApprovalCode: ApprovalCode
                  AdditionalApprovalCode: AdditionalApprovalCode
                Amount: 4.258773108174356
                ApprovalCode: ApprovalCode
                AdditionalApprovalCode: AdditionalApprovalCode
              UnitType: UnitType
              IsUnitPriceDiscrepancy: false
              UnitPriceDiscrepancyReason: UnitPriceDiscrepancyReason
              isNontaxableVATEU: false
              Id: 8
            StarredBy: StarredBy
            Comments: Comments
            PostedTax2Rate: 6.846853
            EditableAdditionalApprovalCode:
              SetupId: 8
              Options:
              - Value: Value
                Id: 1
              - Value: Value
                Id: 1
              DefaultValue: DefaultValue
              ValueFormat: 3
              Header: Header
              DefaultOptionId: 6
              EditableAtLineItemLevel: 6
              Value: Value
              LocationId: 9
            IsExists: false
            ApprovalCode: ApprovalCode
            Provider:
              Zip: Zip
              MailFrequency: 1
              Email: Email
              ImageFile: ImageFile
              DateCreated: 2000-01-23T04:56:07.000+00:00
              TaxId: TaxId
              Name: Name
              Trade: Trade
              Phone: Phone
              FaxNumber: FaxNumber
              LastTrainingDate: 2000-01-23T04:56:07.000+00:00
              FormId: 5
              SuperUser: SuperUser
              MailInfo: MailInfo
              NightRequest: 5
              ReturnMail: ReturnMail
              MainContact: MainContact
              Address2: Address2
              Address1: Address1
              City: City
              IsInternal: false
              ProcessingEmail: ProcessingEmail
              ShortFormatEmail: ShortFormatEmail
              DoNotDispatch: false
              IsOnOffShoreFeatureEnabled: false
              State: State
              FullName: FullName
              Pager: Pager
              WebSite: WebSite
              Country: Country
              LastUserDate: LastUserDate
              Id: 2
              SuiteFloor: SuiteFloor
              LastTrainingDateStr: LastTrainingDateStr
            OtherTaxIncluded: false
            StatusChangeDate: 2000-01-23T04:56:07.000+00:00
            TransferredDate: 2000-01-23T04:56:07.000+00:00
            StatusChangeUserid: StatusChangeUserid
            Location:
              Zip: Zip
              Radius: 3.5571952270680973
              Email: Email
              TimeZoneInfoId: 6
              TimeZoneIanaName: TimeZoneIanaName
              OpenDate: 2000-01-23T04:56:07.000+00:00
              SquareValue: 6.778324963048013
              StateId: 1
              ShortName: ShortName
              Latitude: 8.762042012749001
              CountyId: 5
              Name: Name
              AddressTypeId: 7
              StoreId: StoreId
              SquareMeasure: SquareMeasure
              TimeZoneShortDescription: TimeZoneShortDescription
              SubscriberId: 6
              Phone: Phone
              FaxNumber: FaxNumber
              SubscriberName: SubscriberName
              Supplier: Supplier
              HasInventory: false
              Distance: 6.438423552598547
              Notes:
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              - Header: Header
                HeaderId: 3
                Value: Value
                Id: 6
              CountryId: 2
              Status: Status
              Address2: Address2
              TypeLabel: TypeLabel
              FormattedAddress: FormattedAddress
              Address1: Address1
              City: City
              TimeShiftToEST: 3
              Longitude: 9.018348186070783
              Contact: Contact
              LocationFormattedAddressTail: LocationFormattedAddressTail
              LocationTypeId: 6
              State: State
              Region: Region
              Country: Country
              Id: 9
              ClosedDate: 2000-01-23T04:56:07.000+00:00
              District: District
              TimeZoneMsName: TimeZoneMsName
          UpdatedDate: 2000-01-23T04:56:07.000+00:00
          FrequencyId: 6
          CheckInDeniedReason: CheckInDeniedReason
          ScheduledDate: 2000-01-23T04:56:07.000+00:00
          Tax: 2.027123023002322
          AutoInvoice: false
          Trade: Trade
          ProviderRank: 7
          Subscriber:
            Zip: Zip
            DecimalSeparator: DecimalSeparator
            TimeFormat: TimeFormat
            Email: Email
            PrimaryCurrency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            IsOutsourcedWorkOn: false
            Address2: Address2
            ShortName: ShortName
            Users:
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            Address1: Address1
            City: City
            Name: Name
            State: State
            Phone: Phone
            DateFormat: DateFormat
            Country: Country
            Id: 7
            Fax: Fax
            ContactName: ContactName
          Currency:
            DecimalCount: 1
            Entity: Entity
            AlphabeticalCode: AlphabeticalCode
            NumericCode: NumericCode
            Rate: 4.965218492984954
            Id: 7
            CurrencyName: CurrencyName
          UpdatedDate_DTO: 2000-01-23T04:56:07.000+00:00
          Asset:
            ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
            ImportedFrom: 3
            ManufacturerDate: 2000-01-23T04:56:07.000+00:00
            AssetLeakDetectorConnectionId: 4
            LeasePeriod: 3
            AssetRefrigerant:
              RackId: RackId
              RefrigerantUsageType: 1
              AssetTypeId: 3
              RefrigerantPartNumber: RefrigerantPartNumber
              RefrigerantPurposeName: RefrigerantPurposeName
              AssetLeakDetectorId: 2
              CurrentChargeMetrics: 6.683562403749608
              ParentId: 1
              EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
              CarbID: CarbID
              RackEntityId: 4
              RackTypeName: RackTypeName
              OperationalStatus: OperationalStatus
              SystemLocation: SystemLocation
              CreateOperationalStatusHistory: false
              IsCarbReporting: false
              RackTypeId: 9
              RefrigerantPurposeId: 6
              HasLeakDetector: false
              ChargeProviderName: ChargeProviderName
              UserId: 6
              TagId: TagId
              OperationStatusDate: 2000-01-23T04:56:07.000+00:00
              CurrentChargeOunces: 8.762042012749001
              CurrentCharge: 9.369310271410669
              ChargeDescriptionId: 9
              Id: 6
              PartNumberId: 5
              AssetId: 7
            LastModifiedUserName: LastModifiedUserName
            BrandId: 5
            AssetValidationStatus: 6
            Trade: Trade
            EnergyEfficiency: EnergyEfficiency
            CustomAttributes:
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            Capacity: Capacity
            SubscriberId: 7
            Currency: 3
            Manufacturer: Manufacturer
            SubName: SubName
            SerialNo: SerialNo
            Warranty:
              ProviderId: 7
              Category: Category
              ExpirationDate: 2000-01-23T04:56:07.000+00:00
              Priority: Priority
              Expiration:
                Type: FromPurchaseDate
                Period: 1
              NTE: 1.2315135367772556
              Provider:
                ProviderName: ProviderName
                Type: Fixed
                Value: 1
            UsesRefrigerant: 2
            AssetUpdatesStatus: AssetUpdatesStatus
            LifeExpectancy: 7
            OriginalValue: 9.301444243932576
            AssetAttributesMap:
              EditableForProvidersAttributesMap: 5
              ViewableForProvidersAttributesMap: 6
              RequiredStandardAttributesMap: 6
              StandardAttributesMap: 6
            AssetTag: AssetTag
            IsCircuit: false
            Area: Area
            Active: false
            IsCarbReporting: false
            HasLeakDetector: false
            PurchaseDate: PurchaseDate
            HasCircuits: false
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            IsLeased: false
            LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
            HasComponents: false
            AdditionalTradesNames: AdditionalTradesNames
            Description: Description
            AssetStatus: AssetStatus
            ModifiedDate: 2000-01-23T04:56:07.000+00:00
            HasChilds: false
            RetiredDate: 2000-01-23T04:56:07.000+00:00
            AssetTypeId: 5
            StoreId: StoreId
            ConditionString: ConditionString
            LeaseDate: LeaseDate
            AssetValidated: false
            HasTagged: false
            AssetTypeGroupId: 0
            WorkOrderArea: WorkOrderArea
            Condition: 2
            ParentId: 3
            TradeId: 1
            IsLeakDetector: false
            LocationId: 6
            InstallDate: InstallDate
            ModelNo: ModelNo
            IsReplaceEquipment: false
            Type: Type
            Spend: 7.058770351582356
            Tag: Tag
            ManufacturerDateStr: ManufacturerDateStr
            Location: Location
            ValidationRequired: false
          AutoComplete: false
          OriginalEta_DTO: 2000-01-23T04:56:07.000+00:00
          Status:
            Primary: Primary
            Extended: Extended
            CanCreateInvoice: false
          EstimatedCompletionDate: 2000-01-23T04:56:07.000+00:00
          Tax2: 4.145608029883936
          IssueTicketInfo:
            AreaName: AreaName
            SetupId: 5
            Equipment: Equipment
            AreaId: 5
            ProblemGroup: ProblemGroup
            ProblemCode: ProblemCode
            Id: 1
            TicketType: TicketType
          IsExpired: false
          Assignee:
            UserName: UserName
            UserId: 0
          CreatedBy: CreatedBy
          Priority: Priority
          ReassignDate_DTO: 2000-01-23T04:56:07.000+00:00
          AssetCount: 3
          ProblemCode: ProblemCode
          Labels:
          - Label: Label
            Id: 7
          - Label: Label
            Id: 7
          LocationOpenDate: LocationOpenDate
          Tax2Type: Tax2Type
          CompletedDate: 2000-01-23T04:56:07.000+00:00
          ScheduledDate_DTO: 2000-01-23T04:56:07.000+00:00
          Price: 7.386281948385884
          CreatedDate: 2000-01-23T04:56:07.000+00:00
          IsInvoiced: false
          Id: 0
          Nte: 3.616076749251911
          CallerId: 3
          LocationRemodelDate: LocationRemodelDate
          Resolution: Resolution
          CategoryId: 9
          LinkedWorkOrders:
          - Id: 5
          - Id: 5
          Description: Description
          Category: Category
          HasWorkActivity: false
          CallDate: 2000-01-23T04:56:07.000+00:00
          RecallWorkOrder: 6
          IsCheckInDenied: false
          Attachments:
            Count:
              Total: 6
              Own: 1
          Source: Source
          ServiceId: 0
          Number: Number
          LinkedInWorkOrders:
          - Id: 5
          - Id: 5
          Assets:
          - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
            ImportedFrom: 3
            ManufacturerDate: 2000-01-23T04:56:07.000+00:00
            AssetLeakDetectorConnectionId: 4
            LeasePeriod: 3
            AssetRefrigerant:
              RackId: RackId
              RefrigerantUsageType: 1
              AssetTypeId: 3
              RefrigerantPartNumber: RefrigerantPartNumber
              RefrigerantPurposeName: RefrigerantPurposeName
              AssetLeakDetectorId: 2
              CurrentChargeMetrics: 6.683562403749608
              ParentId: 1
              EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
              CarbID: CarbID
              RackEntityId: 4
              RackTypeName: RackTypeName
              OperationalStatus: OperationalStatus
              SystemLocation: SystemLocation
              CreateOperationalStatusHistory: false
              IsCarbReporting: false
              RackTypeId: 9
              RefrigerantPurposeId: 6
              HasLeakDetector: false
              ChargeProviderName: ChargeProviderName
              UserId: 6
              TagId: TagId
              OperationStatusDate: 2000-01-23T04:56:07.000+00:00
              CurrentChargeOunces: 8.762042012749001
              CurrentCharge: 9.369310271410669
              ChargeDescriptionId: 9
              Id: 6
              PartNumberId: 5
              AssetId: 7
            LastModifiedUserName: LastModifiedUserName
            BrandId: 5
            AssetValidationStatus: 6
            Trade: Trade
            EnergyEfficiency: EnergyEfficiency
            CustomAttributes:
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            Capacity: Capacity
            SubscriberId: 7
            Currency: 3
            Manufacturer: Manufacturer
            SubName: SubName
            SerialNo: SerialNo
            Warranty:
              ProviderId: 7
              Category: Category
              ExpirationDate: 2000-01-23T04:56:07.000+00:00
              Priority: Priority
              Expiration:
                Type: FromPurchaseDate
                Period: 1
              NTE: 1.2315135367772556
              Provider:
                ProviderName: ProviderName
                Type: Fixed
                Value: 1
            UsesRefrigerant: 2
            AssetUpdatesStatus: AssetUpdatesStatus
            LifeExpectancy: 7
            OriginalValue: 9.301444243932576
            AssetAttributesMap:
              EditableForProvidersAttributesMap: 5
              ViewableForProvidersAttributesMap: 6
              RequiredStandardAttributesMap: 6
              StandardAttributesMap: 6
            AssetTag: AssetTag
            IsCircuit: false
            Area: Area
            Active: false
            IsCarbReporting: false
            HasLeakDetector: false
            PurchaseDate: PurchaseDate
            HasCircuits: false
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            IsLeased: false
            LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
            HasComponents: false
            AdditionalTradesNames: AdditionalTradesNames
            Description: Description
            AssetStatus: AssetStatus
            ModifiedDate: 2000-01-23T04:56:07.000+00:00
            HasChilds: false
            RetiredDate: 2000-01-23T04:56:07.000+00:00
            AssetTypeId: 5
            StoreId: StoreId
            ConditionString: ConditionString
            LeaseDate: LeaseDate
            AssetValidated: false
            HasTagged: false
            AssetTypeGroupId: 0
            WorkOrderArea: WorkOrderArea
            Condition: 2
            ParentId: 3
            TradeId: 1
            IsLeakDetector: false
            LocationId: 6
            InstallDate: InstallDate
            ModelNo: ModelNo
            IsReplaceEquipment: false
            Type: Type
            Spend: 7.058770351582356
            Tag: Tag
            ManufacturerDateStr: ManufacturerDateStr
            Location: Location
            ValidationRequired: false
          - ModifiedDateDto: 2000-01-23T04:56:07.000+00:00
            ImportedFrom: 3
            ManufacturerDate: 2000-01-23T04:56:07.000+00:00
            AssetLeakDetectorConnectionId: 4
            LeasePeriod: 3
            AssetRefrigerant:
              RackId: RackId
              RefrigerantUsageType: 1
              AssetTypeId: 3
              RefrigerantPartNumber: RefrigerantPartNumber
              RefrigerantPurposeName: RefrigerantPurposeName
              AssetLeakDetectorId: 2
              CurrentChargeMetrics: 6.683562403749608
              ParentId: 1
              EffectiveChargeDate: 2000-01-23T04:56:07.000+00:00
              CarbID: CarbID
              RackEntityId: 4
              RackTypeName: RackTypeName
              OperationalStatus: OperationalStatus
              SystemLocation: SystemLocation
              CreateOperationalStatusHistory: false
              IsCarbReporting: false
              RackTypeId: 9
              RefrigerantPurposeId: 6
              HasLeakDetector: false
              ChargeProviderName: ChargeProviderName
              UserId: 6
              TagId: TagId
              OperationStatusDate: 2000-01-23T04:56:07.000+00:00
              CurrentChargeOunces: 8.762042012749001
              CurrentCharge: 9.369310271410669
              ChargeDescriptionId: 9
              Id: 6
              PartNumberId: 5
              AssetId: 7
            LastModifiedUserName: LastModifiedUserName
            BrandId: 5
            AssetValidationStatus: 6
            Trade: Trade
            EnergyEfficiency: EnergyEfficiency
            CustomAttributes:
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            - ValueText: ValueText
              Required: false
              ValueType: 8
              EquipmentId: 7
              Value: "{}"
              Visible: false
              EquipmentTypeAttributeId: 4
              SelectedOptionsText: SelectedOptionsText
              Editable: false
              Custom: false
              EquipmentAttributeId: 0
              Name: Name
            Capacity: Capacity
            SubscriberId: 7
            Currency: 3
            Manufacturer: Manufacturer
            SubName: SubName
            SerialNo: SerialNo
            Warranty:
              ProviderId: 7
              Category: Category
              ExpirationDate: 2000-01-23T04:56:07.000+00:00
              Priority: Priority
              Expiration:
                Type: FromPurchaseDate
                Period: 1
              NTE: 1.2315135367772556
              Provider:
                ProviderName: ProviderName
                Type: Fixed
                Value: 1
            UsesRefrigerant: 2
            AssetUpdatesStatus: AssetUpdatesStatus
            LifeExpectancy: 7
            OriginalValue: 9.301444243932576
            AssetAttributesMap:
              EditableForProvidersAttributesMap: 5
              ViewableForProvidersAttributesMap: 6
              RequiredStandardAttributesMap: 6
              StandardAttributesMap: 6
            AssetTag: AssetTag
            IsCircuit: false
            Area: Area
            Active: false
            IsCarbReporting: false
            HasLeakDetector: false
            PurchaseDate: PurchaseDate
            HasCircuits: false
            CreatedDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            IsLeased: false
            LastModifiedUseDate: 2000-01-23T04:56:07.000+00:00
            HasComponents: false
            AdditionalTradesNames: AdditionalTradesNames
            Description: Description
            AssetStatus: AssetStatus
            ModifiedDate: 2000-01-23T04:56:07.000+00:00
            HasChilds: false
            RetiredDate: 2000-01-23T04:56:07.000+00:00
            AssetTypeId: 5
            StoreId: StoreId
            ConditionString: ConditionString
            LeaseDate: LeaseDate
            AssetValidated: false
            HasTagged: false
            AssetTypeGroupId: 0
            WorkOrderArea: WorkOrderArea
            Condition: 2
            ParentId: 3
            TradeId: 1
            IsLeakDetector: false
            LocationId: 6
            InstallDate: InstallDate
            ModelNo: ModelNo
            IsReplaceEquipment: false
            Type: Type
            Spend: 7.058770351582356
            Tag: Tag
            ManufacturerDateStr: ManufacturerDateStr
            Location: Location
            ValidationRequired: false
          CreatedDate_DTO: 2000-01-23T04:56:07.000+00:00
          PostedId: 6
          Notes:
            Last:
              CreatedBy: CreatedBy
              Number: 6
              MailedTo: MailedTo
              ActionRequired: false
              DateCreated: 2000-01-23T04:56:07.000+00:00
              Id: 2
              NoteData: NoteData
            Count:
              Total: 6
              Own: 1
          TradeId: 2
          ClosingAuthorizationNumber: 3
          LocationId: 6
          ProjectId: 7
          IsEnabledForMobile: false
          ReassignDate: 2000-01-23T04:56:07.000+00:00
          CompletedDate_DTO: 2000-01-23T04:56:07.000+00:00
          ExpirationDate_DTO: 2000-01-23T04:56:07.000+00:00
          WeatherEvent:
            Id: 4
            Name: Name
          ApprovalCode: ApprovalCode
          Provider:
            Zip: Zip
            MailFrequency: 1
            Email: Email
            ImageFile: ImageFile
            DateCreated: 2000-01-23T04:56:07.000+00:00
            TaxId: TaxId
            Name: Name
            Trade: Trade
            Phone: Phone
            FaxNumber: FaxNumber
            LastTrainingDate: 2000-01-23T04:56:07.000+00:00
            FormId: 5
            SuperUser: SuperUser
            MailInfo: MailInfo
            NightRequest: 5
            ReturnMail: ReturnMail
            MainContact: MainContact
            Address2: Address2
            Address1: Address1
            City: City
            IsInternal: false
            ProcessingEmail: ProcessingEmail
            ShortFormatEmail: ShortFormatEmail
            DoNotDispatch: false
            IsOnOffShoreFeatureEnabled: false
            State: State
            FullName: FullName
            Pager: Pager
            WebSite: WebSite
            Country: Country
            LastUserDate: LastUserDate
            Id: 2
            SuiteFloor: SuiteFloor
            LastTrainingDateStr: LastTrainingDateStr
          ExpirationDate: 2000-01-23T04:56:07.000+00:00
          Caller: Caller
          PurchaseNumber: PurchaseNumber
          CallDate_DTO: 2000-01-23T04:56:07.000+00:00
          Location:
            Zip: Zip
            Radius: 3.5571952270680973
            Email: Email
            TimeZoneInfoId: 6
            TimeZoneIanaName: TimeZoneIanaName
            OpenDate: 2000-01-23T04:56:07.000+00:00
            SquareValue: 6.778324963048013
            StateId: 1
            ShortName: ShortName
            Latitude: 8.762042012749001
            CountyId: 5
            Name: Name
            AddressTypeId: 7
            StoreId: StoreId
            SquareMeasure: SquareMeasure
            TimeZoneShortDescription: TimeZoneShortDescription
            SubscriberId: 6
            Phone: Phone
            FaxNumber: FaxNumber
            SubscriberName: SubscriberName
            Supplier: Supplier
            HasInventory: false
            Distance: 6.438423552598547
            Notes:
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            CountryId: 2
            Status: Status
            Address2: Address2
            TypeLabel: TypeLabel
            FormattedAddress: FormattedAddress
            Address1: Address1
            City: City
            TimeShiftToEST: 3
            Longitude: 9.018348186070783
            Contact: Contact
            LocationFormattedAddressTail: LocationFormattedAddressTail
            LocationTypeId: 6
            State: State
            Region: Region
            Country: Country
            Id: 9
            ClosedDate: 2000-01-23T04:56:07.000+00:00
            District: District
            TimeZoneMsName: TimeZoneMsName
          OriginalEta: 2000-01-23T04:56:07.000+00:00
        IsMlpLimitOverrun: false
        Number: Number
        Subscriber:
          Zip: Zip
          DecimalSeparator: DecimalSeparator
          TimeFormat: TimeFormat
          Email: Email
          PrimaryCurrency:
            DecimalCount: 1
            Entity: Entity
            AlphabeticalCode: AlphabeticalCode
            NumericCode: NumericCode
            Rate: 4.965218492984954
            Id: 7
            CurrencyName: CurrencyName
          IsOutsourcedWorkOn: false
          Address2: Address2
          ShortName: ShortName
          Users:
          - UserName: UserName
            Email: Email
            MlpUserInfo:
              Id: 1
              MlpLevel: MlpLevel
              MlpLocations:
              - 6
              - 6
            Access:
              Trades:
              - Trades
              - Trades
              Locations:
              - Locations
              - Locations
              Districts:
              - Districts
              - Districts
              Regions:
              - Regions
              - Regions
            Dashboard:
              Id: 2
              RedirectToDashboard: false
              Name: Name
            MliUserInfo:
              MliLocations:
              - 1
              - 1
              Id: 1
              MliLevel: MliLevel
            Roles:
            - Roles
            - Roles
            Limits:
              NteLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              ProposalLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              InvoiceLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
            SubscriberId: 3
            FullName: FullName
            PsmEmail: PsmEmail
            Permissions:
            - Permissions
            - Permissions
            Id: 9
            Disabled: false
            UserType: Corporate
            FeedRole: FeedRole
          - UserName: UserName
            Email: Email
            MlpUserInfo:
              Id: 1
              MlpLevel: MlpLevel
              MlpLocations:
              - 6
              - 6
            Access:
              Trades:
              - Trades
              - Trades
              Locations:
              - Locations
              - Locations
              Districts:
              - Districts
              - Districts
              Regions:
              - Regions
              - Regions
            Dashboard:
              Id: 2
              RedirectToDashboard: false
              Name: Name
            MliUserInfo:
              MliLocations:
              - 1
              - 1
              Id: 1
              MliLevel: MliLevel
            Roles:
            - Roles
            - Roles
            Limits:
              NteLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              ProposalLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              InvoiceLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
            SubscriberId: 3
            FullName: FullName
            PsmEmail: PsmEmail
            Permissions:
            - Permissions
            - Permissions
            Id: 9
            Disabled: false
            UserType: Corporate
            FeedRole: FeedRole
          Address1: Address1
          City: City
          Name: Name
          State: State
          Phone: Phone
          DateFormat: DateFormat
          Country: Country
          Id: 7
          Fax: Fax
          ContactName: ContactName
        Currency:
          DecimalCount: 1
          Entity: Entity
          AlphabeticalCode: AlphabeticalCode
          NumericCode: NumericCode
          Rate: 4.965218492984954
          Id: 7
          CurrencyName: CurrencyName
        AssignedToLevel: AssignedToLevel
        RFP: null
        Status:
          ModifiedDate_dto: 2000-01-23T04:56:07.000+00:00
          Primary: Primary
          Extended: Extended
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          ModifiedBy: ModifiedBy
        CreatedBy:
          UserName: UserName
          Email: Email
          FullName: FullName
          LevelInfo:
            Order: 5
            UserId: 6
            LocationIds:
            - 1
            - 1
            CodeChange: false
            UsersLocations:
              key:
              - 2
              - 2
            LevelName: LevelName
            CategoryChange: false
            DivisionId: 7
            LevelId: 5
            PriorityChange: false
          Id: 0
        CurrentProposalMlpLevelId: 6
        AmountCategories:
        - TotalCost: 7.061401241503109
          Id: 2
          Name: Name
        - TotalCost: 7.061401241503109
          Id: 2
          Name: Name
        Actions:
        - Actions
        - Actions
        Comments: Comments
        Amount: 7.386281948385884
        PoNumber: PoNumber
        Recommendation:
          RecommendationType: None
          Score: None
          Currency: Currency
          NegativeFeedbacksRecallsPercent: 3.616076749251911
          ProposalId: 4
          ProviderCompliancePercent: 2.027123023002322
          RecommendationAmounts:
          - 9
          - 9
        Provider:
          Zip: Zip
          MailFrequency: 1
          Email: Email
          ImageFile: ImageFile
          DateCreated: 2000-01-23T04:56:07.000+00:00
          TaxId: TaxId
          Name: Name
          Trade: Trade
          Phone: Phone
          FaxNumber: FaxNumber
          LastTrainingDate: 2000-01-23T04:56:07.000+00:00
          FormId: 5
          SuperUser: SuperUser
          MailInfo: MailInfo
          NightRequest: 5
          ReturnMail: ReturnMail
          MainContact: MainContact
          Address2: Address2
          Address1: Address1
          City: City
          IsInternal: false
          ProcessingEmail: ProcessingEmail
          ShortFormatEmail: ShortFormatEmail
          DoNotDispatch: false
          IsOnOffShoreFeatureEnabled: false
          State: State
          FullName: FullName
          Pager: Pager
          WebSite: WebSite
          Country: Country
          LastUserDate: LastUserDate
          Id: 2
          SuiteFloor: SuiteFloor
          LastTrainingDateStr: LastTrainingDateStr
        AssignedTo:
          UserName: UserName
          Email: Email
          FullName: FullName
          LevelInfo:
            Order: 5
            UserId: 6
            LocationIds:
            - 1
            - 1
            CodeChange: false
            UsersLocations:
              key:
              - 2
              - 2
            LevelName: LevelName
            CategoryChange: false
            DivisionId: 7
            LevelId: 5
            PriorityChange: false
          Id: 0
        Project:
          Id: 0
          Name: Name
        CreatedDate_dto: 2000-01-23T04:56:07.000+00:00
        CurrentProposalMlpLevelName: CurrentProposalMlpLevelName
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        AssignedFromLevel: AssignedFromLevel
        Id: 5
        MlpRecommendation:
          Status: Status
          CategoryId: 3
          Comment: Comment
          Category: Category
          EmailMyself: false
          WorkOrderLabel:
            WoUrl: WoUrl
            Id: 0
            Name: Name
          SelectedTrackingNumber: 6
          Priority: Priority
          PoNumber: PoNumber
          MyEmail: MyEmail
          WoType: Origin
          OriginalTrackingNumber: 5
          Applied: false
          ApprovalCode: ApprovalCode
          EmailsToNotify: EmailsToNotify
          GeneratedTrackingNumber: 3
          ApprovalReason: ApprovalReason
          UserId: 6
          RejectCodeId: 7
          ProposalId: 6
          Id: 2
          NotSavedRecommendation: false
        Location:
          Zip: Zip
          Radius: 3.5571952270680973
          Email: Email
          TimeZoneInfoId: 6
          TimeZoneIanaName: TimeZoneIanaName
          OpenDate: 2000-01-23T04:56:07.000+00:00
          SquareValue: 6.778324963048013
          StateId: 1
          ShortName: ShortName
          Latitude: 8.762042012749001
          CountyId: 5
          Name: Name
          AddressTypeId: 7
          StoreId: StoreId
          SquareMeasure: SquareMeasure
          TimeZoneShortDescription: TimeZoneShortDescription
          SubscriberId: 6
          Phone: Phone
          FaxNumber: FaxNumber
          SubscriberName: SubscriberName
          Supplier: Supplier
          HasInventory: false
          Distance: 6.438423552598547
          Notes:
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          CountryId: 2
          Status: Status
          Address2: Address2
          TypeLabel: TypeLabel
          FormattedAddress: FormattedAddress
          Address1: Address1
          City: City
          TimeShiftToEST: 3
          Longitude: 9.018348186070783
          Contact: Contact
          LocationFormattedAddressTail: LocationFormattedAddressTail
          LocationTypeId: 6
          State: State
          Region: Region
          Country: Country
          Id: 9
          ClosedDate: 2000-01-23T04:56:07.000+00:00
          District: District
          TimeZoneMsName: TimeZoneMsName
        NextLevelEmpty: false
      properties:
        Id:
          format: int32
          type: integer
        Number:
          type: string
        Description:
          type: string
        Description2:
          type: string
        Comments:
          type: string
        Location:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.Location'
        Provider:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.Provider'
        Subscriber:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.Subscriber'
        Trade:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.Trade'
        WorkOrder:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkOrder'
        Currency:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Currencies.Currency'
        RFP:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Rfp.Rfp'
        CreatedDate:
          format: date-time
          type: string
        CreatedDate_dto:
          format: date-time
          type: string
        CreatedBy:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.UserInfo'
        SubmittedTo:
          type: string
        Status:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalStatus'
        Attachments:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Attachments.Attachment'
          type: array
        AssignedTo:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.UserInfo'
        ScheduledDate:
          format: date-time
          type: string
        ScheduledDateDto:
          format: date-time
          type: string
        AmountCategories:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalCategoryInfo'
          type: array
        UpdatedDate:
          description: Updated Date
          format: date-time
          type: string
        UpdatedDateDto:
          format: date-time
          type: string
        Recommendation:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalRecommendation'
        Amount:
          format: double
          type: number
        AssignedFromLevel:
          type: string
        AssignedToLevel:
          type: string
        LevelsEscalateTo:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.EscalateTo'
          type: array
        Actions:
          items:
            type: string
          type: array
        MlpRecommendations:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.Proposals.MlpRecommendation'
          type: array
        MlpRecommendation:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.Proposals.MlpRecommendation'
        CurrentProposalMlpRuleSetId:
          format: int32
          type: integer
        CurrentProposalMlpRuleSetName:
          type: string
        CurrentProposalMlpLevelId:
          format: int32
          type: integer
        CurrentProposalMlpLevelName:
          type: string
        PoNumber:
          type: string
        IsMlpLimitOverrun:
          default: false
          type: boolean
        NextLevelEmpty:
          default: false
          type: boolean
        Project:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.Proposals.ProposalProjectSimpleModel'
      type: object
    ServiceChannel.Services.Messaging.Proposals.ProposalStatus:
      example:
        ModifiedDate_dto: 2000-01-23T04:56:07.000+00:00
        Primary: Primary
        Extended: Extended
        ModifiedDate: 2000-01-23T04:56:07.000+00:00
        ModifiedBy: ModifiedBy
      properties:
        Primary:
          type: string
        Extended:
          type: string
        ModifiedDate:
          format: date-time
          type: string
        ModifiedDate_dto:
          format: date-time
          type: string
        ModifiedBy:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Proposals.ProposalCategoryInfo:
      example:
        TotalCost: 7.061401241503109
        Id: 2
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        TotalCost:
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.Proposals.ProposalRecommendation:
      example:
        RecommendationType: None
        Score: None
        Currency: Currency
        NegativeFeedbacksRecallsPercent: 3.616076749251911
        ProposalId: 4
        ProviderCompliancePercent: 2.027123023002322
        RecommendationAmounts:
        - 9
        - 9
      properties:
        RecommendationType:
          enum:
          - None
          - StrongApprove
          - Approve
          - Reject
          - StrongReject
          type: string
        RecommendationAmounts:
          items:
            format: int64
            type: integer
          type: array
        Currency:
          type: string
        Score:
          enum:
          - None
          - APlus
          - A
          - B
          - C
          - D
          type: string
        NegativeFeedbacksRecallsPercent:
          format: double
          type: number
        ProviderCompliancePercent:
          format: double
          type: number
        ProposalId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Proposals.EscalateTo:
      example:
        Action: Action
        SkippedOverLimit: false
        EscalateToLevelRule:
          Action: Action
          Actions:
          - EntryLevel: false
            LocationId: 8
            RuleOrder: 9
            ActionNotification: false
            Name: Name
            ForwardToLevelName: ForwardToLevelName
            RuleSetId: 6
            AutoEscalateInDays: 1
            CodeChange: false
            UserId: 9
            EndStatus: EndStatus
            LevelName: LevelName
            CategoryChange: false
            SkipOverLimit: false
            RuleNumber: 5
            Limit: 6.84685269835264
            Id: 9
            ForwardTo: 7
            Override: false
            LevelId: 4
          - EntryLevel: false
            LocationId: 8
            RuleOrder: 9
            ActionNotification: false
            Name: Name
            ForwardToLevelName: ForwardToLevelName
            RuleSetId: 6
            AutoEscalateInDays: 1
            CodeChange: false
            UserId: 9
            EndStatus: EndStatus
            LevelName: LevelName
            CategoryChange: false
            SkipOverLimit: false
            RuleNumber: 5
            Limit: 6.84685269835264
            Id: 9
            ForwardTo: 7
            Override: false
            LevelId: 4
          AutoEscalate: 3
          RuleOrder: 1
          ActionNotification: false
          LevelName: LevelName
          SkipOverLimit: false
          StatusTo: StatusTo
          ForwardToName: ForwardToName
          Limit: 6.965117697638846
          ForwardTo: 6
          Override: false
          LevelId: 1
        EscalateToLevel: EscalateToLevel
        HasActiveUsers: false
        DisabledUserIds:
        - 1
        - 1
        EscalateToLevelId: 1
      properties:
        Action:
          type: string
        EscalateToLevel:
          type: string
        EscalateToLevelId:
          format: int32
          type: integer
        SkippedOverLimit:
          default: false
          type: boolean
        HasActiveUsers:
          default: false
          type: boolean
        DisabledUserIds:
          items:
            format: int32
            type: integer
          type: array
        EscalateToLevelRule:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.Proposals.MlpLevelRule'
      type: object
    ServiceChannel.Api.Model.Proposals.MlpRecommendation:
      example:
        Status: Status
        CategoryId: 3
        Comment: Comment
        Category: Category
        EmailMyself: false
        WorkOrderLabel:
          WoUrl: WoUrl
          Id: 0
          Name: Name
        SelectedTrackingNumber: 6
        Priority: Priority
        PoNumber: PoNumber
        MyEmail: MyEmail
        WoType: Origin
        OriginalTrackingNumber: 5
        Applied: false
        ApprovalCode: ApprovalCode
        EmailsToNotify: EmailsToNotify
        GeneratedTrackingNumber: 3
        ApprovalReason: ApprovalReason
        UserId: 6
        RejectCodeId: 7
        ProposalId: 6
        Id: 2
        NotSavedRecommendation: false
      properties:
        Id:
          format: int32
          type: integer
        ProposalId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        Status:
          type: string
        WoType:
          enum:
          - Origin
          - New
          - Existing
          type: string
        OriginalTrackingNumber:
          format: int32
          type: integer
        SelectedTrackingNumber:
          format: int32
          type: integer
        GeneratedTrackingNumber:
          format: int32
          type: integer
        PoNumber:
          type: string
        Category:
          type: string
        CategoryId:
          format: int32
          type: integer
        ApprovalCode:
          type: string
        Priority:
          type: string
        RejectCodeId:
          format: int32
          type: integer
        ApprovalReason:
          type: string
        EmailsToNotify:
          type: string
        Applied:
          default: false
          type: boolean
        EmailMyself:
          default: false
          type: boolean
        MyEmail:
          type: string
        NotSavedRecommendation:
          default: false
          type: boolean
        WorkOrderLabel:
          $ref: '#/components/schemas/ServiceChannel.Api.Model.Label'
        Comment:
          type: string
      type: object
    ServiceChannel.Api.Model.Proposals.ProposalProjectSimpleModel:
      example:
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
      type: object
    ServiceChannel.Api.Model.Proposals.MlpLevelRule:
      example:
        Action: Action
        Actions:
        - EntryLevel: false
          LocationId: 8
          RuleOrder: 9
          ActionNotification: false
          Name: Name
          ForwardToLevelName: ForwardToLevelName
          RuleSetId: 6
          AutoEscalateInDays: 1
          CodeChange: false
          UserId: 9
          EndStatus: EndStatus
          LevelName: LevelName
          CategoryChange: false
          SkipOverLimit: false
          RuleNumber: 5
          Limit: 6.84685269835264
          Id: 9
          ForwardTo: 7
          Override: false
          LevelId: 4
        - EntryLevel: false
          LocationId: 8
          RuleOrder: 9
          ActionNotification: false
          Name: Name
          ForwardToLevelName: ForwardToLevelName
          RuleSetId: 6
          AutoEscalateInDays: 1
          CodeChange: false
          UserId: 9
          EndStatus: EndStatus
          LevelName: LevelName
          CategoryChange: false
          SkipOverLimit: false
          RuleNumber: 5
          Limit: 6.84685269835264
          Id: 9
          ForwardTo: 7
          Override: false
          LevelId: 4
        AutoEscalate: 3
        RuleOrder: 1
        ActionNotification: false
        LevelName: LevelName
        SkipOverLimit: false
        StatusTo: StatusTo
        ForwardToName: ForwardToName
        Limit: 6.965117697638846
        ForwardTo: 6
        Override: false
        LevelId: 1
      properties:
        LevelId:
          format: int32
          type: integer
        Actions:
          items:
            $ref: '#/components/schemas/ServiceChannel.Api.Model.Proposals.MlpRuleAction'
          type: array
        LevelName:
          type: string
        ForwardTo:
          format: int32
          readOnly: true
          type: integer
        Override:
          default: false
          type: boolean
        SkipOverLimit:
          default: false
          type: boolean
        ActionNotification:
          default: false
          type: boolean
        Action:
          type: string
        StatusTo:
          type: string
        AutoEscalate:
          format: int32
          type: integer
        Limit:
          format: double
          type: number
        RuleOrder:
          format: int32
          type: integer
        ForwardToName:
          type: string
      type: object
    ServiceChannel.Api.Model.Proposals.MlpRuleAction:
      example:
        EntryLevel: false
        LocationId: 8
        RuleOrder: 9
        ActionNotification: false
        Name: Name
        ForwardToLevelName: ForwardToLevelName
        RuleSetId: 6
        AutoEscalateInDays: 1
        CodeChange: false
        UserId: 9
        EndStatus: EndStatus
        LevelName: LevelName
        CategoryChange: false
        SkipOverLimit: false
        RuleNumber: 5
        Limit: 6.84685269835264
        Id: 9
        ForwardTo: 7
        Override: false
        LevelId: 4
      properties:
        Name:
          type: string
        Limit:
          format: double
          type: number
        ForwardTo:
          format: int32
          type: integer
        ForwardToLevelName:
          type: string
        EndStatus:
          type: string
        AutoEscalateInDays:
          format: int32
          type: integer
        EntryLevel:
          default: false
          type: boolean
        CodeChange:
          default: false
          type: boolean
        CategoryChange:
          default: false
          type: boolean
        LevelId:
          format: int32
          type: integer
        LevelName:
          type: string
        RuleNumber:
          format: int32
          type: integer
        RuleOrder:
          format: int32
          type: integer
        Id:
          format: int32
          type: integer
        RuleSetId:
          format: int32
          type: integer
        Override:
          default: false
          type: boolean
        SkipOverLimit:
          default: false
          type: boolean
        ActionNotification:
          default: false
          type: boolean
        LocationId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Workorders.WorkActivity:
      description: Work activity object.
      example:
        TimeIn: 2000-01-23T04:56:07.000+00:00
        User:
          UserName: UserName
          Email: Email
          FullName: FullName
          LevelInfo:
            Order: 5
            UserId: 6
            LocationIds:
            - 1
            - 1
            CodeChange: false
            UsersLocations:
              key:
              - 2
              - 2
            LevelName: LevelName
            CategoryChange: false
            DivisionId: 7
            LevelId: 5
            PriorityChange: false
          Id: 0
        CreatedBy: 5
        WorkType: WorkType
        HasCheckListResponse: false
        TechsCount: 1
        TimeOut: 2000-01-23T04:56:07.000+00:00
        Name: Name
        HasCheckInInfo: false
        WorkOrderId: 6
        IsTimeEdited: false
        Id: 0
        ResolutionCode: ResolutionCode
        CallerId: CallerId
      properties:
        Id:
          description: The unique numeric identifier of the work activity.
          format: int32
          type: integer
        WorkOrderId:
          description: The unique numeric identifier of the work order for which the
            work activity was reported.
          format: int32
          type: integer
        TimeIn:
          description: The date and time when the technician started work on the service
            request.
          format: date-time
          type: string
        TimeOut:
          description: The date and time when the technician finished work on the
            service request.
          format: date-time
          type: string
        IsTimeEdited:
          default: false
          description: Indicates if the time of the labor performed was modified.
          type: boolean
        User:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.UserInfo'
        CallerId:
          description: "Possible values:\r\n            a) The GPS coordinates of\
            \ the location where the technician performed the most recent action —\
            \ either check-in or check-out — via the ServiceChannel Provider mobile\
            \ app.\r\n            b) The phone number of the technician from which\
            \ they performed the most recent action — either check-in or check-out\
            \ — using the IVR (Interactive Voice Response) system.\r\n           \
            \ c) Null value if the work activity was entered manually."
          type: string
        ResolutionCode:
          description: The most recent status assigned to the work order by the technician.
          type: string
        WorkType:
          description: "The type of activity performed: *Repair* or *Travel*. Other\
            \ values may be returned if custom types are set up for the subscriber."
          type: string
        HasCheckInInfo:
          default: false
          description: Indicates if a check-in was performed for the work activity.
          type: boolean
        HasCheckListResponse:
          default: false
          description: Indicates if the technician answered checklist questions.
          type: boolean
        TechsCount:
          description: The number of technicians who performed the work.
          format: int32
          type: integer
        Name:
          description: The technician performed the work.
          type: string
        CreatedBy:
          description: The user who created the labor.
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Providers.ReviewedProvider:
      description: "A provider entity with common reviews information\r\n        \
        \    and the current user feedback"
      example:
        Zip: Zip
        MailFrequency: 5
        Email: Email
        ImageFile: ImageFile
        DateCreated: 2000-01-23T04:56:07.000+00:00
        TaxId: TaxId
        Name: Name
        Trade: Trade
        Phone: Phone
        FaxNumber: FaxNumber
        LastTrainingDate: 2000-01-23T04:56:07.000+00:00
        FormId: 2
        SuperUser: SuperUser
        MailInfo: MailInfo
        NightRequest: 7
        ReturnMail: ReturnMail
        MainContact: MainContact
        Address2: Address2
        Address1: Address1
        City: City
        MyFeedback:
          Comment: Comment
          Id: 1
          StarScore: 5
          Date: 2000-01-23T04:56:07.000+00:00
        IsInternal: false
        ProcessingEmail: ProcessingEmail
        ShortFormatEmail: ShortFormatEmail
        DoNotDispatch: false
        IsOnOffShoreFeatureEnabled: false
        State: State
        ReviewsInfo:
          AverageRating: 0.8008281904610115
          ReviewsNumber: 6
          RecentReviewDate: 2000-01-23T04:56:07.000+00:00
        FullName: FullName
        Pager: Pager
        WebSite: WebSite
        Country: Country
        LastUserDate: LastUserDate
        Id: 9
        SuiteFloor: SuiteFloor
        LastTrainingDateStr: LastTrainingDateStr
      properties:
        ReviewsInfo:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.ReviewsInfo'
        MyFeedback:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.ProviderFeedback'
        Phone:
          type: string
        FullName:
          description: Full Name
          type: string
        Address1:
          description: Address1
          type: string
        Address2:
          description: Adress2
          type: string
        City:
          description: City
          type: string
        State:
          description: State
          type: string
        Zip:
          description: Zip
          type: string
        Country:
          description: Country
          type: string
        MainContact:
          description: Main Contact
          type: string
        DateCreated:
          description: Date Created
          format: date-time
          type: string
        LastUserDate:
          description: Last User Date
          type: string
        SuperUser:
          description: SuperUser
          type: string
        WebSite:
          description: WebSite
          type: string
        Email:
          description: Email
          type: string
        TaxId:
          description: Tax Id
          type: string
        Trade:
          description: Trade
          type: string
        ProcessingEmail:
          description: Processing Email
          type: string
        FaxNumber:
          description: Fax Number
          type: string
        SuiteFloor:
          description: Suite Floor
          type: string
        MailInfo:
          description: Mail Info
          type: string
        ImageFile:
          description: Image File
          type: string
        ReturnMail:
          description: Return Mail
          type: string
        MailFrequency:
          description: Mail Frequency
          format: int32
          type: integer
        FormId:
          description: Form Id
          format: int32
          type: integer
        Pager:
          description: Pager
          type: string
        NightRequest:
          description: NightRequest
          format: int32
          type: integer
        ShortFormatEmail:
          description: Short Format Email
          type: string
        LastTrainingDate:
          description: Last Training Date
          format: date-time
          type: string
        LastTrainingDateStr:
          description: Last Training Date as a string
          type: string
        IsInternal:
          default: false
          description: Is Internal
          type: boolean
        IsOnOffShoreFeatureEnabled:
          default: false
          description: Is OnOffShoreFeature Enabled
          type: boolean
        Id:
          description: Id
          format: int32
          type: integer
        Name:
          description: Name
          type: string
        DoNotDispatch:
          default: false
          description: DoNotDispatch enabled?
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Feedback.ReviewsInfo:
      description: A container to hold common provider reviews information.
      example:
        AverageRating: 0.8008281904610115
        ReviewsNumber: 6
        RecentReviewDate: 2000-01-23T04:56:07.000+00:00
      properties:
        AverageRating:
          description: An average rating based on some reviews.
          format: double
          type: number
        ReviewsNumber:
          description: A reviews number.
          format: int32
          type: integer
        RecentReviewDate:
          description: A recent review date
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.Feedback.ProviderFeedback:
      description: A feedback given to a certain provider.
      example:
        Comment: Comment
        Id: 1
        StarScore: 5
        Date: 2000-01-23T04:56:07.000+00:00
      properties:
        Id:
          description: Gets or sets a feedback id.
          format: int32
          type: integer
        StarScore:
          description: Gets or sets a star score.
          format: int32
          type: integer
        Comment:
          description: Gets or sets a comment.
          type: string
        Date:
          description: Gets or sets a date when the feedback was left.
          format: date-time
          type: string
      type: object
    ServiceChannel.Services.Messaging.Providers.DetailedProvider:
      description: Provider with detailed information according to the current subscriber.
      example:
        Zip: Zip
        MailFrequency: 1
        Email: Email
        ImageFile: ImageFile
        DateCreated: 2000-01-23T04:56:07.000+00:00
        TaxId: TaxId
        MyProviderReview:
          ReviewedDate: 2000-01-23T04:56:07.000+00:00
          Comment: Comment
          Id: 0
          StarScore: 6
        Name: Name
        Trade: Trade
        Phone: Phone
        FaxNumber: FaxNumber
        LastTrainingDate: 2000-01-23T04:56:07.000+00:00
        FormId: 5
        SuperUser: SuperUser
        MailInfo: MailInfo
        Contracts:
        - Trade:
            SubscriberId: 9
            Id: 5
            Name: Name
          Contractor:
            Zip: Zip
            MailFrequency: 1
            Email: Email
            ImageFile: ImageFile
            DateCreated: 2000-01-23T04:56:07.000+00:00
            TaxId: TaxId
            Name: Name
            Trade: Trade
            Phone: Phone
            FaxNumber: FaxNumber
            LastTrainingDate: 2000-01-23T04:56:07.000+00:00
            FormId: 5
            SuperUser: SuperUser
            MailInfo: MailInfo
            NightRequest: 5
            ReturnMail: ReturnMail
            MainContact: MainContact
            Address2: Address2
            Address1: Address1
            City: City
            IsInternal: false
            ProcessingEmail: ProcessingEmail
            ShortFormatEmail: ShortFormatEmail
            DoNotDispatch: false
            IsOnOffShoreFeatureEnabled: false
            State: State
            FullName: FullName
            Pager: Pager
            WebSite: WebSite
            Country: Country
            LastUserDate: LastUserDate
            Id: 2
            SuiteFloor: SuiteFloor
            LastTrainingDateStr: LastTrainingDateStr
          Category:
            HasDependency: false
            SubscriberId: 4
            UserId: 8
            PrimaryCategory:
              SubscriberId: 7
              UserId: 6
              Id: 0
              Name: Name
            Id: 0
            Name: Name
          Rank: 6
          Id: 0
          Client:
            Zip: Zip
            DecimalSeparator: DecimalSeparator
            TimeFormat: TimeFormat
            Email: Email
            PrimaryCurrency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            IsOutsourcedWorkOn: false
            Address2: Address2
            ShortName: ShortName
            Users:
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            Address1: Address1
            City: City
            Name: Name
            State: State
            Phone: Phone
            DateFormat: DateFormat
            Country: Country
            Id: 7
            Fax: Fax
            ContactName: ContactName
          Location:
            Zip: Zip
            Radius: 3.5571952270680973
            Email: Email
            TimeZoneInfoId: 6
            TimeZoneIanaName: TimeZoneIanaName
            OpenDate: 2000-01-23T04:56:07.000+00:00
            SquareValue: 6.778324963048013
            StateId: 1
            ShortName: ShortName
            Latitude: 8.762042012749001
            CountyId: 5
            Name: Name
            AddressTypeId: 7
            StoreId: StoreId
            SquareMeasure: SquareMeasure
            TimeZoneShortDescription: TimeZoneShortDescription
            SubscriberId: 6
            Phone: Phone
            FaxNumber: FaxNumber
            SubscriberName: SubscriberName
            Supplier: Supplier
            HasInventory: false
            Distance: 6.438423552598547
            Notes:
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            CountryId: 2
            Status: Status
            Address2: Address2
            TypeLabel: TypeLabel
            FormattedAddress: FormattedAddress
            Address1: Address1
            City: City
            TimeShiftToEST: 3
            Longitude: 9.018348186070783
            Contact: Contact
            LocationFormattedAddressTail: LocationFormattedAddressTail
            LocationTypeId: 6
            State: State
            Region: Region
            Country: Country
            Id: 9
            ClosedDate: 2000-01-23T04:56:07.000+00:00
            District: District
            TimeZoneMsName: TimeZoneMsName
        - Trade:
            SubscriberId: 9
            Id: 5
            Name: Name
          Contractor:
            Zip: Zip
            MailFrequency: 1
            Email: Email
            ImageFile: ImageFile
            DateCreated: 2000-01-23T04:56:07.000+00:00
            TaxId: TaxId
            Name: Name
            Trade: Trade
            Phone: Phone
            FaxNumber: FaxNumber
            LastTrainingDate: 2000-01-23T04:56:07.000+00:00
            FormId: 5
            SuperUser: SuperUser
            MailInfo: MailInfo
            NightRequest: 5
            ReturnMail: ReturnMail
            MainContact: MainContact
            Address2: Address2
            Address1: Address1
            City: City
            IsInternal: false
            ProcessingEmail: ProcessingEmail
            ShortFormatEmail: ShortFormatEmail
            DoNotDispatch: false
            IsOnOffShoreFeatureEnabled: false
            State: State
            FullName: FullName
            Pager: Pager
            WebSite: WebSite
            Country: Country
            LastUserDate: LastUserDate
            Id: 2
            SuiteFloor: SuiteFloor
            LastTrainingDateStr: LastTrainingDateStr
          Category:
            HasDependency: false
            SubscriberId: 4
            UserId: 8
            PrimaryCategory:
              SubscriberId: 7
              UserId: 6
              Id: 0
              Name: Name
            Id: 0
            Name: Name
          Rank: 6
          Id: 0
          Client:
            Zip: Zip
            DecimalSeparator: DecimalSeparator
            TimeFormat: TimeFormat
            Email: Email
            PrimaryCurrency:
              DecimalCount: 1
              Entity: Entity
              AlphabeticalCode: AlphabeticalCode
              NumericCode: NumericCode
              Rate: 4.965218492984954
              Id: 7
              CurrencyName: CurrencyName
            IsOutsourcedWorkOn: false
            Address2: Address2
            ShortName: ShortName
            Users:
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            - UserName: UserName
              Email: Email
              MlpUserInfo:
                Id: 1
                MlpLevel: MlpLevel
                MlpLocations:
                - 6
                - 6
              Access:
                Trades:
                - Trades
                - Trades
                Locations:
                - Locations
                - Locations
                Districts:
                - Districts
                - Districts
                Regions:
                - Regions
                - Regions
              Dashboard:
                Id: 2
                RedirectToDashboard: false
                Name: Name
              MliUserInfo:
                MliLocations:
                - 1
                - 1
                Id: 1
                MliLevel: MliLevel
              Roles:
              - Roles
              - Roles
              Limits:
                NteLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                ProposalLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
                InvoiceLimit:
                  Amount: 4.145608029883936
                  CurrencyId: 7
              SubscriberId: 3
              FullName: FullName
              PsmEmail: PsmEmail
              Permissions:
              - Permissions
              - Permissions
              Id: 9
              Disabled: false
              UserType: Corporate
              FeedRole: FeedRole
            Address1: Address1
            City: City
            Name: Name
            State: State
            Phone: Phone
            DateFormat: DateFormat
            Country: Country
            Id: 7
            Fax: Fax
            ContactName: ContactName
          Location:
            Zip: Zip
            Radius: 3.5571952270680973
            Email: Email
            TimeZoneInfoId: 6
            TimeZoneIanaName: TimeZoneIanaName
            OpenDate: 2000-01-23T04:56:07.000+00:00
            SquareValue: 6.778324963048013
            StateId: 1
            ShortName: ShortName
            Latitude: 8.762042012749001
            CountyId: 5
            Name: Name
            AddressTypeId: 7
            StoreId: StoreId
            SquareMeasure: SquareMeasure
            TimeZoneShortDescription: TimeZoneShortDescription
            SubscriberId: 6
            Phone: Phone
            FaxNumber: FaxNumber
            SubscriberName: SubscriberName
            Supplier: Supplier
            HasInventory: false
            Distance: 6.438423552598547
            Notes:
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            - Header: Header
              HeaderId: 3
              Value: Value
              Id: 6
            CountryId: 2
            Status: Status
            Address2: Address2
            TypeLabel: TypeLabel
            FormattedAddress: FormattedAddress
            Address1: Address1
            City: City
            TimeShiftToEST: 3
            Longitude: 9.018348186070783
            Contact: Contact
            LocationFormattedAddressTail: LocationFormattedAddressTail
            LocationTypeId: 6
            State: State
            Region: Region
            Country: Country
            Id: 9
            ClosedDate: 2000-01-23T04:56:07.000+00:00
            District: District
            TimeZoneMsName: TimeZoneMsName
        NightRequest: 5
        ReturnMail: ReturnMail
        MainContact: MainContact
        Address2: Address2
        Address1: Address1
        City: City
        IsInternal: false
        ProcessingEmail: ProcessingEmail
        ShortFormatEmail: ShortFormatEmail
        DoNotDispatch: false
        IsOnOffShoreFeatureEnabled: false
        State: State
        ReviewsInfo:
          AverageRating: 0.8008281904610115
          ReviewsNumber: 6
          RecentReviewDate: 2000-01-23T04:56:07.000+00:00
        FullName: FullName
        Pager: Pager
        WebSite: WebSite
        ContactEmail: ContactEmail
        Country: Country
        LastUserDate: LastUserDate
        Id: 2
        SuiteFloor: SuiteFloor
        LastTrainingDateStr: LastTrainingDateStr
      properties:
        Contracts:
          description: Contracts provider working at for the current subscriber.
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Contracts.Contract'
          type: array
        ReviewsInfo:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.ReviewsInfo'
        MyProviderReview:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.UserReview'
        ContactEmail:
          description: Provider Contact email.
          type: string
        Phone:
          type: string
        FullName:
          description: Full Name
          type: string
        Address1:
          description: Address1
          type: string
        Address2:
          description: Adress2
          type: string
        City:
          description: City
          type: string
        State:
          description: State
          type: string
        Zip:
          description: Zip
          type: string
        Country:
          description: Country
          type: string
        MainContact:
          description: Main Contact
          type: string
        DateCreated:
          description: Date Created
          format: date-time
          type: string
        LastUserDate:
          description: Last User Date
          type: string
        SuperUser:
          description: SuperUser
          type: string
        WebSite:
          description: WebSite
          type: string
        Email:
          description: Email
          type: string
        TaxId:
          description: Tax Id
          type: string
        Trade:
          description: Trade
          type: string
        ProcessingEmail:
          description: Processing Email
          type: string
        FaxNumber:
          description: Fax Number
          type: string
        SuiteFloor:
          description: Suite Floor
          type: string
        MailInfo:
          description: Mail Info
          type: string
        ImageFile:
          description: Image File
          type: string
        ReturnMail:
          description: Return Mail
          type: string
        MailFrequency:
          description: Mail Frequency
          format: int32
          type: integer
        FormId:
          description: Form Id
          format: int32
          type: integer
        Pager:
          description: Pager
          type: string
        NightRequest:
          description: NightRequest
          format: int32
          type: integer
        ShortFormatEmail:
          description: Short Format Email
          type: string
        LastTrainingDate:
          description: Last Training Date
          format: date-time
          type: string
        LastTrainingDateStr:
          description: Last Training Date as a string
          type: string
        IsInternal:
          default: false
          description: Is Internal
          type: boolean
        IsOnOffShoreFeatureEnabled:
          default: false
          description: Is OnOffShoreFeature Enabled
          type: boolean
        Id:
          description: Id
          format: int32
          type: integer
        Name:
          description: Name
          type: string
        DoNotDispatch:
          default: false
          description: DoNotDispatch enabled?
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Feedback.UserReview:
      description: A container to hold user review information.
      example:
        ReviewedDate: 2000-01-23T04:56:07.000+00:00
        Comment: Comment
        Id: 0
        StarScore: 6
      properties:
        Id:
          description: Review id
          format: int32
          type: integer
        StarScore:
          description: User's star score
          format: int32
          type: integer
        ReviewedDate:
          description: Date of last changes of user review in database
          format: date-time
          type: string
        Comment:
          description: Review comment
          type: string
      type: object
    ServiceChannel.Services.Messaging.Providers.ExtendedReviewedProvider:
      description: A provider entity with common reviews information
      example:
        Zip: Zip
        AnyMyReviews: false
        MailFrequency: 0
        Email: Email
        ImageFile: ImageFile
        DateCreated: 2000-01-23T04:56:07.000+00:00
        TaxId: TaxId
        MyProviderReview:
          ReviewedDate: 2000-01-23T04:56:07.000+00:00
          Comment: Comment
          Id: 0
          StarScore: 6
        Name: Name
        Trade: Trade
        Phone: Phone
        FaxNumber: FaxNumber
        LastTrainingDate: 2000-01-23T04:56:07.000+00:00
        FormId: 6
        SuperUser: SuperUser
        MailInfo: MailInfo
        NightRequest: 1
        Trades:
        - Trades
        - Trades
        ReturnMail: ReturnMail
        MainContact: MainContact
        Address2: Address2
        Address1: Address1
        City: City
        IsInternal: false
        ProcessingEmail: ProcessingEmail
        ShortFormatEmail: ShortFormatEmail
        DoNotDispatch: false
        IsOnOffShoreFeatureEnabled: false
        State: State
        ReviewsInfo:
          AverageRating: 0.8008281904610115
          ReviewsNumber: 6
          RecentReviewDate: 2000-01-23T04:56:07.000+00:00
        FullName: FullName
        Pager: Pager
        WebSite: WebSite
        Country: Country
        LastUserDate: LastUserDate
        Id: 5
        SuiteFloor: SuiteFloor
        LastTrainingDateStr: LastTrainingDateStr
      properties:
        ReviewsInfo:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.ReviewsInfo'
        MyProviderReview:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Feedback.UserReview'
        AnyMyReviews:
          default: false
          description: Whether the provider has any reviews with current user
          type: boolean
        Trades:
          description: Trades which the provider serves for the current subscriber.
          items:
            type: string
          type: array
        Phone:
          type: string
        FullName:
          description: Full Name
          type: string
        Address1:
          description: Address1
          type: string
        Address2:
          description: Adress2
          type: string
        City:
          description: City
          type: string
        State:
          description: State
          type: string
        Zip:
          description: Zip
          type: string
        Country:
          description: Country
          type: string
        MainContact:
          description: Main Contact
          type: string
        DateCreated:
          description: Date Created
          format: date-time
          type: string
        LastUserDate:
          description: Last User Date
          type: string
        SuperUser:
          description: SuperUser
          type: string
        WebSite:
          description: WebSite
          type: string
        Email:
          description: Email
          type: string
        TaxId:
          description: Tax Id
          type: string
        Trade:
          description: Trade
          type: string
        ProcessingEmail:
          description: Processing Email
          type: string
        FaxNumber:
          description: Fax Number
          type: string
        SuiteFloor:
          description: Suite Floor
          type: string
        MailInfo:
          description: Mail Info
          type: string
        ImageFile:
          description: Image File
          type: string
        ReturnMail:
          description: Return Mail
          type: string
        MailFrequency:
          description: Mail Frequency
          format: int32
          type: integer
        FormId:
          description: Form Id
          format: int32
          type: integer
        Pager:
          description: Pager
          type: string
        NightRequest:
          description: NightRequest
          format: int32
          type: integer
        ShortFormatEmail:
          description: Short Format Email
          type: string
        LastTrainingDate:
          description: Last Training Date
          format: date-time
          type: string
        LastTrainingDateStr:
          description: Last Training Date as a string
          type: string
        IsInternal:
          default: false
          description: Is Internal
          type: boolean
        IsOnOffShoreFeatureEnabled:
          default: false
          description: Is OnOffShoreFeature Enabled
          type: boolean
        Id:
          description: Id
          format: int32
          type: integer
        Name:
          description: Name
          type: string
        DoNotDispatch:
          default: false
          description: DoNotDispatch enabled?
          type: boolean
      type: object
    ServiceChannel.Services.Messaging.Proposals.ProposalCategory:
      example:
        TotalCost: 1.2315135367772556
        DefaultHideDetails: false
        Description: Description
        IsActive: false
        IsLocked: false
        SortOrder: 0
        Columns:
        - Description: Description
          DataField: DataField
          IsActive: false
          IsDescriptionColumn: false
          DataType: DataType
          IsMarkUpColumn: false
          SortOrder: 6
          IsUserReservedColumn: false
          Name: Name
        - Description: Description
          DataField: DataField
          IsActive: false
          IsDescriptionColumn: false
          DataType: DataType
          IsMarkUpColumn: false
          SortOrder: 6
          IsUserReservedColumn: false
          Name: Name
        Questions:
        - IsMultipleChoiceAllowed: false
          Options:
          - IsDefault: false
            Description: Description
            AnswerTextValue: AnswerTextValue
            IsActive: false
            IsChosen: false
            SortOrder: 4
            Name: Name
          - IsDefault: false
            Description: Description
            AnswerTextValue: AnswerTextValue
            IsActive: false
            IsChosen: false
            SortOrder: 4
            Name: Name
          IsRequired: false
          Description: Description
          TextValue: TextValue
          IsActive: false
          SortOrder: 2
          AnswerType: AnswerType
          Name: Name
        - IsMultipleChoiceAllowed: false
          Options:
          - IsDefault: false
            Description: Description
            AnswerTextValue: AnswerTextValue
            IsActive: false
            IsChosen: false
            SortOrder: 4
            Name: Name
          - IsDefault: false
            Description: Description
            AnswerTextValue: AnswerTextValue
            IsActive: false
            IsChosen: false
            SortOrder: 4
            Name: Name
          IsRequired: false
          Description: Description
          TextValue: TextValue
          IsActive: false
          SortOrder: 2
          AnswerType: AnswerType
          Name: Name
        Id: 7
        Rows:
        - ExtendedCost: 9.301444243932576
          Description: Description
          UnitOfMeasure: UnitOfMeasure
          PartNumber: PartNumber
          Craft: Craft
          IsActive: false
          RepairType: RepairType
          VAT: VAT
          SortOrder: 5
          MaterialThickness: MaterialThickness
          Name: Name
          TotalCost: 1.4658129805029452
          Quantity1: 5.637376656633329
          Quantity2: 2
          UnitCost: 7.061401241503109
          Required: false
          PartName: PartName
          HideDetails: false
          ServiceType: ServiceType
          RepairCategory: RepairCategory
          Markup: 3.616076749251911
          FeesType: FeesType
          PriceList: PriceList
        - ExtendedCost: 9.301444243932576
          Description: Description
          UnitOfMeasure: UnitOfMeasure
          PartNumber: PartNumber
          Craft: Craft
          IsActive: false
          RepairType: RepairType
          VAT: VAT
          SortOrder: 5
          MaterialThickness: MaterialThickness
          Name: Name
          TotalCost: 1.4658129805029452
          Quantity1: 5.637376656633329
          Quantity2: 2
          UnitCost: 7.061401241503109
          Required: false
          PartName: PartName
          HideDetails: false
          ServiceType: ServiceType
          RepairCategory: RepairCategory
          Markup: 3.616076749251911
          FeesType: FeesType
          PriceList: PriceList
        Name: Name
      properties:
        IsLocked:
          default: false
          type: boolean
        DefaultHideDetails:
          default: false
          type: boolean
        Description:
          type: string
        IsActive:
          default: false
          type: boolean
        SortOrder:
          format: int32
          type: integer
        Columns:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalCategoryColumn'
          type: array
        Rows:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalCategoryRow'
          type: array
        Questions:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalQuestion'
          type: array
        Id:
          format: int32
          type: integer
        Name:
          type: string
        TotalCost:
          format: double
          type: number
      type: object
    ServiceChannel.Services.Messaging.Proposals.ProposalCategoryColumn:
      example:
        Description: Description
        DataField: DataField
        IsActive: false
        IsDescriptionColumn: false
        DataType: DataType
        IsMarkUpColumn: false
        SortOrder: 6
        IsUserReservedColumn: false
        Name: Name
      properties:
        DataField:
          type: string
        DataType:
          type: string
        IsDescriptionColumn:
          default: false
          type: boolean
        IsMarkUpColumn:
          default: false
          type: boolean
        IsUserReservedColumn:
          default: false
          type: boolean
        Name:
          type: string
        Description:
          type: string
        IsActive:
          default: false
          type: boolean
        SortOrder:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.Proposals.ProposalCategoryRow:
      example:
        ExtendedCost: 9.301444243932576
        Description: Description
        UnitOfMeasure: UnitOfMeasure
        PartNumber: PartNumber
        Craft: Craft
        IsActive: false
        RepairType: RepairType
        VAT: VAT
        SortOrder: 5
        MaterialThickness: MaterialThickness
        Name: Name
        TotalCost: 1.4658129805029452
        Quantity1: 5.637376656633329
        Quantity2: 2
        UnitCost: 7.061401241503109
        Required: false
        PartName: PartName
        HideDetails: false
        ServiceType: ServiceType
        RepairCategory: RepairCategory
        Markup: 3.616076749251911
        FeesType: FeesType
        PriceList: PriceList
      properties:
        Required:
          default: false
          type: boolean
        HideDetails:
          default: false
          type: boolean
        TotalCost:
          format: double
          type: number
        ServiceType:
          type: string
        Name:
          type: string
        Description:
          type: string
        IsActive:
          default: false
          type: boolean
        SortOrder:
          format: int32
          type: integer
        Quantity1:
          format: double
          type: number
        Quantity2:
          format: int32
          type: integer
        UnitCost:
          format: double
          type: number
        UnitOfMeasure:
          type: string
        ExtendedCost:
          format: double
          type: number
        Craft:
          type: string
        RepairCategory:
          type: string
        RepairType:
          type: string
        MaterialThickness:
          type: string
        Markup:
          format: double
          type: number
        PriceList:
          type: string
        PartNumber:
          type: string
        PartName:
          type: string
        VAT:
          type: string
        FeesType:
          type: string
      type: object
    ServiceChannel.Services.Messaging.Proposals.ProposalQuestion:
      example:
        IsMultipleChoiceAllowed: false
        Options:
        - IsDefault: false
          Description: Description
          AnswerTextValue: AnswerTextValue
          IsActive: false
          IsChosen: false
          SortOrder: 4
          Name: Name
        - IsDefault: false
          Description: Description
          AnswerTextValue: AnswerTextValue
          IsActive: false
          IsChosen: false
          SortOrder: 4
          Name: Name
        IsRequired: false
        Description: Description
        TextValue: TextValue
        IsActive: false
        SortOrder: 2
        AnswerType: AnswerType
        Name: Name
      properties:
        IsRequired:
          default: false
          type: boolean
        IsMultipleChoiceAllowed:
          default: false
          type: boolean
        AnswerType:
          type: string
        TextValue:
          type: string
        Name:
          type: string
        Description:
          type: string
        IsActive:
          default: false
          type: boolean
        SortOrder:
          format: int32
          type: integer
        Options:
          items:
            $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Proposals.ProposalQuestionOption'
          type: array
      type: object
    ServiceChannel.Services.Messaging.Proposals.ProposalQuestionOption:
      example:
        IsDefault: false
        Description: Description
        AnswerTextValue: AnswerTextValue
        IsActive: false
        IsChosen: false
        SortOrder: 4
        Name: Name
      properties:
        IsDefault:
          default: false
          type: boolean
        AnswerTextValue:
          type: string
        IsChosen:
          default: false
          type: boolean
        Name:
          type: string
        Description:
          type: string
        IsActive:
          default: false
          type: boolean
        SortOrder:
          format: int32
          type: integer
      type: object
    ServiceChannel.Services.Messaging.ProviderAssignments.ProviderAssignment:
      example:
        Trade:
          SubscriberId: 9
          Id: 5
          Name: Name
        UpdatedDate: 2000-01-23T04:56:07.000+00:00
        Subscriber:
          Zip: Zip
          DecimalSeparator: DecimalSeparator
          TimeFormat: TimeFormat
          Email: Email
          PrimaryCurrency:
            DecimalCount: 1
            Entity: Entity
            AlphabeticalCode: AlphabeticalCode
            NumericCode: NumericCode
            Rate: 4.965218492984954
            Id: 7
            CurrencyName: CurrencyName
          IsOutsourcedWorkOn: false
          Address2: Address2
          ShortName: ShortName
          Users:
          - UserName: UserName
            Email: Email
            MlpUserInfo:
              Id: 1
              MlpLevel: MlpLevel
              MlpLocations:
              - 6
              - 6
            Access:
              Trades:
              - Trades
              - Trades
              Locations:
              - Locations
              - Locations
              Districts:
              - Districts
              - Districts
              Regions:
              - Regions
              - Regions
            Dashboard:
              Id: 2
              RedirectToDashboard: false
              Name: Name
            MliUserInfo:
              MliLocations:
              - 1
              - 1
              Id: 1
              MliLevel: MliLevel
            Roles:
            - Roles
            - Roles
            Limits:
              NteLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              ProposalLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              InvoiceLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
            SubscriberId: 3
            FullName: FullName
            PsmEmail: PsmEmail
            Permissions:
            - Permissions
            - Permissions
            Id: 9
            Disabled: false
            UserType: Corporate
            FeedRole: FeedRole
          - UserName: UserName
            Email: Email
            MlpUserInfo:
              Id: 1
              MlpLevel: MlpLevel
              MlpLocations:
              - 6
              - 6
            Access:
              Trades:
              - Trades
              - Trades
              Locations:
              - Locations
              - Locations
              Districts:
              - Districts
              - Districts
              Regions:
              - Regions
              - Regions
            Dashboard:
              Id: 2
              RedirectToDashboard: false
              Name: Name
            MliUserInfo:
              MliLocations:
              - 1
              - 1
              Id: 1
              MliLevel: MliLevel
            Roles:
            - Roles
            - Roles
            Limits:
              NteLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              ProposalLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
              InvoiceLimit:
                Amount: 4.145608029883936
                CurrencyId: 7
            SubscriberId: 3
            FullName: FullName
            PsmEmail: PsmEmail
            Permissions:
            - Permissions
            - Permissions
            Id: 9
            Disabled: false
            UserType: Corporate
            FeedRole: FeedRole
          Address1: Address1
          City: City
          Name: Name
          State: State
          Phone: Phone
          DateFormat: DateFormat
          Country: Country
          Id: 7
          Fax: Fax
          ContactName: ContactName
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        Rank: 6
        Id: 0
        Provider:
          Zip: Zip
          MailFrequency: 1
          Email: Email
          ImageFile: ImageFile
          DateCreated: 2000-01-23T04:56:07.000+00:00
          TaxId: TaxId
          Name: Name
          Trade: Trade
          Phone: Phone
          FaxNumber: FaxNumber
          LastTrainingDate: 2000-01-23T04:56:07.000+00:00
          FormId: 5
          SuperUser: SuperUser
          MailInfo: MailInfo
          NightRequest: 5
          ReturnMail: ReturnMail
          MainContact: MainContact
          Address2: Address2
          Address1: Address1
          City: City
          IsInternal: false
          ProcessingEmail: ProcessingEmail
          ShortFormatEmail: ShortFormatEmail
          DoNotDispatch: false
          IsOnOffShoreFeatureEnabled: false
          State: State
          FullName: FullName
          Pager: Pager
          WebSite: WebSite
          Country: Country
          LastUserDate: LastUserDate
          Id: 2
          SuiteFloor: SuiteFloor
          LastTrainingDateStr: LastTrainingDateStr
        Location:
          Zip: Zip
          Radius: 3.5571952270680973
          Email: Email
          TimeZoneInfoId: 6
          TimeZoneIanaName: TimeZoneIanaName
          OpenDate: 2000-01-23T04:56:07.000+00:00
          SquareValue: 6.778324963048013
          StateId: 1
          ShortName: ShortName
          Latitude: 8.762042012749001
          CountyId: 5
          Name: Name
          AddressTypeId: 7
          StoreId: StoreId
          SquareMeasure: SquareMeasure
          TimeZoneShortDescription: TimeZoneShortDescription
          SubscriberId: 6
          Phone: Phone
          FaxNumber: FaxNumber
          SubscriberName: SubscriberName
          Supplier: Supplier
          HasInventory: false
          Distance: 6.438423552598547
          Notes:
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          - Header: Header
            HeaderId: 3
            Value: Value
            Id: 6
          CountryId: 2
          Status: Status
          Address2: Address2
          TypeLabel: TypeLabel
          FormattedAddress: FormattedAddress
          Address1: Address1
          City: City
          TimeShiftToEST: 3
          Longitude: 9.018348186070783
          Contact: Contact
          LocationFormattedAddressTail: LocationFormattedAddressTail
          LocationTypeId: 6
          State: State
          Region: Region
          Country: Country
          Id: 9
          ClosedDate: 2000-01-23T04:56:07.000+00:00
          District: District
          TimeZoneMsName: TimeZoneMsName
      properties:
        Id:
          format: int32
          type: integer
        Rank:
          format: int32
          type: integer
        CreatedDate:
          format: date-time
          type: string
        UpdatedDate:
          format: date-time
          type: string
        Provider:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Providers.Provider'
        Subscriber:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Subscribers.Subscriber'
        Trade:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Trade.Trade'
        Location:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Location.Location'
      type: object
    Amazon.Runtime.Internal.ErrorResponse:
      properties:
        Type:
          enum:
          - Sender
          - Receiver
          - Unknown
          type: string
        Code:
          type: string
        Message:
          type: string
        RequestId:
          type: string
        InnerException:
          type: object
        StatusCode:
          enum:
          - Continue
          - SwitchingProtocols
          - OK
          - Created
          - Accepted
          - NonAuthoritativeInformation
          - NoContent
          - ResetContent
          - PartialContent
          - MultipleChoices
          - Ambiguous
          - MovedPermanently
          - Moved
          - Found
          - Redirect
          - SeeOther
          - RedirectMethod
          - NotModified
          - UseProxy
          - Unused
          - TemporaryRedirect
          - RedirectKeepVerb
          - BadRequest
          - Unauthorized
          - PaymentRequired
          - Forbidden
          - NotFound
          - MethodNotAllowed
          - NotAcceptable
          - ProxyAuthenticationRequired
          - RequestTimeout
          - Conflict
          - Gone
          - LengthRequired
          - PreconditionFailed
          - RequestEntityTooLarge
          - RequestUriTooLong
          - UnsupportedMediaType
          - RequestedRangeNotSatisfiable
          - ExpectationFailed
          - UpgradeRequired
          - InternalServerError
          - NotImplemented
          - BadGateway
          - ServiceUnavailable
          - GatewayTimeout
          - HttpVersionNotSupported
          type: string
      type: object
    ServiceChannel.Services.Messaging.Workorders.CheckInIActivity:
      example:
        Action: Action
        User:
          UserName: UserName
          Email: Email
          FullName: FullName
          LevelInfo:
            Order: 5
            UserId: 6
            LocationIds:
            - 1
            - 1
            CodeChange: false
            UsersLocations:
              key:
              - 2
              - 2
            LevelName: LevelName
            CategoryChange: false
            DivisionId: 7
            LevelId: 5
            PriorityChange: false
          Id: 0
        StatusNew: StatusNew
        SignatureAttachmentFullName: SignatureAttachmentFullName
        WorkType: WorkType
        StatusChangedTo:
          Primary: Primary
          Extended: Extended
          CanCreateInvoice: false
        UnableObtainSignatureNote: UnableObtainSignatureNote
        Date: 2000-01-23T04:56:07.000+00:00
        SignatureAttachmentId: 6
        UnableObtainSignatureNoteId: 1
        Dnis: Dnis
        SignatureAttachmentName: SignatureAttachmentName
        CheckInOutType: Common
        Id: 0
        Dto: 2000-01-23T04:56:07.000+00:00
        CallerId: CallerId
      properties:
        Id:
          format: int32
          type: integer
        Date:
          format: date-time
          type: string
        Dto:
          format: date-time
          type: string
        User:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Users.UserInfo'
        CallerId:
          type: string
        Action:
          type: string
        StatusChangedTo:
          $ref: '#/components/schemas/ServiceChannel.Services.Messaging.Workorders.WorkorderStatusDescriptor'
        WorkType:
          type: string
        StatusNew:
          type: string
        Dnis:
          type: string
        CheckInOutType:
          enum:
          - Common
          - Ivr
          - Gps
          type: string
        SignatureAttachmentId:
          format: int32
          type: integer
        SignatureAttachmentName:
          type: string
        SignatureAttachmentFullName:
          type: string
        UnableObtainSignatureNoteId:
          format: int32
          type: integer
        UnableObtainSignatureNote:
          type: string
      type: object
    System.Net.Http.ByteArrayContent:
      example:
        Headers:
        - Value:
          - Value
          - Value
          Key: Key
        - Value:
          - Value
          - Value
          Key: Key
      properties:
        Headers:
          items:
            $ref: "#/components/schemas/System.Collections.Generic.KeyValuePair[System.String,System.Collections.Generic.IEnumerable[System.String]]"
          readOnly: true
          type: array
      type: object
    System.Collections.Generic.KeyValuePair[System.String,System.Collections.Generic.IEnumerable[System.String]]:
      example:
        Value:
        - Value
        - Value
        Key: Key
      properties:
        Key:
          readOnly: true
          type: string
        Value:
          items:
            type: string
          readOnly: true
          type: array
      type: object
    POSTv3_AssetTypes_assets__assetGroupId__groupattachments_request:
      properties:
        file:
          description: File to attach to AssetTypeGroup
          format: binary
          type: string
      required:
      - file
      type: object
    POSTv3_workorders__workorderId__attachments_actor__actor__request:
      properties:
        AddAttachmentsRequest:
          description: ""
        file:
          description: File to attach to the work order.
          format: binary
          type: string
      type: object
    POSTv3_workorders__workorderId__notes__noteId__attachments_request:
      properties:
        AddAttachmentsRequest:
          description: Optional Descriptor for file(s)
        file:
          description: File to attach to note
          format: binary
          type: string
      required:
      - file
      type: object
    POSTv3_rfps__id__attachments_request:
      properties:
        file:
          description: File to attach to RFP
          format: binary
          type: string
      required:
      - file
      type: object
    POSTv3_siteaudit_comments__commentId__attachments_request:
      properties:
        file:
          description: File to attach to Comment
          format: binary
          type: string
      required:
      - file
      type: object
    POSTv3_assets__assetId__attachments_isDefault__isDefault__request:
      properties:
        AddAttachmentsRequest:
          description: Required Descriptor for file(s)
        file:
          description: File to attach to workorder
          format: binary
          type: string
      required:
      - file
      type: object
    POSTv3_workrequest__workRequestId__attachments_actor__actor__request:
      properties:
        AddAttachmentsRequest:
          description: ""
        file:
          description: File to attach to the work request.
          format: binary
          type: string
      required:
      - file
      type: object
    POSTv3_checklists_CheckListResponse_request:
      properties:
        CheckListResponseRequest:
          description: "Request to create a response to a checklist question. Retrieve\
            \ checklist parameters using the [GET /checklists/detail](https://developer.servicechannel.com/swagger/ui/index?version=3#/CheckLists/GETv3_checklists_detail_tradeid__tradeid__checklistid__checklistid__categoryid__categoryid__subscriberId__subscriberId__tradeName__tradeName__checkListName__checkListName__categoryName__categoryName__locationId__locationId__storeId__storeId_)\
            \ method to make sure you pass valid values.\r\n            <br />Pass\
            \ the following parameters in the request:\r\n             • **CheckListQuestionId**\
            \ *(Required)*: ID of the checklist question to submit a response for.\r\
            \n             • **CheckListQuestionOptionId**: ID of the answer option\
            \ configured for a checklist question of the **Selector** type.\r\n  \
            \           • **ProviderId** *(Required)*: ID of the provider on whose\
            \ behalf you are submitting a response.\r\n             • **TechnicianID**:\
            \ ID of the technician on whose behalf you are submitting a response.\r\
            \n             • **AuthUserId**: Single sign-on (SSO) ID of the technician\
            \ on whose behalf you are submitting a response.\r\n             • **Answer**:\
            \ Answer to a checklist question of the following types:\r\n         \
            \     ◦ **Acknowledgement**. Valid values: `on`, `off`, `1`, `0`, `true`,\
            \ `false`, `yes`, `no`.\r\n              ◦ **Text Entry**. Enter a text\
            \ answer. The maximum length is 500 characters.\r\n              ◦ **Numeric\
            \ Input**. Submit a number.\r\n             • **FreeTextAnswer**: Comment\
            \ to an answer option with the `IsConditionalFollowUp` attribute. Answer\
            \ options are configured for questions of the **Selector** type.\r\n \
            \            • **EntityId** *(Required)*: Unique ID of the work order\
            \ for which you are creating a response to a checklist question.\r\n \
            \            • **Attempt** *(Required)*: Order of a technician’s on-site\
            \ visit to submit a checklist response for.\r\n            <br />**Example\
            \ Object for the Acknowledgement Question**\r\n            \r\n      \
            \          {\r\n                  \"CheckListQuestionID\": 3834,\r\n \
            \                 \"ProviderID\": 2000090505,\r\n                  \"\
            TechnicianID\": 270592,\r\n                  \"AuthUserId\": 141,\r\n\
            \                  \"Answer\": \"on\",\r\n                  \"EntityID\"\
            : 179826000,\r\n                  \"Attempt\": 1\r\n                }"
        file:
          description: File to attach to the response to a checklist question. Required
            for questions with the `PictureFlag` parameter set to 2.
          format: binary
          type: string
      type: object
    PUTv3_checklists__checkListResponseId__CheckListResponse_request:
      properties:
        CheckListResponsePictureId:
          description: "ID of the file attached to the checklist response to update.\r\
            \n            Send the [GET /workorders/{workOrderId}/checklists-responses](https://developer.servicechannel.com/swagger/ui/index?version=3#/WorkOrders/GETv3_workorders__workOrderId__checklists_responses)\
            \ request, and look for the required file `Id` within `Pictures` in the\
            \ response."
        CheckListResponseRequest:
          description: "Request to update a response to a checklist question.\r\n\
            \            <br />Pass the following parameters in the request:\r\n \
            \            • **CheckListQuestionId** *(Required)*: ID of the checklist\
            \ question to update a response for.\r\n             • **CheckListQuestionOptionId**:\
            \ ID of the answer option configured for a checklist question of the **Selector**\
            \ type.\r\n             • **ProviderId** *(Required)*: ID of the provider\
            \ on whose behalf you are updating a response.\r\n             • **TechnicianID**\
            \ *(Required)*: ID of the technician on whose behalf you are updating\
            \ a response.\r\n             • **Answer**: Answer to a checklist question\
            \ of the following types:\r\n              ◦ **Acknowledgement**. Valid\
            \ values: `on`, `off`, `1`, `0`, `true`, `false`, `yes`, `no`.\r\n   \
            \           ◦ **Text Entry**. Enter a text answer. The maximum length\
            \ is 500 characters.\r\n              ◦ **Numeric Input**. Submit a number.\r\
            \n             • **FreeTextAnswer**: Comment to an answer option with\
            \ the `IsConditionalFollowUp` attribute. Answer options are configured\
            \ for questions of the **Selector** type.\r\n             • **EntityId**\
            \ *(Required)*: Unique ID of the work order for which you are updating\
            \ a response to a checklist question.\r\n             • **Attempt** *(Required)*:\
            \ Order of a technician’s on-site visit to update a checklist response\
            \ for.\r\n            <br />**Example Object for the Acknowledgement Question**\r\
            \n            \r\n                {\r\n                  \"CheckListQuestionID\"\
            : 3834,\r\n                  \"ProviderID\": 2000090505,\r\n         \
            \         \"TechnicianID\": 270592,\r\n                  \"Answer\": \"\
            off\",\r\n                  \"EntityID\": 179826000,\r\n             \
            \     \"Attempt\": 1\r\n                }"
        file:
          description: File to attach to the response to a checklist question. Required
            for questions with the `PictureFlag` parameter set to 2.
          format: binary
          type: string
      type: object
    POSTv3_locations__storeId__attachments_fileDescription__fileDescription__isEvacuationPlan__isEvacuationPlan__request:
      properties:
        file:
          description: File to attach to the location.
          format: binary
          type: string
      required:
      - file
      type: object
  securitySchemes:
    oauth2:
      description: OAuth2 Authorization
      flows:
        authorizationCode:
          authorizationUrl: https://sb2login.servicechannel.com/oauth/authorize
          scopes: {}
          tokenUrl: https://sb2login.servicechannel.com/oauth/token
      type: oauth2
x-original-swagger-version: "2.0"

